<html lang="ru" prefix="og: http://ogp.me/ns#
             video: http://ogp.me/ns/video#
             ya: http://webmaster.yandex.ru/vocabularies/">

<head>
  <meta charset="utf-8">
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="language" content="ru">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png?v=pgrAWgkp53">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png?v=pgrAWgkp53">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png?v=pgrAWgkp53">
  <link rel="manifest" href="/manifest.json?v=pgrAWgkp53">
  <link rel="mask-icon" href="/safari-pinned-tab.svg?v=pgrAWgkp53" color="#1b5e20">
  <link rel="shortcut icon" href="/favicon.ico?v=pgrAWgkp53">
  <meta name="apple-mobile-web-app-title" content="Anime 365">
  <meta name="application-name" content="Anime 365">
  <meta name="theme-color" content="#1b5e20">
  <meta name="yandex-tableau-widget" content="logo=http://smotret-anime.com/images/logo-white-85.png, color=#1B5E20">
  <meta name="verify-admitad" content="33731dc6c9">

  <link href="/favicon.ico?2" rel="icon" type="image/x-icon">
  <link rel="canonical" href="https://smotret-anime.com/catalog/wotaku-ni-koi-wa-muzukashii-17750">
  <meta name="description"
    content="Смотреть онлайн Wotaku ni Koi wa Muzukashii / Otakoi в хорошем качестве. Озвучка и русские субтитры. Также вы можете скачать это аниме (Так сложно любить отаку).">
  <meta property="og:url" content="https://smotret-anime.com/catalog/wotaku-ni-koi-wa-muzukashii-17750">
  <meta property="og:image" content="/posters/17750.26297182654.jpg">
  <meta property="og:title"
    content="Аниме Так сложно любить отаку смотреть онлайн / Wotaku ni Koi wa Muzukashii / Otakoi">
  <meta property="og:description"
    content="У Наруми Момосэ есть страшная тайна: она – отаку, и в придачу поклонница яоя! Когда ее секрет стал известен на предыдущей работе, Наруми пришлось уволиться, и в первый день в новой компании она торжественно клянется, что убьет каждого, кто ее выдаст. Cначала ничто не предвещало беды, но не прошло и нескольких часов, как Наруми встретила в офисе Хиротаку Нифудзи, который знает о ней слишком много. Надо же было такому случиться, что геймер Хиротака, ее бывший одноклассник, работает в той же самой фирме! Пока Наруми лихорадочно соображала, как обезвредить друга детства, тот успел проболтаться при коллегах. Не было бы счастья, да несчастье помогло – оказалось, что не одна Наруми скрывает под деловым костюмом увлечения, которых сложно ожидать от взрослого ответственного человека!">
  <link rel="search" type="application/opensearchdescription+xml" title="Anime 365 (smotret-anime.com)"
    href="/opensearch.xml">
  <style type="text/css">
    .slick-list,
    .slick-slider {
      position: relative;
      display: block
    }

    .slick-slider {
      box-sizing: border-box;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
      -webkit-touch-callout: none;
      -khtml-user-select: none;
      -ms-touch-action: pan-y;
      touch-action: pan-y;
      -webkit-tap-highlight-color: transparent
    }

    .slick-list {
      overflow: hidden;
      margin: 0;
      padding: 0
    }

    .slick-list:focus {
      outline: none
    }

    .slick-list.dragging {
      cursor: pointer;
      cursor: hand
    }

    .slick-slider .slick-list,
    .slick-slider .slick-track {
      -webkit-transform: translate3d(0, 0, 0);
      -moz-transform: translate3d(0, 0, 0);
      -ms-transform: translate3d(0, 0, 0);
      -o-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0)
    }

    .slick-track {
      position: relative;
      top: 0;
      left: 0;
      display: block
    }

    .slick-track:after,
    .slick-track:before {
      display: table;
      content: ''
    }

    .slick-track:after {
      clear: both
    }

    .slick-loading .slick-track {
      visibility: hidden
    }

    .slick-slide {
      display: none;
      float: left;
      height: 100%;
      min-height: 1px
    }

    [dir=rtl] .slick-slide {
      float: right
    }

    .slick-initialized .slick-slide,
    .slick-slide img {
      display: block
    }

    .slick-slide.slick-loading img {
      display: none
    }

    .slick-slide.dragging img {
      pointer-events: none
    }

    .slick-loading .slick-slide {
      visibility: hidden
    }

    .slick-vertical .slick-slide {
      display: block;
      height: auto;
      border: 1px solid transparent
    }

    .slick-arrow.slick-hidden {
      display: none
    }
  </style>
  <style type="text/css">
    @charset 'UTF-8';

    .slick-loading .slick-list {
      background: #fff url(./ajax-loader.gif) center center no-repeat
    }

    @font-face {
      font-family: 'slick';
      font-weight: 400;
      font-style: normal;
      src: url(/css/fonts/slick.eot);
      src: url(/css/fonts/slick.eot?#iefix) format('embedded-opentype'), url(/css/fonts/slick.woff) format('woff'), url(/css/fonts/slick.ttf) format('truetype'), url(/css/fonts/slick.svg#slick) format('svg')
    }

    .slick-next,
    .slick-prev {
      font-size: 0;
      line-height: 0;
      position: absolute;
      top: 50%;
      display: block;
      width: 20px;
      height: 20px;
      padding: 0;
      -webkit-transform: translate(0, -50%);
      -ms-transform: translate(0, -50%);
      transform: translate(0, -50%);
      cursor: pointer;
      color: transparent;
      border: 0;
      outline: 0
    }

    .slick-next:focus,
    .slick-next:hover,
    .slick-prev:focus,
    .slick-prev:hover {
      color: transparent;
      outline: 0
    }

    .slick-dots li button:focus:before,
    .slick-dots li button:hover:before,
    .slick-next:focus:before,
    .slick-next:hover:before,
    .slick-prev:focus:before,
    .slick-prev:hover:before {
      opacity: 1
    }

    .slick-next.slick-disabled:before,
    .slick-prev.slick-disabled:before {
      opacity: .25
    }

    .slick-next:before,
    .slick-prev:before {
      font-family: 'slick';
      font-size: 20px;
      line-height: 1;
      opacity: .75;
      color: #fff;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale
    }

    .slick-prev {
      left: -25px
    }

    [dir=rtl] .slick-prev {
      right: -25px;
      left: auto
    }

    .slick-prev:before {
      content: '←'
    }

    .slick-next:before,
    [dir=rtl] .slick-prev:before {
      content: '→'
    }

    .slick-next {
      right: -25px
    }

    [dir=rtl] .slick-next {
      right: auto;
      left: -25px
    }

    [dir=rtl] .slick-next:before {
      content: '←'
    }

    .slick-dotted.slick-slider {
      margin-bottom: 30px
    }

    .slick-dots {
      position: absolute;
      bottom: -25px;
      display: block;
      width: 100%;
      padding: 0;
      margin: 0;
      list-style: none;
      text-align: center
    }

    .slick-dots li {
      position: relative;
      display: inline-block;
      width: 20px;
      height: 20px;
      margin: 0 5px;
      padding: 0;
      cursor: pointer
    }

    .slick-dots li button {
      font-size: 0;
      line-height: 0;
      display: block;
      width: 20px;
      height: 20px;
      padding: 5px;
      cursor: pointer;
      color: transparent;
      border: 0;
      outline: 0;
      background: 0 0
    }

    .slick-dots li button:focus,
    .slick-dots li button:hover {
      outline: 0
    }

    .slick-dots li button:before {
      font-family: 'slick';
      font-size: 6px;
      line-height: 20px;
      position: absolute;
      top: 0;
      left: 0;
      width: 20px;
      height: 20px;
      content: '•';
      text-align: center;
      opacity: .25;
      color: #000;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale
    }

    .slick-dots li.slick-active button:before {
      opacity: .75;
      color: #000
    }
  </style>
  <title>Смотреть аниме Wotaku ni Koi wa Muzukashii онлайн. Аниме Так сложно любить отаку, Otakoi смотреть онлайн
  </title>

  <style type="text/css">
    .materialize-red {
      background-color: #e51c23 !important
    }

    .materialize-red-text {
      color: #e51c23 !important
    }

    .materialize-red.lighten-5 {
      background-color: #fdeaeb !important
    }

    .materialize-red-text.text-lighten-5 {
      color: #fdeaeb !important
    }

    .materialize-red.lighten-4 {
      background-color: #f8c1c3 !important
    }

    .materialize-red-text.text-lighten-4 {
      color: #f8c1c3 !important
    }

    .materialize-red.lighten-3 {
      background-color: #f3989b !important
    }

    .materialize-red-text.text-lighten-3 {
      color: #f3989b !important
    }

    .materialize-red.lighten-2 {
      background-color: #ee6e73 !important
    }

    .materialize-red-text.text-lighten-2 {
      color: #ee6e73 !important
    }

    .materialize-red.lighten-1 {
      background-color: #ea454b !important
    }

    .materialize-red-text.text-lighten-1 {
      color: #ea454b !important
    }

    .materialize-red.darken-1 {
      background-color: #d0181e !important
    }

    .materialize-red-text.text-darken-1 {
      color: #d0181e !important
    }

    .materialize-red.darken-2 {
      background-color: #b9151b !important
    }

    .materialize-red-text.text-darken-2 {
      color: #b9151b !important
    }

    .materialize-red.darken-3 {
      background-color: #a21318 !important
    }

    .materialize-red-text.text-darken-3 {
      color: #a21318 !important
    }

    .materialize-red.darken-4 {
      background-color: #8b1014 !important
    }

    .materialize-red-text.text-darken-4 {
      color: #8b1014 !important
    }

    .red {
      background-color: #f44336 !important
    }

    .red-text {
      color: #f44336 !important
    }

    .red.lighten-5 {
      background-color: #ffebee !important
    }

    .red-text.text-lighten-5 {
      color: #ffebee !important
    }

    .red.lighten-4 {
      background-color: #ffcdd2 !important
    }

    .red-text.text-lighten-4 {
      color: #ffcdd2 !important
    }

    .red.lighten-3 {
      background-color: #ef9a9a !important
    }

    .red-text.text-lighten-3 {
      color: #ef9a9a !important
    }

    .red.lighten-2 {
      background-color: #e57373 !important
    }

    .red-text.text-lighten-2 {
      color: #e57373 !important
    }

    .red.lighten-1 {
      background-color: #ef5350 !important
    }

    .red-text.text-lighten-1 {
      color: #ef5350 !important
    }

    .red.darken-1 {
      background-color: #e53935 !important
    }

    .red-text.text-darken-1 {
      color: #e53935 !important
    }

    .red.darken-2 {
      background-color: #d32f2f !important
    }

    .red-text.text-darken-2 {
      color: #d32f2f !important
    }

    .red.darken-3 {
      background-color: #c62828 !important
    }

    .red-text.text-darken-3 {
      color: #c62828 !important
    }

    .red.darken-4 {
      background-color: #b71c1c !important
    }

    .red-text.text-darken-4 {
      color: #b71c1c !important
    }

    .red.accent-1 {
      background-color: #ff8a80 !important
    }

    .red-text.text-accent-1 {
      color: #ff8a80 !important
    }

    .red.accent-2 {
      background-color: #ff5252 !important
    }

    .red-text.text-accent-2 {
      color: #ff5252 !important
    }

    .red.accent-3 {
      background-color: #ff1744 !important
    }

    .red-text.text-accent-3 {
      color: #ff1744 !important
    }

    .red.accent-4 {
      background-color: #d50000 !important
    }

    .red-text.text-accent-4 {
      color: #d50000 !important
    }

    .pink {
      background-color: #e91e63 !important
    }

    .pink-text {
      color: #e91e63 !important
    }

    .pink.lighten-5 {
      background-color: #fce4ec !important
    }

    .pink-text.text-lighten-5 {
      color: #fce4ec !important
    }

    .pink.lighten-4 {
      background-color: #f8bbd0 !important
    }

    .pink-text.text-lighten-4 {
      color: #f8bbd0 !important
    }

    .pink.lighten-3 {
      background-color: #f48fb1 !important
    }

    .pink-text.text-lighten-3 {
      color: #f48fb1 !important
    }

    .pink.lighten-2 {
      background-color: #f06292 !important
    }

    .pink-text.text-lighten-2 {
      color: #f06292 !important
    }

    .pink.lighten-1 {
      background-color: #ec407a !important
    }

    .pink-text.text-lighten-1 {
      color: #ec407a !important
    }

    .pink.darken-1 {
      background-color: #d81b60 !important
    }

    .pink-text.text-darken-1 {
      color: #d81b60 !important
    }

    .pink.darken-2 {
      background-color: #c2185b !important
    }

    .pink-text.text-darken-2 {
      color: #c2185b !important
    }

    .pink.darken-3 {
      background-color: #ad1457 !important
    }

    .pink-text.text-darken-3 {
      color: #ad1457 !important
    }

    .pink.darken-4 {
      background-color: #880e4f !important
    }

    .pink-text.text-darken-4 {
      color: #880e4f !important
    }

    .pink.accent-1 {
      background-color: #ff80ab !important
    }

    .pink-text.text-accent-1 {
      color: #ff80ab !important
    }

    .pink.accent-2 {
      background-color: #ff4081 !important
    }

    .pink-text.text-accent-2 {
      color: #ff4081 !important
    }

    .pink.accent-3 {
      background-color: #f50057 !important
    }

    .pink-text.text-accent-3 {
      color: #f50057 !important
    }

    .pink.accent-4 {
      background-color: #c51162 !important
    }

    .pink-text.text-accent-4 {
      color: #c51162 !important
    }

    .purple {
      background-color: #9c27b0 !important
    }

    .purple-text {
      color: #9c27b0 !important
    }

    .purple.lighten-5 {
      background-color: #f3e5f5 !important
    }

    .purple-text.text-lighten-5 {
      color: #f3e5f5 !important
    }

    .purple.lighten-4 {
      background-color: #e1bee7 !important
    }

    .purple-text.text-lighten-4 {
      color: #e1bee7 !important
    }

    .purple.lighten-3 {
      background-color: #ce93d8 !important
    }

    .purple-text.text-lighten-3 {
      color: #ce93d8 !important
    }

    .purple.lighten-2 {
      background-color: #ba68c8 !important
    }

    .purple-text.text-lighten-2 {
      color: #ba68c8 !important
    }

    .purple.lighten-1 {
      background-color: #ab47bc !important
    }

    .purple-text.text-lighten-1 {
      color: #ab47bc !important
    }

    .purple.darken-1 {
      background-color: #8e24aa !important
    }

    .purple-text.text-darken-1 {
      color: #8e24aa !important
    }

    .purple.darken-2 {
      background-color: #7b1fa2 !important
    }

    .purple-text.text-darken-2 {
      color: #7b1fa2 !important
    }

    .purple.darken-3 {
      background-color: #6a1b9a !important
    }

    .purple-text.text-darken-3 {
      color: #6a1b9a !important
    }

    .purple.darken-4 {
      background-color: #4a148c !important
    }

    .purple-text.text-darken-4 {
      color: #4a148c !important
    }

    .purple.accent-1 {
      background-color: #ea80fc !important
    }

    .purple-text.text-accent-1 {
      color: #ea80fc !important
    }

    .purple.accent-2 {
      background-color: #e040fb !important
    }

    .purple-text.text-accent-2 {
      color: #e040fb !important
    }

    .purple.accent-3 {
      background-color: #d500f9 !important
    }

    .purple-text.text-accent-3 {
      color: #d500f9 !important
    }

    .purple.accent-4 {
      background-color: #a0f !important
    }

    .purple-text.text-accent-4 {
      color: #a0f !important
    }

    .deep-purple {
      background-color: #673ab7 !important
    }

    .deep-purple-text {
      color: #673ab7 !important
    }

    .deep-purple.lighten-5 {
      background-color: #ede7f6 !important
    }

    .deep-purple-text.text-lighten-5 {
      color: #ede7f6 !important
    }

    .deep-purple.lighten-4 {
      background-color: #d1c4e9 !important
    }

    .deep-purple-text.text-lighten-4 {
      color: #d1c4e9 !important
    }

    .deep-purple.lighten-3 {
      background-color: #b39ddb !important
    }

    .deep-purple-text.text-lighten-3 {
      color: #b39ddb !important
    }

    .deep-purple.lighten-2 {
      background-color: #9575cd !important
    }

    .deep-purple-text.text-lighten-2 {
      color: #9575cd !important
    }

    .deep-purple.lighten-1 {
      background-color: #7e57c2 !important
    }

    .deep-purple-text.text-lighten-1 {
      color: #7e57c2 !important
    }

    .deep-purple.darken-1 {
      background-color: #5e35b1 !important
    }

    .deep-purple-text.text-darken-1 {
      color: #5e35b1 !important
    }

    .deep-purple.darken-2 {
      background-color: #512da8 !important
    }

    .deep-purple-text.text-darken-2 {
      color: #512da8 !important
    }

    .deep-purple.darken-3 {
      background-color: #4527a0 !important
    }

    .deep-purple-text.text-darken-3 {
      color: #4527a0 !important
    }

    .deep-purple.darken-4 {
      background-color: #311b92 !important
    }

    .deep-purple-text.text-darken-4 {
      color: #311b92 !important
    }

    .deep-purple.accent-1 {
      background-color: #b388ff !important
    }

    .deep-purple-text.text-accent-1 {
      color: #b388ff !important
    }

    .deep-purple.accent-2 {
      background-color: #7c4dff !important
    }

    .deep-purple-text.text-accent-2 {
      color: #7c4dff !important
    }

    .deep-purple.accent-3 {
      background-color: #651fff !important
    }

    .deep-purple-text.text-accent-3 {
      color: #651fff !important
    }

    .deep-purple.accent-4 {
      background-color: #6200ea !important
    }

    .deep-purple-text.text-accent-4 {
      color: #6200ea !important
    }

    .indigo {
      background-color: #3f51b5 !important
    }

    .indigo-text {
      color: #3f51b5 !important
    }

    .indigo.lighten-5 {
      background-color: #e8eaf6 !important
    }

    .indigo-text.text-lighten-5 {
      color: #e8eaf6 !important
    }

    .indigo.lighten-4 {
      background-color: #c5cae9 !important
    }

    .indigo-text.text-lighten-4 {
      color: #c5cae9 !important
    }

    .indigo.lighten-3 {
      background-color: #9fa8da !important
    }

    .indigo-text.text-lighten-3 {
      color: #9fa8da !important
    }

    .indigo.lighten-2 {
      background-color: #7986cb !important
    }

    .indigo-text.text-lighten-2 {
      color: #7986cb !important
    }

    .indigo.lighten-1 {
      background-color: #5c6bc0 !important
    }

    .indigo-text.text-lighten-1 {
      color: #5c6bc0 !important
    }

    .indigo.darken-1 {
      background-color: #3949ab !important
    }

    .indigo-text.text-darken-1 {
      color: #3949ab !important
    }

    .indigo.darken-2 {
      background-color: #303f9f !important
    }

    .indigo-text.text-darken-2 {
      color: #303f9f !important
    }

    .indigo.darken-3 {
      background-color: #283593 !important
    }

    .indigo-text.text-darken-3 {
      color: #283593 !important
    }

    .indigo.darken-4 {
      background-color: #1a237e !important
    }

    .indigo-text.text-darken-4 {
      color: #1a237e !important
    }

    .indigo.accent-1 {
      background-color: #8c9eff !important
    }

    .indigo-text.text-accent-1 {
      color: #8c9eff !important
    }

    .indigo.accent-2 {
      background-color: #536dfe !important
    }

    .indigo-text.text-accent-2 {
      color: #536dfe !important
    }

    .indigo.accent-3 {
      background-color: #3d5afe !important
    }

    .indigo-text.text-accent-3 {
      color: #3d5afe !important
    }

    .indigo.accent-4 {
      background-color: #304ffe !important
    }

    .indigo-text.text-accent-4 {
      color: #304ffe !important
    }

    .blue {
      background-color: #2196f3 !important
    }

    .blue-text {
      color: #2196f3 !important
    }

    .blue.lighten-5 {
      background-color: #e3f2fd !important
    }

    .blue-text.text-lighten-5 {
      color: #e3f2fd !important
    }

    .blue.lighten-4 {
      background-color: #bbdefb !important
    }

    .blue-text.text-lighten-4 {
      color: #bbdefb !important
    }

    .blue.lighten-3 {
      background-color: #90caf9 !important
    }

    .blue-text.text-lighten-3 {
      color: #90caf9 !important
    }

    .blue.lighten-2 {
      background-color: #64b5f6 !important
    }

    .blue-text.text-lighten-2 {
      color: #64b5f6 !important
    }

    .blue.lighten-1 {
      background-color: #42a5f5 !important
    }

    .blue-text.text-lighten-1 {
      color: #42a5f5 !important
    }

    .blue.darken-1 {
      background-color: #1e88e5 !important
    }

    .blue-text.text-darken-1 {
      color: #1e88e5 !important
    }

    .blue.darken-2 {
      background-color: #1976d2 !important
    }

    .blue-text.text-darken-2 {
      color: #1976d2 !important
    }

    .blue.darken-3 {
      background-color: #1565c0 !important
    }

    .blue-text.text-darken-3 {
      color: #1565c0 !important
    }

    .blue.darken-4 {
      background-color: #0d47a1 !important
    }

    .blue-text.text-darken-4 {
      color: #0d47a1 !important
    }

    .blue.accent-1 {
      background-color: #82b1ff !important
    }

    .blue-text.text-accent-1 {
      color: #82b1ff !important
    }

    .blue.accent-2 {
      background-color: #448aff !important
    }

    .blue-text.text-accent-2 {
      color: #448aff !important
    }

    .blue.accent-3 {
      background-color: #2979ff !important
    }

    .blue-text.text-accent-3 {
      color: #2979ff !important
    }

    .blue.accent-4 {
      background-color: #2962ff !important
    }

    .blue-text.text-accent-4 {
      color: #2962ff !important
    }

    .light-blue {
      background-color: #03a9f4 !important
    }

    .light-blue-text {
      color: #03a9f4 !important
    }

    .light-blue.lighten-5 {
      background-color: #e1f5fe !important
    }

    .light-blue-text.text-lighten-5 {
      color: #e1f5fe !important
    }

    .light-blue.lighten-4 {
      background-color: #b3e5fc !important
    }

    .light-blue-text.text-lighten-4 {
      color: #b3e5fc !important
    }

    .light-blue.lighten-3 {
      background-color: #81d4fa !important
    }

    .light-blue-text.text-lighten-3 {
      color: #81d4fa !important
    }

    .light-blue.lighten-2 {
      background-color: #4fc3f7 !important
    }

    .light-blue-text.text-lighten-2 {
      color: #4fc3f7 !important
    }

    .light-blue.lighten-1 {
      background-color: #29b6f6 !important
    }

    .light-blue-text.text-lighten-1 {
      color: #29b6f6 !important
    }

    .light-blue.darken-1 {
      background-color: #039be5 !important
    }

    .light-blue-text.text-darken-1 {
      color: #039be5 !important
    }

    .light-blue.darken-2 {
      background-color: #0288d1 !important
    }

    .light-blue-text.text-darken-2 {
      color: #0288d1 !important
    }

    .light-blue.darken-3 {
      background-color: #0277bd !important
    }

    .light-blue-text.text-darken-3 {
      color: #0277bd !important
    }

    .light-blue.darken-4 {
      background-color: #01579b !important
    }

    .light-blue-text.text-darken-4 {
      color: #01579b !important
    }

    .light-blue.accent-1 {
      background-color: #80d8ff !important
    }

    .light-blue-text.text-accent-1 {
      color: #80d8ff !important
    }

    .light-blue.accent-2 {
      background-color: #40c4ff !important
    }

    .light-blue-text.text-accent-2 {
      color: #40c4ff !important
    }

    .light-blue.accent-3 {
      background-color: #00b0ff !important
    }

    .light-blue-text.text-accent-3 {
      color: #00b0ff !important
    }

    .light-blue.accent-4 {
      background-color: #0091ea !important
    }

    .light-blue-text.text-accent-4 {
      color: #0091ea !important
    }

    .cyan {
      background-color: #00bcd4 !important
    }

    .cyan-text {
      color: #00bcd4 !important
    }

    .cyan.lighten-5 {
      background-color: #e0f7fa !important
    }

    .cyan-text.text-lighten-5 {
      color: #e0f7fa !important
    }

    .cyan.lighten-4 {
      background-color: #b2ebf2 !important
    }

    .cyan-text.text-lighten-4 {
      color: #b2ebf2 !important
    }

    .cyan.lighten-3 {
      background-color: #80deea !important
    }

    .cyan-text.text-lighten-3 {
      color: #80deea !important
    }

    .cyan.lighten-2 {
      background-color: #4dd0e1 !important
    }

    .cyan-text.text-lighten-2 {
      color: #4dd0e1 !important
    }

    .cyan.lighten-1 {
      background-color: #26c6da !important
    }

    .cyan-text.text-lighten-1 {
      color: #26c6da !important
    }

    .cyan.darken-1 {
      background-color: #00acc1 !important
    }

    .cyan-text.text-darken-1 {
      color: #00acc1 !important
    }

    .cyan.darken-2 {
      background-color: #0097a7 !important
    }

    .cyan-text.text-darken-2 {
      color: #0097a7 !important
    }

    .cyan.darken-3 {
      background-color: #00838f !important
    }

    .cyan-text.text-darken-3 {
      color: #00838f !important
    }

    .cyan.darken-4 {
      background-color: #006064 !important
    }

    .cyan-text.text-darken-4 {
      color: #006064 !important
    }

    .cyan.accent-1 {
      background-color: #84ffff !important
    }

    .cyan-text.text-accent-1 {
      color: #84ffff !important
    }

    .cyan.accent-2 {
      background-color: #18ffff !important
    }

    .cyan-text.text-accent-2 {
      color: #18ffff !important
    }

    .cyan.accent-3 {
      background-color: #00e5ff !important
    }

    .cyan-text.text-accent-3 {
      color: #00e5ff !important
    }

    .cyan.accent-4 {
      background-color: #00b8d4 !important
    }

    .cyan-text.text-accent-4 {
      color: #00b8d4 !important
    }

    .teal {
      background-color: #009688 !important
    }

    .teal-text {
      color: #009688 !important
    }

    .teal.lighten-5 {
      background-color: #e0f2f1 !important
    }

    .teal-text.text-lighten-5 {
      color: #e0f2f1 !important
    }

    .teal.lighten-4 {
      background-color: #b2dfdb !important
    }

    .teal-text.text-lighten-4 {
      color: #b2dfdb !important
    }

    .teal.lighten-3 {
      background-color: #80cbc4 !important
    }

    .teal-text.text-lighten-3 {
      color: #80cbc4 !important
    }

    .teal.lighten-2 {
      background-color: #4db6ac !important
    }

    .teal-text.text-lighten-2 {
      color: #4db6ac !important
    }

    .teal.lighten-1 {
      background-color: #26a69a !important
    }

    .teal-text.text-lighten-1 {
      color: #26a69a !important
    }

    .teal.darken-1 {
      background-color: #00897b !important
    }

    .teal-text.text-darken-1 {
      color: #00897b !important
    }

    .teal.darken-2 {
      background-color: #00796b !important
    }

    .teal-text.text-darken-2 {
      color: #00796b !important
    }

    .teal.darken-3 {
      background-color: #00695c !important
    }

    .teal-text.text-darken-3 {
      color: #00695c !important
    }

    .teal.darken-4 {
      background-color: #004d40 !important
    }

    .teal-text.text-darken-4 {
      color: #004d40 !important
    }

    .teal.accent-1 {
      background-color: #a7ffeb !important
    }

    .teal-text.text-accent-1 {
      color: #a7ffeb !important
    }

    .teal.accent-2 {
      background-color: #64ffda !important
    }

    .teal-text.text-accent-2 {
      color: #64ffda !important
    }

    .teal.accent-3 {
      background-color: #1de9b6 !important
    }

    .teal-text.text-accent-3 {
      color: #1de9b6 !important
    }

    .teal.accent-4 {
      background-color: #00bfa5 !important
    }

    .teal-text.text-accent-4 {
      color: #00bfa5 !important
    }

    .green {
      background-color: #4caf50 !important
    }

    .green-text {
      color: #4caf50 !important
    }

    .green.lighten-5 {
      background-color: #e8f5e9 !important
    }

    .green-text.text-lighten-5 {
      color: #e8f5e9 !important
    }

    .green.lighten-4 {
      background-color: #c8e6c9 !important
    }

    .green-text.text-lighten-4 {
      color: #c8e6c9 !important
    }

    .green.lighten-3 {
      background-color: #a5d6a7 !important
    }

    .green-text.text-lighten-3 {
      color: #a5d6a7 !important
    }

    .green.lighten-2 {
      background-color: #81c784 !important
    }

    .green-text.text-lighten-2 {
      color: #81c784 !important
    }

    .green.lighten-1 {
      background-color: #66bb6a !important
    }

    .green-text.text-lighten-1 {
      color: #66bb6a !important
    }

    .green.darken-1 {
      background-color: #43a047 !important
    }

    .green-text.text-darken-1 {
      color: #43a047 !important
    }

    .green.darken-2 {
      background-color: #388e3c !important
    }

    .green-text.text-darken-2 {
      color: #388e3c !important
    }

    .green.darken-3 {
      background-color: #2e7d32 !important
    }

    .green-text.text-darken-3 {
      color: #2e7d32 !important
    }

    .green.darken-4 {
      background-color: #1b5e20 !important
    }

    .green-text.text-darken-4 {
      color: #1b5e20 !important
    }

    .green.accent-1 {
      background-color: #b9f6ca !important
    }

    .green-text.text-accent-1 {
      color: #b9f6ca !important
    }

    .green.accent-2 {
      background-color: #69f0ae !important
    }

    .green-text.text-accent-2 {
      color: #69f0ae !important
    }

    .green.accent-3 {
      background-color: #00e676 !important
    }

    .green-text.text-accent-3 {
      color: #00e676 !important
    }

    .green.accent-4 {
      background-color: #00c853 !important
    }

    .green-text.text-accent-4 {
      color: #00c853 !important
    }

    .light-green {
      background-color: #8bc34a !important
    }

    .light-green-text {
      color: #8bc34a !important
    }

    .light-green.lighten-5 {
      background-color: #f1f8e9 !important
    }

    .light-green-text.text-lighten-5 {
      color: #f1f8e9 !important
    }

    .light-green.lighten-4 {
      background-color: #dcedc8 !important
    }

    .light-green-text.text-lighten-4 {
      color: #dcedc8 !important
    }

    .light-green.lighten-3 {
      background-color: #c5e1a5 !important
    }

    .light-green-text.text-lighten-3 {
      color: #c5e1a5 !important
    }

    .light-green.lighten-2 {
      background-color: #aed581 !important
    }

    .light-green-text.text-lighten-2 {
      color: #aed581 !important
    }

    .light-green.lighten-1 {
      background-color: #9ccc65 !important
    }

    .light-green-text.text-lighten-1 {
      color: #9ccc65 !important
    }

    .light-green.darken-1 {
      background-color: #7cb342 !important
    }

    .light-green-text.text-darken-1 {
      color: #7cb342 !important
    }

    .light-green.darken-2 {
      background-color: #689f38 !important
    }

    .light-green-text.text-darken-2 {
      color: #689f38 !important
    }

    .light-green.darken-3 {
      background-color: #558b2f !important
    }

    .light-green-text.text-darken-3 {
      color: #558b2f !important
    }

    .light-green.darken-4 {
      background-color: #33691e !important
    }

    .light-green-text.text-darken-4 {
      color: #33691e !important
    }

    .light-green.accent-1 {
      background-color: #ccff90 !important
    }

    .light-green-text.text-accent-1 {
      color: #ccff90 !important
    }

    .light-green.accent-2 {
      background-color: #b2ff59 !important
    }

    .light-green-text.text-accent-2 {
      color: #b2ff59 !important
    }

    .light-green.accent-3 {
      background-color: #76ff03 !important
    }

    .light-green-text.text-accent-3 {
      color: #76ff03 !important
    }

    .light-green.accent-4 {
      background-color: #64dd17 !important
    }

    .light-green-text.text-accent-4 {
      color: #64dd17 !important
    }

    .lime {
      background-color: #cddc39 !important
    }

    .lime-text {
      color: #cddc39 !important
    }

    .lime.lighten-5 {
      background-color: #f9fbe7 !important
    }

    .lime-text.text-lighten-5 {
      color: #f9fbe7 !important
    }

    .lime.lighten-4 {
      background-color: #f0f4c3 !important
    }

    .lime-text.text-lighten-4 {
      color: #f0f4c3 !important
    }

    .lime.lighten-3 {
      background-color: #e6ee9c !important
    }

    .lime-text.text-lighten-3 {
      color: #e6ee9c !important
    }

    .lime.lighten-2 {
      background-color: #dce775 !important
    }

    .lime-text.text-lighten-2 {
      color: #dce775 !important
    }

    .lime.lighten-1 {
      background-color: #d4e157 !important
    }

    .lime-text.text-lighten-1 {
      color: #d4e157 !important
    }

    .lime.darken-1 {
      background-color: #c0ca33 !important
    }

    .lime-text.text-darken-1 {
      color: #c0ca33 !important
    }

    .lime.darken-2 {
      background-color: #afb42b !important
    }

    .lime-text.text-darken-2 {
      color: #afb42b !important
    }

    .lime.darken-3 {
      background-color: #9e9d24 !important
    }

    .lime-text.text-darken-3 {
      color: #9e9d24 !important
    }

    .lime.darken-4 {
      background-color: #827717 !important
    }

    .lime-text.text-darken-4 {
      color: #827717 !important
    }

    .lime.accent-1 {
      background-color: #f4ff81 !important
    }

    .lime-text.text-accent-1 {
      color: #f4ff81 !important
    }

    .lime.accent-2 {
      background-color: #eeff41 !important
    }

    .lime-text.text-accent-2 {
      color: #eeff41 !important
    }

    .lime.accent-3 {
      background-color: #c6ff00 !important
    }

    .lime-text.text-accent-3 {
      color: #c6ff00 !important
    }

    .lime.accent-4 {
      background-color: #aeea00 !important
    }

    .lime-text.text-accent-4 {
      color: #aeea00 !important
    }

    .yellow {
      background-color: #ffeb3b !important
    }

    .yellow-text {
      color: #ffeb3b !important
    }

    .yellow.lighten-5 {
      background-color: #fffde7 !important
    }

    .yellow-text.text-lighten-5 {
      color: #fffde7 !important
    }

    .yellow.lighten-4 {
      background-color: #fff9c4 !important
    }

    .yellow-text.text-lighten-4 {
      color: #fff9c4 !important
    }

    .yellow.lighten-3 {
      background-color: #fff59d !important
    }

    .yellow-text.text-lighten-3 {
      color: #fff59d !important
    }

    .yellow.lighten-2 {
      background-color: #fff176 !important
    }

    .yellow-text.text-lighten-2 {
      color: #fff176 !important
    }

    .yellow.lighten-1 {
      background-color: #ffee58 !important
    }

    .yellow-text.text-lighten-1 {
      color: #ffee58 !important
    }

    .yellow.darken-1 {
      background-color: #fdd835 !important
    }

    .yellow-text.text-darken-1 {
      color: #fdd835 !important
    }

    .yellow.darken-2 {
      background-color: #fbc02d !important
    }

    .yellow-text.text-darken-2 {
      color: #fbc02d !important
    }

    .yellow.darken-3 {
      background-color: #f9a825 !important
    }

    .yellow-text.text-darken-3 {
      color: #f9a825 !important
    }

    .yellow.darken-4 {
      background-color: #f57f17 !important
    }

    .yellow-text.text-darken-4 {
      color: #f57f17 !important
    }

    .yellow.accent-1 {
      background-color: #ffff8d !important
    }

    .yellow-text.text-accent-1 {
      color: #ffff8d !important
    }

    .yellow.accent-2 {
      background-color: #ff0 !important
    }

    .yellow-text.text-accent-2 {
      color: #ff0 !important
    }

    .yellow.accent-3 {
      background-color: #ffea00 !important
    }

    .yellow-text.text-accent-3 {
      color: #ffea00 !important
    }

    .yellow.accent-4 {
      background-color: #ffd600 !important
    }

    .yellow-text.text-accent-4 {
      color: #ffd600 !important
    }

    .amber {
      background-color: #ffc107 !important
    }

    .amber-text {
      color: #ffc107 !important
    }

    .amber.lighten-5 {
      background-color: #fff8e1 !important
    }

    .amber-text.text-lighten-5 {
      color: #fff8e1 !important
    }

    .amber.lighten-4 {
      background-color: #ffecb3 !important
    }

    .amber-text.text-lighten-4 {
      color: #ffecb3 !important
    }

    .amber.lighten-3 {
      background-color: #ffe082 !important
    }

    .amber-text.text-lighten-3 {
      color: #ffe082 !important
    }

    .amber.lighten-2 {
      background-color: #ffd54f !important
    }

    .amber-text.text-lighten-2 {
      color: #ffd54f !important
    }

    .amber.lighten-1 {
      background-color: #ffca28 !important
    }

    .amber-text.text-lighten-1 {
      color: #ffca28 !important
    }

    .amber.darken-1 {
      background-color: #ffb300 !important
    }

    .amber-text.text-darken-1 {
      color: #ffb300 !important
    }

    .amber.darken-2 {
      background-color: #ffa000 !important
    }

    .amber-text.text-darken-2 {
      color: #ffa000 !important
    }

    .amber.darken-3 {
      background-color: #ff8f00 !important
    }

    .amber-text.text-darken-3 {
      color: #ff8f00 !important
    }

    .amber.darken-4 {
      background-color: #ff6f00 !important
    }

    .amber-text.text-darken-4 {
      color: #ff6f00 !important
    }

    .amber.accent-1 {
      background-color: #ffe57f !important
    }

    .amber-text.text-accent-1 {
      color: #ffe57f !important
    }

    .amber.accent-2 {
      background-color: #ffd740 !important
    }

    .amber-text.text-accent-2 {
      color: #ffd740 !important
    }

    .amber.accent-3 {
      background-color: #ffc400 !important
    }

    .amber-text.text-accent-3 {
      color: #ffc400 !important
    }

    .amber.accent-4 {
      background-color: #ffab00 !important
    }

    .amber-text.text-accent-4 {
      color: #ffab00 !important
    }

    .orange {
      background-color: #ff9800 !important
    }

    .orange-text {
      color: #ff9800 !important
    }

    .orange.lighten-5 {
      background-color: #fff3e0 !important
    }

    .orange-text.text-lighten-5 {
      color: #fff3e0 !important
    }

    .orange.lighten-4 {
      background-color: #ffe0b2 !important
    }

    .orange-text.text-lighten-4 {
      color: #ffe0b2 !important
    }

    .orange.lighten-3 {
      background-color: #ffcc80 !important
    }

    .orange-text.text-lighten-3 {
      color: #ffcc80 !important
    }

    .orange.lighten-2 {
      background-color: #ffb74d !important
    }

    .orange-text.text-lighten-2 {
      color: #ffb74d !important
    }

    .orange.lighten-1 {
      background-color: #ffa726 !important
    }

    .orange-text.text-lighten-1 {
      color: #ffa726 !important
    }

    .orange.darken-1 {
      background-color: #fb8c00 !important
    }

    .orange-text.text-darken-1 {
      color: #fb8c00 !important
    }

    .orange.darken-2 {
      background-color: #f57c00 !important
    }

    .orange-text.text-darken-2 {
      color: #f57c00 !important
    }

    .orange.darken-3 {
      background-color: #ef6c00 !important
    }

    .orange-text.text-darken-3 {
      color: #ef6c00 !important
    }

    .orange.darken-4 {
      background-color: #e65100 !important
    }

    .orange-text.text-darken-4 {
      color: #e65100 !important
    }

    .orange.accent-1 {
      background-color: #ffd180 !important
    }

    .orange-text.text-accent-1 {
      color: #ffd180 !important
    }

    .orange.accent-2 {
      background-color: #ffab40 !important
    }

    .orange-text.text-accent-2 {
      color: #ffab40 !important
    }

    .orange.accent-3 {
      background-color: #ff9100 !important
    }

    .orange-text.text-accent-3 {
      color: #ff9100 !important
    }

    .orange.accent-4 {
      background-color: #ff6d00 !important
    }

    .orange-text.text-accent-4 {
      color: #ff6d00 !important
    }

    .deep-orange {
      background-color: #ff5722 !important
    }

    .deep-orange-text {
      color: #ff5722 !important
    }

    .deep-orange.lighten-5 {
      background-color: #fbe9e7 !important
    }

    .deep-orange-text.text-lighten-5 {
      color: #fbe9e7 !important
    }

    .deep-orange.lighten-4 {
      background-color: #ffccbc !important
    }

    .deep-orange-text.text-lighten-4 {
      color: #ffccbc !important
    }

    .deep-orange.lighten-3 {
      background-color: #ffab91 !important
    }

    .deep-orange-text.text-lighten-3 {
      color: #ffab91 !important
    }

    .deep-orange.lighten-2 {
      background-color: #ff8a65 !important
    }

    .deep-orange-text.text-lighten-2 {
      color: #ff8a65 !important
    }

    .deep-orange.lighten-1 {
      background-color: #ff7043 !important
    }

    .deep-orange-text.text-lighten-1 {
      color: #ff7043 !important
    }

    .deep-orange.darken-1 {
      background-color: #f4511e !important
    }

    .deep-orange-text.text-darken-1 {
      color: #f4511e !important
    }

    .deep-orange.darken-2 {
      background-color: #e64a19 !important
    }

    .deep-orange-text.text-darken-2 {
      color: #e64a19 !important
    }

    .deep-orange.darken-3 {
      background-color: #d84315 !important
    }

    .deep-orange-text.text-darken-3 {
      color: #d84315 !important
    }

    .deep-orange.darken-4 {
      background-color: #bf360c !important
    }

    .deep-orange-text.text-darken-4 {
      color: #bf360c !important
    }

    .deep-orange.accent-1 {
      background-color: #ff9e80 !important
    }

    .deep-orange-text.text-accent-1 {
      color: #ff9e80 !important
    }

    .deep-orange.accent-2 {
      background-color: #ff6e40 !important
    }

    .deep-orange-text.text-accent-2 {
      color: #ff6e40 !important
    }

    .deep-orange.accent-3 {
      background-color: #ff3d00 !important
    }

    .deep-orange-text.text-accent-3 {
      color: #ff3d00 !important
    }

    .deep-orange.accent-4 {
      background-color: #dd2c00 !important
    }

    .deep-orange-text.text-accent-4 {
      color: #dd2c00 !important
    }

    .brown {
      background-color: #795548 !important
    }

    .brown-text {
      color: #795548 !important
    }

    .brown.lighten-5 {
      background-color: #efebe9 !important
    }

    .brown-text.text-lighten-5 {
      color: #efebe9 !important
    }

    .brown.lighten-4 {
      background-color: #d7ccc8 !important
    }

    .brown-text.text-lighten-4 {
      color: #d7ccc8 !important
    }

    .brown.lighten-3 {
      background-color: #bcaaa4 !important
    }

    .brown-text.text-lighten-3 {
      color: #bcaaa4 !important
    }

    .brown.lighten-2 {
      background-color: #a1887f !important
    }

    .brown-text.text-lighten-2 {
      color: #a1887f !important
    }

    .brown.lighten-1 {
      background-color: #8d6e63 !important
    }

    .brown-text.text-lighten-1 {
      color: #8d6e63 !important
    }

    .brown.darken-1 {
      background-color: #6d4c41 !important
    }

    .brown-text.text-darken-1 {
      color: #6d4c41 !important
    }

    .brown.darken-2 {
      background-color: #5d4037 !important
    }

    .brown-text.text-darken-2 {
      color: #5d4037 !important
    }

    .brown.darken-3 {
      background-color: #4e342e !important
    }

    .brown-text.text-darken-3 {
      color: #4e342e !important
    }

    .brown.darken-4 {
      background-color: #3e2723 !important
    }

    .brown-text.text-darken-4 {
      color: #3e2723 !important
    }

    .blue-grey {
      background-color: #607d8b !important
    }

    .blue-grey-text {
      color: #607d8b !important
    }

    .blue-grey.lighten-5 {
      background-color: #eceff1 !important
    }

    .blue-grey-text.text-lighten-5 {
      color: #eceff1 !important
    }

    .blue-grey.lighten-4 {
      background-color: #cfd8dc !important
    }

    .blue-grey-text.text-lighten-4 {
      color: #cfd8dc !important
    }

    .blue-grey.lighten-3 {
      background-color: #b0bec5 !important
    }

    .blue-grey-text.text-lighten-3 {
      color: #b0bec5 !important
    }

    .blue-grey.lighten-2 {
      background-color: #90a4ae !important
    }

    .blue-grey-text.text-lighten-2 {
      color: #90a4ae !important
    }

    .blue-grey.lighten-1 {
      background-color: #78909c !important
    }

    .blue-grey-text.text-lighten-1 {
      color: #78909c !important
    }

    .blue-grey.darken-1 {
      background-color: #546e7a !important
    }

    .blue-grey-text.text-darken-1 {
      color: #546e7a !important
    }

    .blue-grey.darken-2 {
      background-color: #455a64 !important
    }

    .blue-grey-text.text-darken-2 {
      color: #455a64 !important
    }

    .blue-grey.darken-3 {
      background-color: #37474f !important
    }

    .blue-grey-text.text-darken-3 {
      color: #37474f !important
    }

    .blue-grey.darken-4 {
      background-color: #263238 !important
    }

    .blue-grey-text.text-darken-4 {
      color: #263238 !important
    }

    .grey {
      background-color: #9e9e9e !important
    }

    .grey-text {
      color: #9e9e9e !important
    }

    .grey.lighten-5 {
      background-color: #fafafa !important
    }

    .grey-text.text-lighten-5 {
      color: #fafafa !important
    }

    .grey.lighten-4 {
      background-color: #f5f5f5 !important
    }

    .grey-text.text-lighten-4 {
      color: #f5f5f5 !important
    }

    .grey.lighten-3 {
      background-color: #eee !important
    }

    .grey-text.text-lighten-3 {
      color: #eee !important
    }

    .grey.lighten-2 {
      background-color: #e0e0e0 !important
    }

    .grey-text.text-lighten-2 {
      color: #e0e0e0 !important
    }

    .grey.lighten-1 {
      background-color: #bdbdbd !important
    }

    .grey-text.text-lighten-1 {
      color: #bdbdbd !important
    }

    .grey.darken-1 {
      background-color: #757575 !important
    }

    .grey-text.text-darken-1 {
      color: #757575 !important
    }

    .grey.darken-2 {
      background-color: #616161 !important
    }

    .grey-text.text-darken-2 {
      color: #616161 !important
    }

    .grey.darken-3 {
      background-color: #424242 !important
    }

    .grey-text.text-darken-3 {
      color: #424242 !important
    }

    .grey.darken-4 {
      background-color: #212121 !important
    }

    .grey-text.text-darken-4 {
      color: #212121 !important
    }

    .black {
      background-color: #000 !important
    }

    .black-text {
      color: #000 !important
    }

    .white {
      background-color: #fff !important
    }

    .white-text {
      color: #fff !important
    }

    .transparent {
      background-color: transparent !important
    }

    .transparent-text {
      color: transparent !important
    }

    html {
      -ms-text-size-adjust: 100%;
      -webkit-text-size-adjust: 100%;
      box-sizing: border-box;
      line-height: 1.5;
      font-family: "Roboto", sans-serif;
      font-weight: 400;
      color: rgba(0, 0, 0, .87)
    }

    .collection .collection-item.avatar p,
    body,
    nav ul {
      margin: 0
    }

    .valign-wrapper .valign,
    article,
    aside,
    details,
    figcaption,
    figure,
    footer,
    header,
    hgroup,
    main,
    menu,
    nav,
    section,
    summary {
      display: block
    }

    audio,
    canvas,
    progress,
    video {
      display: inline-block;
      vertical-align: baseline
    }

    audio:not([controls]) {
      display: none;
      height: 0
    }

    [hidden],
    template {
      display: none
    }

    a {
      background-color: transparent;
      color: #039be5;
      -webkit-tap-highlight-color: transparent;
      text-decoration: none
    }

    a:active,
    a:hover {
      outline: 0
    }

    abbr[title] {
      border-bottom: 1px dotted
    }

    b {
      font-weight: 700
    }

    dfn,
    em {
      font-style: italic
    }

    h1 {
      font-size: 2em;
      margin: .67em 0
    }

    mark {
      background: #ff0;
      color: #000
    }

    small,
    sub,
    sup {
      font-size: 75%
    }

    sub,
    sup {
      line-height: 0;
      position: relative;
      vertical-align: baseline
    }

    sup {
      top: -.5em
    }

    sub {
      bottom: -.25em
    }

    img {
      border: 0
    }

    svg:not(:root) {
      overflow: hidden
    }

    figure {
      margin: 1em 40px
    }

    hr {
      box-sizing: content-box;
      height: 0
    }

    pre {
      overflow: auto
    }

    code,
    kbd,
    pre,
    samp {
      font-family: monospace, monospace;
      font-size: 1em
    }

    button,
    input,
    optgroup,
    select,
    textarea {
      color: inherit;
      font: inherit;
      margin: 0
    }

    button {
      overflow: visible
    }

    button,
    select {
      text-transform: none
    }

    button,
    html input[type=button],
    input[type=reset],
    input[type=submit] {
      -webkit-appearance: button;
      cursor: pointer
    }

    button[disabled],
    html input[disabled] {
      cursor: default
    }

    button::-moz-focus-inner,
    input::-moz-focus-inner {
      border: 0;
      padding: 0
    }

    input {
      line-height: normal
    }

    input[type=checkbox],
    input[type=radio] {
      box-sizing: border-box;
      padding: 0
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
      height: auto
    }

    input[type=search] {
      -webkit-appearance: textfield;
      box-sizing: content-box
    }

    input[type=search]::-webkit-search-cancel-button,
    input[type=search]::-webkit-search-decoration {
      -webkit-appearance: none
    }

    fieldset {
      border: 1px solid silver;
      margin: 0 2px;
      padding: .35em .625em .75em
    }

    legend {
      border: 0;
      padding: 0
    }

    textarea {
      overflow: auto
    }

    optgroup {
      font-weight: 700
    }

    table {
      border-collapse: collapse;
      border-spacing: 0
    }

    *,
    :after,
    :before {
      box-sizing: inherit
    }

    ul:not(.browser-default) {
      padding-left: 0;
      list-style-type: none
    }

    ul:not(.browser-default) li {
      list-style-type: none
    }

    .valign-wrapper {
      display: flex;
      align-items: center
    }

    .clearfix {
      clear: both
    }

    .z-depth-0 {
      box-shadow: none !important
    }

    .btn,
    .btn-floating,
    .btn-large,
    .card,
    .card-panel,
    .dropdown-content,
    .side-nav,
    .toast,
    .z-depth-1,
    nav {
      box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12), 0 3px 1px -2px rgba(0, 0, 0, .2)
    }

    .btn-floating:hover,
    .btn-large:hover,
    .btn:hover,
    .z-depth-1-half {
      box-shadow: 0 3px 3px 0 rgba(0, 0, 0, .14), 0 1px 7px 0 rgba(0, 0, 0, .12), 0 3px 1px -1px rgba(0, 0, 0, .2)
    }

    .z-depth-2 {
      box-shadow: 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12), 0 2px 4px -1px rgba(0, 0, 0, .3)
    }

    .z-depth-3 {
      box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .3)
    }

    .modal,
    .z-depth-4 {
      box-shadow: 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12), 0 5px 5px -3px rgba(0, 0, 0, .3)
    }

    .z-depth-5 {
      box-shadow: 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12), 0 8px 10px -5px rgba(0, 0, 0, .3)
    }

    .hoverable {
      transition: box-shadow .25s;
      box-shadow: 0
    }

    .hoverable:hover {
      transition: box-shadow .25s;
      box-shadow: 0 8px 17px 0 rgba(0, 0, 0, .2), 0 6px 20px 0 rgba(0, 0, 0, .19)
    }

    .divider {
      height: 1px;
      overflow: hidden;
      background-color: #e0e0e0
    }

    blockquote {
      margin: 20px 0;
      padding-left: 1.5rem;
      border-left: 5px solid #ff6d00
    }

    .fixed-action-btn.toolbar ul li a i,
    i {
      line-height: inherit
    }

    i.left {
      float: left;
      margin-right: 15px
    }

    i.right {
      float: right;
      margin-left: 15px
    }

    i.small,
    i.tiny {
      font-size: 1rem;
      max-width: 1rem;
      overflow: hidden
    }

    i.small {
      font-size: 2rem;
      max-width: 2rem
    }

    i.large,
    i.medium {
      font-size: 4rem;
      max-width: 4rem;
      overflow: hidden
    }

    i.large {
      font-size: 6rem;
      max-width: 6rem
    }

    img.responsive-img,
    video.responsive-video {
      max-width: 100%;
      height: auto
    }

    .pagination li {
      display: inline-block;
      border-radius: 2px;
      text-align: center;
      vertical-align: top;
      height: 30px
    }

    .pagination li a {
      color: #444;
      display: inline-block;
      font-size: 1.2rem;
      padding: 0 10px;
      line-height: 30px
    }

    .pagination li.active a {
      color: #fff
    }

    .pagination li.active {
      background-color: #ff6d00
    }

    .pagination li.disabled a {
      cursor: default;
      color: #999
    }

    .pagination li i {
      font-size: 2rem
    }

    .pagination li.pages ul li {
      display: inline-block;
      float: none
    }

    @media only screen and (max-width:992px) {
      .pagination {
        width: 100%
      }

      .pagination li.next,
      .pagination li.prev {
        width: 10%
      }

      .pagination li.pages {
        width: 80%;
        overflow: hidden;
        white-space: nowrap
      }
    }

    .breadcrumb,
    .breadcrumb:before {
      font-size: 18px;
      color: rgba(255, 255, 255, .7)
    }

    .breadcrumb [class*=mdi-],
    .breadcrumb [class^=mdi-],
    .breadcrumb i,
    .breadcrumb i.material-icons {
      display: inline-block;
      float: left;
      font-size: 24px
    }

    .breadcrumb:before {
      content: '\E5CC';
      vertical-align: top;
      display: inline-block;
      font-family: 'Material Icons';
      font-weight: 400;
      font-style: normal;
      font-size: 25px;
      margin: 0 10px 0 8px;
      -webkit-font-smoothing: antialiased
    }

    .breadcrumb:first-child:before {
      display: none
    }

    .breadcrumb:last-child {
      color: #fff
    }

    .parallax-container {
      position: relative;
      overflow: hidden;
      height: 500px
    }

    .parallax,
    .parallax img {
      position: absolute;
      bottom: 0
    }

    .parallax {
      top: 0;
      right: 0;
      z-index: -1;
      left: 0
    }

    .parallax img {
      display: none;
      left: 50%;
      min-width: 100%;
      min-height: 100%;
      -webkit-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0);
      transform: translateX(-50%)
    }

    .pin-bottom,
    .pin-top {
      position: relative
    }

    .pinned {
      position: fixed !important
    }

    .fade-in,
    .fixed-action-btn ul a.btn-floating,
    .fixed-action-btn.toolbar.active>a i,
    ul.staggered-list li {
      opacity: 0
    }

    .fade-in {
      transform-origin: 0 50%
    }

    @media only screen and (max-width:600px) {

      .hide-on-small-and-down,
      .hide-on-small-only {
        display: none !important
      }
    }

    @media only screen and (max-width:992px) {
      .hide-on-med-and-down {
        display: none !important
      }
    }

    @media only screen and (min-width:601px) {
      .hide-on-med-and-up {
        display: none !important
      }
    }

    @media only screen and (min-width:600px) and (max-width:992px) {
      .hide-on-med-only {
        display: none !important
      }
    }

    @media only screen and (min-width:993px) {
      .hide-on-large-only {
        display: none !important
      }

      .show-on-large {
        display: block !important
      }
    }

    @media only screen and (min-width:600px) and (max-width:992px) {
      .show-on-medium {
        display: block !important
      }
    }

    @media only screen and (max-width:600px) {
      .show-on-small {
        display: block !important
      }
    }

    @media only screen and (min-width:601px) {
      .show-on-medium-and-up {
        display: block !important
      }
    }

    @media only screen and (max-width:992px) {
      .show-on-medium-and-down {
        display: block !important
      }
    }

    @media only screen and (max-width:600px) {
      .center-on-small-only {
        text-align: center
      }
    }

    footer.page-footer {
      margin-top: 20px;
      padding-top: 20px;
      background-color: #ff6d00
    }

    footer.page-footer .footer-copyright {
      overflow: hidden;
      height: 50px;
      line-height: 50px;
      color: rgba(255, 255, 255, .8);
      background-color: rgba(51, 51, 51, .08)
    }

    button.btn-floating,
    table,
    td,
    th {
      border: 0
    }

    table {
      width: 100%;
      display: table
    }

    table.bordered>tbody>tr,
    table.bordered>thead>tr,
    thead {
      border-bottom: 1px solid #d0d0d0
    }

    table.striped>tbody>tr:nth-child(odd) {
      background-color: #f2f2f2
    }

    table.striped>tbody>tr>td {
      border-radius: 0
    }

    table.highlight>tbody>tr {
      transition: background-color .25s ease
    }

    table.highlight>tbody>tr:hover {
      background-color: #f2f2f2
    }

    table.centered tbody tr td,
    table.centered thead tr th {
      text-align: center
    }

    td,
    th {
      padding: 15px 5px;
      display: table-cell;
      text-align: left;
      vertical-align: middle;
      border-radius: 2px
    }

    @media only screen and (max-width:992px) {
      table.responsive-table {
        width: 100%;
        border-collapse: collapse;
        border-spacing: 0;
        display: block;
        position: relative
      }

      table.responsive-table td:empty:before {
        content: '\00a0'
      }

      table.responsive-table td,
      table.responsive-table th {
        margin: 0;
        vertical-align: top
      }

      table.responsive-table th {
        display: block;
        text-align: right
      }

      table.responsive-table thead {
        display: block;
        float: left;
        border: 0
      }

      table.responsive-table thead tr {
        display: block;
        padding: 0 10px 0 0
      }

      table.responsive-table thead tr th::before {
        content: "\00a0"
      }

      table.responsive-table tbody {
        display: block;
        width: auto;
        position: relative;
        overflow-x: auto;
        white-space: nowrap
      }

      table.responsive-table tbody tr {
        display: inline-block;
        vertical-align: top
      }

      table.responsive-table td {
        display: block;
        min-height: 1.25em;
        text-align: left
      }

      table.responsive-table tr {
        padding: 0 10px
      }

      table.responsive-table.bordered th {
        border-bottom: 0;
        border-left: 0
      }

      table.responsive-table.bordered td {
        border-left: 0;
        border-right: 0;
        border-bottom: 0
      }

      table.responsive-table.bordered tr {
        border: 0
      }

      table.responsive-table thead,
      table.responsive-table.bordered tbody tr {
        border-right: 1px solid #d0d0d0
      }
    }

    .collection {
      margin: .5rem 0 1rem;
      border: 1px solid #e0e0e0;
      border-radius: 2px;
      overflow: hidden;
      position: relative
    }

    .collection .collection-item {
      background-color: #fff;
      line-height: 1.5rem;
      padding: 10px 20px;
      margin: 0;
      border-bottom: 1px solid #e0e0e0
    }

    .collection .collection-item.avatar {
      min-height: 84px;
      padding-left: 72px;
      position: relative
    }

    .collection .collection-item.avatar .circle {
      position: absolute;
      width: 42px;
      height: 42px;
      overflow: hidden;
      left: 15px;
      display: inline-block;
      vertical-align: middle
    }

    .collection .collection-item.avatar i.circle {
      font-size: 18px;
      line-height: 42px;
      color: #fff;
      background-color: #999;
      text-align: center
    }

    .collection .collection-item.avatar .title {
      font-size: 16px
    }

    .collection .collection-item.avatar .secondary-content {
      position: absolute;
      top: 16px;
      right: 16px
    }

    .collection .collection-item:last-child {
      border-bottom: none
    }

    .collection .collection-item.active {
      background-color: #1b5e20;
      color: #abe7af
    }

    .collection .collection-item.active .secondary-content,
    nav .input-field label.active i,
    nav a {
      color: #fff
    }

    .collection a.collection-item {
      display: block;
      transition: .25s;
      color: #1b5e20
    }

    .collection a.collection-item:not(.active):hover {
      background-color: #ddd
    }

    .collection.with-header .collection-header {
      background-color: #fff;
      border-bottom: 1px solid #e0e0e0;
      padding: 10px 20px
    }

    .collection.with-header .collection-item {
      padding-left: 30px
    }

    .collection.with-header .collection-item.avatar {
      padding-left: 72px
    }

    .secondary-content,
    span.badge {
      float: right;
      color: #1b5e20
    }

    .collapsible .collection {
      margin: 0;
      border: 0
    }

    span.badge {
      min-width: 3rem;
      padding: 0 6px;
      margin-left: 14px;
      text-align: center;
      font-size: 1rem;
      line-height: inherit;
      color: #757575;
      box-sizing: border-box
    }

    span.badge.new {
      font-weight: 300;
      font-size: .8rem;
      color: #fff;
      background-color: #1b5e20;
      border-radius: 2px
    }

    span.badge.new:after {
      content: " new"
    }

    span.badge[data-badge-caption]::after {
      content: " " attr(data-badge-caption)
    }

    nav ul a span.badge {
      display: inline-block;
      float: none;
      margin-left: 4px;
      line-height: 22px;
      height: 22px
    }

    .collapsible span.badge.new,
    .side-nav span.badge.new {
      position: relative;
      background-color: transparent
    }

    .collapsible span.badge.new::before,
    .side-nav span.badge.new::before {
      content: '';
      position: absolute;
      top: 10px;
      right: 0;
      bottom: 10px;
      left: 0;
      background-color: #1b5e20;
      border-radius: 2px;
      z-index: -1
    }

    .collapsible span.badge.new {
      z-index: 1
    }

    .progress,
    .video-container {
      position: relative;
      overflow: hidden
    }

    .video-container {
      padding-bottom: 56.25%;
      height: 0
    }

    .video-container embed,
    .video-container iframe,
    .video-container object {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%
    }

    .progress {
      height: 4px;
      display: block;
      width: 100%;
      background-color: #bee1a5;
      border-radius: 2px;
      margin: .5rem 0 1rem
    }

    .progress .determinate {
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      transition: width .3s linear
    }

    .progress .determinate,
    .progress .indeterminate {
      background-color: #558b2f
    }

    .progress .indeterminate:after,
    .progress .indeterminate:before {
      content: '';
      position: absolute;
      background-color: inherit;
      top: 0;
      left: 0;
      bottom: 0;
      will-change: left, right;
      animation: indeterminate 2.1s cubic-bezier(.65, .815, .735, .395) infinite
    }

    .progress .indeterminate:after {
      animation: indeterminate-short 2.1s cubic-bezier(.165, .84, .44, 1) infinite;
      animation-delay: 1.15s
    }

    @keyframes indeterminate {
      0% {
        left: -35%;
        right: 100%
      }

      60%,
      to {
        left: 100%;
        right: -90%
      }
    }

    @keyframes indeterminate-short {
      0% {
        left: -200%;
        right: 100%
      }

      60%,
      to {
        left: 107%;
        right: -8%
      }
    }

    .hide {
      display: none !important
    }

    .left-align {
      text-align: left
    }

    .right-align {
      text-align: right
    }

    .center,
    .center-align {
      text-align: center
    }

    .left {
      float: left !important
    }

    .right {
      float: right !important
    }

    .no-select,
    input[type=range],
    input[type=range]+.thumb {
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -khtml-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none
    }

    .circle {
      border-radius: 50%
    }

    .center-block {
      display: block;
      margin-left: auto;
      margin-right: auto
    }

    .truncate {
      display: block;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis
    }

    .no-padding {
      padding: 0 !important
    }

    .material-icons {
      text-rendering: optimizeLegibility;
      font-feature-settings: 'liga'
    }

    .container {
      margin: 0 auto;
      max-width: 1280px;
      width: 90%
    }

    @media only screen and (min-width:601px) {
      .container {
        width: 85%
      }
    }

    @media only screen and (min-width:993px) {
      .container {
        width: 70%
      }
    }

    .container .row {
      margin-left: -.75rem;
      margin-right: -.75rem
    }

    .section {
      padding-top: 1rem;
      padding-bottom: 1rem
    }

    .section.no-pad {
      padding: 0
    }

    .section.no-pad-bot {
      padding-bottom: 0
    }

    .section.no-pad-top {
      padding-top: 0
    }

    .row {
      margin-left: auto;
      margin-right: auto;
      margin-bottom: 20px
    }

    .row:after {
      content: "";
      display: table;
      clear: both
    }

    .row .col {
      float: left;
      box-sizing: border-box;
      padding: 0 .75rem;
      min-height: 1px
    }

    .row .col[class*=pull-],
    .row .col[class*=push-] {
      position: relative
    }

    .row .col.s1,
    .row .col.s2,
    .row .col.s3 {
      width: 8.33333%;
      margin-left: auto;
      left: auto;
      right: auto
    }

    .row .col.s2,
    .row .col.s3 {
      width: 16.66667%
    }

    .row .col.s3 {
      width: 25%
    }

    .row .col.s4,
    .row .col.s5,
    .row .col.s6 {
      width: 33.33333%;
      margin-left: auto;
      left: auto;
      right: auto
    }

    .row .col.s5,
    .row .col.s6 {
      width: 41.66667%
    }

    .row .col.s6 {
      width: 50%
    }

    .row .col.s7,
    .row .col.s8,
    .row .col.s9 {
      width: 58.33333%;
      margin-left: auto;
      left: auto;
      right: auto
    }

    .row .col.s8,
    .row .col.s9 {
      width: 66.66667%
    }

    .row .col.s9 {
      width: 75%
    }

    .row .col.s10,
    .row .col.s11,
    .row .col.s12 {
      width: 83.33333%;
      margin-left: auto;
      left: auto;
      right: auto
    }

    .row .col.s11,
    .row .col.s12 {
      width: 91.66667%
    }

    .row .col.s12 {
      width: 100%
    }

    .row .col.offset-s1 {
      margin-left: 8.33333%
    }

    .row .col.pull-s1 {
      right: 8.33333%
    }

    .row .col.push-s1 {
      left: 8.33333%
    }

    .row .col.offset-s2 {
      margin-left: 16.66667%
    }

    .row .col.pull-s2 {
      right: 16.66667%
    }

    .row .col.push-s2 {
      left: 16.66667%
    }

    .row .col.offset-s3 {
      margin-left: 25%
    }

    .row .col.pull-s3 {
      right: 25%
    }

    .row .col.push-s3 {
      left: 25%
    }

    .row .col.offset-s4 {
      margin-left: 33.33333%
    }

    .row .col.pull-s4 {
      right: 33.33333%
    }

    .row .col.push-s4 {
      left: 33.33333%
    }

    .row .col.offset-s5 {
      margin-left: 41.66667%
    }

    .row .col.pull-s5 {
      right: 41.66667%
    }

    .row .col.push-s5 {
      left: 41.66667%
    }

    .row .col.offset-s6 {
      margin-left: 50%
    }

    .row .col.pull-s6 {
      right: 50%
    }

    .row .col.push-s6 {
      left: 50%
    }

    .row .col.offset-s7 {
      margin-left: 58.33333%
    }

    .row .col.pull-s7 {
      right: 58.33333%
    }

    .row .col.push-s7 {
      left: 58.33333%
    }

    .row .col.offset-s8 {
      margin-left: 66.66667%
    }

    .row .col.pull-s8 {
      right: 66.66667%
    }

    .row .col.push-s8 {
      left: 66.66667%
    }

    .row .col.offset-s9 {
      margin-left: 75%
    }

    .row .col.pull-s9 {
      right: 75%
    }

    .row .col.push-s9 {
      left: 75%
    }

    .row .col.offset-s10 {
      margin-left: 83.33333%
    }

    .row .col.pull-s10 {
      right: 83.33333%
    }

    .row .col.push-s10 {
      left: 83.33333%
    }

    .row .col.offset-s11 {
      margin-left: 91.66667%
    }

    .row .col.pull-s11 {
      right: 91.66667%
    }

    .row .col.push-s11 {
      left: 91.66667%
    }

    .row .col.offset-s12 {
      margin-left: 100%
    }

    .row .col.pull-s12 {
      right: 100%
    }

    .row .col.push-s12 {
      left: 100%
    }

    @media only screen and (min-width:601px) {

      .row .col.m1,
      .row .col.m2,
      .row .col.m3 {
        width: 8.33333%;
        margin-left: auto;
        left: auto;
        right: auto
      }

      .row .col.m2,
      .row .col.m3 {
        width: 16.66667%
      }

      .row .col.m3 {
        width: 25%
      }

      .row .col.m4,
      .row .col.m5,
      .row .col.m6 {
        width: 33.33333%;
        margin-left: auto;
        left: auto;
        right: auto
      }

      .row .col.m5,
      .row .col.m6 {
        width: 41.66667%
      }

      .row .col.m6 {
        width: 50%
      }

      .row .col.m7,
      .row .col.m8,
      .row .col.m9 {
        width: 58.33333%;
        margin-left: auto;
        left: auto;
        right: auto
      }

      .row .col.m8,
      .row .col.m9 {
        width: 66.66667%
      }

      .row .col.m9 {
        width: 75%
      }

      .row .col.m10,
      .row .col.m11,
      .row .col.m12 {
        width: 83.33333%;
        margin-left: auto;
        left: auto;
        right: auto
      }

      .row .col.m11,
      .row .col.m12 {
        width: 91.66667%
      }

      .row .col.m12 {
        width: 100%
      }

      .row .col.offset-m1 {
        margin-left: 8.33333%
      }

      .row .col.pull-m1 {
        right: 8.33333%
      }

      .row .col.push-m1 {
        left: 8.33333%
      }

      .row .col.offset-m2 {
        margin-left: 16.66667%
      }

      .row .col.pull-m2 {
        right: 16.66667%
      }

      .row .col.push-m2 {
        left: 16.66667%
      }

      .row .col.offset-m3 {
        margin-left: 25%
      }

      .row .col.pull-m3 {
        right: 25%
      }

      .row .col.push-m3 {
        left: 25%
      }

      .row .col.offset-m4 {
        margin-left: 33.33333%
      }

      .row .col.pull-m4 {
        right: 33.33333%
      }

      .row .col.push-m4 {
        left: 33.33333%
      }

      .row .col.offset-m5 {
        margin-left: 41.66667%
      }

      .row .col.pull-m5 {
        right: 41.66667%
      }

      .row .col.push-m5 {
        left: 41.66667%
      }

      .row .col.offset-m6 {
        margin-left: 50%
      }

      .row .col.pull-m6 {
        right: 50%
      }

      .row .col.push-m6 {
        left: 50%
      }

      .row .col.offset-m7 {
        margin-left: 58.33333%
      }

      .row .col.pull-m7 {
        right: 58.33333%
      }

      .row .col.push-m7 {
        left: 58.33333%
      }

      .row .col.offset-m8 {
        margin-left: 66.66667%
      }

      .row .col.pull-m8 {
        right: 66.66667%
      }

      .row .col.push-m8 {
        left: 66.66667%
      }

      .row .col.offset-m9 {
        margin-left: 75%
      }

      .row .col.pull-m9 {
        right: 75%
      }

      .row .col.push-m9 {
        left: 75%
      }

      .row .col.offset-m10 {
        margin-left: 83.33333%
      }

      .row .col.pull-m10 {
        right: 83.33333%
      }

      .row .col.push-m10 {
        left: 83.33333%
      }

      .row .col.offset-m11 {
        margin-left: 91.66667%
      }

      .row .col.pull-m11 {
        right: 91.66667%
      }

      .row .col.push-m11 {
        left: 91.66667%
      }

      .row .col.offset-m12 {
        margin-left: 100%
      }

      .row .col.pull-m12 {
        right: 100%
      }

      .row .col.push-m12 {
        left: 100%
      }
    }

    @media only screen and (min-width:993px) {

      .row .col.l1,
      .row .col.l2,
      .row .col.l3 {
        width: 8.33333%;
        margin-left: auto;
        left: auto;
        right: auto
      }

      .row .col.l2,
      .row .col.l3 {
        width: 16.66667%
      }

      .row .col.l3 {
        width: 25%
      }

      .row .col.l4,
      .row .col.l5,
      .row .col.l6 {
        width: 33.33333%;
        margin-left: auto;
        left: auto;
        right: auto
      }

      .row .col.l5,
      .row .col.l6 {
        width: 41.66667%
      }

      .row .col.l6 {
        width: 50%
      }

      .row .col.l7,
      .row .col.l8,
      .row .col.l9 {
        width: 58.33333%;
        margin-left: auto;
        left: auto;
        right: auto
      }

      .row .col.l8,
      .row .col.l9 {
        width: 66.66667%
      }

      .row .col.l9 {
        width: 75%
      }

      .row .col.l10,
      .row .col.l11,
      .row .col.l12 {
        width: 83.33333%;
        margin-left: auto;
        left: auto;
        right: auto
      }

      .row .col.l11,
      .row .col.l12 {
        width: 91.66667%
      }

      .row .col.l12 {
        width: 100%
      }

      .row .col.offset-l1 {
        margin-left: 8.33333%
      }

      .row .col.pull-l1 {
        right: 8.33333%
      }

      .row .col.push-l1 {
        left: 8.33333%
      }

      .row .col.offset-l2 {
        margin-left: 16.66667%
      }

      .row .col.pull-l2 {
        right: 16.66667%
      }

      .row .col.push-l2 {
        left: 16.66667%
      }

      .row .col.offset-l3 {
        margin-left: 25%
      }

      .row .col.pull-l3 {
        right: 25%
      }

      .row .col.push-l3 {
        left: 25%
      }

      .row .col.offset-l4 {
        margin-left: 33.33333%
      }

      .row .col.pull-l4 {
        right: 33.33333%
      }

      .row .col.push-l4 {
        left: 33.33333%
      }

      .row .col.offset-l5 {
        margin-left: 41.66667%
      }

      .row .col.pull-l5 {
        right: 41.66667%
      }

      .row .col.push-l5 {
        left: 41.66667%
      }

      .row .col.offset-l6 {
        margin-left: 50%
      }

      .row .col.pull-l6 {
        right: 50%
      }

      .row .col.push-l6 {
        left: 50%
      }

      .row .col.offset-l7 {
        margin-left: 58.33333%
      }

      .row .col.pull-l7 {
        right: 58.33333%
      }

      .row .col.push-l7 {
        left: 58.33333%
      }

      .row .col.offset-l8 {
        margin-left: 66.66667%
      }

      .row .col.pull-l8 {
        right: 66.66667%
      }

      .row .col.push-l8 {
        left: 66.66667%
      }

      .row .col.offset-l9 {
        margin-left: 75%
      }

      .row .col.pull-l9 {
        right: 75%
      }

      .row .col.push-l9 {
        left: 75%
      }

      .row .col.offset-l10 {
        margin-left: 83.33333%
      }

      .row .col.pull-l10 {
        right: 83.33333%
      }

      .row .col.push-l10 {
        left: 83.33333%
      }

      .row .col.offset-l11 {
        margin-left: 91.66667%
      }

      .row .col.pull-l11 {
        right: 91.66667%
      }

      .row .col.push-l11 {
        left: 91.66667%
      }

      .row .col.offset-l12 {
        margin-left: 100%
      }

      .row .col.pull-l12 {
        right: 100%
      }

      .row .col.push-l12 {
        left: 100%
      }
    }

    nav {
      color: #fff;
      background-color: #ff6d00;
      width: 100%
    }

    nav.nav-extended,
    nav.nav-extended .nav-wrapper {
      height: auto
    }

    nav [class*=mdi-],
    nav [class^=mdi-],
    nav i,
    nav i.material-icons {
      display: block;
      font-size: 24px;
      max-width: 24px;
      overflow: hidden;
      height: 56px;
      line-height: 56px
    }

    nav .nav-wrapper {
      position: relative;
      height: 100%
    }

    @media only screen and (min-width:993px) {
      nav a.button-collapse {
        display: none
      }
    }

    nav .button-collapse {
      float: left;
      position: relative;
      z-index: 1;
      height: 56px;
      margin: 0 18px
    }

    nav,
    nav .button-collapse i {
      height: 56px;
      line-height: 56px
    }

    nav .brand-logo {
      position: absolute;
      color: #fff;
      display: inline-block;
      font-size: 2.1rem;
      padding: 0;
      white-space: nowrap
    }

    nav .brand-logo.center {
      left: 50%;
      transform: translateX(-50%)
    }

    @media only screen and (max-width:992px) {
      nav .brand-logo {
        left: 50%;
        transform: translateX(-50%)
      }

      nav .brand-logo.left,
      nav .brand-logo.right {
        padding: 0;
        transform: none
      }

      nav .brand-logo.left {
        left: .5rem
      }

      nav .brand-logo.right {
        right: .5rem;
        left: auto
      }
    }

    nav .brand-logo.right {
      right: .5rem;
      padding: 0
    }

    nav .brand-logo [class*=mdi-],
    nav .brand-logo [class^=mdi-],
    nav .brand-logo i,
    nav .brand-logo i.material-icons {
      float: left;
      margin-right: 15px
    }

    nav ul a,
    nav ul li {
      transition: background-color .3s;
      padding: 0
    }

    nav ul a {
      font-size: 1rem;
      color: #fff;
      display: block;
      padding: 0 15px;
      cursor: pointer
    }

    nav ul a.btn,
    nav ul a.btn-flat,
    nav ul a.btn-floating,
    nav ul a.btn-large {
      margin-top: -2px;
      margin-left: 15px;
      margin-right: 15px
    }

    nav ul a:hover,
    nav ul li.active {
      background-color: rgba(0, 0, 0, .1)
    }

    nav ul li,
    nav ul.left {
      float: left
    }

    .card.horizontal.large .card-image img,
    .card.horizontal.medium .card-image img,
    .card.horizontal.small .card-image img,
    nav form {
      height: 100%
    }

    nav .input-field {
      margin: 0;
      height: 100%
    }

    nav .input-field input {
      height: 100%;
      font-size: 1.2rem;
      border: 0;
      padding-left: 2rem
    }

    nav .input-field input:focus,
    nav .input-field input[type=date]:valid,
    nav .input-field input[type=email]:valid,
    nav .input-field input[type=password]:valid,
    nav .input-field input[type=text]:valid,
    nav .input-field input[type=url]:valid {
      border: 0;
      box-shadow: none
    }

    nav .input-field label {
      top: 0;
      left: 0
    }

    nav .input-field label i {
      color: rgba(255, 255, 255, .7);
      transition: color .3s
    }

    nav .input-field label.active {
      transform: translateY(0)
    }

    .navbar-fixed {
      position: relative;
      height: 56px;
      z-index: 997
    }

    .navbar-fixed nav {
      position: fixed
    }

    @media only screen and (min-width:601px) {

      nav,
      nav .nav-wrapper i,
      nav a.button-collapse,
      nav a.button-collapse i {
        height: 64px;
        line-height: 64px
      }

      .navbar-fixed {
        height: 64px
      }
    }

    @media only screen and (min-width:0) {
      html {
        font-size: 14px
      }
    }

    @media only screen and (min-width:992px) {
      html {
        font-size: 14.5px
      }
    }

    @media only screen and (min-width:1200px) {
      html {
        font-size: 15px
      }
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-weight: 400
    }

    h1 a,
    h2 a,
    h3 a,
    h4 a,
    h5 a,
    h6 a {
      font-weight: inherit
    }

    .h1,
    .h2,
    .h3,
    h1,
    h2,
    h3 {
      font-size: 2.54rem;
      line-height: 110%;
      margin: 1.27rem 0 1.016rem
    }

    .h2,
    .h3,
    h2,
    h3 {
      font-size: 1.87rem;
      margin: .935rem 0 .748rem
    }

    .h3,
    h3 {
      font-size: 1.6rem;
      margin: .8rem 0 .64rem
    }

    .h4,
    .h5,
    .h6,
    h4,
    h5,
    h6 {
      font-size: 1.34rem;
      line-height: 110%;
      margin: .67rem 0 .536rem
    }

    .h5,
    .h6,
    h5,
    h6 {
      font-size: 1.2rem;
      margin: .6rem 0 .48rem
    }

    .h6,
    h6 {
      font-size: 1rem;
      margin: .5rem 0 .4rem
    }

    strong {
      font-weight: 500
    }

    .light,
    footer.page-footer .footer-copyright {
      font-weight: 300
    }

    .thin {
      font-weight: 200
    }

    .flow-text {
      font-weight: 300
    }

    @media only screen and (min-width:360px) {
      .flow-text {
        font-size: 1.2rem
      }
    }

    @media only screen and (min-width:390px) {
      .flow-text {
        font-size: 1.224rem
      }
    }

    @media only screen and (min-width:420px) {
      .flow-text {
        font-size: 1.248rem
      }
    }

    @media only screen and (min-width:450px) {
      .flow-text {
        font-size: 1.272rem
      }
    }

    @media only screen and (min-width:480px) {
      .flow-text {
        font-size: 1.296rem
      }
    }

    @media only screen and (min-width:510px) {
      .flow-text {
        font-size: 1.32rem
      }
    }

    @media only screen and (min-width:540px) {
      .flow-text {
        font-size: 1.344rem
      }
    }

    @media only screen and (min-width:570px) {
      .flow-text {
        font-size: 1.368rem
      }
    }

    @media only screen and (min-width:600px) {
      .flow-text {
        font-size: 1.392rem
      }
    }

    @media only screen and (min-width:630px) {
      .flow-text {
        font-size: 1.416rem
      }
    }

    @media only screen and (min-width:660px) {
      .flow-text {
        font-size: 1.44rem
      }
    }

    @media only screen and (min-width:690px) {
      .flow-text {
        font-size: 1.464rem
      }
    }

    @media only screen and (min-width:720px) {
      .flow-text {
        font-size: 1.488rem
      }
    }

    @media only screen and (min-width:750px) {
      .flow-text {
        font-size: 1.512rem
      }
    }

    @media only screen and (min-width:780px) {
      .flow-text {
        font-size: 1.536rem
      }
    }

    @media only screen and (min-width:810px) {
      .flow-text {
        font-size: 1.56rem
      }
    }

    @media only screen and (min-width:840px) {
      .flow-text {
        font-size: 1.584rem
      }
    }

    @media only screen and (min-width:870px) {
      .flow-text {
        font-size: 1.608rem
      }
    }

    @media only screen and (min-width:900px) {
      .flow-text {
        font-size: 1.632rem
      }
    }

    @media only screen and (min-width:930px) {
      .flow-text {
        font-size: 1.656rem
      }
    }

    @media only screen and (min-width:960px) {
      .flow-text {
        font-size: 1.68rem
      }
    }

    @media only screen and (max-width:360px) {
      .flow-text {
        font-size: 1.2rem
      }
    }

    .card-panel {
      padding: 20px
    }

    .card,
    .card-panel {
      margin: .5rem 0 1rem;
      background-color: #fff;
      transition: box-shadow .25s;
      border-radius: 2px
    }

    .card .card-title {
      font-size: 24px;
      font-weight: 300
    }

    .card .card-title.activator {
      cursor: pointer
    }

    .card,
    .card.large,
    .card.medium,
    .card.small {
      position: relative
    }

    .card.large .card-image,
    .card.medium .card-image,
    .card.small .card-image {
      max-height: 60%;
      overflow: hidden
    }

    .card.large .card-image+.card-content,
    .card.medium .card-image+.card-content,
    .card.small .card-image+.card-content {
      max-height: 40%
    }

    .card.large .card-content,
    .card.medium .card-content,
    .card.small .card-content {
      max-height: 100%;
      overflow: hidden
    }

    .card .card-image img,
    .card.large .card-action,
    .card.medium .card-action,
    .card.small .card-action {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0
    }

    .card.small {
      height: 300px
    }

    .card.medium {
      height: 400px
    }

    .card.large {
      height: 500px
    }

    .card.horizontal {
      display: flex
    }

    .card.horizontal.large .card-image,
    .card.horizontal.medium .card-image,
    .card.horizontal.small .card-image {
      height: 100%;
      max-height: none;
      overflow: visible
    }

    .card.horizontal .card-image {
      max-width: 50%
    }

    .card.horizontal .card-image img {
      border-radius: 2px 0 0 2px;
      max-width: 100%;
      width: auto
    }

    .card.horizontal .card-stacked {
      display: flex;
      flex-direction: column;
      flex: 1;
      position: relative
    }

    .card.horizontal .card-stacked .card-content {
      flex-grow: 1
    }

    .card.sticky-action .card-action {
      z-index: 2
    }

    .card.sticky-action .card-reveal {
      z-index: 1;
      padding-bottom: 64px
    }

    .card .card-image {
      position: relative
    }

    .card .card-image img {
      display: block;
      border-radius: 2px 2px 0 0;
      position: relative;
      top: 0;
      width: 100%
    }

    .card .card-image .card-title {
      color: #fff;
      position: absolute;
      bottom: 0;
      left: 0;
      padding: 20px
    }

    .card .card-content {
      padding: 20px;
      border-radius: 0 0 2px 2px
    }

    .card .card-content p {
      margin: 0;
      color: inherit
    }

    .card .card-content .card-title {
      line-height: 48px
    }

    .card .card-action {
      position: relative;
      background-color: inherit;
      border-top: 1px solid rgba(160, 160, 160, .2);
      padding: 20px
    }

    .card .card-action a:not(.btn):not(.btn-large):not(.btn-large):not(.btn-floating) {
      color: #ffab40;
      margin-right: 20px;
      transition: color .3s ease;
      text-transform: uppercase
    }

    .card .card-action a:not(.btn):not(.btn-large):not(.btn-large):not(.btn-floating):hover {
      color: #ffd8a6
    }

    .card .card-reveal {
      padding: 20px;
      position: absolute;
      background-color: #fff;
      width: 100%;
      overflow-y: auto;
      left: 0;
      top: 100%;
      height: 100%;
      z-index: 3;
      display: none
    }

    .card .card-reveal .card-title {
      cursor: pointer;
      display: block
    }

    #toast-container {
      display: block;
      position: fixed;
      z-index: 10000
    }

    @media only screen and (max-width:600px) {
      #toast-container {
        min-width: 100%;
        bottom: 0%
      }
    }

    @media only screen and (min-width:601px) and (max-width:992px) {
      #toast-container {
        left: 5%;
        bottom: 7%;
        max-width: 90%
      }
    }

    @media only screen and (min-width:993px) {
      #toast-container {
        top: 10%;
        right: 7%;
        max-width: 86%
      }
    }

    .toast {
      border-radius: 2px;
      top: 0;
      width: auto;
      clear: both;
      margin-top: 10px;
      position: relative;
      max-width: 100%;
      height: auto;
      min-height: 48px;
      line-height: 1.5em;
      word-break: break-all;
      background-color: #323232;
      padding: 10px 25px;
      font-size: 1.1rem;
      font-weight: 300;
      color: #fff;
      display: flex;
      align-items: center;
      justify-content: space-between
    }

    .toast .btn,
    .toast .btn-flat,
    .toast .btn-large {
      margin: 0;
      margin-left: 3rem
    }

    .toast.rounded {
      border-radius: 24px
    }

    @media only screen and (max-width:600px) {
      .toast {
        width: 100%;
        border-radius: 0
      }
    }

    @media only screen and (min-width:601px) and (max-width:992px) {
      .toast {
        float: left
      }
    }

    @media only screen and (min-width:993px) {
      .toast {
        float: right
      }
    }

    .backdrop,
    .material-tooltip {
      position: absolute;
      opacity: 0;
      display: none
    }

    .material-tooltip {
      padding: 10px 8px;
      font-size: 1rem;
      color: #fff;
      min-height: 36px;
      line-height: 120%;
      text-align: center;
      max-width: calc(100% - 4px);
      overflow: hidden;
      left: 0;
      top: 0;
      pointer-events: none;
      z-index: 2000;
      background-color: transparent;
      border-radius: 2px
    }

    .backdrop {
      height: 7px;
      width: 14px;
      border-radius: 0 0 50% 50%;
      background-color: #323232;
      z-index: -1;
      transform-origin: 50% 0%;
      transform: translate3d(0, 0, 0)
    }

    .btn {
      padding: 7px 16px
    }

    .btn,
    .btn-flat,
    .btn-large {
      border: 0;
      border-radius: 2px;
      display: inline-block;
      line-height: 22.5px;
      text-transform: uppercase;
      vertical-align: middle;
      -webkit-tap-highlight-color: transparent
    }

    .btn-flat {
      padding: 7px 16px
    }

    .btn-flat.disabled,
    .btn-flat:disabled,
    .btn-flat[disabled],
    .btn-floating.disabled,
    .btn-floating:disabled,
    .btn-floating[disabled],
    .btn-large.disabled,
    .btn-large:disabled,
    .btn-large[disabled],
    .btn.disabled,
    .btn:disabled,
    .btn[disabled],
    .disabled.btn-large,
    [disabled].btn-large {
      pointer-events: none;
      background-color: #dfdfdf !important;
      box-shadow: none;
      color: #9f9f9f !important;
      cursor: default
    }

    .btn-flat.disabled:hover,
    .btn-flat:disabled:hover,
    .btn-flat[disabled]:hover,
    .btn-floating.disabled:hover,
    .btn-floating:disabled:hover,
    .btn-floating[disabled]:hover,
    .btn-large.disabled:hover,
    .btn-large:disabled:hover,
    .btn-large[disabled]:hover,
    .btn.disabled:hover,
    .btn:disabled:hover,
    .btn[disabled]:hover,
    .disabled.btn-large:hover,
    [disabled].btn-large:hover {
      background-color: #dfdfdf !important;
      color: #9f9f9f !important
    }

    .btn,
    .btn-flat,
    .btn-floating,
    .btn-large {
      outline: 0
    }

    .btn i {
      font-size: 1.3rem;
      line-height: inherit
    }

    .btn i,
    .btn-floating i {
      max-width: 1.4rem;
      overflow: hidden
    }

    .btn-flat i,
    .btn-large i {
      overflow: hidden;
      line-height: inherit
    }

    .btn-flat i {
      font-size: 1.3rem;
      max-width: 1.4rem
    }

    .btn-floating:focus,
    .btn-large:focus,
    .btn:focus {
      background-color: #103613
    }

    .btn,
    .btn-large {
      text-decoration: none;
      color: #fff;
      background-color: #1b5e20;
      text-align: center;
      letter-spacing: .5px;
      transition: .2s ease-out;
      cursor: pointer
    }

    .btn-large:hover,
    .btn:hover,
    .side-nav a.btn-large:hover,
    .side-nav a.btn:hover {
      background-color: #217227
    }

    .btn-floating,
    .btn-floating i {
      display: inline-block;
      color: #fff;
      line-height: 40px
    }

    .btn-floating {
      position: relative;
      overflow: hidden;
      z-index: 1;
      height: 40px;
      padding: 0;
      border-radius: 50%;
      transition: .3s;
      cursor: pointer;
      vertical-align: middle;
      width: 40px
    }

    .btn-floating i {
      width: inherit;
      max-width: none;
      text-align: center;
      font-size: 1.6rem
    }

    .btn-floating,
    .btn-floating:hover,
    .side-nav a.btn-floating:hover {
      background-color: #1b5e20
    }

    .btn-floating:before {
      border-radius: 0
    }

    .btn-floating.btn-large {
      width: 56px;
      height: 56px
    }

    .btn-floating.btn-large i {
      line-height: 56px
    }

    .fixed-action-btn {
      position: fixed;
      right: 23px;
      bottom: 23px;
      padding-top: 15px;
      margin-bottom: 0;
      z-index: 998
    }

    .fixed-action-btn.active ul {
      visibility: visible
    }

    .fixed-action-btn.horizontal {
      padding: 0 0 0 15px
    }

    .fixed-action-btn.horizontal ul {
      text-align: right;
      right: 64px;
      top: 50%;
      transform: translateY(-50%);
      height: 100%;
      left: auto;
      width: 500px
    }

    .fixed-action-btn.horizontal ul li {
      display: inline-block;
      margin: 15px 15px 0 0
    }

    .fixed-action-btn.toolbar {
      padding: 0;
      height: 56px
    }

    .fixed-action-btn.toolbar ul {
      display: flex;
      top: 0;
      bottom: 0
    }

    .fixed-action-btn.toolbar ul li {
      flex: 1;
      display: inline-block;
      margin: 0;
      height: 100%;
      transition: none
    }

    .fixed-action-btn.toolbar ul li a {
      display: block;
      overflow: hidden;
      position: relative;
      width: 100%;
      height: 100%;
      background-color: transparent;
      box-shadow: none;
      color: #fff;
      line-height: 56px;
      z-index: 1
    }

    .fixed-action-btn ul {
      left: 0;
      right: 0;
      text-align: center;
      position: absolute;
      bottom: 64px;
      margin: 0;
      visibility: hidden
    }

    .fixed-action-btn ul li {
      margin-bottom: 15px
    }

    .fixed-action-btn .fab-backdrop {
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;
      width: 40px;
      height: 40px;
      background-color: #1b5e20;
      border-radius: 50%;
      transform: scale(0)
    }

    .btn-flat {
      box-shadow: none;
      background-color: transparent;
      color: #343434;
      cursor: pointer;
      transition: background-color .2s
    }

    .btn-flat:active,
    .btn-flat:focus {
      background-color: transparent
    }

    .btn-flat:focus,
    .btn-flat:hover {
      background-color: rgba(0, 0, 0, .1);
      box-shadow: none
    }

    .btn-flat:active {
      background-color: rgba(0, 0, 0, .2)
    }

    .btn-flat.disabled {
      background-color: transparent !important;
      color: #b3b3b3 !important;
      cursor: default
    }

    .btn-large {
      padding: 16px 20px
    }

    .btn-large.btn-floating {
      padding: 0
    }

    .btn-large i {
      font-size: 1.6rem;
      max-width: 1.6rem
    }

    .btn-block {
      display: block
    }

    .dropdown-content {
      background-color: #fff;
      margin: 0;
      display: none;
      min-width: 100px;
      max-height: 650px;
      overflow-y: auto;
      opacity: 0;
      position: absolute;
      z-index: 999;
      will-change: width, height
    }

    .dropdown-content li {
      clear: both;
      color: rgba(0, 0, 0, .87);
      cursor: pointer;
      min-height: 50px;
      line-height: 1.5rem;
      width: 100%;
      text-align: left;
      text-transform: none
    }

    .dropdown-content li.active,
    .dropdown-content li.selected,
    .dropdown-content li:hover {
      background-color: #eee
    }

    .dropdown-content li.active.selected {
      background-color: #e1e1e1
    }

    .dropdown-content li.divider {
      min-height: 0;
      height: 1px
    }

    .dropdown-content li>a,
    .dropdown-content li>span {
      font-size: 16px;
      color: #1b5e20;
      display: block;
      line-height: 22px;
      padding: 14px 16px
    }

    .dropdown-content li>span>label,
    .input-field.col .dropdown-content [type=checkbox]+label {
      top: 1px;
      left: 0;
      height: 18px
    }

    .dropdown-content li>a>i {
      height: inherit;
      line-height: inherit
    }

    .waves-effect {
      position: relative;
      cursor: pointer;
      display: inline-block;
      overflow: hidden;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
      -webkit-tap-highlight-color: transparent;
      vertical-align: middle;
      z-index: 1;
      will-change: opacity, transform;
      transition: .3s ease-out
    }

    .waves-effect .waves-ripple {
      position: absolute;
      border-radius: 50%;
      width: 20px;
      height: 20px;
      margin-top: -10px;
      margin-left: -10px;
      opacity: 0;
      background: rgba(0, 0, 0, .2);
      transition: all .7s ease-out;
      transition-property: transform, opacity;
      transform: scale(0);
      pointer-events: none
    }

    .waves-effect.waves-light .waves-ripple {
      background-color: rgba(255, 255, 255, .45)
    }

    .waves-effect.waves-red .waves-ripple {
      background-color: rgba(244, 67, 54, .7)
    }

    .waves-effect.waves-yellow .waves-ripple {
      background-color: rgba(255, 235, 59, .7)
    }

    .waves-effect.waves-orange .waves-ripple {
      background-color: rgba(255, 152, 0, .7)
    }

    .waves-effect.waves-purple .waves-ripple {
      background-color: rgba(156, 39, 176, .7)
    }

    .waves-effect.waves-green .waves-ripple {
      background-color: rgba(76, 175, 80, .7)
    }

    .waves-effect.waves-teal .waves-ripple {
      background-color: rgba(0, 150, 136, .7)
    }

    .waves-effect input[type=button],
    .waves-effect input[type=reset],
    .waves-effect input[type=submit] {
      border: 0;
      font-style: normal;
      font-size: inherit;
      text-transform: inherit;
      background: 0 0
    }

    .waves-effect img {
      position: relative;
      z-index: -1
    }

    .waves-notransition {
      transition: none !important
    }

    .waves-circle {
      transform: translateZ(0);
      -webkit-mask-image: -webkit-radial-gradient(circle, #fff 100%, #000 100%)
    }

    .waves-input-wrapper {
      border-radius: .2em;
      vertical-align: bottom
    }

    .waves-input-wrapper .waves-button-input {
      position: relative;
      top: 0;
      left: 0;
      z-index: 1
    }

    .waves-circle {
      text-align: center;
      width: 2.5em;
      height: 2.5em;
      line-height: 2.5em;
      border-radius: 50%;
      -webkit-mask-image: none
    }

    .waves-block {
      display: block
    }

    .waves-effect .waves-ripple {
      z-index: -1
    }

    .modal {
      display: none;
      position: fixed;
      left: 0;
      right: 0;
      background-color: #fafafa;
      padding: 0;
      max-height: 70%;
      width: 55%;
      margin: auto;
      overflow-y: auto;
      border-radius: 2px;
      will-change: top, opacity
    }

    @media only screen and (max-width:992px) {
      .modal {
        width: 80%
      }
    }

    .modal h1,
    .modal h2,
    .modal h3,
    .modal h4 {
      margin-top: 0
    }

    .modal .modal-content {
      padding: 24px
    }

    .modal .modal-close {
      cursor: pointer
    }

    .modal .modal-footer {
      border-radius: 0 0 2px 2px;
      background-color: #fafafa;
      padding: 4px 6px;
      height: 56px;
      width: 100%
    }

    .modal .modal-footer .btn,
    .modal .modal-footer .btn-flat,
    .modal .modal-footer .btn-large {
      float: right;
      margin: 6px 0
    }

    .modal-overlay {
      position: fixed;
      z-index: 999;
      top: -100px;
      left: 0;
      bottom: 0;
      right: 0;
      height: 125%;
      width: 100%;
      background: #000;
      display: none;
      will-change: opacity
    }

    .modal.modal-fixed-footer {
      padding: 0;
      height: 70%
    }

    .modal.modal-fixed-footer .modal-content {
      position: absolute;
      height: calc(100% - 56px);
      max-height: 100%;
      width: 100%;
      overflow-y: auto
    }

    .modal.modal-fixed-footer .modal-footer {
      border-top: 1px solid rgba(0, 0, 0, .1);
      position: absolute;
      bottom: 0
    }

    .modal.bottom-sheet {
      top: auto;
      bottom: -100%;
      margin: 0;
      width: 100%;
      max-height: 45%;
      border-radius: 0;
      will-change: bottom, opacity
    }

    .chip {
      display: inline-block;
      height: 32px;
      font-size: 13px;
      font-weight: 500;
      color: rgba(0, 0, 0, .6);
      line-height: 32px;
      padding: 0 12px;
      border-radius: 16px;
      background-color: #e4e4e4;
      margin-bottom: 5px;
      margin-right: 5px
    }

    .chip img {
      float: left;
      margin: 0 8px 0 -12px;
      height: 32px;
      width: 32px;
      border-radius: 50%
    }

    .chip .close {
      cursor: pointer;
      float: right;
      font-size: 16px;
      line-height: 32px;
      padding-left: 8px
    }

    .chips {
      border: 0;
      border-bottom: 1px solid #9e9e9e;
      box-shadow: none;
      margin: 0 0 20px;
      min-height: 45px;
      outline: 0;
      transition: all .3s
    }

    .chips.focus {
      border-bottom: 1px solid #26a69a;
      box-shadow: 0 1px 0 0 #26a69a
    }

    .chips:hover {
      cursor: text
    }

    .chips .chip.selected {
      background-color: #26a69a;
      color: #fff
    }

    .chips .input {
      background: 0 0;
      border: 0;
      color: rgba(0, 0, 0, .6);
      display: inline-block;
      font-size: 1rem;
      height: 3rem;
      line-height: 32px;
      outline: 0;
      margin: 0;
      padding: 0 !important;
      width: 120px !important
    }

    .chips .input:focus {
      border: 0 !important;
      box-shadow: none !important
    }

    .prefix~.chips {
      margin-left: 3rem;
      width: 92%;
      width: calc(100% - 3rem)
    }

    .chips:empty~label {
      font-size: .8rem;
      transform: translateY(-140%)
    }

    select:focus {
      outline: 1px solid #8bde91
    }

    button:focus {
      outline: 0;
      background-color: #206e25
    }

    label {
      font-size: .8rem;
      color: #9e9e9e
    }

    ::-webkit-input-placeholder {
      color: #d1d1d1
    }

    :-moz-placeholder,
    ::-moz-placeholder {
      color: #d1d1d1
    }

    :-ms-input-placeholder {
      color: #d1d1d1
    }

    .input-field input:not([type]),
    .input-field input[type=date],
    .input-field input[type=datetime-local],
    .input-field input[type=datetime],
    .input-field input[type=email],
    .input-field input[type=number],
    .input-field input[type=password],
    .input-field input[type=search],
    .input-field input[type=tel],
    .input-field input[type=text],
    .input-field input[type=time],
    .input-field input[type=url],
    .input-field textarea.materialize-textarea {
      background-color: transparent;
      border: 0;
      border-bottom: 1px solid #9e9e9e;
      border-radius: 0;
      outline: 0;
      height: 3rem;
      width: 100%;
      font-size: 1rem;
      margin: 0 0 20px;
      padding: 0;
      box-shadow: none;
      box-sizing: content-box;
      transition: all .3s
    }

    .input-field input:not([type]):disabled,
    .input-field input:not([type])[readonly=readonly],
    .input-field input[type=date]:disabled,
    .input-field input[type=date][readonly=readonly],
    .input-field input[type=datetime-local]:disabled,
    .input-field input[type=datetime-local][readonly=readonly],
    .input-field input[type=datetime]:disabled,
    .input-field input[type=datetime][readonly=readonly],
    .input-field input[type=email]:disabled,
    .input-field input[type=email][readonly=readonly],
    .input-field input[type=number]:disabled,
    .input-field input[type=number][readonly=readonly],
    .input-field input[type=password]:disabled,
    .input-field input[type=password][readonly=readonly],
    .input-field input[type=search]:disabled,
    .input-field input[type=search][readonly=readonly],
    .input-field input[type=tel]:disabled,
    .input-field input[type=tel][readonly=readonly],
    .input-field input[type=text]:disabled,
    .input-field input[type=text][readonly=readonly],
    .input-field input[type=time]:disabled,
    .input-field input[type=time][readonly=readonly],
    .input-field input[type=url]:disabled,
    .input-field input[type=url][readonly=readonly],
    .input-field textarea.materialize-textarea:disabled,
    .input-field textarea.materialize-textarea[readonly=readonly] {
      color: rgba(0, 0, 0, .26);
      border-bottom: 1px dotted rgba(0, 0, 0, .26)
    }

    .input-field input:not([type]):disabled+label,
    .input-field input:not([type])[readonly=readonly]+label,
    .input-field input[type=date]:disabled+label,
    .input-field input[type=date][readonly=readonly]+label,
    .input-field input[type=datetime-local]:disabled+label,
    .input-field input[type=datetime-local][readonly=readonly]+label,
    .input-field input[type=datetime]:disabled+label,
    .input-field input[type=datetime][readonly=readonly]+label,
    .input-field input[type=email]:disabled+label,
    .input-field input[type=email][readonly=readonly]+label,
    .input-field input[type=number]:disabled+label,
    .input-field input[type=number][readonly=readonly]+label,
    .input-field input[type=password]:disabled+label,
    .input-field input[type=password][readonly=readonly]+label,
    .input-field input[type=search]:disabled+label,
    .input-field input[type=search][readonly=readonly]+label,
    .input-field input[type=tel]:disabled+label,
    .input-field input[type=tel][readonly=readonly]+label,
    .input-field input[type=text]:disabled+label,
    .input-field input[type=text][readonly=readonly]+label,
    .input-field input[type=time]:disabled+label,
    .input-field input[type=time][readonly=readonly]+label,
    .input-field input[type=url]:disabled+label,
    .input-field input[type=url][readonly=readonly]+label,
    .input-field textarea.materialize-textarea:disabled+label,
    .input-field textarea.materialize-textarea[readonly=readonly]+label {
      color: rgba(0, 0, 0, .26)
    }

    .input-field input:not([type]):focus:not([readonly]),
    .input-field input[type=date]:focus:not([readonly]),
    .input-field input[type=datetime-local]:focus:not([readonly]),
    .input-field input[type=datetime]:focus:not([readonly]),
    .input-field input[type=email]:focus:not([readonly]),
    .input-field input[type=number]:focus:not([readonly]),
    .input-field input[type=password]:focus:not([readonly]),
    .input-field input[type=search]:focus:not([readonly]),
    .input-field input[type=tel]:focus:not([readonly]),
    .input-field input[type=text]:focus:not([readonly]),
    .input-field input[type=time]:focus:not([readonly]),
    .input-field input[type=url]:focus:not([readonly]),
    .input-field textarea.materialize-textarea:focus:not([readonly]) {
      border-bottom: 1px solid #1b5e20;
      box-shadow: 0 1px 0 0 #1b5e20
    }

    .input-field input:not([type]):focus:not([readonly])+label,
    .input-field input[type=date]:focus:not([readonly])+label,
    .input-field input[type=datetime-local]:focus:not([readonly])+label,
    .input-field input[type=datetime]:focus:not([readonly])+label,
    .input-field input[type=email]:focus:not([readonly])+label,
    .input-field input[type=number]:focus:not([readonly])+label,
    .input-field input[type=password]:focus:not([readonly])+label,
    .input-field input[type=search]:focus:not([readonly])+label,
    .input-field input[type=tel]:focus:not([readonly])+label,
    .input-field input[type=text]:focus:not([readonly])+label,
    .input-field input[type=time]:focus:not([readonly])+label,
    .input-field input[type=url]:focus:not([readonly])+label,
    .input-field textarea.materialize-textarea:focus:not([readonly])+label {
      color: #1b5e20
    }

    .input-field input:not([type]).valid,
    .input-field input:not([type]):focus.valid,
    .input-field input[type=date].valid,
    .input-field input[type=date]:focus.valid,
    .input-field input[type=datetime-local].valid,
    .input-field input[type=datetime-local]:focus.valid,
    .input-field input[type=datetime].valid,
    .input-field input[type=datetime]:focus.valid,
    .input-field input[type=email].valid,
    .input-field input[type=email]:focus.valid,
    .input-field input[type=number].valid,
    .input-field input[type=number]:focus.valid,
    .input-field input[type=password].valid,
    .input-field input[type=password]:focus.valid,
    .input-field input[type=search].valid,
    .input-field input[type=search]:focus.valid,
    .input-field input[type=tel].valid,
    .input-field input[type=tel]:focus.valid,
    .input-field input[type=text].valid,
    .input-field input[type=text]:focus.valid,
    .input-field input[type=time].valid,
    .input-field input[type=time]:focus.valid,
    .input-field input[type=url].valid,
    .input-field input[type=url]:focus.valid,
    .input-field textarea.materialize-textarea.valid,
    .input-field textarea.materialize-textarea:focus.valid {
      border-bottom: 1px solid #4caf50;
      box-shadow: 0 1px 0 0 #4caf50
    }

    .input-field input:not([type]).valid+label:after,
    .input-field input:not([type]):focus.valid+label:after,
    .input-field input[type=date].valid+label:after,
    .input-field input[type=date]:focus.valid+label:after,
    .input-field input[type=datetime-local].valid+label:after,
    .input-field input[type=datetime-local]:focus.valid+label:after,
    .input-field input[type=datetime].valid+label:after,
    .input-field input[type=datetime]:focus.valid+label:after,
    .input-field input[type=email].valid+label:after,
    .input-field input[type=email]:focus.valid+label:after,
    .input-field input[type=number].valid+label:after,
    .input-field input[type=number]:focus.valid+label:after,
    .input-field input[type=password].valid+label:after,
    .input-field input[type=password]:focus.valid+label:after,
    .input-field input[type=search].valid+label:after,
    .input-field input[type=search]:focus.valid+label:after,
    .input-field input[type=tel].valid+label:after,
    .input-field input[type=tel]:focus.valid+label:after,
    .input-field input[type=text].valid+label:after,
    .input-field input[type=text]:focus.valid+label:after,
    .input-field input[type=time].valid+label:after,
    .input-field input[type=time]:focus.valid+label:after,
    .input-field input[type=url].valid+label:after,
    .input-field input[type=url]:focus.valid+label:after,
    .input-field textarea.materialize-textarea.valid+label:after,
    .input-field textarea.materialize-textarea:focus.valid+label:after {
      content: attr(data-success);
      color: #4caf50;
      opacity: 1
    }

    .input-field input:not([type]).invalid,
    .input-field input:not([type]):focus.invalid,
    .input-field input[type=date].invalid,
    .input-field input[type=date]:focus.invalid,
    .input-field input[type=datetime-local].invalid,
    .input-field input[type=datetime-local]:focus.invalid,
    .input-field input[type=datetime].invalid,
    .input-field input[type=datetime]:focus.invalid,
    .input-field input[type=email].invalid,
    .input-field input[type=email]:focus.invalid,
    .input-field input[type=number].invalid,
    .input-field input[type=number]:focus.invalid,
    .input-field input[type=password].invalid,
    .input-field input[type=password]:focus.invalid,
    .input-field input[type=search].invalid,
    .input-field input[type=search]:focus.invalid,
    .input-field input[type=tel].invalid,
    .input-field input[type=tel]:focus.invalid,
    .input-field input[type=text].invalid,
    .input-field input[type=text]:focus.invalid,
    .input-field input[type=time].invalid,
    .input-field input[type=time]:focus.invalid,
    .input-field input[type=url].invalid,
    .input-field input[type=url]:focus.invalid,
    .input-field textarea.materialize-textarea.invalid,
    .input-field textarea.materialize-textarea:focus.invalid {
      border-bottom: 1px solid #f44336;
      box-shadow: 0 1px 0 0 #f44336
    }

    .input-field input:not([type]).invalid+label:after,
    .input-field input:not([type]):focus.invalid+label:after,
    .input-field input[type=date].invalid+label:after,
    .input-field input[type=date]:focus.invalid+label:after,
    .input-field input[type=datetime-local].invalid+label:after,
    .input-field input[type=datetime-local]:focus.invalid+label:after,
    .input-field input[type=datetime].invalid+label:after,
    .input-field input[type=datetime]:focus.invalid+label:after,
    .input-field input[type=email].invalid+label:after,
    .input-field input[type=email]:focus.invalid+label:after,
    .input-field input[type=number].invalid+label:after,
    .input-field input[type=number]:focus.invalid+label:after,
    .input-field input[type=password].invalid+label:after,
    .input-field input[type=password]:focus.invalid+label:after,
    .input-field input[type=search].invalid+label:after,
    .input-field input[type=search]:focus.invalid+label:after,
    .input-field input[type=tel].invalid+label:after,
    .input-field input[type=tel]:focus.invalid+label:after,
    .input-field input[type=text].invalid+label:after,
    .input-field input[type=text]:focus.invalid+label:after,
    .input-field input[type=time].invalid+label:after,
    .input-field input[type=time]:focus.invalid+label:after,
    .input-field input[type=url].invalid+label:after,
    .input-field input[type=url]:focus.invalid+label:after,
    .input-field textarea.materialize-textarea.invalid+label:after,
    .input-field textarea.materialize-textarea:focus.invalid+label:after {
      content: attr(data-error);
      color: #f44336;
      opacity: 1
    }

    .input-field input:not([type]).validate+label,
    .input-field input[type=date].validate+label,
    .input-field input[type=datetime-local].validate+label,
    .input-field input[type=datetime].validate+label,
    .input-field input[type=email].validate+label,
    .input-field input[type=number].validate+label,
    .input-field input[type=password].validate+label,
    .input-field input[type=search].validate+label,
    .input-field input[type=tel].validate+label,
    .input-field input[type=text].validate+label,
    .input-field input[type=time].validate+label,
    .input-field input[type=url].validate+label,
    .input-field textarea.materialize-textarea.validate+label {
      width: 100%;
      pointer-events: none
    }

    .input-field input:not([type])+label:after,
    .input-field input[type=date]+label:after,
    .input-field input[type=datetime-local]+label:after,
    .input-field input[type=datetime]+label:after,
    .input-field input[type=email]+label:after,
    .input-field input[type=number]+label:after,
    .input-field input[type=password]+label:after,
    .input-field input[type=search]+label:after,
    .input-field input[type=tel]+label:after,
    .input-field input[type=text]+label:after,
    .input-field input[type=time]+label:after,
    .input-field input[type=url]+label:after,
    .input-field textarea.materialize-textarea+label:after {
      display: block;
      content: "";
      position: absolute;
      top: 60px;
      opacity: 0;
      transition: .2s opacity ease-out, .2s color ease-out
    }

    .input-field {
      position: relative;
      margin-top: 1rem
    }

    .input-field.inline {
      display: inline-block;
      vertical-align: middle;
      margin-left: 5px
    }

    .input-field.inline .select-dropdown,
    .input-field.inline input {
      margin-bottom: 1rem
    }

    .input-field.col label {
      left: .75rem
    }

    .input-field.col .prefix~.validate~label,
    .input-field.col .prefix~label {
      width: calc(100% - 3rem - 1.5rem)
    }

    .input-field label {
      color: #9e9e9e;
      position: absolute;
      top: .8rem;
      left: 0;
      font-size: 1rem;
      cursor: text;
      transition: .2s ease-out
    }

    .input-field label.active {
      font-size: .8rem;
      transform: translateY(-140%)
    }

    .input-field .prefix {
      position: absolute;
      width: 3rem;
      font-size: 2rem;
      transition: color .2s
    }

    .input-field .prefix.active {
      color: #1b5e20
    }

    .input-field .prefix~.autocomplete-content,
    .input-field .prefix~.validate~label,
    .input-field .prefix~input,
    .input-field .prefix~label,
    .input-field .prefix~textarea {
      width: 92%;
      width: calc(100% - 3rem);
      margin-left: 3rem
    }

    @media only screen and (max-width:992px) {
      .input-field .prefix~input {
        width: 86%;
        width: calc(100% - 3rem)
      }
    }

    @media only screen and (max-width:600px) {
      .input-field .prefix~input {
        width: 80%;
        width: calc(100% - 3rem)
      }
    }

    .input-field input[type=search] {
      display: block;
      line-height: inherit;
      padding-left: 4rem;
      width: calc(100% - 4rem)
    }

    .input-field input[type=search]:focus {
      background-color: #fff;
      border: 0;
      box-shadow: none;
      color: #444
    }

    .input-field input[type=search]:focus+label i,
    .input-field input[type=search]:focus~.material-icons,
    .input-field input[type=search]:focus~.mdi-navigation-close {
      color: #444
    }

    .input-field input[type=search]+label {
      left: 1rem
    }

    .input-field input[type=search]~.material-icons,
    .input-field input[type=search]~.mdi-navigation-close {
      position: absolute;
      top: 0;
      right: 1rem;
      color: transparent;
      cursor: pointer;
      font-size: 2rem;
      transition: .3s color
    }

    .input-field textarea {
      width: 100%;
      height: 3rem;
      background-color: transparent
    }

    .input-field textarea.materialize-textarea {
      overflow-y: hidden;
      padding: .8rem 0 1.6rem;
      resize: none;
      min-height: 3rem
    }

    .hiddendiv {
      display: none;
      white-space: pre-wrap;
      word-wrap: break-word;
      overflow-wrap: break-word;
      padding-top: 1.2rem
    }

    .autocomplete-content {
      margin-top: -15px;
      display: block;
      opacity: 1;
      position: static
    }

    .autocomplete-content li .highlight {
      color: #444
    }

    .autocomplete-content li img {
      height: 40px;
      width: 40px;
      margin: 5px 15px
    }

    [type=checkbox]:checked,
    [type=checkbox]:not(:checked),
    [type=radio]:checked,
    [type=radio]:not(:checked) {
      position: absolute;
      left: -9999px;
      opacity: 0
    }

    [type=radio]:checked+label,
    [type=radio]:not(:checked)+label {
      position: relative;
      padding-left: 35px;
      cursor: pointer;
      display: inline-block;
      height: 25px;
      line-height: 25px;
      font-size: 1rem;
      transition: .28s ease;
      -khtml-user-select: none;
      user-select: none
    }

    [type=radio]+label:after,
    [type=radio]+label:before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      margin: 4px;
      width: 16px;
      height: 16px;
      z-index: 0;
      transition: .28s ease
    }

    [type=radio].with-gap:checked+label:after,
    [type=radio].with-gap:checked+label:before,
    [type=radio]:checked+label:after,
    [type=radio]:checked+label:before,
    [type=radio]:not(:checked)+label:after,
    [type=radio]:not(:checked)+label:before {
      border-radius: 50%
    }

    [type=radio]:not(:checked)+label:after,
    [type=radio]:not(:checked)+label:before {
      border: 2px solid #5a5a5a
    }

    [type=radio]:not(:checked)+label:after {
      transform: scale(0)
    }

    [type=radio]:checked+label:before {
      border: 2px solid transparent
    }

    [type=radio].with-gap:checked+label:after,
    [type=radio].with-gap:checked+label:before,
    [type=radio]:checked+label:after {
      border: 2px solid #1b5e20
    }

    [type=radio].with-gap:checked+label:after,
    [type=radio]:checked+label:after {
      background-color: #1b5e20
    }

    [type=radio]:checked+label:after {
      transform: scale(1.02)
    }

    [type=radio].with-gap:checked+label:after {
      transform: scale(.5)
    }

    [type=radio].tabbed:focus+label:before {
      box-shadow: 0 0 0 10px rgba(0, 0, 0, .1)
    }

    [type=radio].with-gap:disabled:checked+label:before {
      border: 2px solid rgba(0, 0, 0, .26)
    }

    [type=radio].with-gap:disabled:checked+label:after {
      border: 0;
      background-color: rgba(0, 0, 0, .26)
    }

    [type=radio]:disabled:checked+label:before,
    [type=radio]:disabled:not(:checked)+label:before {
      background-color: transparent;
      border-color: rgba(0, 0, 0, .26)
    }

    [type=radio]:disabled+label {
      color: rgba(0, 0, 0, .26)
    }

    [type=radio]:disabled:not(:checked)+label:before {
      border-color: rgba(0, 0, 0, .26)
    }

    [type=radio]:disabled:checked+label:after {
      background-color: rgba(0, 0, 0, .26);
      border-color: #bdbdbd
    }

    form p {
      margin-bottom: 10px;
      text-align: left
    }

    form p:last-child {
      margin-bottom: 0
    }

    [type=checkbox]+label {
      position: relative;
      padding-left: 35px;
      cursor: pointer;
      display: inline-block;
      height: 25px;
      line-height: 25px;
      font-size: 1rem;
      -webkit-user-select: none;
      -moz-user-select: none;
      -khtml-user-select: none;
      -ms-user-select: none
    }

    [type=checkbox]+label:before,
    [type=checkbox]:not(.filled-in)+label:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 18px;
      height: 18px;
      z-index: 0;
      border: 2px solid #5a5a5a;
      border-radius: 1px;
      margin-top: 2px;
      transition: .2s
    }

    [type=checkbox]:not(.filled-in)+label:after {
      border: 0;
      transform: scale(0)
    }

    [type=checkbox]:not(:checked):disabled+label:before {
      border: 0;
      background-color: rgba(0, 0, 0, .26)
    }

    [type=checkbox].tabbed:focus+label:after {
      transform: scale(1);
      border: 0;
      border-radius: 50%;
      box-shadow: 0 0 0 10px rgba(0, 0, 0, .1);
      background-color: rgba(0, 0, 0, .1)
    }

    [type=checkbox]:checked+label:before {
      top: -4px;
      left: -5px;
      width: 12px;
      height: 22px;
      border-top: 2px solid transparent;
      border-left: 2px solid transparent;
      border-right: 2px solid #1b5e20;
      border-bottom: 2px solid #1b5e20;
      transform: rotate(40deg);
      backface-visibility: hidden;
      transform-origin: 100% 100%
    }

    [type=checkbox]:checked:disabled+label:before {
      border-right: 2px solid rgba(0, 0, 0, .26);
      border-bottom: 2px solid rgba(0, 0, 0, .26)
    }

    [type=checkbox]:indeterminate+label:before {
      top: -11px;
      left: -12px;
      width: 10px;
      height: 22px;
      border-top: none;
      border-left: none;
      border-right: 2px solid #1b5e20;
      border-bottom: none;
      transform: rotate(90deg);
      backface-visibility: hidden;
      transform-origin: 100% 100%
    }

    [type=checkbox]:indeterminate:disabled+label:before {
      border-right: 2px solid rgba(0, 0, 0, .26);
      background-color: transparent
    }

    [type=checkbox].filled-in+label:after {
      border-radius: 2px
    }

    [type=checkbox].filled-in+label:after,
    [type=checkbox].filled-in+label:before {
      content: '';
      left: 0;
      position: absolute;
      transition: border .25s, background-color .25s, width .2s .1s, height .2s .1s, top .2s .1s, left .2s .1s;
      z-index: 1
    }

    [type=checkbox].filled-in:not(:checked)+label:before {
      width: 0;
      height: 0;
      border: 3px solid transparent;
      left: 6px;
      top: 10px;
      -webkit-transform: rotateZ(37deg);
      transform: rotateZ(37deg);
      -webkit-transform-origin: 20% 40%;
      transform-origin: 100% 100%
    }

    [type=checkbox].filled-in:not(:checked)+label:after {
      height: 20px;
      width: 20px;
      background-color: transparent;
      border: 2px solid #5a5a5a;
      top: 0;
      z-index: 0
    }

    [type=checkbox].filled-in:checked+label:before {
      top: 0;
      left: 1px;
      width: 8px;
      height: 13px;
      border-top: 2px solid transparent;
      border-left: 2px solid transparent;
      border-right: 2px solid #fff;
      border-bottom: 2px solid #fff;
      -webkit-transform: rotateZ(37deg);
      transform: rotateZ(37deg);
      -webkit-transform-origin: 100% 100%;
      transform-origin: 100% 100%
    }

    [type=checkbox].filled-in:checked+label:after {
      top: 0;
      width: 20px;
      height: 20px;
      border: 2px solid #1b5e20;
      background-color: #1b5e20;
      z-index: 0
    }

    [type=checkbox].filled-in.tabbed:focus+label:after {
      border-radius: 2px;
      border-color: #5a5a5a;
      background-color: rgba(0, 0, 0, .1)
    }

    [type=checkbox].filled-in.tabbed:checked:focus+label:after {
      border-radius: 2px;
      background-color: #1b5e20;
      border-color: #1b5e20
    }

    [type=checkbox].filled-in:disabled:not(:checked)+label:before {
      background-color: transparent;
      border: 2px solid transparent
    }

    [type=checkbox].filled-in:disabled:not(:checked)+label:after {
      border-color: transparent;
      background-color: #bdbdbd
    }

    [type=checkbox].filled-in:disabled:checked+label:before {
      background-color: transparent
    }

    [type=checkbox].filled-in:disabled:checked+label:after {
      background-color: #bdbdbd;
      border-color: #bdbdbd
    }

    .switch,
    .switch * {
      -webkit-user-select: none;
      -moz-user-select: none;
      -khtml-user-select: none;
      -ms-user-select: none
    }

    .file-field span,
    .switch label {
      cursor: pointer
    }

    .switch label input[type=checkbox] {
      opacity: 0;
      width: 0;
      height: 0
    }

    .switch label input[type=checkbox]:checked+.lever {
      background-color: #57a25c
    }

    .switch label input[type=checkbox]:checked+.lever:after {
      background-color: #1b5e20;
      left: 24px
    }

    .switch label .lever {
      content: "";
      display: inline-block;
      position: relative;
      width: 40px;
      height: 15px;
      background-color: #818181;
      border-radius: 15px;
      transition: background .3s ease;
      vertical-align: middle;
      margin: 0 16px
    }

    .switch label .lever:after {
      content: "";
      position: absolute;
      display: inline-block;
      width: 21px;
      height: 21px;
      background-color: #f1f1f1;
      border-radius: 21px;
      box-shadow: 0 1px 3px 1px rgba(0, 0, 0, .4);
      left: -5px;
      top: -3px;
      transition: left .3s ease, background .3s ease, box-shadow .1s ease
    }

    input[type=checkbox]:checked:not(:disabled).tabbed:focus~.lever::after,
    input[type=checkbox]:checked:not(:disabled)~.lever:active::after {
      box-shadow: 0 1px 3px 1px rgba(0, 0, 0, .4), 0 0 0 15px rgba(27, 94, 32, .1)
    }

    input[type=checkbox]:not(:disabled).tabbed:focus~.lever::after,
    input[type=checkbox]:not(:disabled)~.lever:active:after {
      box-shadow: 0 1px 3px 1px rgba(0, 0, 0, .4), 0 0 0 15px rgba(0, 0, 0, .08)
    }

    .switch input[type=checkbox][disabled]+.lever {
      cursor: default
    }

    .switch label input[type=checkbox][disabled]+.lever:after,
    .switch label input[type=checkbox][disabled]:checked+.lever:after {
      background-color: #bdbdbd
    }

    select {
      display: none;
      background-color: rgba(255, 255, 255, .9);
      width: 100%;
      padding: 5px;
      border: 1px solid #f2f2f2;
      border-radius: 2px;
      height: 3rem
    }

    select.browser-default {
      display: block
    }

    .select-label {
      position: absolute
    }

    .file-field,
    .range-field,
    .select-wrapper {
      position: relative
    }

    .select-wrapper input.select-dropdown {
      position: relative;
      cursor: pointer;
      background-color: transparent;
      border: 0;
      border-bottom: 1px solid #9e9e9e;
      outline: 0;
      height: 3rem;
      line-height: 3rem;
      width: 100%;
      font-size: 1rem;
      margin: 0 0 20px;
      padding: 0;
      display: block
    }

    .select-wrapper span.caret {
      color: initial;
      position: absolute;
      right: 0;
      top: 0;
      bottom: 0;
      height: 10px;
      margin: auto 0;
      font-size: 10px;
      line-height: 10px
    }

    .select-wrapper span.caret.disabled {
      color: rgba(0, 0, 0, .26)
    }

    .select-wrapper+label {
      position: absolute;
      top: -14px;
      font-size: .8rem
    }

    select:disabled {
      color: rgba(0, 0, 0, .3)
    }

    .select-wrapper.invalid input.select-dropdown,
    .select-wrapper.invalid input.select-dropdown:focus {
      border-bottom: 1px solid #f44336;
      box-shadow: 0 1px 0 0 #f44336
    }

    .select-wrapper input.select-dropdown:disabled {
      color: rgba(0, 0, 0, .3);
      cursor: default;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      border-bottom: 1px solid rgba(0, 0, 0, .3)
    }

    .select-wrapper i {
      color: rgba(0, 0, 0, .3)
    }

    .select-dropdown li.disabled,
    .select-dropdown li.disabled>span,
    .select-dropdown li.optgroup {
      color: rgba(0, 0, 0, .3);
      background-color: transparent
    }

    .prefix~.select-wrapper {
      margin-left: 3rem;
      width: 92%;
      width: calc(100% - 3rem)
    }

    .prefix~label {
      margin-left: 3rem
    }

    .select-dropdown li img {
      height: 40px;
      width: 40px;
      margin: 5px 15px;
      float: right
    }

    .select-dropdown li.optgroup {
      border-top: 1px solid #eee
    }

    .select-dropdown li.optgroup.selected>span {
      color: rgba(0, 0, 0, .7)
    }

    .select-dropdown li.optgroup>span {
      color: rgba(0, 0, 0, .4)
    }

    .select-dropdown li.optgroup~li.optgroup-option {
      padding-left: 1rem
    }

    .file-field .file-path-wrapper {
      overflow: hidden;
      padding-left: 10px
    }

    .file-field input.file-path {
      width: 100%
    }

    .file-field .btn,
    .file-field .btn-large {
      float: left;
      height: 3rem;
      line-height: 3rem
    }

    .file-field input[type=file] {
      position: absolute;
      top: 0;
      right: 0;
      left: 0;
      bottom: 0;
      width: 100%;
      margin: 0;
      padding: 0;
      font-size: 20px;
      cursor: pointer;
      opacity: 0;
      filter: alpha(opacity=0)
    }

    input[type=range],
    input[type=range]+.thumb {
      cursor: pointer
    }

    input[type=range] {
      position: relative;
      background-color: transparent;
      outline: 0;
      width: 100%;
      margin: 15px 0;
      padding: 0;
      -webkit-appearance: none;
      border: 1px solid #fff
    }

    input[type=range]:focus {
      outline: 0
    }

    input[type=range]+.thumb {
      position: absolute;
      border: 0;
      height: 0;
      width: 0;
      border-radius: 50%;
      background-color: #1b5e20;
      top: 10px;
      margin-left: -6px;
      transform-origin: 50% 50%;
      transform: rotate(-45deg)
    }

    input[type=range]+.thumb .value {
      display: block;
      width: 30px;
      text-align: center;
      color: #1b5e20;
      font-size: 0;
      transform: rotate(45deg)
    }

    input[type=range]+.thumb.active {
      border-radius: 50% 50% 50% 0
    }

    input[type=range]+.thumb.active .value {
      color: #fff;
      margin-left: -1px;
      margin-top: 8px;
      font-size: 10px
    }

    input[type=range]::-webkit-slider-runnable-track {
      height: 3px;
      background: #c2c0c2;
      border: 0
    }

    input[type=range]::-webkit-slider-thumb {
      -webkit-appearance: none;
      border: 0;
      height: 14px;
      width: 14px;
      border-radius: 50%;
      background-color: #1b5e20;
      transform-origin: 50% 50%;
      margin: -5px 0 0;
      transition: .3s
    }

    input[type=range]:focus::-webkit-slider-runnable-track {
      background: #ccc
    }

    input[type=range]::-moz-range-track {
      height: 3px;
      background: #ddd;
      border: 0
    }

    input[type=range]::-moz-range-thumb {
      border: 0;
      height: 14px;
      width: 14px;
      border-radius: 50%;
      background: #1b5e20;
      margin-top: -5px
    }

    input[type=range]:-moz-focusring {
      outline: 1px solid #fff;
      outline-offset: -1px
    }

    input[type=range]:focus::-moz-range-track {
      background: #ccc
    }

    input[type=range]::-ms-track {
      height: 3px;
      background: 0 0;
      border-color: transparent;
      border-width: 6px 0;
      color: transparent
    }

    input[type=range]::-ms-fill-lower {
      background: #777
    }

    input[type=range]::-ms-fill-upper {
      background: #ddd
    }

    input[type=range]::-ms-thumb {
      border: 0;
      height: 14px;
      width: 14px;
      border-radius: 50%;
      background: #1b5e20
    }

    input[type=range]:focus::-ms-fill-lower {
      background: #888
    }

    input[type=range]:focus::-ms-fill-upper {
      background: #ccc
    }

    .drag-target,
    .side-nav {
      height: 100%;
      position: fixed;
      top: 0
    }

    .side-nav {
      left: 0;
      margin: 0;
      height: calc(100% + 60px);
      height: -moz-calc(100%);
      padding-bottom: 60px;
      background-color: #fff;
      overflow-y: auto;
      will-change: transform;
      backface-visibility: hidden;
      transform: translateX(-105%);
      width: 300px;
      z-index: 999
    }

    .side-nav.right-aligned {
      right: 0;
      left: auto;
      transform: translateX(100%)
    }

    .side-nav .collapsible {
      margin: 0
    }

    .side-nav li {
      float: none;
      line-height: 48px
    }

    .side-nav a:hover,
    .side-nav li.active {
      background-color: rgba(0, 0, 0, .05)
    }

    .side-nav a {
      color: rgba(0, 0, 0, .87);
      display: block;
      font-size: 14px;
      font-weight: 500;
      height: 48px;
      line-height: 48px;
      padding: 0 32px
    }

    .side-nav a.btn,
    .side-nav a.btn-flat,
    .side-nav a.btn-floating,
    .side-nav a.btn-large {
      margin: 10px 15px
    }

    .side-nav a.btn,
    .side-nav a.btn-floating,
    .side-nav a.btn-large {
      color: #fff
    }

    .side-nav a.btn-flat {
      color: #343434
    }

    .side-nav li>a>[class*=mdi-],
    .side-nav li>a>[class^=mdi-],
    .side-nav li>a>i,
    .side-nav li>a>i.material-icons {
      float: left;
      height: 48px;
      line-height: 48px;
      margin: 0 32px 0 0;
      width: 24px;
      color: rgba(0, 0, 0, .54)
    }

    .side-nav .divider {
      margin: 8px 0 0
    }

    .side-nav .subheader {
      cursor: initial;
      pointer-events: none;
      color: rgba(0, 0, 0, .54);
      font-size: 14px;
      font-weight: 500;
      line-height: 48px
    }

    .side-nav .subheader:hover,
    .side-nav .userView>a:hover {
      background-color: transparent
    }

    .side-nav .userView {
      position: relative;
      padding: 32px 32px 0;
      margin-bottom: 8px
    }

    .side-nav .userView>a {
      height: auto;
      padding: 0
    }

    .side-nav .userView .background {
      overflow: hidden;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: -1
    }

    .side-nav .userView .circle,
    .side-nav .userView .email,
    .side-nav .userView .name {
      display: block
    }

    .side-nav .userView .circle {
      height: 64px;
      width: 64px
    }

    .side-nav .userView .email,
    .side-nav .userView .name {
      font-size: 14px;
      line-height: 24px
    }

    .side-nav .userView .name {
      margin-top: 16px;
      font-weight: 500
    }

    .side-nav .userView .email {
      padding-bottom: 16px;
      font-weight: 400
    }

    .drag-target {
      width: 10px;
      z-index: 998
    }

    .side-nav.fixed {
      left: 0;
      transform: translateX(0);
      position: fixed
    }

    .side-nav.fixed.right-aligned {
      right: 0;
      left: auto
    }

    @media only screen and (max-width:992px) {
      .side-nav.fixed {
        transform: translateX(-105%)
      }

      .side-nav.fixed.right-aligned {
        transform: translateX(105%)
      }

      .side-nav a {
        padding: 0 16px
      }

      .side-nav .userView {
        padding: 16px 16px 0
      }
    }

    .side-nav .collapsible-body>ul:not(.collapsible)>li.active,
    .side-nav.fixed .collapsible-body>ul:not(.collapsible)>li.active {
      background-color: #ff6d00
    }

    .side-nav .collapsible-body>ul:not(.collapsible)>li.active a,
    .side-nav.fixed .collapsible-body>ul:not(.collapsible)>li.active a {
      color: #fff
    }

    #sidenav-overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      height: 120vh;
      background-color: rgba(0, 0, 0, .5);
      z-index: 997;
      will-change: opacity
    }

    .preloader-wrapper {
      display: inline-block;
      position: relative;
      width: 48px;
      height: 48px
    }

    .preloader-wrapper.small {
      width: 36px;
      height: 36px
    }

    .preloader-wrapper.big {
      width: 64px;
      height: 64px
    }

    .preloader-wrapper.active {
      -webkit-animation: container-rotate 1568ms linear infinite;
      animation: container-rotate 1568ms linear infinite
    }

    @-webkit-keyframes container-rotate {
      to {
        -webkit-transform: rotate(360deg)
      }
    }

    @keyframes container-rotate {
      to {
        transform: rotate(360deg)
      }
    }

    .spinner-layer {
      position: absolute;
      width: 100%;
      height: 100%;
      opacity: 0;
      border-color: #1b5e20
    }

    .spinner-blue,
    .spinner-blue-only {
      border-color: #4285f4
    }

    .spinner-red,
    .spinner-red-only {
      border-color: #db4437
    }

    .spinner-yellow,
    .spinner-yellow-only {
      border-color: #f4b400
    }

    .spinner-green,
    .spinner-green-only {
      border-color: #0f9d58
    }

    .active .spinner-layer.spinner-blue {
      -webkit-animation: fill-unfill-rotate 5332ms cubic-bezier(.4, 0, .2, 1) infinite both, blue-fade-in-out 5332ms cubic-bezier(.4, 0, .2, 1) infinite both;
      animation: fill-unfill-rotate 5332ms cubic-bezier(.4, 0, .2, 1) infinite both, blue-fade-in-out 5332ms cubic-bezier(.4, 0, .2, 1) infinite both
    }

    .active .spinner-layer.spinner-red {
      -webkit-animation: fill-unfill-rotate 5332ms cubic-bezier(.4, 0, .2, 1) infinite both, red-fade-in-out 5332ms cubic-bezier(.4, 0, .2, 1) infinite both;
      animation: fill-unfill-rotate 5332ms cubic-bezier(.4, 0, .2, 1) infinite both, red-fade-in-out 5332ms cubic-bezier(.4, 0, .2, 1) infinite both
    }

    .active .spinner-layer.spinner-yellow {
      -webkit-animation: fill-unfill-rotate 5332ms cubic-bezier(.4, 0, .2, 1) infinite both, yellow-fade-in-out 5332ms cubic-bezier(.4, 0, .2, 1) infinite both;
      animation: fill-unfill-rotate 5332ms cubic-bezier(.4, 0, .2, 1) infinite both, yellow-fade-in-out 5332ms cubic-bezier(.4, 0, .2, 1) infinite both
    }

    .active .spinner-layer.spinner-green {
      -webkit-animation: fill-unfill-rotate 5332ms cubic-bezier(.4, 0, .2, 1) infinite both, green-fade-in-out 5332ms cubic-bezier(.4, 0, .2, 1) infinite both;
      animation: fill-unfill-rotate 5332ms cubic-bezier(.4, 0, .2, 1) infinite both, green-fade-in-out 5332ms cubic-bezier(.4, 0, .2, 1) infinite both
    }

    .active .spinner-layer,
    .active .spinner-layer.spinner-blue-only,
    .active .spinner-layer.spinner-green-only,
    .active .spinner-layer.spinner-red-only,
    .active .spinner-layer.spinner-yellow-only {
      opacity: 1;
      -webkit-animation: fill-unfill-rotate 5332ms cubic-bezier(.4, 0, .2, 1) infinite both;
      animation: fill-unfill-rotate 5332ms cubic-bezier(.4, 0, .2, 1) infinite both
    }

    @-webkit-keyframes fill-unfill-rotate {
      12.5% {
        -webkit-transform: rotate(135deg)
      }

      25% {
        -webkit-transform: rotate(270deg)
      }

      37.5% {
        -webkit-transform: rotate(405deg)
      }

      50% {
        -webkit-transform: rotate(540deg)
      }

      62.5% {
        -webkit-transform: rotate(675deg)
      }

      75% {
        -webkit-transform: rotate(810deg)
      }

      87.5% {
        -webkit-transform: rotate(945deg)
      }

      to {
        -webkit-transform: rotate(1080deg)
      }
    }

    @keyframes fill-unfill-rotate {
      12.5% {
        transform: rotate(135deg)
      }

      25% {
        transform: rotate(270deg)
      }

      37.5% {
        transform: rotate(405deg)
      }

      50% {
        transform: rotate(540deg)
      }

      62.5% {
        transform: rotate(675deg)
      }

      75% {
        transform: rotate(810deg)
      }

      87.5% {
        transform: rotate(945deg)
      }

      to {
        transform: rotate(1080deg)
      }
    }

    @-webkit-keyframes blue-fade-in-out {

      0%,
      25%,
      90%,
      to {
        opacity: 1
      }

      26%,
      89% {
        opacity: 0
      }
    }

    @keyframes blue-fade-in-out {

      0%,
      25%,
      90%,
      to {
        opacity: 1
      }

      26%,
      89% {
        opacity: 0
      }
    }

    @-webkit-keyframes red-fade-in-out {

      0%,
      15%,
      51% {
        opacity: 0
      }

      25%,
      50% {
        opacity: 1
      }
    }

    @keyframes red-fade-in-out {

      0%,
      15%,
      51% {
        opacity: 0
      }

      25%,
      50% {
        opacity: 1
      }
    }

    @-webkit-keyframes yellow-fade-in-out {

      0%,
      40%,
      76% {
        opacity: 0
      }

      50%,
      75% {
        opacity: 1
      }
    }

    @keyframes yellow-fade-in-out {

      0%,
      40%,
      76% {
        opacity: 0
      }

      50%,
      75% {
        opacity: 1
      }
    }

    @-webkit-keyframes green-fade-in-out {

      0%,
      65%,
      to {
        opacity: 0
      }

      75%,
      90% {
        opacity: 1
      }
    }

    @keyframes green-fade-in-out {

      0%,
      65%,
      to {
        opacity: 0
      }

      75%,
      90% {
        opacity: 1
      }
    }

    .circle-clipper,
    .gap-patch {
      height: 100%;
      overflow: hidden;
      border-color: inherit
    }

    .gap-patch {
      top: 0;
      left: 45%;
      position: absolute;
      width: 10%
    }

    .gap-patch .circle {
      width: 1000%;
      left: -450%
    }

    .circle-clipper {
      display: inline-block;
      position: relative;
      width: 50%
    }

    .circle-clipper .circle {
      width: 200%;
      height: 100%;
      border-width: 3px;
      border-style: solid;
      border-color: inherit;
      border-bottom-color: transparent !important;
      border-radius: 50%;
      -webkit-animation: none;
      animation: none;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0
    }

    .circle-clipper.left .circle {
      left: 0;
      border-right-color: transparent !important;
      -webkit-transform: rotate(129deg);
      transform: rotate(129deg)
    }

    .circle-clipper.right .circle {
      left: -100%;
      border-left-color: transparent !important;
      -webkit-transform: rotate(-129deg);
      transform: rotate(-129deg)
    }

    .active .circle-clipper.left .circle {
      -webkit-animation: left-spin 1333ms cubic-bezier(.4, 0, .2, 1) infinite both;
      animation: left-spin 1333ms cubic-bezier(.4, 0, .2, 1) infinite both
    }

    .active .circle-clipper.right .circle {
      -webkit-animation: right-spin 1333ms cubic-bezier(.4, 0, .2, 1) infinite both;
      animation: right-spin 1333ms cubic-bezier(.4, 0, .2, 1) infinite both
    }

    @-webkit-keyframes left-spin {

      0%,
      to {
        -webkit-transform: rotate(130deg)
      }

      50% {
        -webkit-transform: rotate(-5deg)
      }
    }

    @keyframes left-spin {

      0%,
      to {
        transform: rotate(130deg)
      }

      50% {
        transform: rotate(-5deg)
      }
    }

    @-webkit-keyframes right-spin {

      0%,
      to {
        -webkit-transform: rotate(-130deg)
      }

      50% {
        -webkit-transform: rotate(5deg)
      }
    }

    @keyframes right-spin {

      0%,
      to {
        transform: rotate(-130deg)
      }

      50% {
        transform: rotate(5deg)
      }
    }

    #spinnerContainer.cooldown {
      -webkit-animation: container-rotate 1568ms linear infinite, fade-out 400ms cubic-bezier(.4, 0, .2, 1);
      animation: container-rotate 1568ms linear infinite, fade-out 400ms cubic-bezier(.4, 0, .2, 1)
    }

    @-webkit-keyframes fade-out {
      0% {
        opacity: 1
      }

      to {
        opacity: 0
      }
    }

    @keyframes fade-out {
      0% {
        opacity: 1
      }

      to {
        opacity: 0
      }
    }
  </style>
  <style type="text/css">
    body {
      min-width: 320px;
      background: 0 0
    }

    @media only screen and (max-width:600px) {
      .container {
        width: 96%
      }

      .m-footer-genres .container {
        padding: 0 15px
      }

      .container .row {
        margin-left: -.5rem;
        margin-right: -.5rem
      }

      .row .col {
        padding: 0 .5rem
      }

      .card .card-content {
        padding: 20px 15px
      }
    }

    .nav-wrapper.container {
      width: 90%
    }

    @media only screen and (min-width:601px) {

      .container,
      .nav-wrapper.container {
        width: 96%
      }
    }

    @media only screen and (min-width:993px) {

      .container,
      .nav-wrapper.container {
        width: 90%
      }
    }

    p {
      margin: 0
    }

    .card-content>.h1:first-child,
    .card-content>.h2:first-child,
    .card-content>.h3:first-child,
    .card-content>.h4:first-child,
    .card-content>.h5:first-child,
    .card-content>.h6:first-child,
    .card-content>h1:first-child,
    .card-content>h2:first-child,
    .card-content>h3:first-child,
    .card-content>h4:first-child,
    .card-content>h5:first-child,
    .card-content>h6:first-child,
    .card-panel>.h1:first-child,
    .card-panel>.h2:first-child,
    .card-panel>.h3:first-child,
    .card-panel>.h4:first-child,
    .card-panel>.h5:first-child,
    .card-panel>.h6:first-child,
    .card-panel>h1:first-child,
    .card-panel>h2:first-child,
    .card-panel>h3:first-child,
    .card-panel>h4:first-child,
    .card-panel>h5:first-child,
    .card-panel>h6:first-child {
      margin-top: 0
    }

    .card-content>.row:last-child,
    .card-panel>.row:last-child {
      margin-bottom: 0
    }

    .hidden {
      display: none
    }

    .clearfix:after {
      content: "";
      display: table;
      clear: both
    }

    .input-field .dropdown-content label {
      width: auto
    }

    .row .input-field.col .dropdown-content li>span>label {
      left: 3px
    }

    .tag {
      display: inline-block;
      font-weight: 300;
      color: #fff;
      font-size: .9rem;
      background-color: #e65100;
      border-radius: 2px;
      padding: 2px 8px;
      margin-right: 5px;
      text-align: center;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      max-width: 100%
    }

    .tag a {
      color: #fff !important;
      text-decoration: underline
    }

    .drag-target {
      width: 20px
    }

    nav .button-collapse {
      margin: 0 -20px;
      padding: 0 20px
    }

    .btn.orange.accent-4:hover {
      background-color: #ff7c1a !important
    }

    .btn.green.darken-4:hover {
      background-color: #217227 !important
    }

    a:hover:not(.btn):not(.btn-large) {
      color: #01579b
    }

    .button-collapse,
    nav ul.right a {
      color: rgba(0, 0, 0, .87) !important
    }

    nav .button-collapse i {
      font-size: 32px
    }

    .divider {
      display: block
    }

    .chip i.material-icons {
      cursor: pointer;
      float: right;
      font-size: 16px;
      line-height: 32px;
      padding-left: 8px;
      padding-right: 8px;
      margin-right: -8px
    }

    .side-nav a {
      padding: 0 0 0 16px
    }

    md-autocomplete input[type=search]:focus:not([readonly]):not(.md-input) {
      border-bottom: none;
      box-shadow: none
    }

    input[type=date]:focus:not([readonly])+label:not(.md-input),
    input[type=datetime-local]:focus:not([readonly])+label:not(.md-input),
    input[type=email]:focus:not([readonly])+label:not(.md-input),
    input[type=number]:focus:not([readonly])+label:not(.md-input),
    input[type=password]:focus:not([readonly])+label:not(.md-input),
    input[type=search]:focus:not([readonly])+label:not(.md-input),
    input[type=tel]:focus:not([readonly])+label:not(.md-input),
    input[type=text]:focus:not([readonly])+label:not(.md-input),
    input[type=time]:focus:not([readonly])+label:not(.md-input),
    input[type=url]:focus:not([readonly])+label:not(.md-input),
    textarea.materialize-textarea:focus:not([readonly])+label:not(.md-input) {
      color: #1b5e20
    }

    .file-field input[type=file]::-webkit-file-upload-button {
      cursor: pointer
    }

    .full-background {
      position: fixed;
      z-index: -1;
      top: 0;
      left: 0;
      width: 100%;
      background: url(/images/bg3.jpg?3) no-repeat;
      background-size: cover;
      height: 125%
    }

    .full-background.fix-background {
      height: 125vh;
      transition: height 9999999s ease;
      -webkit-transition: height 9999999s ease;
      -moz-transition: height 9999999s ease;
      -o-transition: height 9999999s ease
    }

    .is-hentai-site .full-background {
      height: 110%;
      background-position: center;
      background-image: url(/images/hentai_bg_1.png)
    }

    .brand-logo {
      display: block;
      background: url(/images/logo.png?2) center 6px no-repeat;
      width: 170px;
      background-size: 100%;
      overflow: hidden
    }

    .is-hentai-site .brand-logo {
      background-image: url(/images/logo-hentai.png)
    }

    @media only screen and (max-width:600px) {
      .brand-logo {
        width: 150px;
        background-position-y: 4px
      }

      .onesignal-bell-container {
        display: none !important
      }
    }

    .brand-logo span {
      visibility: hidden
    }

    .icon-block {
      padding: 0 15px
    }

    .icon-block .material-icons {
      font-size: inherit
    }

    nav.grey-text a {
      color: #212121 !important
    }

    nav .dropdown-content li>a,
    nav .dropdown-content li>span {
      font-size: 15px;
      padding: 14px 15px
    }

    .card .card-image.hover-effect:after,
    .m-catalog-item_small .m-catalog-item__poster a:after {
      content: '';
      display: block;
      width: 100%;
      top: 0;
      left: 0;
      position: absolute;
      height: 100%;
      opacity: 0;
      background: rgba(0, 0, 0, .1);
      transition: opacity .25s ease
    }

    .card:hover .card-image.hover-effect:after,
    .m-catalog-item_small .m-catalog-item__poster:hover a:after {
      opacity: 1
    }

    input[type=text].m-big-search-input {
      border: 1px solid #9e9e9e !important;
      padding: 0 15px !important;
      display: inline-block;
      margin: 1px 0 0 !important;
      box-sizing: border-box !important
    }

    input.m-big-search-input:focus,
    input.m-big-search-input:hover {
      border-bottom: 1px solid #9e9e9e !important;
      box-shadow: none !important
    }

    .m-big-search-button {
      height: 45px;
      line-height: 47px;
      padding: 0 24px;
      margin-top: 20px
    }

    .m-big-search {
      position: relative;
      width: 90%;
      margin: 20px auto 0
    }

    @media only screen and (min-width:600px) {
      .m-big-search {
        padding-right: 160px;
        width: 80%
      }

      .m-big-search-button {
        margin-top: 0
      }

      .m-big-search .m-big-search-button {
        position: absolute;
        top: 0;
        right: 0
      }
    }

    .m-big-search-button .btn-large i {
      margin-left: 10px
    }

    .m-big-search-divider {
      clear: both
    }

    .m-big-genres {
      margin-top: 20px;
      font-size: 16px;
      font-weight: 500
    }

    .m-big-genres .row {
      margin-bottom: -10px
    }

    .m-big-genres .col {
      margin-bottom: 10px
    }

    nav .dropdown-content li.active,
    nav .dropdown-content li:hover,
    nav ul li.active,
    nav ul li:hover {
      background-color: rgba(232, 245, 233, .5)
    }

    .m-new-episodes {
      background: #fff;
      border: 0
    }

    .card .m-new-episodes__description {
      padding-bottom: 10px
    }

    .m-new-episodes__empty {
      margin-top: -10px;
      padding: 0 20px 10px 24px;
      font-size: 20px
    }

    .m-new-episodes .empty {
      display: block
    }

    .m-new-episodes .col {
      float: none;
      display: inline-block;
      vertical-align: top
    }

    .m-new-episodes .row {
      margin: 10px -4px
    }

    .m-new-episode .line-1 {
      font-size: 18px;
      margin: 0
    }

    .m-new-episode .line-2 {
      font-size: 16px
    }

    .m-new-episode.collection-item {
      border: 0
    }

    .m-new-episode.collection-item.avatar .circle {
      width: 70px;
      height: 70px;
      background-size: cover;
      background-position: center
    }

    .collection.with-header .m-new-episode.collection-item.avatar {
      padding-left: 102px
    }

    @media only screen and (min-width:1450px) {
      .row .col.x1 {
        width: 8.33333%;
        margin-left: 0
      }

      .row .col.x2,
      .row .col.x3 {
        width: 16.66667%;
        margin-left: 0
      }

      .row .col.x3 {
        width: 25%
      }

      .row .col.x4,
      .row .col.x5 {
        width: 33.33333%;
        margin-left: 0
      }

      .row .col.x5 {
        width: 41.66667%
      }

      .row .col.x6,
      .row .col.x7 {
        width: 50%;
        margin-left: 0
      }

      .row .col.x7 {
        width: 58.33333%
      }

      .row .col.x8,
      .row .col.x9 {
        width: 66.66667%;
        margin-left: 0
      }

      .row .col.x9 {
        width: 75%
      }

      .row .col.x10 {
        width: 83.33333%;
        margin-left: 0
      }

      .row .col.x11 {
        width: 91.66667%;
        margin-left: 0
      }

      .row .col.x12 {
        width: 100%;
        margin-left: 0
      }

      .row .col.offset-x1 {
        margin-left: 8.33333%
      }

      .row .col.offset-x2 {
        margin-left: 16.66667%
      }

      .row .col.offset-x3 {
        margin-left: 25%
      }

      .row .col.offset-x4 {
        margin-left: 33.33333%
      }

      .row .col.offset-x5 {
        margin-left: 41.66667%
      }

      .row .col.offset-x6 {
        margin-left: 50%
      }

      .row .col.offset-x7 {
        margin-left: 58.33333%
      }

      .row .col.offset-x8 {
        margin-left: 66.66667%
      }

      .row .col.offset-x9 {
        margin-left: 75%
      }

      .row .col.offset-x10 {
        margin-left: 83.33333%
      }

      .row .col.offset-x11 {
        margin-left: 91.66667%
      }

      .row .col.offset-x12 {
        margin-left: 100%
      }
    }

    .h1,
    .h2,
    .h3,
    .h4,
    .h5,
    .h6,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-weight: 300
    }

    .m-catalog-list .col {
      float: none;
      display: inline-block;
      vertical-align: top
    }

    .m-catalog-item {
      overflow: hidden;
      position: static
    }

    .m-catalog-item__poster {
      display: block;
      line-height: 0;
      overflow: hidden;
      width: 100%
    }

    .m-catalog-item_small .card-content {
      padding-bottom: 15px
    }

    .m-catalog-item_small .m-catalog-item__poster .a,
    .m-catalog-item_small .m-catalog-item__poster a {
      min-height: 100px;
      max-height: 25vw
    }

    .m-catalog-item__poster .a,
    .m-catalog-item__poster a {
      line-height: 0;
      display: block;
      overflow: hidden;
      margin: -3px;
      background-size: 100%;
      background-position: center;
      background-repeat: no-repeat
    }

    .m-catalog-item__poster img {
      width: 100%;
      opacity: 0;
      min-height: 10px
    }

    .m-catalog-item .line-1 {
      font-weight: 300;
      margin: 0;
      font-size: 28px
    }

    .m-catalog-item_small .line-1 {
      font-size: 18px
    }

    .m-catalog-item .line-2 {
      margin-top: 5px;
      font-size: 20px;
      font-weight: 300
    }

    .m-catalog-item_small .line-2 {
      font-size: 16px;
      margin-bottom: 0
    }

    .m-catalog-item_small .line-1 a,
    .m-catalog-item_small .line-2 a {
      display: block;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis
    }

    .icon {
      overflow: visible !important
    }

    .m-genres-list {
      margin: 20px 0 10px
    }

    .m-genres-list__item {
      font-size: 14px;
      height: 34px;
      margin: 0 10px 10px 0;
      letter-spacing: normal
    }

    .m-genres-list__item i.left {
      margin-right: 12px
    }

    .m-genres-list__item i.left.icon-dementia {
      width: 21px
    }

    .m-genres-icons {
      margin-right: -10px
    }

    .m-catalog-item_small .m-genres-icons {
      margin-top: 10px;
      margin-bottom: 10px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: clip
    }

    .m-genres-icons__item {
      display: inline-block;
      vertical-align: top;
      margin-right: 10px;
      line-height: 100%;
      font-size: 27px
    }

    .m-catalog-item__more-links {
      margin-top: 20px
    }

    .m-catalog-item__more,
    .m-catalog-item__more-2 {
      margin-bottom: 10px
    }

    .m-catalog-item__more-2 {
      margin-right: 20px
    }

    @media only screen and (max-width:600px) {

      .m-catalog-item_small .m-catalog-item__poster .a,
      .m-catalog-item_small .m-catalog-item__poster a {
        max-height: 200px
      }
    }

    @media only screen and (min-width:993px) and (max-width:1200px) {
      .m-genres-icons__item {
        font-size: 22px
      }
    }

    @media only screen and (min-width:1401px) {

      .m-catalog-item_small .m-catalog-item__poster .a,
      .m-catalog-item_small .m-catalog-item__poster a {
        max-height: 380px
      }
    }

    @media only screen and (min-width:601px) {
      .row .col.m-catalog-item__right {
        padding-left: 30px
      }
    }

    .description-sep {
      height: 5px
    }

    .m-catalog-view .line-1,
    .m-translation-view .line-1 {
      font-weight: 300;
      font-size: 32px;
      margin: 0
    }

    .m-catalog-view .line-2,
    .m-translation-view .line-2 {
      font-weight: 300;
      color: #bdbdbd;
      font-size: 24px;
      margin: 5px 0 0
    }

    .m-catalog-view .m-genres-list,
    .m-episode-list .row,
    .m-translation-view .m-genres-list {
      margin-bottom: 0
    }

    .m-description-source {
      float: right;
      color: #e0e0e0;
      margin-top: 8px;
      margin-bottom: 12px
    }

    .m-connections-list h3,
    .m-description-item h3,
    .m-episode-list h3 {
      margin-top: 0
    }

    .m-episode-list h3 {
      margin-bottom: 20px
    }

    .m-episode-item {
      width: 100%;
      margin-bottom: 15px;
      padding-left: 20px;
      padding-right: 20px
    }

    .m-episode-item i.left {
      margin-right: 3px
    }

    @media only screen and (min-width:993px) {
      .row .col.l9.col-even {
        width: 76%
      }

      .row .col.l3.col-even {
        width: 24%
      }
    }

    .m-catalog-view-right-divider {
      margin: 0 -20px 20px
    }

    .m-small-title {
      font-weight: 300;
      font-size: 18px;
      margin-bottom: 5px
    }

    .m-minor-titles-list {
      color: #9e9e9e;
      font-size: 12px
    }

    .m-catalog-view-links,
    .m-select-translation-variant ul {
      margin-top: 0;
      margin-bottom: 0
    }

    .m-black-box {
      cursor: pointer;
      overflow: hidden
    }

    .m-black-box:focus,
    .m-black-box:hover {
      background: #424242 !important
    }

    .m-black-box .valign-wrapper {
      height: 100px
    }

    .m-black-box .valign {
      margin: 0 auto
    }

    .m-black-more-comments-p {
      margin-top: -10px
    }

    .m-black-box-button {
      font-size: 32px;
      line-height: 6rem;
      font-weight: 300
    }

    @media only screen and (min-width:100px) {
      .online-h {
        display: none
      }
    }

    @media only screen and (max-width:740px) {
      .m-black-box-button {
        font-size: 26px;
        line-height: 4rem
      }

      .m-black-box i.large {
        font-size: 4rem
      }
    }

    @media only screen and (max-width:460px) {
      .m-black-box-button {
        font-size: 22px;
        line-height: 3rem
      }

      .m-black-box i.large {
        font-size: 3rem;
        width: 3rem;
        overflow: hidden;
        height: 3rem
      }
    }

    .m-translation-player {
      line-height: 0;
      border-radius: 3px
    }

    .m-translation-player .video-container {
      background: #000;
      padding-bottom: 62%
    }

    .m-translation-player .video-container iframe {
      width: 0;
      min-width: 100%;
      max-width: 100%;
      height: 0;
      max-height: 100%;
      min-height: 100%
    }

    .m-moment-view-title h2,
    .m-translation-view-title h2 {
      font-size: 28px;
      margin: 0
    }

    .m-translation-view-title h3 {
      font-size: 20px;
      margin: 10px 0 0
    }

    .m-comments-invite-link button,
    .m-translation-view-small-series-link {
      margin-top: 10px
    }

    .m-embed-code-link {
      margin-top: 20px;
      display: inline-block;
      border-bottom: 1px dotted #039be5
    }

    .m-embed-code-link:focus,
    .m-embed-code-link:hover {
      border-bottom: 1px dotted #01579b
    }

    .m-embed-code textarea {
      margin-top: 10px;
      width: 500px;
      height: 50px !important
    }

    .m-select-translation-type .btn {
      width: 100%;
      margin-bottom: 10px
    }

    .m-select-translation-type .btn.active {
      background-color: #ff6d00 !important
    }

    .m-select-translation-type .btn.active:hover {
      background-color: #ff7c1a !important
    }

    .m-select-sibling-episode {
      text-align: center;
      margin-bottom: 20px
    }

    @media only screen and (min-width:993px) {
      .m-select-sibling-episode {
        float: right;
        margin-bottom: 0
      }
    }

    .m-select-sibling-episode .btn {
      margin-left: 10px
    }

    .m-select-sibling-episode .btn i.left {
      margin-right: 2px
    }

    .m-select-sibling-episode .btn i.right {
      margin-left: 2px
    }

    .m-select-translation-variant .m-small-title {
      margin-bottom: 5px
    }

    .m-select-translation-variant .inactive {
      color: #bdbdbd
    }

    .m-select-translation-variant .current {
      color: #ff6d00
    }

    .m-select-translation-list .row {
      margin-bottom: 0
    }

    .m-select-translation-variant a {
      padding-right: 20px
    }

    .m-select-translation-list h3 {
      margin-top: 0;
      margin-bottom: 20px
    }

    .m-moment-view-meta h1,
    .m-translation-view-meta h1 {
      font-size: 18px;
      margin-top: 0;
      margin-bottom: 10px
    }

    .m-translation-sources-links .download {
      color: #ff6d00
    }

    .m-main-bottom h1 {
      font-size: 28px;
      margin-top: 0
    }

    .pagination {
      text-align: center;
      padding: 5px
    }

    .pager {
      overflow: hidden
    }

    .pagination .hidden {
      display: none
    }

    .pagination li {
      float: none;
      display: inline-block;
      vertical-align: top;
      margin-right: -2px;
      padding: 0;
      height: 30px
    }

    .pagination li a {
      padding: 0 10px;
      line-height: 30px;
      display: inline-block;
      height: 30px
    }

    .pagination li i {
      float: left;
      font-size: 2rem
    }

    .m-page-title {
      font-size: 38px;
      margin-top: 0;
      margin-bottom: 10px
    }

    .no-margin {
      margin: 0 !important
    }

    .no-margin-top {
      margin-top: 0 !important
    }

    .no-margin-right {
      margin-right: 0 !important
    }

    .no-margin-bottom {
      margin-bottom: 0 !important
    }

    .no-margin-left {
      margin-left: 0 !important
    }

    .margin-bottom {
      margin-bottom: 20px
    }

    .margin-top {
      margin-top: 20px
    }

    .checkbox-margin {
      margin-top: 25px
    }

    .card-header {
      margin: 0 -20px;
      border-bottom: 1px solid #e0e0e0;
      padding: 0 20px 20px
    }

    .m-catalog-search h1 {
      font-size: 2.28rem;
      line-height: 110%;
      margin: 1.14rem 0 .912rem
    }

    .m-series-score {
      float: right;
      text-align: right;
      padding: 0 0 10px 10px
    }

    .m-catalog-item_small .m-series-score,
    md-autocomplete[md-floating-label] md-input-container {
      padding: 0
    }

    .m-catalog-item_small .m-series-score__value {
      line-height: 100%
    }

    .hide-on-med-and-up.m-series-score {
      float: none;
      text-align: left;
      padding: 0;
      margin-top: 10px
    }

    .m-catalog-item .hide-on-med-and-up.m-series-score,
    .m-main-bottom h1 {
      margin-bottom: 10px
    }

    .m-series-score__title {
      font-size: 13px
    }

    .hide-on-med-and-up.m-series-score .m-series-score__title {
      font-size: 14px
    }

    .m-series-score__value {
      font-weight: 300;
      font-size: 24px
    }

    .m-series-score__value i {
      margin-top: -1px;
      margin-left: 3px;
      vertical-align: top;
      display: inline-block
    }

    .hide-on-med-and-up.m-series-score .m-series-score__value {
      font-size: 24px
    }

    .m-translation-back-links a {
      width: 100%;
      margin-bottom: 15px
    }

    .m-translation-back-links a:last-child {
      margin-bottom: 0
    }

    .m-alert ul,
    .m-footer-genres .m-footer-genres-title.row {
      margin-bottom: 0
    }

    .m-footer-genres .col {
      margin-bottom: 5px
    }

    .m-footer-genres a {
      color: #fff
    }

    .input-field input:-webkit-autofill,
    select:-webkit-autofill,
    textarea:-webkit-autofill {
      margin-top: 10px
    }

    .flash {
      padding: 10px;
      margin-bottom: 20px;
      color: #fff;
      background-color: #26a69a;
      border-radius: 2px
    }

    .flash-error {
      background-color: #b71c1c
    }

    .m-translation-view-download .btn {
      margin-right: 10px;
      margin-bottom: 15px
    }

    .card .card-content p,
    .m-comments.collection .collection-item.avatar p,
    .m-comments.collection p {
      margin-bottom: 15px
    }

    .m-translation-view-download h3 {
      margin-top: 0
    }

    .m-comments {
      background: #fff;
      margin: .5rem 0 1rem;
      border: 0;
      overflow-wrap: anywhere
    }

    .collection .collection-item.m-comment {
      border-bottom: 1px solid #e0e0e0;
      padding: 20px;
      min-height: 110px
    }

    .collection .collection-item.m-comment.m-comment-deleted {
      background-color: #fdeeee
    }

    .m-comments.collection.with-header .collection-item {
      padding-left: 20px
    }

    .m-comment,
    .m-comment-body {
      overflow: hidden
    }

    .m-comment.collection-item.avatar .circle {
      width: 70px;
      height: 70px;
      background-size: cover;
      background-position: center;
      left: 20px
    }

    .m-comment.m-comment-new.collection-item.avatar .circle {
      margin-top: 57px
    }

    .m-comment.m-comment-new.m-comment-new-long-description.collection-item.avatar .circle {
      margin-top: 110px
    }

    .m-comment.m-comment-new.m-comment-new-long-description-2.collection-item.avatar .circle {
      margin-top: 85px
    }

    .m-report-comment {
      padding-left: 2px
    }

    .m-report-comment i {
      vertical-align: -3px;
      font-size: 18px;
      max-width: 18px
    }

    @media only screen and (max-width:600px) {
      .m-comment.m-comment-new.collection-item.avatar .circle {
        display: none
      }

      .collection.with-header .m-comment.m-comment-new.collection-item.avatar {
        padding-left: 20px
      }

      .m-comment.collection-item.avatar .circle {
        float: left;
        position: static;
        margin-right: 15px
      }

      .m-comment-body {
        margin-top: 15px
      }

      .collection.with-header .m-comment.collection-item.avatar {
        padding-left: 20px !important
      }

      .m-comment-meta-bottom {
        color: #bdbdbd
      }
    }

    .collection.with-header .m-comment.collection-item.avatar {
      padding-left: 110px;
      padding-right: 30px
    }

    #m-comment-form .errorMessage {
      margin-top: 10px;
      color: #ef5350
    }

    .m-comment-meta {
      margin-bottom: 10px
    }

    .m-comment-meta .right {
      text-align: right
    }

    .m-comment-author-name {
      font-weight: 300;
      font-size: 18px;
      color: #000;
      display: inline-block
    }

    .m-comment-author-name-moderator a {
      color: #65a769
    }

    .m-comment-episode,
    a.m-comment-date {
      color: #bdbdbd
    }

    .m-comment-new .input-field textarea.materialize-textarea {
      padding-top: 10px;
      margin-bottom: 0
    }

    #vk_group,
    #vk_group iframe {
      width: 100% !important
    }

    .m-left-vk-group .m-small-title {
      margin-bottom: 10px
    }

    .m-clear-both {
      clear: both
    }

    .m-check-translations-table {
      max-width: 900px
    }

    table.striped td,
    table.striped th {
      padding: 15px
    }

    .m-check-translations-submit-p {
      text-align: center
    }

    #moments-filter-form,
    .m-check-translations-submit {
      margin-top: 30px
    }

    [type=checkbox].red.filled-in:checked+label:after {
      border: 2px solid #f44336;
      background-color: #f44336;
      z-index: 0
    }

    .m-group-pop-box,
    .m-pop-box {
      position: fixed;
      bottom: 0;
      left: 0;
      background: #fff;
      padding: 20px;
      z-index: 99999
    }

    .m-pop-box .m-last-line {
      margin-top: 20px
    }

    .m-pop-box-both {
      right: 0;
      text-align: center
    }

    .m-pop-box-right {
      left: auto;
      right: 0
    }

    .m-group-pop-box-with-image {
      height: 260px
    }

    .m-group-pop-box-title {
      font-weight: 300;
      font-size: 20px;
      line-height: 110%;
      margin-bottom: 20px;
      text-align: center
    }

    .m-group-pop-box-subscribe-p {
      width: 162px;
      overflow: hidden;
      margin: 0 auto;
      border: 3px solid #ff4764
    }

    .m-group-pop-box-subscribe {
      width: 430px;
      margin-left: -222px;
      min-height: 22px;
      margin-top: -2px
    }

    .m-group-pop-box-subscribe #vk_subscribe,
    .mini-vk-subscribe #vk_subscribe {
      position: relative;
      z-index: 3
    }

    .m-group-pop-box-subscribe-text {
      width: 159px;
      margin-left: 222px;
      position: absolute;
      text-align: center;
      font-size: 12px;
      line-height: 24px
    }

    .m-group-pop-box-hide-p {
      position: absolute;
      right: 20px;
      bottom: 20px
    }

    .m-pop-box-hide-p {
      position: absolute;
      top: 20px;
      right: 20px
    }

    .m-group-pop-box-hide-p a,
    .m-pop-box-hide-p a {
      color: #bdbdbd;
      font-size: 14px
    }

    .m-group-pop-box-image {
      position: absolute;
      left: 105px;
      bottom: -50px
    }

    body .b-box-fix a {
      font-family: "Roboto", sans-serif
    }

    .b-box-fix {
      overflow-y: visible;
      text-align: center
    }

    .b-box-fix-replace {
      display: none
    }

    .b-box-fix * {
      box-sizing: content-box
    }

    [ng-class] {
      font-size: 16px
    }

    [ng-class] *,
    [ng-class] :after,
    [ng-class] :before,
    [ng-controller] *,
    [ng-controller] :after,
    [ng-controller] :before {
      box-sizing: content-box
    }

    label.ng-binding {
      font-size: 100%
    }

    .m-series-search-input li {
      padding: 4px 0;
      height: 48px;
      border-bottom: 1px solid #e0e0e0
    }

    .m-series-search-input .col-left {
      width: 99px
    }

    .m-series-search-input .col-right {
      float: none;
      line-height: 24px
    }

    .m-series-search-input .m-poster {
      background: no-repeat center top;
      background-size: cover;
      height: 48px;
      overflow: hidden
    }

    md-autocomplete[md-floating-label] md-autocomplete-wrap {
      margin-bottom: -36px
    }

    md-autocomplete md-autocomplete-wrap md-progress-linear.md-inline {
      bottom: 42px;
      left: 2px;
      overflow: hidden;
      right: -2px;
      height: 2px
    }

    md-input-container .md-input {
      padding: 0 0 1px !important;
      height: 2.76rem !important
    }

    md-input-container .md-placeholder,
    md-input-container label:not(.md-no-float):not(.md-container-ignore) {
      padding-left: 0
    }

    .m-series-search-input-not-selected {
      color: #f44336;
      font-size: 12px
    }

    #torrents-grid table,
    #translations-grid table {
      table-layout: fixed
    }

    .grid-view-loading {
      background: url(../images/loading.gif) no-repeat
    }

    .grid-view {
      word-wrap: break-word
    }

    .grid-view [type=checkbox]+label {
      margin-top: 8px
    }

    .grid-view tbody .checkbox-column,
    md-switch ._md-container {
      cursor: pointer
    }

    .grid-view tbody .checkbox-column [type=checkbox]+label {
      pointer-events: none
    }

    .grid-view tr.selected {
      background-color: #b9f6ca !important
    }

    .grid-view input[type=text] {
      width: 100%
    }

    .m-offs h3 {
      text-align: left;
      margin-top: 0;
      margin-bottom: 20px
    }

    .m-off .m-off-title {
      margin-top: 5px
    }

    .m-off img {
      max-width: 100%
    }

    .m-code-textarea {
      font-family: Consolas, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New
    }

    .m-custom-tabs {
      display: flex;
      position: relative;
      overflow-x: auto;
      overflow-y: hidden;
      height: 48px;
      background-color: #fff;
      margin: 0 auto;
      width: 100%;
      white-space: nowrap
    }

    .m-custom-tabs__tab,
    .m-custom-tabs__tab a {
      display: block;
      text-overflow: ellipsis;
      overflow: hidden
    }

    .m-custom-tabs__tab {
      -webkit-box-flex: 1;
      -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
      flex-grow: 1;
      float: left;
      text-align: center;
      line-height: 48px;
      padding: 0 !important;
      margin: 0;
      text-transform: uppercase;
      letter-spacing: .8px;
      min-width: 80px;
      height: 48px;
      width: 15%
    }

    .m-custom-tabs__tab a {
      color: #1b5e20;
      width: 100%;
      height: 100%;
      padding: 0 10px;
      transition: color .28s ease
    }

    .m-custom-tabs__tab a:hover {
      color: #4caf50
    }

    .m-custom-tabs__tab_active {
      border-bottom: 2px solid #1b5e20
    }

    .m-custom-tabs__tab_type_watching {
      min-width: 90px
    }

    .m-custom-tabs__tab_type_completed {
      min-width: 140px
    }

    .m-custom-tabs__tab_type_onhold {
      min-width: 110px
    }

    .m-custom-tabs__tab_type_dropped {
      min-width: 100px
    }

    @media only screen and (min-width:1060px) {
      .m-custom-tabs__tab_type_planned {
        min-width: 165px
      }
    }

    .m-animelist-type-select span.caret {
      right: 10px
    }

    .m-animelist-type-select input {
      border-bottom: 0 !important;
      padding: 0 0 0 10px !important;
      margin: 0 !important
    }

    .m-animelist-item-edit,
    .m-animelist-item_active {
      background: 0 0 !important
    }

    .m-animelist-item-edit {
      padding: 0;
      margin: 0
    }

    .m-animelist-item-edit td {
      padding: 0;
      margin: 0
    }

    .m-animelist-item-edit form {
      padding: 0 35px 10px
    }

    .m-animelist-table {
      table-layout: fixed
    }

    .m-animelist-table thead .col {
      float: none;
      padding: 15px 5px;
      overflow: hidden;
      text-overflow: ellipsis
    }

    .m-animelist-number-header {
      width: 35px
    }

    .m-animelist-table thead .col.s0 {
      width: 0
    }

    .m-animelist-item-edit__cancel-btn,
    .m-connections-list li li {
      margin-left: 10px
    }

    .input-field .select-wrapper+label.active:after {
      transform: translateY(0%)
    }

    .input-field .select-wrapper.invalid+label:after {
      content: attr(data-error);
      color: #f44336;
      opacity: 1
    }

    .input-field .select-wrapper+label:after {
      display: block;
      content: "";
      position: absolute;
      top: 91px;
      opacity: 0;
      transition: .2s opacity ease-out, .2s color ease-out, .2s transform ease-out;
      font-size: .8rem;
      transform: translateY(-140%)
    }

    .positionRelative {
      position: relative
    }

    .input-field-group,
    .input-field-single-checkbox {
      position: relative;
      margin-top: 1rem
    }

    .input-field-single-checkbox input[type=checkbox]+label {
      margin-top: 11px
    }

    .errorMessage {
      color: #f44336;
      font-size: .8rem;
      box-sizing: inherit
    }

    .input-field-single-checkbox .errorMessage {
      position: absolute;
      top: 52px
    }

    .input-field-group .errorMessage {
      margin-left: 6px;
      display: inline-block
    }

    .btn-floating.sortable-handle i {
      font-size: 1.5rem;
      line-height: 28px;
      margin-left: 0;
      margin-top: 5px
    }

    .tabs-contents-wrapper {
      position: relative
    }

    .tabs-content {
      display: none
    }

    [type=checkbox]+label {
      line-height: 22px
    }

    .m-connections-list ul {
      margin: 0
    }

    .m-connections-list__item_current>a {
      font-weight: 700
    }

    .progress-loading-bottom,
    .progress-loading-top {
      position: relative
    }

    .progress-loading-bottom .progress,
    .progress-loading-top .progress {
      margin: 0;
      position: absolute;
      z-index: 100;
      left: 0;
      right: 0
    }

    .progress-loading-top .progress {
      top: 0
    }

    .progress-loading-bottom .progress {
      bottom: -1px
    }

    .btn.progress-loading-bottom .progress,
    nav a.progress-loading-bottom .progress {
      bottom: 0
    }

    body.dynpage-loading>.dynpage-progress {
      margin: 0;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 1000
    }

    .toast.error {
      background-color: red
    }

    .list-view .load-more,
    .list-view .load-prev {
      display: block;
      width: 250px;
      text-align: center;
      margin-left: auto;
      margin-right: auto
    }

    .list-view .load-prev {
      margin-bottom: 13px
    }

    .load-more-progress,
    .load-prev-progress {
      text-align: center
    }

    .mini-pager {
      position: fixed;
      right: 0;
      margin-right: .5rem;
      top: 0;
      z-index: 100
    }

    .mini-pager .pagination {
      margin: 5px;
      width: auto
    }

    .mini-pager li {
      display: block;
      min-width: 41px
    }

    @media only screen and (max-width:600px) {
      .mini-pager li {
        min-width: 35px
      }
    }

    li.mini-pager-load-first a,
    li.mini-pager-load-next a,
    li.mini-pager-load-prev a {
      padding: 0
    }

    .mini-pager .pagination li.disabled a {
      opacity: .3
    }

    @media only screen and (max-width:992px) {
      .mini-pager li {
        display: inline-block
      }

      .mini-pager {
        position: fixed;
        bottom: 0;
        top: auto
      }
    }

    .m-studios-list_item {
      display: block
    }

    .m-studios-list .m-studios-list_item:first-of-type img {
      margin-top: 0
    }

    .m-studios-list_item img {
      margin-top: 10px;
      max-width: 100%
    }

    .m-ajax-okay {
      position: absolute;
      right: 14px
    }

    .m-filling-button {
      width: 100%;
      padding-right: 10px;
      padding-left: 10px
    }

    .m-alert {
      background-color: #388e3c
    }

    .m-alert,
    .m-alert-error,
    .m-alert-notice,
    .m-alert-success {
      transition: box-shadow .25s;
      padding: 20px;
      margin: .5rem 0 1rem;
      border-radius: 2px;
      box-shadow: 0 2px 5px 0 rgba(0, 0, 0, .16), 0 2px 10px 0 rgba(0, 0, 0, .12);
      color: #fff
    }

    .m-alert-success {
      background-color: #388e3c
    }

    .m-alert-error {
      background-color: #ef5350
    }

    .m-alert-error ul {
      margin-bottom: 0
    }

    .m-alert a,
    .m-alert-error a,
    .m-alert-notice a,
    .m-alert-success a {
      color: #fff !important;
      text-decoration: underline
    }

    .m-alert a.btn,
    .m-alert-error a.btn,
    .m-alert-notice a.btn,
    .m-alert-success a.btn {
      text-decoration: none
    }

    .m-alert-notice {
      background-color: #ff9800
    }

    .m-select-view {
      margin-top: 29px;
      line-height: 32px
    }

    .m-select-view a {
      color: #9e9e9e
    }

    .m-select-view a.active {
      color: #1b5e20
    }

    .m-select-view a:hover {
      color: #039be5
    }

    .m-select-view a i {
      font-size: 32px;
      vertical-align: top
    }

    a.m-select-view__posters i {
      font-size: 36px;
      line-height: 34px
    }

    @media only screen and (max-width:400px) {
      .m-select-view__label {
        display: none
      }
    }

    .card .card-content.m-index-top {
      padding-bottom: 10px
    }

    .m-index-top__also-title {
      margin: 0 10px 0 0;
      line-height: 36px
    }

    .m-index-top .btn {
      margin-right: 10px;
      margin-bottom: 10px
    }

    .m-index-top__also-title,
    .m-index-top__line {
      display: inline-block;
      vertical-align: top
    }

    .notifications-list {
      overflow: hidden
    }

    .notifications-list .items {
      display: flex;
      flex-wrap: wrap;
      margin: -.5rem -.75rem
    }

    .notifications-item {
      display: flex;
      width: calc(50% - 1.5rem);
      min-height: 130px;
      margin: .5rem .75rem
    }

    .notifications-item__image {
      display: flex;
      flex: 1
    }

    .notifications-item__image a {
      display: block;
      vertical-align: top;
      width: 100%;
      overflow: hidden;
      background-position: 50% 65%;
      background-repeat: no-repeat;
      background-size: cover
    }

    .notifications-item__image img {
      display: none
    }

    .notifications-item .card-content {
      flex: 3
    }

    .notifications-list__enable-wrapper {
      padding-top: 12px !important
    }

    @media only screen and (max-width:490px) {
      .notifications-list__enable-wrapper {
        padding-top: 0 !important;
        padding-bottom: 10px !important
      }

      .notifications-item {
        width: 100%
      }
    }

    .about-page h3 {
      margin-top: 1.4rem
    }

    .about-features__item {
      display: inline-block;
      float: none !important;
      vertical-align: top
    }

    @media only screen and (min-width:993px) {
      .about-features__item {
        width: 20% !important
      }
    }

    .mini-vk-subscribe {
      width: 200px;
      overflow: hidden;
      border: 3px solid #ff4764
    }

    .mini-vk-subscribe__inner {
      width: 430px;
      margin-left: -227px;
      min-height: 22px;
      margin-top: -2px
    }

    .mini-vk-subscribe__text {
      width: 200px;
      margin-left: 227px;
      position: absolute;
      text-align: center;
      font-size: 12px;
      line-height: 24px
    }

    .m-check-confirm-table__button {
      margin-bottom: 10px;
      margin-right: 10px;
      min-width: 240px
    }

    .m-translation-view__share .ya-share2 {
      display: inline-block;
      vertical-align: top
    }

    .ya-share2__item {
      font-family: "Roboto", sans-serif !important
    }

    .m-embed-moments-list-wrapper,
    .m-user-moments-list-wrapper {
      background-color: #fff
    }

    .m-embed-moments-list-wrapper .card-content.empty-msg,
    .m-user-moments-list-wrapper .card-content.empty-msg {
      padding: 10px
    }

    .m-moments-list-card.row>.col,
    .m-moments-list-card>.row>.col {
      float: none;
      display: inline-block;
      vertical-align: top
    }

    .container .m-embed-moments-list-wrapper .row {
      margin: 0
    }

    .container .m-embed-moments-list-wrapper .row.m-moments-list-card,
    .container .m-user-moments-list-wrapper .row.m-moments-list-card {
      margin: 0;
      padding: 10px
    }

    .m-moments-list-line .m-moment {
      margin-bottom: 5px;
      position: relative
    }

    .m-moments-list-card .m-moment__bottom {
      position: relative
    }

    .m-moment__card {
      margin: 0 0 1rem
    }

    .m-moment__menu {
      position: absolute;
      right: 0;
      top: 0;
      transition: all .4s ease
    }

    .m-moment .m-moment__menu {
      opacity: 0
    }

    .m-moment:hover .m-moment__menu {
      opacity: 1
    }

    @media only screen and (max-width:992px) {
      .m-moment .m-moment__menu {
        opacity: 1
      }
    }

    .m-moments-list-card .m-moment__menu {
      top: 8px
    }

    .m-moments-list-line .m-moment__left {
      float: left;
      width: 220px;
      margin-right: 8px
    }

    .m-moments-list-line .m-moment__right {
      margin-left: 220px
    }

    .m-moments-list-line .m-moment__img {
      overflow: hidden;
      width: 100%;
      height: 110px
    }

    .m-moments-list-card .m-moment__img {
      overflow: hidden;
      width: 100%;
      height: 150px
    }

    .m-moments-list-card .m-moment__bottom {
      padding: 10px
    }

    .m-moments-list-line .m-moment__right {
      padding: 0 10px 10px
    }

    .m-moment__img {
      overflow: hidden;
      position: relative;
      display: block
    }

    .m-moment__img .m-moment__poster,
    .m-moment__img .m-moment__thumb {
      width: 100%;
      height: 100%;
      line-height: 0;
      display: block;
      overflow: hidden;
      margin: 0;
      background-position: center;
      background-repeat: no-repeat;
      background-size: cover;
      transition: all .4s ease;
      -webkit-transition: all .4s ease
    }

    .m-moments-list-card .m-moment__img .m-moment__thumb {
      background-position: top
    }

    .m-moment__play-button.material-icons {
      position: absolute;
      left: 50%;
      top: 50%;
      width: 100px;
      height: 100px;
      line-height: 100px;
      font-size: 5em;
      margin-left: -50px;
      margin-top: -50px;
      text-align: center;
      color: #ff9800
    }

    .m-moment__play-button {
      opacity: 0;
      transition: all .4s ease;
      -webkit-transition: all .4s ease
    }

    .m-moment__img:hover .m-moment__play-button {
      opacity: 1
    }

    .m-moment__img img {
      width: 100%;
      opacity: 0
    }

    .m-moment__thumb {
      position: absolute;
      top: 0
    }

    .m-moment__poster {
      position: absolute;
      top: 100%
    }

    @media only screen and (min-width:600px) {
      .m-moment__img:hover .m-moment__poster {
        top: 0
      }
    }

    .m-moment__author_avatar {
      width: 36px;
      height: 36px;
      margin-right: 5px;
      margin-top: 2px;
      margin-bottom: 2px;
      float: left;
      background-size: cover;
      background-position: center
    }

    .m-moments-list-card .m-moment__author,
    .m-moments-list-card .m-moment__episode {
      font-size: 90%
    }

    .m-moment__title-episode {
      height: 64px;
      margin-bottom: 6px;
      overflow: hidden
    }

    .m-moment__details {
      margin-top: 5px
    }

    .m-moments-list-card .m-moment__date {
      margin-right: 5px
    }

    .m-moments-list-card .m-moment__meta {
      font-size: 80%;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis
    }

    .m-moment__vert_divider {
      padding-left: 2px;
      padding-right: 2px
    }

    .card .card-image .card-title.m-moment__duration {
      padding: 6px;
      line-height: 16px;
      font-size: 16px;
      background: rgba(0, 0, 0, .75);
      right: 0;
      left: auto;
      margin-right: 5px;
      margin-bottom: 5px;
      border-radius: 2px
    }

    .m-moment-view .m-moment-author_avatar {
      width: 30px;
      height: 30px;
      margin: 0 5px 5px 0;
      float: left;
      background-size: cover;
      background-position: center
    }

    .m-moment-view .m-moment-author {
      line-height: 30px
    }

    .m-moment-player {
      line-height: 0;
      border-radius: 3px
    }

    .m-moment-player .video-container,
    .m-moment-player iframe {
      background: #000
    }

    .m-moment-player .video-container {
      padding-bottom: 62%
    }

    .m-moment-view-title h3 {
      font-size: 20px;
      margin: 10px 0 0
    }

    .m-moment-view-small-series-link {
      margin-top: 10px
    }

    .m-moment-view-download .btn {
      margin-right: 10px;
      margin-bottom: 15px
    }

    .m-moment-view-download h3 {
      margin-top: 0
    }

    .m-moments-list-card.owl-carousel .owl-item {
      padding-left: 1px;
      padding-right: 1px
    }

    .m-moments-list-card.slick-slider .slick-slide {
      margin-left: 10px;
      margin-right: 10px
    }

    .m-moments-list-horiz .slick-list {
      margin-left: -10px;
      width: calc(100% + 20px)
    }

    #aft-mt,
    .m-moments-list-card.slick-loading .slick-list {
      background: 0 0
    }

    .m-moments-list-card.slick-slider .slick-slide,
    .m-moments-list-card.slick-slider .slick-slide * {
      outline: 0 !important
    }

    .m-moments-list-card.slick-slider .slick-next:before,
    .m-moments-list-card.slick-slider .slick-prev:before {
      content: none
    }

    .m-moments-list-card.slick-slider .slick-arrow {
      position: absolute
    }

    .m-moments-list-card.slick-slider .slick-arrow i {
      font-size: 2.5rem;
      max-width: 2.5rem
    }

    .m-moments-list-card.slick-slider .slick-arrow.slick-disabled {
      display: none !important
    }

    .m-moments-list-card.slick-slider .slick-prev {
      left: 15px
    }

    .m-moments-list-card.slick-slider .slick-next {
      right: 15px
    }

    .m-moments-list-card.slick-slider {
      padding-left: 0;
      padding-right: 0
    }

    .m-moments-list-card.slick-dotted.slick-slider {
      margin-bottom: 25px
    }

    .m-moments-list-card.slick-slider .slick-dots {
      bottom: -24px
    }

    .m-moments-list-card.slick-slider .slick-dots li {
      margin: 0;
      width: 30px;
      height: 30px
    }

    .m-moments-list-card.slick-slider .slick-dots li button:before {
      font-family: 'Material Icons';
      text-rendering: optimizeLegibility;
      font-feature-settings: "liga" 1;
      content: '\e3Fa';
      font-size: 20px;
      color: #fff;
      opacity: 1 !important;
      text-shadow: 0 0 2px rgba(0, 0, 0, .3)
    }

    .m-moments-list-card.slick-slider .slick-dots li button:focus:before,
    .m-moments-list-card.slick-slider .slick-dots li button:hover:before {
      color: #eee
    }

    .m-moments-list-card.slick-slider .slick-dots li.slick-active button:before {
      color: #ff6d00
    }

    @media only screen and (max-width:600px) {
      .m-moments-list-card.slick-slider .slick-dots {
        display: none !important
      }
    }

    .slick-track {
      display: flex
    }

    .slick-slide.load-more-wrapper,
    .slick-slide.load-prev-wrapper {
      align-self: center
    }

    .slick-slide.load-more-wrapper .load-more {
      width: 100px
    }

    .m-moments-list-horiz {
      visibility: hidden;
      opacity: 0
    }

    .m-moments-list-horiz.slick-initialized {
      visibility: visible;
      opacity: 1
    }

    .m-moments-list-horiz .load-more-wrapper,
    .m-moments-list-horiz .m-moment.list-item {
      display: none
    }

    .m-moments-list-horiz .m-moment.list-item:nth-child(2) {
      display: block;
      visibility: hidden
    }

    .m-moments-list-horiz.slick-initialized .m-moment.list-item {
      display: block;
      visibility: visible !important
    }

    #moments-filter-form .input-field,
    #moments-filter-form .row {
      margin-bottom: 0;
      margin-top: 0
    }

    .m-float-right {
      float: right
    }

    .m-float-left {
      float: left
    }

    .collection-header-badge-right {
      float: right;
      margin-left: .8rem
    }

    .collection-header-badge-right a {
      background-color: #f0f0f0;
      border-radius: 4px;
      padding: 0 6px
    }

    .m-block-title {
      background: #ff9800;
      color: #fff;
      margin-top: 1.5rem
    }

    .m-block-title_small-margin-top {
      margin-top: .5rem
    }

    .m-block-title a {
      color: #fff;
      text-decoration: underline
    }

    .m-block-title a.btn {
      text-decoration: none;
      color: #212121;
      background-color: #fff
    }

    .m-block-title .card-content:after {
      content: "";
      display: table;
      clear: both
    }

    .m-block-title__left {
      float: left
    }

    .m-block-title__right {
      float: right
    }

    .m-block-title__left h3 {
      margin-top: 4px !important;
      margin-bottom: 6px
    }

    @media only screen and (max-width:600px) {

      .m-block-title__left,
      .m-block-title__right {
        float: none
      }
    }

    .qq-upload-fail .qq-upload-failed-text,
    .qq-upload-retrying .qq-upload-failed-text {
      display: inline
    }

    .qq-upload-button {
      display: inline;
      margin-bottom: 10px;
      float: left
    }

    .qq-uploader {
      position: relative;
      min-height: 200px;
      max-height: 490px;
      overflow-y: hidden;
      width: inherit;
      border-radius: 6px;
      background-color: #fdfdfd;
      border: 1px dashed #ccc;
      padding: 20px
    }

    .qq-uploader:before {
      content: attr(qq-drop-area-text) " ";
      position: absolute;
      font-size: 200%;
      left: 0;
      width: 100%;
      text-align: center;
      top: 45%;
      opacity: .25
    }

    .qq-upload-drop-area,
    .qq-upload-extra-drop-area {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      min-height: 30px;
      z-index: 2;
      background: #f9f9f9;
      border-radius: 4px;
      border: 1px dashed #ccc;
      text-align: center
    }

    .qq-upload-extra-drop-area {
      position: relative;
      margin-top: 50px;
      font-size: 16px;
      padding-top: 30px;
      height: 20px;
      min-height: 40px
    }

    .qq-upload-drop-area span {
      display: block;
      position: absolute;
      top: 50%;
      width: 100%;
      margin-top: -8px;
      font-size: 16px
    }

    .qq-upload-drop-area-active {
      background: #fdfdfd;
      border-radius: 4px;
      border: 1px dashed #ccc
    }

    .qq-upload-list {
      margin: 0;
      padding: 0;
      list-style: none;
      max-height: 450px;
      overflow-y: auto;
      box-shadow: 0 1px 0 rgba(15, 15, 50, .14);
      clear: both
    }

    .qq-upload-list li {
      margin: 0;
      padding: 9px;
      line-height: 15px;
      font-size: 16px;
      color: #424242;
      background-color: #f6f6f6;
      border-top: 1px solid #fff;
      border-bottom: 1px solid #ddd
    }

    .qq-upload-list li:first-child {
      border-top: none
    }

    .qq-upload-list li:last-child {
      border-bottom: none
    }

    .qq-upload-file,
    .qq-upload-spinner {
      margin-right: 12px
    }

    .qq-upload-cancel,
    .qq-upload-retry,
    .qq-upload-size {
      margin-right: 12px;
      display: inline
    }

    .qq-upload-failed-text {
      margin-right: 12px
    }

    .qq-upload-continue,
    .qq-upload-delete,
    .qq-upload-pause {
      margin-right: 12px;
      display: inline
    }

    .qq-upload-file {
      vertical-align: middle;
      display: inline-block;
      width: 300px;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow-x: hidden;
      height: 18px
    }

    .qq-upload-spinner {
      display: inline-block;
      background: url(/js/vendor/fine-uploader/loading.gif);
      width: 15px;
      height: 15px;
      vertical-align: text-bottom
    }

    .qq-drop-processing,
    .qq-uploader DIALOG[open] {
      display: block
    }

    .qq-drop-processing-spinner {
      display: inline-block;
      background: url(/js/vendor/fine-uploader/processing.gif);
      width: 24px;
      height: 24px;
      vertical-align: text-bottom
    }

    .qq-upload-cancel,
    .qq-upload-continue,
    .qq-upload-delete,
    .qq-upload-pause,
    .qq-upload-retry,
    .qq-upload-size {
      font-size: 12px;
      font-weight: 400;
      cursor: pointer;
      vertical-align: middle
    }

    .qq-upload-status-text {
      font-size: 14px;
      font-weight: 700;
      display: block
    }

    .qq-upload-failed-text {
      display: none;
      font-style: italic;
      font-weight: 700
    }

    .qq-upload-failed-icon {
      display: none;
      width: 15px;
      height: 15px;
      vertical-align: text-bottom
    }

    .qq-upload-list li.qq-upload-success {
      background-color: #ebf6e0;
      color: #424242;
      border-bottom: 1px solid #d3ded1;
      border-top: 1px solid #f7fff5
    }

    .qq-upload-list li.qq-upload-fail {
      background-color: #f5d7d7;
      color: #424242;
      border-bottom: 1px solid #decaca;
      border-top: 1px solid #fce6e6
    }

    .qq-progress-bar {
      display: block;
      background: #00abc7;
      width: 0%
    }

    .qq-total-progress-bar-container {
      margin-left: 9px;
      display: inline;
      width: 500px
    }

    INPUT.qq-edit-filename {
      position: absolute;
      opacity: 0;
      filter: alpha(opacity=0);
      z-index: -1;
      -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"
    }

    .qq-upload-file.qq-editable {
      cursor: pointer;
      margin-right: 4px
    }

    .qq-edit-filename-icon.qq-editable {
      display: inline-block;
      cursor: pointer
    }

    INPUT.qq-edit-filename.qq-editing {
      position: static;
      height: 28px;
      padding: 0 8px;
      margin-right: 10px;
      margin-bottom: -5px;
      border: 1px solid #ccc;
      border-radius: 2px;
      font-size: 16px;
      opacity: 1;
      filter: alpha(opacity=100);
      -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)"
    }

    .qq-edit-filename-icon {
      display: none;
      background: url(/js/vendor/fine-uploader/edit.gif);
      width: 15px;
      height: 15px;
      vertical-align: text-bottom;
      margin-right: 16px
    }

    .qq-thumbnail-selector {
      vertical-align: middle;
      margin-right: 12px
    }

    .qq-uploader DIALOG {
      display: none;
      border: 0
    }

    .qq-uploader DIALOG .qq-dialog-buttons {
      text-align: center;
      padding-top: 10px
    }

    .qq-uploader DIALOG .qq-dialog-buttons BUTTON {
      margin-left: 5px;
      margin-right: 5px
    }

    .qq-uploader DIALOG .qq-dialog-message-selector {
      padding-bottom: 10px
    }

    .qq-uploader DIALOG::backdrop {
      background-color: rgba(0, 0, 0, .7)
    }

    .qq-upload-button {
      width: auto
    }

    .qq-hide {
      display: none !important
    }

    .qq-total-progress-bar-container {
      float: none
    }

    .qq-progress-bar,
    .qq-total-progress-bar {
      height: auto;
      border-radius: 0;
      margin-bottom: 0
    }

    .tooltipped-native {
      display: -webkit-inline-flex;
      display: inline-flex;
      -webkit-justify-content: center;
      justify-content: center
    }

    .tooltipped-native:after {
      align-self: flex-end;
      opacity: 0;
      display: none;
      visibility: hidden;
      position: absolute;
      content: attr(data-tooltip);
      -webkit-transform: translateY(0);
      transform: translateY(0);
      white-space: nowrap;
      -webkit-transition: opacity .4s cubic-bezier(.64, .09, .08, 1), -webkit-transform .4s cubic-bezier(.64, .09, .08, 1);
      transition: opacity .4s cubic-bezier(.64, .09, .08, 1), transform .4s cubic-bezier(.64, .09, .08, 1);
      transition: opacity .4s cubic-bezier(.64, .09, .08, 1), transform .4s cubic-bezier(.64, .09, .08, 1), -webkit-transform .4s cubic-bezier(.64, .09, .08, 1);
      margin-top: 48px;
      padding: 10px 8px;
      font-size: 1rem;
      z-index: 2000;
      background-color: #323232;
      border-radius: 2px;
      color: #fff;
      min-height: 38px;
      line-height: 120%;
      text-align: center;
      overflow: hidden
    }

    .tooltipped-native:hover:after {
      display: block;
      opacity: 1;
      visibility: visible;
      -webkit-transform: translateY(0);
      transform: translateY(0)
    }

    #support-bonus {
      text-decoration: underline
    }

    #bonus-select button {
      margin-bottom: 10px;
      margin-right: 10px
    }

    .input-field .prefix {
      top: 7px
    }

    .pv-box-buttons .oplata-other-payment-types,
    .pv-box-buttons .oplata-select-duration-button {
      margin-left: 10px
    }

    #confirm-grid {
      overflow-wrap: anywhere
    }

    @media only screen and (max-width:992px) {
      .other-period-btn {
        margin-top: 10px
      }
    }
  </style>
  <style type="text/css">
    @charset "UTF-8";

    @font-face {
      font-family: "customicons";
      src: url(/font/customicons/customicons.eot?2);
      src: url(/font/customicons/customicons.eot?2#iefix) format("embedded-opentype"), url(/font/customicons/customicons.woff?2) format("woff"), url(/font/customicons/customicons.ttf?2) format("truetype"), url(/font/customicons/customicons.svg?2#customicons) format("svg");
      font-weight: 400;
      font-style: normal
    }

    [data-icon]:before {
      content: attr(data-icon)
    }

    [class*=" icon-"]:before,
    [class^=icon-]:before,
    [data-icon]:before {
      font-family: "customicons" !important;
      font-style: normal !important;
      font-weight: 400 !important;
      font-variant: normal !important;
      text-transform: none !important;
      speak: none;
      line-height: 1;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale
    }

    .icon-action:before {
      content: "\e000"
    }

    .icon-adventure:before {
      content: "\e001"
    }

    .icon-psychological:before {
      content: "\e002"
    }

    .icon-drama:before {
      content: "\e003"
    }

    .icon-demons:before {
      content: "\e004"
    }

    .icon-romance:before {
      content: "\e005"
    }

    .icon-yaoi:before {
      content: "\e006"
    }

    .icon-shoujo:before {
      content: "\e007"
    }

    .icon-ecchi-2:before {
      content: "\e008"
    }

    .icon-ecchi:before {
      content: "\e009"
    }

    .icon-comedy-2:before {
      content: "\e00a"
    }

    .icon-mecha:before {
      content: "\e00b"
    }

    .icon-psychological-2:before {
      content: "\e00c"
    }

    .icon-seinen:before {
      content: "\e00d"
    }

    .icon-super-power-2:before {
      content: "\e00e"
    }

    .icon-ninja-portrait:before {
      content: "\e00f"
    }

    .icon-music:before {
      content: "\e010"
    }

    .icon-music-2:before {
      content: "\e011"
    }

    .icon-martial-arts:before {
      content: "\e012"
    }

    .icon-hentai:before {
      content: "\e013"
    }

    .icon-magic:before {
      content: "\e014"
    }

    .icon-yuri:before {
      content: "\e015"
    }

    .icon-school:before {
      content: "\e016"
    }

    .icon-shounen:before {
      content: "\e017"
    }

    .icon-action-2:before {
      content: "\e018"
    }

    .icon-sports:before {
      content: "\e019"
    }

    .icon-cars:before {
      content: "\e01a"
    }

    .icon-super-power:before {
      content: "\e01b"
    }

    .icon-dementia:before {
      content: "\e01c"
    }

    .icon-military:before {
      content: "\e01d"
    }

    .icon-thriller:before {
      content: "\e01e"
    }

    .icon-parody:before {
      content: "\e01f"
    }

    .icon-josei:before {
      content: "\e020"
    }

    .icon-parody-2:before {
      content: "\e021"
    }

    .icon-fantasy:before {
      content: "\e022"
    }

    .icon-space:before {
      content: "\e023"
    }

    .icon-horror:before {
      content: "\e024"
    }

    .icon-mystery:before {
      content: "\e025"
    }

    .icon-sci-fi:before {
      content: "\e026"
    }

    .icon-historical:before {
      content: "\e027"
    }

    .icon-kids:before {
      content: "\e028"
    }

    .icon-supernatural:before {
      content: "\e029"
    }

    .icon-harem-2:before {
      content: "\e02a"
    }

    .icon-harem:before {
      content: "\e02b"
    }

    .icon-police:before {
      content: "\e02c"
    }

    .icon-samurai:before {
      content: "\e02d"
    }

    .icon-slice-of-life:before {
      content: "\e02e"
    }

    .icon-vampire:before {
      content: "\e02f"
    }

    .icon-fantasy-2:before {
      content: "\e030"
    }

    .icon-game:before {
      content: "\e031"
    }

    .icon-comedy:before {
      content: "\e032"
    }
  </style>
  <style type="text/css">
    /* fallback */
    @font-face {
      font-family: 'Material Icons';
      font-style: normal;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/materialicons/v142/flUhRq6tzZclQEJ-Vdg-IuiaDsNc.woff2) format('woff2');
    }

    .material-icons {
      font-family: 'Material Icons';
      font-weight: normal;
      font-style: normal;
      font-size: 24px;
      line-height: 1;
      letter-spacing: normal;
      text-transform: none;
      display: inline-block;
      white-space: nowrap;
      word-wrap: normal;
      direction: ltr;
      -webkit-font-feature-settings: 'liga';
      -webkit-font-smoothing: antialiased;
    }
  </style>
  <style type="text/css">
    /* cyrillic-ext */
    @font-face {
      font-family: 'Roboto';
      font-style: italic;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOkCnqEu92Fr1Mu51xFIzIFKw.woff2) format('woff2');
      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
    }

    /* cyrillic */
    @font-face {
      font-family: 'Roboto';
      font-style: italic;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOkCnqEu92Fr1Mu51xMIzIFKw.woff2) format('woff2');
      unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
    }

    /* greek-ext */
    @font-face {
      font-family: 'Roboto';
      font-style: italic;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOkCnqEu92Fr1Mu51xEIzIFKw.woff2) format('woff2');
      unicode-range: U+1F00-1FFF;
    }

    /* greek */
    @font-face {
      font-family: 'Roboto';
      font-style: italic;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOkCnqEu92Fr1Mu51xLIzIFKw.woff2) format('woff2');
      unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;
    }

    /* vietnamese */
    @font-face {
      font-family: 'Roboto';
      font-style: italic;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOkCnqEu92Fr1Mu51xHIzIFKw.woff2) format('woff2');
      unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
    }

    /* latin-ext */
    @font-face {
      font-family: 'Roboto';
      font-style: italic;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOkCnqEu92Fr1Mu51xGIzIFKw.woff2) format('woff2');
      unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
    }

    /* latin */
    @font-face {
      font-family: 'Roboto';
      font-style: italic;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOkCnqEu92Fr1Mu51xIIzI.woff2) format('woff2');
      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
    }

    /* cyrillic-ext */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 300;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fCRc4EsA.woff2) format('woff2');
      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
    }

    /* cyrillic */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 300;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fABc4EsA.woff2) format('woff2');
      unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
    }

    /* greek-ext */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 300;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fCBc4EsA.woff2) format('woff2');
      unicode-range: U+1F00-1FFF;
    }

    /* greek */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 300;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fBxc4EsA.woff2) format('woff2');
      unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;
    }

    /* vietnamese */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 300;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fCxc4EsA.woff2) format('woff2');
      unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
    }

    /* latin-ext */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 300;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fChc4EsA.woff2) format('woff2');
      unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
    }

    /* latin */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 300;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmSU5fBBc4.woff2) format('woff2');
      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
    }

    /* cyrillic-ext */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu72xKOzY.woff2) format('woff2');
      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
    }

    /* cyrillic */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu5mxKOzY.woff2) format('woff2');
      unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
    }

    /* greek-ext */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu7mxKOzY.woff2) format('woff2');
      unicode-range: U+1F00-1FFF;
    }

    /* greek */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu4WxKOzY.woff2) format('woff2');
      unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;
    }

    /* vietnamese */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu7WxKOzY.woff2) format('woff2');
      unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
    }

    /* latin-ext */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu7GxKOzY.woff2) format('woff2');
      unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
    }

    /* latin */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 400;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOmCnqEu92Fr1Mu4mxK.woff2) format('woff2');
      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
    }

    /* cyrillic-ext */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 500;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fCRc4EsA.woff2) format('woff2');
      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
    }

    /* cyrillic */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 500;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fABc4EsA.woff2) format('woff2');
      unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
    }

    /* greek-ext */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 500;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fCBc4EsA.woff2) format('woff2');
      unicode-range: U+1F00-1FFF;
    }

    /* greek */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 500;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fBxc4EsA.woff2) format('woff2');
      unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;
    }

    /* vietnamese */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 500;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fCxc4EsA.woff2) format('woff2');
      unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
    }

    /* latin-ext */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 500;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fChc4EsA.woff2) format('woff2');
      unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
    }

    /* latin */
    @font-face {
      font-family: 'Roboto';
      font-style: normal;
      font-weight: 500;
      src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fBBc4.woff2) format('woff2');
      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
    }
  </style>
  <script src="https://onesignal.com/api/v1/sync/cf43c31a-5690-4110-bd51-0b7c4b9fee47/web?callback=__jp0"></script>
  <script async="" src="//www.google-analytics.com/analytics.js"></script>
  <script type="text/javascript" async="" src="https://cdn.jsdelivr.net/npm/yandex-metrica-watch/watch.js"></script>
  <script type="text/javascript">
    var Module;
    Module = Module || {};
    Module["filePackagePrefixURL"] = '/js/vendor/';
    Module["memoryInitializerPrefixURL"] = '/js/vendor/';
    Module["doNotCaptureKeyboard"] = true;

    var site = { "IS_DEV": false, "loginUrl": "\/users\/login", "loginVkUrl": "\/users\/login\/vk", "forceLoginVk": true, "userId": 0, "csrf": "bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A==", "isAnimeSite": true, "isHentaiSite": false, "isBigSale": false, "isSale": true };
  </script>

  <meta name="psb-kassa" content="hTzfEfZZ1P3hME3ZPn9Rd0SQZ7H6tDCb1ucTxehI">
  <script src="/js/vendor/OneSignalPageSDKES6.js?v=151605" async=""></script>
  <style type="text/css">
    .ya-share2,
    .ya-share2 * {
      line-height: normal
    }

    .ya-share2 :link:hover,
    .ya-share2 :visited:hover {
      color: #000 !important
    }

    .ya-share2 input {
      color: inherit;
      font: inherit;
      margin: 0;
      line-height: normal
    }

    .ya-share2__messenger-frame {
      display: none
    }

    .ya-share2__container.ya-share2__container_color-scheme_blackwhite .ya-share2__badge,
    .ya-share2__container.ya-share2__container_color-scheme_blackwhite .ya-share2__mobile-popup-badge {
      background-color: #000
    }

    .ya-share2__container.ya-share2__container_color-scheme_whiteblack .ya-share2__badge,
    .ya-share2__container.ya-share2__container_color-scheme_whiteblack .ya-share2__mobile-popup-badge {
      background-color: #fff
    }

    .ya-share2__container.ya-share2__container_color-scheme_whiteblack .ya-share2__popup-body .ya-share2__mobile-popup-badge {
      background-color: #f2f2f2
    }

    .ya-share2__container_shape_round .ya-share2__badge {
      border-radius: 50px
    }

    .ya-share2__container_shape_round .ya-share2__icon {
      background-position: center
    }

    .ya-share2__container_size_l {
      font-size: 20px
    }

    .ya-share2__container_size_l .ya-share2__badge .ya-share2__icon {
      height: 48px;
      width: 48px;
      background-size: 48px 48px
    }

    .ya-share2__container_shape_round.ya-share2__container_size_l .ya-share2__badge .ya-share2__icon:not(.ya-share2__icon_messenger-contact):not(.ya-share2__icon_more):not(.ya-share2__icon_copy) {
      background-size: 40px 40px
    }

    .ya-share2__container_size_l .ya-share2__item_copy .ya-share2__icon_copy,
    .ya-share2__container_size_l .ya-share2__item_more .ya-share2__icon_more {
      background-size: 32px 32px
    }

    .ya-share2__container_size_l .ya-share2__title {
      line-height: 48px
    }

    .ya-share2__container_size_l .ya-share2__badge+.ya-share2__title {
      margin-left: 16px
    }

    .ya-share2__container_size_l .ya-share2__popup:not(.ya-share2__popup_mobile) {
      border-radius: 16px;
      box-shadow: 0 16px 48px rgba(0, 0, 0, 0.18), 0 0 8px rgba(0, 0, 0, 0.1)
    }

    .ya-share2__container_size_l .ya-share2__popup:not(.ya-share2__popup_mobile) .ya-share2__item,
    .ya-share2__container_size_l.ya-share2__container_as-popup .ya-share2__item {
      padding: 2px 16px
    }

    .ya-share2__container_size_l .ya-share2__popup:not(.ya-share2__popup_mobile)> :first-child:not(:empty),
    .ya-share2__container_size_l.ya-share2__container_as-popup> :first-child:not(:empty),
    .ya-share2__container_size_l .ya-share2__popup:not(.ya-share2__popup_mobile)> :first-child:empty+ :last-child:not(:empty):not(.ya-share2__copied-tooltip),
    .ya-share2__container_size_l.ya-share2__container_as-popup> :first-child:empty+ :last-child:not(:empty):not(.ya-share2__copied-tooltip) {
      padding-top: 8px
    }

    .ya-share2__container_size_l .ya-share2__popup:not(.ya-share2__popup_mobile)> :last-child:not(:empty):not(.ya-share2__copied-tooltip),
    .ya-share2__container_size_l.ya-share2__container_as-popup> :last-child:not(:empty):not(.ya-share2__copied-tooltip) {
      padding-bottom: 8px
    }

    .ya-share2__container_size_l .ya-share2__popup_direction_bottom {
      top: 56px
    }

    .ya-share2__container_size_l .ya-share2__popup_direction_top {
      bottom: 56px
    }

    .ya-share2__container_size_l.ya-share2__container_alone .ya-share2__popup_direction_bottom,
    .ya-share2__container_size_l .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__popup_direction_bottom {
      top: 72px
    }

    .ya-share2__container_size_l.ya-share2__container_alone .ya-share2__popup_direction_top,
    .ya-share2__container_size_l .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__popup_direction_top {
      bottom: 72px
    }

    .ya-share2__container_size_l .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more {
      padding: 8px 32px 8px 16px;
      font-size: 22px
    }

    .ya-share2__container_size_l .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more.ya-share2__link_more-button-type_short {
      padding: 8px;
      border: none;
      background: rgba(0, 0, 0, 0.07)
    }

    .ya-share2__container_size_l .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more .ya-share2__title {
      margin-left: 6px
    }

    .ya-share2__container_size_l .ya-share2__messenger-contacts {
      margin-bottom: 12px
    }

    .ya-share2__container_size_l .ya-share2__messenger-contacts::before {
      width: 16px;
      height: 16px;
      bottom: -7px;
      left: 32px
    }

    .ya-share2__container_size_m {
      font-size: 13px
    }

    .ya-share2__container_size_m .ya-share2__badge .ya-share2__icon {
      height: 24px;
      width: 24px;
      background-size: 24px 24px
    }

    .ya-share2__container_shape_round.ya-share2__container_size_m .ya-share2__badge .ya-share2__icon:not(.ya-share2__icon_messenger-contact):not(.ya-share2__icon_more):not(.ya-share2__icon_copy) {
      background-size: 20px 20px
    }

    .ya-share2__container_size_m .ya-share2__item_copy .ya-share2__icon_copy,
    .ya-share2__container_size_m .ya-share2__item_more .ya-share2__icon_more {
      background-size: 16px 16px
    }

    .ya-share2__container_size_m .ya-share2__title {
      line-height: 24px
    }

    .ya-share2__container_size_m .ya-share2__badge+.ya-share2__title {
      margin-left: 10px
    }

    .ya-share2__container_size_m .ya-share2__popup:not(.ya-share2__popup_mobile) {
      border-radius: 8px;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.18), 0 0 4px rgba(0, 0, 0, 0.1)
    }

    .ya-share2__container_size_m .ya-share2__popup:not(.ya-share2__popup_mobile) .ya-share2__item,
    .ya-share2__container_size_m.ya-share2__container_as-popup .ya-share2__item {
      padding: 2px 8px
    }

    .ya-share2__container_size_m .ya-share2__popup:not(.ya-share2__popup_mobile)> :first-child:not(:empty),
    .ya-share2__container_size_m.ya-share2__container_as-popup> :first-child:not(:empty),
    .ya-share2__container_size_m .ya-share2__popup:not(.ya-share2__popup_mobile)> :first-child:empty+ :last-child:not(:empty):not(.ya-share2__copied-tooltip),
    .ya-share2__container_size_m.ya-share2__container_as-popup> :first-child:empty+ :last-child:not(:empty):not(.ya-share2__copied-tooltip) {
      padding-top: 8px
    }

    .ya-share2__container_size_m .ya-share2__popup:not(.ya-share2__popup_mobile)> :last-child:not(:empty):not(.ya-share2__copied-tooltip),
    .ya-share2__container_size_m.ya-share2__container_as-popup> :last-child:not(:empty):not(.ya-share2__copied-tooltip) {
      padding-bottom: 8px
    }

    .ya-share2__container_size_m .ya-share2__popup_direction_bottom {
      top: 28px
    }

    .ya-share2__container_size_m .ya-share2__popup_direction_top {
      bottom: 28px
    }

    .ya-share2__container_size_m.ya-share2__container_alone .ya-share2__popup_direction_bottom,
    .ya-share2__container_size_m .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__popup_direction_bottom {
      top: 36px
    }

    .ya-share2__container_size_m.ya-share2__container_alone .ya-share2__popup_direction_top,
    .ya-share2__container_size_m .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__popup_direction_top {
      bottom: 36px
    }

    .ya-share2__container_size_m .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more {
      padding: 4px 16px 4px 8px;
      font-size: 15px
    }

    .ya-share2__container_size_m .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more.ya-share2__link_more-button-type_short {
      padding: 4px;
      border: none;
      background: rgba(0, 0, 0, 0.07)
    }

    .ya-share2__container_size_m .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more .ya-share2__title {
      margin-left: 2px
    }

    .ya-share2__container_size_m .ya-share2__messenger-contacts {
      margin-bottom: 6px
    }

    .ya-share2__container_size_m .ya-share2__messenger-contacts::before {
      width: 10px;
      height: 10px;
      bottom: -4px;
      left: 15px
    }

    .ya-share2__container_size_s {
      font-size: 12px
    }

    .ya-share2__container_size_s .ya-share2__badge .ya-share2__icon {
      height: 18px;
      width: 18px;
      background-size: 18px 18px
    }

    .ya-share2__container_shape_round.ya-share2__container_size_s .ya-share2__badge .ya-share2__icon:not(.ya-share2__icon_messenger-contact):not(.ya-share2__icon_more):not(.ya-share2__icon_copy) {
      background-size: 16px 16px
    }

    .ya-share2__container_size_s .ya-share2__item_copy .ya-share2__icon_copy,
    .ya-share2__container_size_s .ya-share2__item_more .ya-share2__icon_more {
      background-size: 12px 12px
    }

    .ya-share2__container_size_s .ya-share2__title {
      line-height: 18px
    }

    .ya-share2__container_size_s .ya-share2__badge+.ya-share2__title {
      margin-left: 6px
    }

    .ya-share2__container_size_s .ya-share2__popup:not(.ya-share2__popup_mobile) {
      border-radius: 6px;
      box-shadow: 0 6px 18px rgba(0, 0, 0, 0.18), 0 0 3px rgba(0, 0, 0, 0.1)
    }

    .ya-share2__container_size_s .ya-share2__popup:not(.ya-share2__popup_mobile) .ya-share2__item,
    .ya-share2__container_size_s.ya-share2__container_as-popup .ya-share2__item {
      padding: 2px 6px
    }

    .ya-share2__container_size_s .ya-share2__popup:not(.ya-share2__popup_mobile)> :first-child:not(:empty),
    .ya-share2__container_size_s.ya-share2__container_as-popup> :first-child:not(:empty),
    .ya-share2__container_size_s .ya-share2__popup:not(.ya-share2__popup_mobile)> :first-child:empty+ :last-child:not(:empty):not(.ya-share2__copied-tooltip),
    .ya-share2__container_size_s.ya-share2__container_as-popup> :first-child:empty+ :last-child:not(:empty):not(.ya-share2__copied-tooltip) {
      padding-top: 6px
    }

    .ya-share2__container_size_s .ya-share2__popup:not(.ya-share2__popup_mobile)> :last-child:not(:empty):not(.ya-share2__copied-tooltip),
    .ya-share2__container_size_s.ya-share2__container_as-popup> :last-child:not(:empty):not(.ya-share2__copied-tooltip) {
      padding-bottom: 6px
    }

    .ya-share2__container_size_s .ya-share2__popup_direction_bottom {
      top: 21px
    }

    .ya-share2__container_size_s .ya-share2__popup_direction_top {
      bottom: 21px
    }

    .ya-share2__container_size_s.ya-share2__container_alone .ya-share2__popup_direction_bottom,
    .ya-share2__container_size_s .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__popup_direction_bottom {
      top: 27px
    }

    .ya-share2__container_size_s.ya-share2__container_alone .ya-share2__popup_direction_top,
    .ya-share2__container_size_s .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__popup_direction_top {
      bottom: 27px
    }

    .ya-share2__container_size_s .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more {
      padding: 3px 12px 3px 6px;
      font-size: 14px
    }

    .ya-share2__container_size_s .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more.ya-share2__link_more-button-type_short {
      padding: 3px;
      border: none;
      background: rgba(0, 0, 0, 0.07)
    }

    .ya-share2__container_size_s .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more .ya-share2__title {
      margin-left: 1px
    }

    .ya-share2__container_size_s .ya-share2__messenger-contacts {
      margin-bottom: 4.5px
    }

    .ya-share2__container_size_s .ya-share2__messenger-contacts::before {
      width: 8px;
      height: 8px;
      bottom: -3px;
      left: 11px
    }

    .ya-share2__container_mobile .ya-share2__icon {
      background-position: center;
      background-repeat: no-repeat
    }

    .ya-share2__container_mobile.ya-share2__container_size_l .ya-share2__icon {
      height: 56px;
      width: 56px
    }

    .ya-share2__container_mobile.ya-share2__container_size_l .ya-share2__title {
      line-height: 56px
    }

    .ya-share2__container_mobile.ya-share2__container_size_m .ya-share2__icon {
      height: 32px;
      width: 32px
    }

    .ya-share2__container_mobile.ya-share2__container_size_m .ya-share2__title {
      line-height: 32px
    }

    .ya-share2__container_mobile.ya-share2__container_size_s .ya-share2__icon {
      height: 24px;
      width: 24px
    }

    .ya-share2__container_mobile.ya-share2__container_size_s .ya-share2__title {
      line-height: 24px
    }

    .ya-share2__list.ya-share2__list_direction_horizontal {
      margin-top: -2px
    }

    .ya-share2__list.ya-share2__list_direction_horizontal>.ya-share2__item {
      display: inline-block;
      vertical-align: top;
      padding: 0;
      margin: 2px 4px 0 0
    }

    .ya-share2__list.ya-share2__list_direction_horizontal>.ya-share2__item:last-child {
      margin-right: 0
    }

    .ya-share2__list.ya-share2__list_direction_horizontal>.ya-share2__item>.ya-share2__link>.ya-share2__title {
      display: none
    }

    .ya-share2__list.ya-share2__list_direction_vertical>.ya-share2__item {
      display: block;
      margin: 4px 0
    }

    .ya-share2__list.ya-share2__list_direction_vertical>.ya-share2__item:first-child {
      margin-top: 0
    }

    .ya-share2__list.ya-share2__list_direction_vertical>.ya-share2__item:last-child {
      margin-bottom: 0
    }

    .ya-share2__popup {
      position: absolute;
      display: none;
      z-index: 9999;
      background-color: #fff
    }

    .ya-share2__popup_visible {
      display: block
    }

    .ya-share2__popup_direction_auto {
      visibility: hidden
    }

    .ya-share2__popup_direction_bottom,
    .ya-share2__popup_direction_top {
      visibility: visible
    }

    .ya-share2__popup_list-direction_horizontal {
      right: 0
    }

    .ya-share2__popup_list-direction_vertical {
      left: 0
    }

    .ya-share2__popup_x-direction_left {
      right: 0;
      left: auto
    }

    .ya-share2__popup_x-direction_right {
      left: 0;
      right: auto
    }

    .ya-share2__popup,
    .ya-share2__container_as-popup {
      text-align: left
    }

    .ya-share2__popup .ya-share2__list .ya-share2__item,
    .ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item,
    .ya-share2__container_as-popup .ya-share2__list .ya-share2__item,
    .ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item {
      margin: 0
    }

    .ya-share2__popup .ya-share2__list .ya-share2__item:hover,
    .ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:hover,
    .ya-share2__container_as-popup .ya-share2__list .ya-share2__item:hover,
    .ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:hover,
    .ya-share2__popup .ya-share2__list .ya-share2__item:focus,
    .ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:focus,
    .ya-share2__container_as-popup .ya-share2__list .ya-share2__item:focus,
    .ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:focus {
      background: rgba(0, 0, 0, 0.03)
    }

    .ya-share2__popup .ya-share2__list .ya-share2__item:active,
    .ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:active,
    .ya-share2__container_as-popup .ya-share2__list .ya-share2__item:active,
    .ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:active {
      background: rgba(0, 0, 0, 0.05)
    }

    .ya-share2__popup .ya-share2__list .ya-share2__item:hover,
    .ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:hover,
    .ya-share2__container_as-popup .ya-share2__list .ya-share2__item:hover,
    .ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:hover,
    .ya-share2__popup .ya-share2__list .ya-share2__item:focus,
    .ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:focus,
    .ya-share2__container_as-popup .ya-share2__list .ya-share2__item:focus,
    .ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:focus,
    .ya-share2__popup .ya-share2__list .ya-share2__item:active,
    .ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:active,
    .ya-share2__container_as-popup .ya-share2__list .ya-share2__item:active,
    .ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:active {
      opacity: 1
    }

    .ya-share2__container_color-scheme_whiteblack.ya-share2__popup .ya-share2__list .ya-share2__item:hover .ya-share2__badge,
    .ya-share2__container_color-scheme_whiteblack.ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:hover .ya-share2__badge,
    .ya-share2__container_color-scheme_whiteblack.ya-share2__container_as-popup .ya-share2__list .ya-share2__item:hover .ya-share2__badge,
    .ya-share2__container_color-scheme_whiteblack.ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:hover .ya-share2__badge,
    .ya-share2__container_color-scheme_whiteblack.ya-share2__popup .ya-share2__list .ya-share2__item:focus .ya-share2__badge,
    .ya-share2__container_color-scheme_whiteblack.ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:focus .ya-share2__badge,
    .ya-share2__container_color-scheme_whiteblack.ya-share2__container_as-popup .ya-share2__list .ya-share2__item:focus .ya-share2__badge,
    .ya-share2__container_color-scheme_whiteblack.ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:focus .ya-share2__badge,
    .ya-share2__container_color-scheme_whiteblack.ya-share2__popup .ya-share2__list .ya-share2__item:active .ya-share2__badge,
    .ya-share2__container_color-scheme_whiteblack.ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:active .ya-share2__badge,
    .ya-share2__container_color-scheme_whiteblack.ya-share2__container_as-popup .ya-share2__list .ya-share2__item:active .ya-share2__badge,
    .ya-share2__container_color-scheme_whiteblack.ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:active .ya-share2__badge,
    .ya-share2__container_color-scheme_normal.ya-share2__popup .ya-share2__list .ya-share2__item:hover.ya-share2__item_copy .ya-share2__badge,
    .ya-share2__container_color-scheme_normal.ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:hover.ya-share2__item_copy .ya-share2__badge,
    .ya-share2__container_color-scheme_normal.ya-share2__container_as-popup .ya-share2__list .ya-share2__item:hover.ya-share2__item_copy .ya-share2__badge,
    .ya-share2__container_color-scheme_normal.ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:hover.ya-share2__item_copy .ya-share2__badge,
    .ya-share2__container_color-scheme_normal.ya-share2__popup .ya-share2__list .ya-share2__item:focus.ya-share2__item_copy .ya-share2__badge,
    .ya-share2__container_color-scheme_normal.ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:focus.ya-share2__item_copy .ya-share2__badge,
    .ya-share2__container_color-scheme_normal.ya-share2__container_as-popup .ya-share2__list .ya-share2__item:focus.ya-share2__item_copy .ya-share2__badge,
    .ya-share2__container_color-scheme_normal.ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:focus.ya-share2__item_copy .ya-share2__badge,
    .ya-share2__container_color-scheme_normal.ya-share2__popup .ya-share2__list .ya-share2__item:active.ya-share2__item_copy .ya-share2__badge,
    .ya-share2__container_color-scheme_normal.ya-share2__popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:active.ya-share2__item_copy .ya-share2__badge,
    .ya-share2__container_color-scheme_normal.ya-share2__container_as-popup .ya-share2__list .ya-share2__item:active.ya-share2__item_copy .ya-share2__badge,
    .ya-share2__container_color-scheme_normal.ya-share2__container_as-popup .ya-share2__messenger-contacts-list_desktop .ya-share2__item:active.ya-share2__item_copy .ya-share2__badge {
      background: transparent
    }

    .ya-share2__container .ya-share2__messenger-contacts_desktop {
      background-color: #f5f5f5;
      position: relative
    }

    .ya-share2__container .ya-share2__messenger-contacts_desktop:empty {
      display: none
    }

    .ya-share2__container .ya-share2__messenger-contacts_desktop::before {
      content: '';
      transform: rotate(45deg);
      position: absolute;
      background-color: #f5f5f5
    }

    .ya-share2__container .ya-share2__messenger-contacts_desktop .ya-share2__messenger-contacts-list {
      margin: 0;
      padding-left: 0
    }

    .ya-share2__container .ya-share2__messenger-contacts_desktop .ya-share2__item {
      display: block
    }

    .ya-share2__container .ya-share2__messenger-contacts_desktop .ya-share2__badge {
      background: none
    }

    .ya-share2__container .ya-share2__messenger-contacts_desktop .ya-share2__icon {
      border-radius: 50px
    }

    .ya-share2__container .ya-share2__messenger-contacts_desktop+.ya-share2__list {
      display: block
    }

    .ya-share2__container.ya-share2__container_mobile .ya-share2__scroll-hider {
      height: 97px;
      overflow: hidden;
      padding-bottom: 16px
    }

    .ya-share2__container.ya-share2__container_mobile .ya-share2__scroll-hider .ya-share2__messenger-contacts_mobile {
      overflow-x: scroll
    }

    .ya-share2__container.ya-share2__container_mobile .ya-share2__scroll-hider .ya-share2__messenger-contacts_mobile:empty {
      display: none
    }

    .ya-share2__container.ya-share2__container_mobile .ya-share2__scroll-hider .ya-share2__messenger-contacts_mobile .ya-share2__messenger-contacts-list {
      white-space: nowrap;
      height: 97px
    }

    .ya-share2__container.ya-share2__container_mobile .ya-share2__scroll-hider+.ya-share2__header {
      border-top: 1px solid rgba(0, 0, 0, 0.1)
    }

    .ya-share2__container.ya-share2__container_mobile .ya-share2__scroll-hider~.ya-share2__scroll-hider .ya-share2__popup-tile-wrapper {
      overflow-x: scroll
    }

    .ya-share2__container.ya-share2__container_mobile .ya-share2__scroll-hider~.ya-share2__scroll-hider .ya-share2__popup-tile-wrapper .ya-share2__popup-tile {
      white-space: nowrap;
      height: 97px
    }

    .ya-share2__container.ya-share2__container_mobile .ya-share2__scroll-hider .ya-share2__mobile-popup-badge {
      width: 56px;
      height: 56px;
      border-radius: 28px
    }

    .ya-share2__container.ya-share2__container_mobile .ya-share2__scroll-hider .ya-share2__messenger-contacts-list .ya-share2__mobile-popup-badge {
      background: none
    }

    .ya-share2__container.ya-share2__container_mobile .ya-share2__scroll-hider .ya-share2__item {
      width: 23%
    }

    @media (min-width:460px) {
      .ya-share2__container.ya-share2__container_mobile .ya-share2__scroll-hider .ya-share2__item {
        width: 18.6%
      }
    }

    @media (min-width:600px) {
      .ya-share2__container.ya-share2__container_mobile .ya-share2__scroll-hider .ya-share2__item {
        width: 15.6%
      }
    }

    .ya-share2__popup.ya-share2__popup_mobile.ya-share2__popup_visible {
      position: fixed;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      margin: 0;
      padding: 0;
      border: 0;
      background: transparent;
      color: rgba(0, 0, 0, 0.8)
    }

    .ya-share2__popup.ya-share2__popup_mobile.ya-share2__popup_visible .ya-share2__popup-overlay {
      position: absolute;
      z-index: 1;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.3);
      animation: overlayAppearance .2s cubic-bezier(.42, 0, 1, 1) forwards
    }

    .ya-share2__popup.ya-share2__popup_mobile.ya-share2__popup_visible .ya-share2__popup-content {
      display: flex;
      position: absolute;
      padding: 0;
      z-index: 2;
      bottom: 0;
      box-sizing: border-box;
      flex-direction: column;
      width: 100%;
      max-height: 70%;
      animation: popupAppearance .2s forwards
    }

    .ya-share2__popup-content .ya-share2__popup-header {
      display: flex;
      align-items: center;
      min-height: 40px;
      padding: 14px 12px 14px 16px;
      border-bottom: 1px solid rgba(0, 0, 0, 0.1);
      border-radius: 16px 16px 0 0;
      background-color: #fff
    }

    .ya-share2__popup-content .ya-share2__popup-header .ya-share2__og-image,
    .ya-share2__popup-content .ya-share2__popup-header .ya-share2__icon_og-image-stub,
    .ya-share2__popup-content .ya-share2__popup-header .ya-share2__icon_closing-cross {
      flex-shrink: 0
    }

    .ya-share2__popup-content .ya-share2__popup-header .ya-share2__popup-description {
      flex: 1;
      hyphens: auto;
      align-self: center;
      display: -webkit-box;
      max-height: 34px;
      margin: 0 8px 0 14px;
      overflow: hidden;
      font-size: 15px;
      line-height: 17px;
      text-overflow: ellipsis;
      word-break: break-word;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical
    }

    .ya-share2__popup-content .ya-share2__popup-body {
      overflow: auto;
      background-color: #fff
    }

    .ya-share2__popup-content .ya-share2__popup-body .ya-share2__header {
      font-weight: 500;
      font-size: 18px;
      line-height: 20px;
      padding: 18px 16px 0;
      margin: 0
    }

    .ya-share2__popup-content .ya-share2__messenger-contacts-list,
    .ya-share2__popup-content .ya-share2__popup-tile {
      padding: 20px 12px 0;
      margin: 0
    }

    .ya-share2__popup-content .ya-share2__messenger-contacts-list .ya-share2__item,
    .ya-share2__popup-content .ya-share2__popup-tile .ya-share2__item {
      width: 25%;
      padding: 0;
      margin: 0 0 20px
    }

    @media (min-width:460px) {

      .ya-share2__popup-content .ya-share2__messenger-contacts-list .ya-share2__item,
      .ya-share2__popup-content .ya-share2__popup-tile .ya-share2__item {
        width: 20%
      }
    }

    @media (min-width:600px) {

      .ya-share2__popup-content .ya-share2__messenger-contacts-list .ya-share2__item,
      .ya-share2__popup-content .ya-share2__popup-tile .ya-share2__item {
        width: 16.66%
      }
    }

    .ya-share2__popup-content .ya-share2__messenger-contacts-list .ya-share2__item .ya-share2__link,
    .ya-share2__popup-content .ya-share2__popup-tile .ya-share2__item .ya-share2__link {
      width: 100%;
      height: 100%;
      color: rgba(0, 0, 0, 0.8)
    }

    .ya-share2__popup-content .ya-share2__messenger-contacts-list .ya-share2__item .ya-share2__native-share-fake-link,
    .ya-share2__popup-content .ya-share2__popup-tile .ya-share2__item .ya-share2__native-share-fake-link {
      display: inline-block;
      width: 100%;
      height: 100%
    }

    .ya-share2__popup-content .ya-share2__messenger-contacts-list .ya-share2__mobile-popup-badge,
    .ya-share2__popup-content .ya-share2__popup-tile .ya-share2__mobile-popup-badge {
      display: block;
      width: 52px;
      height: 52px;
      margin: 0 auto;
      border-radius: 26px
    }

    .ya-share2__popup-content .ya-share2__messenger-contacts-list .ya-share2__mobile-popup-badge .ya-share2__icon,
    .ya-share2__popup-content .ya-share2__popup-tile .ya-share2__mobile-popup-badge .ya-share2__icon {
      width: 100%;
      height: 100%;
      background-size: 32px;
      background-clip: content-box
    }

    .ya-share2__popup-content .ya-share2__messenger-contacts-list .ya-share2__mobile-popup-badge .ya-share2__icon_messenger-contact,
    .ya-share2__popup-content .ya-share2__popup-tile .ya-share2__mobile-popup-badge .ya-share2__icon_messenger-contact {
      background-size: 56px;
      border-radius: 50%
    }

    .ya-share2__popup-content .ya-share2__messenger-contacts-list .ya-share2__mobile-popup-service-title,
    .ya-share2__popup-content .ya-share2__popup-tile .ya-share2__mobile-popup-service-title {
      max-height: 15px;
      margin-top: 10px;
      padding: 0 4px;
      overflow: hidden;
      font-size: 13px;
      line-height: 15px;
      text-align: center;
      text-overflow: ellipsis
    }

    .ya-share2__popup-content .ya-share2__icon {
      background-size: auto
    }

    .ya-share2__popup-content .ya-share2__icon.ya-share2__og-image,
    .ya-share2__popup-content .ya-share2__icon.ya-share2__icon_og-image-stub {
      box-sizing: border-box;
      width: 36px;
      height: 36px;
      border-radius: 6px
    }

    .ya-share2__popup-content .ya-share2__icon.ya-share2__og-image {
      background-position: center;
      background-size: cover
    }

    .ya-share2__popup-content .ya-share2__icon.ya-share2__icon_og-image-stub {
      padding: 6px;
      background-color: rgba(0, 0, 0, 0.05);
      background-image: url("data:image/svg+xml,%3Csvg%20width=%2724%27%20height=%2725%27%20fill=%27none%27%20xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cpath%20fill-rule=%27evenodd%27%20clip-rule=%27evenodd%27%20d=%27M10.94%208.838a3%203%200%20000%204.242%201%201%200%2001-1.414%201.415%205%205%200%20010-7.071l3.535-3.536a5%205%200%20017.071%207.071l-1.092%201.093a1%201%200%2001-1.415-1.415l1.093-1.092a3%203%200%2010-4.243-4.243L10.94%208.838zm2.12%206.363a3%203%200%20000-4.243%201%201%200%20111.415-1.414%205%205%200%20010%207.07l-3.5%203.501a5%205%200%2001-7.071-7.071l1.025-1.025a1%201%200%20011.414%201.414l-1.025%201.025a3%203%200%20004.243%204.243l3.5-3.5z%27%20fill=%27%23000%27%20fill-opacity=%27.3%27/%3E%3C/svg%3E")
    }

    .ya-share2__popup-content .ya-share2__icon.ya-share2__icon_closing-cross {
      box-sizing: border-box;
      cursor: pointer;
      width: 40px;
      height: 40px;
      padding: 10px;
      background-image: url("data:image/svg+xml,%3Csvg%20width=%2720%27%20height=%2720%27%20fill=%27none%27%20xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cpath%20fill-rule=%27evenodd%27%20clip-rule=%27evenodd%27%20d=%27M10%2020c5.523%200%2010-4.477%2010-10S15.523%200%2010%200%200%204.477%200%2010s4.477%2010%2010%2010zM5.403%205.403a1%201%200%20011.414%200L10%208.586l3.183-3.183a1%201%200%20111.414%201.414L11.414%2010l3.183%203.183a1%201%200%2001-1.414%201.414L10%2011.414l-3.183%203.183a1%201%200%2001-1.414-1.414L8.586%2010%205.403%206.817a1%201%200%20010-1.414z%27%20fill=%27%23000%27%20fill-opacity=%27.2%27/%3E%3C/svg%3E")
    }

    .ya-share2__popup-content .ya-share2__icon.ya-share2__icon_closing-cross:hover {
      opacity: .8
    }

    .ya-share2__popup-content .ya-share2__icon.ya-share2__icon_closing-cross:active {
      opacity: .6
    }

    .ya-share2__popup-content .ya-share2__item.ya-share2__item_copy.ya-share2__item_copy-link-button .ya-share2__icon_copy-icon {
      width: 15px;
      height: 14px;
      opacity: 1;
      background-image: url("data:image/svg+xml,%3Csvg%20width=%2715%27%20height=%2714%27%20fill=%27none%27%20xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cpath%20fill-rule=%27evenodd%27%20clip-rule=%27evenodd%27%20d=%27M3.758%201a1%201%200%20001%201h7.5a.5.5%200%2001.5.5v7.497a1%201%200%20002%200V2.5a2.5%202.5%200%2000-2.5-2.5h-7.5a1%201%200%2000-1%201zm-1.5%202h8a1.5%201.5%200%20011.5%201.5v8a1.5%201.5%200%2001-1.5%201.5h-8a1.5%201.5%200%2001-1.5-1.5v-8a1.5%201.5%200%20011.5-1.5zm.5%202v7h7V5h-7z%27%20fill=%27%23000%27%20fill-opacity=%27.3%27/%3E%3C/svg%3E")
    }

    .ya-share2__popup-content .ya-share2__mobile-popup-badge.ya-share2__mobile-popup-badge_native-share {
      border: 1px solid rgba(0, 0, 0, 0.15);
      background: #fff;
      box-sizing: border-box
    }

    .ya-share2__popup-content .ya-share2__mobile-popup-badge.ya-share2__mobile-popup-badge_native-share .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3Csvg%20width=%2722%27%20height=%2722%27%20fill=%27none%27%20xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cpath%20fill-rule=%27evenodd%27%20clip-rule=%27evenodd%27%20d=%27M4.583%2012.604a1.604%201.604%200%20100-3.208%201.604%201.604%200%20000%203.208zm12.834%200a1.604%201.604%200%20100-3.208%201.604%201.604%200%20000%203.208zM12.604%2011a1.604%201.604%200%2011-3.208%200%201.604%201.604%200%20013.208%200z%27%20fill=%27%23000%27%20fill-opacity=%27.3%27/%3E%3C/svg%3E")
    }

    .ya-share2__popup-content .ya-share2__mobile-popup-copy-link .ya-share2__item.ya-share2__item_copy.ya-share2__item_copy-link-button {
      display: flex;
      align-items: center;
      margin: 8px auto 32px;
      padding: 12px 20px;
      border: 1px solid rgba(0, 0, 0, 0.15);
      border-radius: 12px;
      background-color: #fff;
      font-size: 15px;
      line-height: 20px;
      color: #000
    }

    .ya-share2__popup-content .ya-share2__mobile-popup-copy-link .ya-share2__item.ya-share2__item_copy.ya-share2__item_copy-link-button .ya-share2__link-title {
      padding-left: 8px
    }

    .ya-share2__copied-tooltip {
      display: none;
      z-index: 9999;
      position: fixed;
      bottom: 6px;
      left: 50%;
      padding: 12px 20px;
      transform: translateX(-50%);
      border-radius: 22px;
      background: #fff;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15), 0 0 2px rgba(0, 0, 0, 0.05);
      color: rgba(0, 0, 0, 0.8);
      font-size: 15px;
      line-height: 20px;
      white-space: nowrap
    }

    .ya-share2__copied-tooltip_shown {
      display: block;
      animation: tooltipAppearance 2s ease-out forwards
    }

    @media (min-width:721px) {
      .ya-share2__popup.ya-share2__popup_mobile.ya-share2__popup_visible {
        display: flex;
        justify-content: center;
        align-items: center
      }

      .ya-share2__popup.ya-share2__popup_mobile.ya-share2__popup_visible .ya-share2__popup-content {
        width: 720px;
        min-height: 310px;
        padding: 20px 0;
        bottom: auto
      }

      .ya-share2__popup.ya-share2__popup_mobile.ya-share2__popup_visible .ya-share2__popup-content .ya-share2__popup-body {
        border-radius: 0 0 16px 16px
      }
    }

    @-moz-keyframes tooltipAppearance {
      0% {
        transform: translate(-50%, 0);
        opacity: 0
      }

      8% {
        transform: translate(-50%, -10px);
        opacity: 1
      }

      92% {
        transform: translate(-50%, -10px);
        opacity: 1
      }

      100% {
        transform: translate(-50%, 0);
        opacity: 0
      }
    }

    @-webkit-keyframes tooltipAppearance {
      0% {
        transform: translate(-50%, 0);
        opacity: 0
      }

      8% {
        transform: translate(-50%, -10px);
        opacity: 1
      }

      92% {
        transform: translate(-50%, -10px);
        opacity: 1
      }

      100% {
        transform: translate(-50%, 0);
        opacity: 0
      }
    }

    @-o-keyframes tooltipAppearance {
      0% {
        transform: translate(-50%, 0);
        opacity: 0
      }

      8% {
        transform: translate(-50%, -10px);
        opacity: 1
      }

      92% {
        transform: translate(-50%, -10px);
        opacity: 1
      }

      100% {
        transform: translate(-50%, 0);
        opacity: 0
      }
    }

    @keyframes tooltipAppearance {
      0% {
        transform: translate(-50%, 0);
        opacity: 0
      }

      8% {
        transform: translate(-50%, -10px);
        opacity: 1
      }

      92% {
        transform: translate(-50%, -10px);
        opacity: 1
      }

      100% {
        transform: translate(-50%, 0);
        opacity: 0
      }
    }

    @-moz-keyframes overlayAppearance {
      from {
        opacity: 0
      }

      to {
        opacity: 1
      }
    }

    @-webkit-keyframes overlayAppearance {
      from {
        opacity: 0
      }

      to {
        opacity: 1
      }
    }

    @-o-keyframes overlayAppearance {
      from {
        opacity: 0
      }

      to {
        opacity: 1
      }
    }

    @keyframes overlayAppearance {
      from {
        opacity: 0
      }

      to {
        opacity: 1
      }
    }

    @-moz-keyframes popupAppearance {
      from {
        transform: translateY(100%)
      }

      to {
        transform: translateY(0)
      }
    }

    @-webkit-keyframes popupAppearance {
      from {
        transform: translateY(100%)
      }

      to {
        transform: translateY(0)
      }
    }

    @-o-keyframes popupAppearance {
      from {
        transform: translateY(100%)
      }

      to {
        transform: translateY(0)
      }
    }

    @keyframes popupAppearance {
      from {
        transform: translateY(100%)
      }

      to {
        transform: translateY(0)
      }
    }

    .ya-share2__container,
    .ya-share2__container .ya-share2__item {
      font-family: 'YS Text', Arial, sans-serif
    }

    .ya-share2__list,
    .ya-share2__badge,
    .ya-share2__icon {
      display: inline-block;
      vertical-align: top
    }

    .ya-share2__title {
      display: inline-block;
      vertical-align: bottom
    }

    .ya-share2__list {
      padding: 0;
      margin: 0;
      list-style-type: none
    }

    .ya-share2__link {
      display: block
    }

    .ya-share2__item {
      display: inline-block;
      font-family: 'YS Text', Arial, sans-serif
    }

    .ya-share2__item:not(.ya-share2__item_more):hover,
    .ya-share2__item.ya-share2__item_more>.ya-share2__link:hover,
    .ya-share2__item:not(.ya-share2__item_more):focus,
    .ya-share2__item.ya-share2__item_more>.ya-share2__link:focus {
      cursor: pointer;
      opacity: .85
    }

    .ya-share2__item:not(.ya-share2__item_more):active,
    .ya-share2__item.ya-share2__item_more>.ya-share2__link:active {
      opacity: .7
    }

    .ya-share2__link {
      text-decoration: none;
      white-space: nowrap
    }

    .ya-share2__badge {
      border-radius: 4px;
      color: #fff;
      overflow: hidden;
      position: relative
    }

    .ya-share2__container_mobile .ya-share2__badge {
      border-radius: 50%
    }

    .ya-share2__title {
      color: #000
    }

    .ya-share2__item_more {
      position: relative
    }

    .ya-share2__item_more .ya-share2__link_more .ya-share2__title {
      display: none
    }

    .ya-share2__item_more .ya-share2__icon_more {
      background-image: url("data:image/svg+xml,%3Csvg%20width=%2716%27%20height=%2716%27%20fill=%27none%27%20xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cpath%20fill-rule=%27evenodd%27%20clip-rule=%27evenodd%27%20d=%27M1%208a1.5%201.5%200%20113%200%201.5%201.5%200%2001-3%200zm5.5%200a1.5%201.5%200%20113%200%201.5%201.5%200%2001-3%200zm7-1.5a1.5%201.5%200%20100%203%201.5%201.5%200%20000-3z%27%20fill=%27%23999%27/%3E%3C/svg%3E")
    }

    .ya-share2__container_color-scheme_blackwhite .ya-share2__item_more .ya-share2__icon_more {
      background-image: url("data:image/svg+xml,%3Csvg%20width=%2716%27%20height=%2716%27%20fill=%27none%27%20xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cpath%20fill-rule=%27evenodd%27%20clip-rule=%27evenodd%27%20d=%27M1%208a1.5%201.5%200%20113%200%201.5%201.5%200%2001-3%200zm5.5%200a1.5%201.5%200%20113%200%201.5%201.5%200%2001-3%200zm7-1.5a1.5%201.5%200%20100%203%201.5%201.5%200%20000-3z%27%20fill=%27%23fff%27/%3E%3C/svg%3E")
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_more .ya-share2__icon_more {
      background-image: url("data:image/svg+xml,%3Csvg%20width=%2716%27%20height=%2716%27%20fill=%27none%27%20xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cpath%20fill-rule=%27evenodd%27%20clip-rule=%27evenodd%27%20d=%27M1%208a1.5%201.5%200%20113%200%201.5%201.5%200%2001-3%200zm5.5%200a1.5%201.5%200%20113%200%201.5%201.5%200%2001-3%200zm7-1.5a1.5%201.5%200%20100%203%201.5%201.5%200%20000-3z%27%20fill=%27%23000%27/%3E%3C/svg%3E")
    }

    .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__icon_more {
      background-image: url("data:image/svg+xml,%3Csvg%20width=%2716%27%20height=%2716%27%20fill=%27none%27%20xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cpath%20d=%27M14.6%202.9a2.7%202.7%200%2001-4.554%201.963L5.303%207.28a2.702%202.702%200%20010%201.44l4.743%202.417a2.7%202.7%200%2011-.834%201.708l-5.05-2.575a2.7%202.7%200%20110-4.54l5.05-2.575A2.7%202.7%200%201114.6%202.9z%27%20fill=%27%23000%27/%3E%3C/svg%3E")
    }

    .ya-share2__item_more .ya-share2__badge,
    .ya-share2__item_copy .ya-share2__badge {
      background: rgba(0, 0, 0, 0.03)
    }

    .ya-share2__item_more .ya-share2__icon,
    .ya-share2__item_copy .ya-share2__icon {
      background-position: center;
      background-repeat: no-repeat
    }

    .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more {
      background: rgba(0, 0, 0, 0.03);
      border: 1px solid rgba(0, 0, 0, 0.15);
      border-radius: 50px
    }

    .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more:not(.ya-share2__link_more-button-type_short):hover,
    .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more:not(.ya-share2__link_more-button-type_short):focus {
      border-color: rgba(0, 0, 0, 0.25);
      opacity: 1
    }

    .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more:not(.ya-share2__link_more-button-type_short):active {
      border-color: rgba(0, 0, 0, 0.4);
      opacity: 1
    }

    .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__link_more:not(.ya-share2__link_more-button-type_short) .ya-share2__title {
      display: inline-block
    }

    .ya-share2__item_more.ya-share2__item_has-pretty-view .ya-share2__badge_more {
      background: transparent
    }

    .ya-share2__item_copy .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3Csvg%20width=%2716%27%20height=%2716%27%20fill=%27none%27%20xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cpath%20fill-rule=%27evenodd%27%20clip-rule=%27evenodd%27%20d=%27M4%202a1%201%200%20001%201h7.5a.5.5%200%2001.5.5v7.497a1%201%200%20002%200V3.5A2.5%202.5%200%200012.5%201H5a1%201%200%2000-1%201zM2.5%204h8A1.5%201.5%200%200112%205.5v8a1.5%201.5%200%2001-1.5%201.5h-8A1.5%201.5%200%20011%2013.5v-8A1.5%201.5%200%20012.5%204zM3%206v7h7V6H3z%27%20fill=%27%23999%27/%3E%3C/svg%3E")
    }

    .ya-share2__container_color-scheme_blackwhite .ya-share2__item_copy .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3Csvg%20width=%2716%27%20height=%2716%27%20fill=%27none%27%20xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cpath%20fill-rule=%27evenodd%27%20clip-rule=%27evenodd%27%20d=%27M4%202a1%201%200%20001%201h7.5a.5.5%200%2001.5.5v7.497a1%201%200%20002%200V3.5A2.5%202.5%200%200012.5%201H5a1%201%200%2000-1%201zM2.5%204h8A1.5%201.5%200%200112%205.5v8a1.5%201.5%200%2001-1.5%201.5h-8A1.5%201.5%200%20011%2013.5v-8A1.5%201.5%200%20012.5%204zM3%206v7h7V6H3z%27%20fill=%27%23fff%27/%3E%3C/svg%3E")
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_copy .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3Csvg%20width=%2716%27%20height=%2716%27%20fill=%27none%27%20xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cpath%20fill-rule=%27evenodd%27%20clip-rule=%27evenodd%27%20d=%27M4%202a1%201%200%20001%201h7.5a.5.5%200%2001.5.5v7.497a1%201%200%20002%200V3.5A2.5%202.5%200%200012.5%201H5a1%201%200%2000-1%201zM2.5%204h8A1.5%201.5%200%200112%205.5v8a1.5%201.5%200%2001-1.5%201.5h-8A1.5%201.5%200%20011%2013.5v-8A1.5%201.5%200%20012.5%204zM3%206v7h7V6H3z%27%20fill=%27%23000%27/%3E%3C/svg%3E")
    }

    .ya-share2__item_copy .ya-share2__input_copy {
      display: none
    }

    .ya-share2__item_copy .ya-share2__link_copy {
      display: inline-block
    }

    .ya-share2__item_service_blogger .ya-share2__badge,
    .ya-share2__item_service_blogger .ya-share2__mobile-popup-badge {
      background-color: #fb8f3d;
    }

    .ya-share2__item_service_blogger .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M19.896 14.833A5.167 5.167 0 0114.729 20H9.166A5.167 5.167 0 014 14.833V9.167A5.166 5.166 0 019.166 4h2.608a5.167 5.167 0 015.167 5.167l.002.011c.037.536.484.96 1.03.96l.018-.002h.872c.57 0 1.034.463 1.034 1.034l-.001 3.663zM9.038 10.176h2.926a.993.993 0 000-1.987H9.038a.994.994 0 000 1.987zm5.867 3.83H9.032a.94.94 0 000 1.879h5.873a.94.94 0 100-1.88z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_blogger .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M19.896 14.833A5.167 5.167 0 0114.729 20H9.166A5.167 5.167 0 014 14.833V9.167A5.166 5.166 0 019.166 4h2.608a5.167 5.167 0 015.167 5.167l.002.011c.037.536.484.96 1.03.96l.018-.002h.872c.57 0 1.034.463 1.034 1.034l-.001 3.663zM9.038 10.176h2.926a.993.993 0 000-1.987H9.038a.994.994 0 000 1.987zm5.867 3.83H9.032a.94.94 0 000 1.879h5.873a.94.94 0 100-1.88z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_delicious .ya-share2__badge,
    .ya-share2__item_service_delicious .ya-share2__mobile-popup-badge {
      background-color: #31a9ff;
    }

    .ya-share2__item_service_delicious .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M4 12h8v8H4zm8-8h8v8h-7.984z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_delicious .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M4 12h8v8H4zm8-8h8v8h-7.984z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_digg .ya-share2__badge,
    .ya-share2__item_service_digg .ya-share2__mobile-popup-badge {
      background-color: #000;
    }

    .ya-share2__item_service_digg .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M5.555 10.814V14.1h.96s.18.005.18-.222v-3.287h-.96s-.18-.006-.18.222zm8.032 3.065v-3.287h-.96s-.18-.006-.18.222V14.1h.96s.18.006.18-.222zm-5.306 1.32c0 .227-.18.222-.18.222H4V9.497c0-.227.18-.222.18-.222h2.514V7.222c0-.227.18-.222.18-.222h1.408l-.001 8.199zm2.065 0c0 .227-.18.221-.18.221H8.761V9.496c0-.226.18-.221.18-.221h1.406v5.924zm0-7.103c0 .227-.18.222-.18.222H8.76V7.222c0-.227.18-.222.18-.222h1.408l-.001 1.096zm4.827 9.21c0 .228-.18.223-.18.223h-4.1v-1.096c0-.227.18-.222.18-.222h2.513v-.79h-2.694V9.497c0-.227.18-.222.18-.222l4.102.003v8.029zm4.826 0c0 .228-.18.223-.18.223h-4.1v-1.096c0-.227.18-.222.18-.222h2.514v-.79h-2.695V9.497c0-.227.18-.222.18-.222L20 9.279v8.028zm-1.585-3.427v-3.287h-.96s-.18-.006-.18.222V14.1h.96s.18.006.18-.222z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_digg .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M5.555 10.814V14.1h.96s.18.005.18-.222v-3.287h-.96s-.18-.006-.18.222zm8.032 3.065v-3.287h-.96s-.18-.006-.18.222V14.1h.96s.18.006.18-.222zm-5.306 1.32c0 .227-.18.222-.18.222H4V9.497c0-.227.18-.222.18-.222h2.514V7.222c0-.227.18-.222.18-.222h1.408l-.001 8.199zm2.065 0c0 .227-.18.221-.18.221H8.761V9.496c0-.226.18-.221.18-.221h1.406v5.924zm0-7.103c0 .227-.18.222-.18.222H8.76V7.222c0-.227.18-.222.18-.222h1.408l-.001 1.096zm4.827 9.21c0 .228-.18.223-.18.223h-4.1v-1.096c0-.227.18-.222.18-.222h2.513v-.79h-2.694V9.497c0-.227.18-.222.18-.222l4.102.003v8.029zm4.826 0c0 .228-.18.223-.18.223h-4.1v-1.096c0-.227.18-.222.18-.222h2.514v-.79h-2.695V9.497c0-.227.18-.222.18-.222L20 9.279v8.028zm-1.585-3.427v-3.287h-.96s-.18-.006-.18.222V14.1h.96s.18.006.18-.222z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_evernote .ya-share2__badge,
    .ya-share2__item_service_evernote .ya-share2__mobile-popup-badge {
      background-color: #24d666;
    }

    .ya-share2__item_service_evernote .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M6.277 7.109h1.517c.08 0 .16-.08.16-.16V5.313c0-.28.08-.559.159-.758l.04-.12L5.2 7.348l.16-.08c.239-.12.558-.16.917-.16zm11.654-.28c-.12-.638-.479-.917-.838-1.037-.36-.12-.718-.28-1.676-.4-.759-.08-1.557-.12-2.116-.12-.16-.438-.399-.917-1.317-1.156-.638-.16-1.796-.12-2.155-.08-.559.08-.758.319-.918.479-.16.16-.28.598-.28.878v1.556c0 .48-.318.838-.877.838H6.397c-.32 0-.559.04-.758.12-.16.12-.32.28-.4.4-.2.279-.239.598-.239.957 0 0 0 .28.08.798.04.4.479 3.033.878 3.911.16.36.28.48.599.639.718.32 2.354.639 3.152.758.759.08 1.278.32 1.557-.279 0 0 .04-.16.12-.36a6.3 6.3 0 00.28-1.915c0-.04.079-.04.079 0 0 .36-.08 1.557.838 1.876.36.12 1.118.24 1.876.32.678.079 1.197.358 1.197 2.114 0 1.078-.24 1.238-1.397 1.238-.958 0-1.317.04-1.317-.759 0-.598.599-.558 1.078-.558.2 0 .04-.16.04-.52 0-.398.24-.598 0-.598-1.557-.04-2.475 0-2.475 1.956 0 1.796.679 2.115 2.914 2.115 1.756 0 2.354-.04 3.073-2.275.16-.439.479-1.796.678-4.03.16-1.478-.12-5.788-.319-6.866zm-3.033 4.75c-.2 0-.32 0-.519.04h-.08s-.04 0-.04-.04v-.04c.08-.4.28-.878.878-.878.639.04.799.599.799 1.038v.04c0 .04-.04.04-.04.04-.04 0-.04 0-.04-.04-.28-.08-.599-.12-.958-.16z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_evernote .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M6.277 7.109h1.517c.08 0 .16-.08.16-.16V5.313c0-.28.08-.559.159-.758l.04-.12L5.2 7.348l.16-.08c.239-.12.558-.16.917-.16zm11.654-.28c-.12-.638-.479-.917-.838-1.037-.36-.12-.718-.28-1.676-.4-.759-.08-1.557-.12-2.116-.12-.16-.438-.399-.917-1.317-1.156-.638-.16-1.796-.12-2.155-.08-.559.08-.758.319-.918.479-.16.16-.28.598-.28.878v1.556c0 .48-.318.838-.877.838H6.397c-.32 0-.559.04-.758.12-.16.12-.32.28-.4.4-.2.279-.239.598-.239.957 0 0 0 .28.08.798.04.4.479 3.033.878 3.911.16.36.28.48.599.639.718.32 2.354.639 3.152.758.759.08 1.278.32 1.557-.279 0 0 .04-.16.12-.36a6.3 6.3 0 00.28-1.915c0-.04.079-.04.079 0 0 .36-.08 1.557.838 1.876.36.12 1.118.24 1.876.32.678.079 1.197.358 1.197 2.114 0 1.078-.24 1.238-1.397 1.238-.958 0-1.317.04-1.317-.759 0-.598.599-.558 1.078-.558.2 0 .04-.16.04-.52 0-.398.24-.598 0-.598-1.557-.04-2.475 0-2.475 1.956 0 1.796.679 2.115 2.914 2.115 1.756 0 2.354-.04 3.073-2.275.16-.439.479-1.796.678-4.03.16-1.478-.12-5.788-.319-6.866zm-3.033 4.75c-.2 0-.32 0-.519.04h-.08s-.04 0-.04-.04v-.04c.08-.4.28-.878.878-.878.639.04.799.599.799 1.038v.04c0 .04-.04.04-.04.04-.04 0-.04 0-.04-.04-.28-.08-.599-.12-.958-.16z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_linkedin .ya-share2__badge,
    .ya-share2__item_service_linkedin .ya-share2__mobile-popup-badge {
      background-color: #0083be;
    }

    .ya-share2__item_service_linkedin .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M4.246 8.954h3.41v10.281h-3.41zm1.725-4.935c-1.167 0-1.929.769-1.929 1.776 0 .987.74 1.777 1.884 1.777h.022c1.19 0 1.93-.79 1.93-1.777-.023-1.007-.74-1.776-1.907-1.776zm10.052 4.715c-1.81 0-2.62.997-3.073 1.698V8.976H9.54c.045.965 0 10.281 0 10.281h3.41v-5.742c0-.307.022-.614.112-.834.246-.613.807-1.25 1.75-1.25 1.233 0 1.727.944 1.727 2.325v5.501h3.41v-5.896c0-3.158-1.683-4.627-3.926-4.627z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_linkedin .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M4.246 8.954h3.41v10.281h-3.41zm1.725-4.935c-1.167 0-1.929.769-1.929 1.776 0 .987.74 1.777 1.884 1.777h.022c1.19 0 1.93-.79 1.93-1.777-.023-1.007-.74-1.776-1.907-1.776zm10.052 4.715c-1.81 0-2.62.997-3.073 1.698V8.976H9.54c.045.965 0 10.281 0 10.281h3.41v-5.742c0-.307.022-.614.112-.834.246-.613.807-1.25 1.75-1.25 1.233 0 1.727.944 1.727 2.325v5.501h3.41v-5.896c0-3.158-1.683-4.627-3.926-4.627z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_lj .ya-share2__badge,
    .ya-share2__item_service_lj .ya-share2__mobile-popup-badge {
      background-color: #0d425a;
    }

    .ya-share2__item_service_lj .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M17.815 13.3c.223 1.074.443 2.146.663 3.218.214 1.039.427 2.078.643 3.118.037.178-.148.385-.334.311-1.544-.565-3.063-1.135-4.585-1.706l-1.425-.534a.625.625 0 01-.318-.23l-7.39-8.903c-.067-.082-.082-.215-.06-.32.312-1.23.72-2.143 1.752-3.019C7.799 4.36 8.779 4.1 10.047 4.004c.156-.015.223.014.312.133l1.351 1.625v.001c1.968 2.367 3.935 4.733 5.897 7.099.109.124.18.275.208.438zM6.175 8.462c.69-1.795 2.3-3.004 3.835-3.301l-.185-.223a4.242 4.242 0 00-3.85 3.272l.2.252zm.504.601c.727-1.758 2.107-2.945 3.851-3.271l.89 1.06c-1.536.305-3.049 1.522-3.836 3.302l-.905-1.091zM9.364 8.9l3.926 4.719h-.002c.564.682-.014 2.656-.303 3.041l-4.89-5.89A6.12 6.12 0 019.364 8.9zm4.23 4.481L9.647 8.633c.69-.601 1.484-1.009 2.277-1.165l4.756 5.72c-.63.52-2.641.735-3.086.193zm3.36.298l.001-.001h-.001zm-2.93.526c1.03.208 2.32-.067 2.93-.526l.43 2.091.35 1.692c-.371.156-.69.386-.913.764l-1.528-.564-1.885-.712c.52-.853.69-1.922.616-2.745z' fill='%23FFF'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_lj .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M17.815 13.3c.223 1.074.443 2.146.663 3.218.214 1.039.427 2.078.643 3.118.037.178-.148.385-.334.311-1.544-.565-3.063-1.135-4.585-1.706l-1.425-.534a.625.625 0 01-.318-.23l-7.39-8.903c-.067-.082-.082-.215-.06-.32.312-1.23.72-2.143 1.752-3.019C7.799 4.36 8.779 4.1 10.047 4.004c.156-.015.223.014.312.133l1.351 1.625v.001c1.968 2.367 3.935 4.733 5.897 7.099.109.124.18.275.208.438zM6.175 8.462c.69-1.795 2.3-3.004 3.835-3.301l-.185-.223a4.242 4.242 0 00-3.85 3.272l.2.252zm.504.601c.727-1.758 2.107-2.945 3.851-3.271l.89 1.06c-1.536.305-3.049 1.522-3.836 3.302l-.905-1.091zM9.364 8.9l3.926 4.719h-.002c.564.682-.014 2.656-.303 3.041l-4.89-5.89A6.12 6.12 0 019.364 8.9zm4.23 4.481L9.647 8.633c.69-.601 1.484-1.009 2.277-1.165l4.756 5.72c-.63.52-2.641.735-3.086.193zm3.36.298l.001-.001h-.001zm-2.93.526c1.03.208 2.32-.067 2.93-.526l.43 2.091.35 1.692c-.371.156-.69.386-.913.764l-1.528-.564-1.885-.712c.52-.853.69-1.922.616-2.745z' fill='%23000'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_messenger .ya-share2__badge,
    .ya-share2__item_service_messenger .ya-share2__mobile-popup-badge {
      background-color: #03CECE;
    }

    .ya-share2__item_service_messenger .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M19.643 11.415L7.723 4.636a.703.703 0 00-1.048.62v1.826s3.961 1.542 4.284 1.662a.457.457 0 01.343.54c-.058.144-.18.128-.533.042-.352-.085-5.505-1.368-5.505-1.368a.62.62 0 00-.715.847l1.077 2.563s6.949.29 7.199.305c.247.015.393.134.397.327-.004.194-.15.312-.397.327-.25.014-7.199.305-7.199.305L4.55 15.196a.62.62 0 00.715.846s5.153-1.283 5.505-1.368c.353-.086.475-.102.533.042a.457.457 0 01-.343.54c-.323.12-4.284 1.663-4.284 1.663v1.825a.703.703 0 001.048.62l11.92-6.78a.658.658 0 000-1.169z' fill='%23FFF'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_messenger .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M19.643 11.415L7.723 4.636a.703.703 0 00-1.048.62v1.826s3.961 1.542 4.284 1.662a.457.457 0 01.343.54c-.058.144-.18.128-.533.042-.352-.085-5.505-1.368-5.505-1.368a.62.62 0 00-.715.847l1.077 2.563s6.949.29 7.199.305c.247.015.393.134.397.327-.004.194-.15.312-.397.327-.25.014-7.199.305-7.199.305L4.55 15.196a.62.62 0 00.715.846s5.153-1.283 5.505-1.368c.353-.086.475-.102.533.042a.457.457 0 01-.343.54c-.323.12-4.284 1.663-4.284 1.663v1.825a.703.703 0 001.048.62l11.92-6.78a.658.658 0 000-1.169z' fill='%23000'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_moimir .ya-share2__badge,
    .ya-share2__item_service_moimir .ya-share2__mobile-popup-badge {
      background-color: #168de2;
    }

    .ya-share2__item_service_moimir .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M8.889 9.667a1.333 1.333 0 100-2.667 1.333 1.333 0 000 2.667zm6.222 0a1.333 1.333 0 100-2.667 1.333 1.333 0 000 2.667zm4.77 6.108l-1.802-3.028a.879.879 0 00-1.188-.307.843.843 0 00-.313 1.166l.214.36a6.71 6.71 0 01-4.795 1.996 6.711 6.711 0 01-4.792-1.992l.217-.364a.844.844 0 00-.313-1.166.878.878 0 00-1.189.307l-1.8 3.028a.844.844 0 00.312 1.166.88.88 0 001.189-.307l.683-1.147a8.466 8.466 0 005.694 2.18 8.463 8.463 0 005.698-2.184l.685 1.151a.873.873 0 001.189.307.844.844 0 00.312-1.166z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_moimir .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M8.889 9.667a1.333 1.333 0 100-2.667 1.333 1.333 0 000 2.667zm6.222 0a1.333 1.333 0 100-2.667 1.333 1.333 0 000 2.667zm4.77 6.108l-1.802-3.028a.879.879 0 00-1.188-.307.843.843 0 00-.313 1.166l.214.36a6.71 6.71 0 01-4.795 1.996 6.711 6.711 0 01-4.792-1.992l.217-.364a.844.844 0 00-.313-1.166.878.878 0 00-1.189.307l-1.8 3.028a.844.844 0 00.312 1.166.88.88 0 001.189-.307l.683-1.147a8.466 8.466 0 005.694 2.18 8.463 8.463 0 005.698-2.184l.685 1.151a.873.873 0 001.189.307.844.844 0 00.312-1.166z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_odnoklassniki .ya-share2__badge,
    .ya-share2__item_service_odnoklassniki .ya-share2__mobile-popup-badge {
      background-color: #f70;
    }

    .ya-share2__item_service_odnoklassniki .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M14.83 10.77a3.951 3.951 0 0 1-5.604 0 3.951 3.951 0 0 1 0-5.604 3.95 3.95 0 0 1 5.604 0 3.951 3.951 0 0 1 0 5.604Zm-2.802-4.615c-.494 0-.942.2-1.271.53a1.79 1.79 0 0 0 0 2.542 1.789 1.789 0 0 0 2.543 0 1.789 1.789 0 0 0 0-2.543 1.839 1.839 0 0 0-1.272-.53Zm4.168 5.792 1.166 1.59c.059.082.047.188-.036.247-.977.8-2.119 1.33-3.308 1.613l2.249 4.332c.059.13-.024.271-.165.271H13.7a.206.206 0 0 1-.176-.118l-1.496-3.579-1.507 3.567a.181.181 0 0 1-.176.118H7.943c-.141 0-.224-.153-.165-.27l2.249-4.321a8.262 8.262 0 0 1-3.308-1.613c-.071-.06-.095-.177-.036-.248l1.166-1.589c.07-.094.188-.106.27-.035 1.096.93 2.45 1.542 3.898 1.542s2.79-.6 3.897-1.542c.094-.07.223-.06.282.035Z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_odnoklassniki .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M14.83 10.77a3.951 3.951 0 0 1-5.604 0 3.951 3.951 0 0 1 0-5.604 3.95 3.95 0 0 1 5.604 0 3.951 3.951 0 0 1 0 5.604Zm-2.802-4.615c-.494 0-.942.2-1.271.53a1.79 1.79 0 0 0 0 2.542 1.789 1.789 0 0 0 2.543 0 1.789 1.789 0 0 0 0-2.543 1.839 1.839 0 0 0-1.272-.53Zm4.168 5.792 1.166 1.59c.059.082.047.188-.036.247-.977.8-2.119 1.33-3.308 1.613l2.249 4.332c.059.13-.024.271-.165.271H13.7a.206.206 0 0 1-.176-.118l-1.496-3.579-1.507 3.567a.181.181 0 0 1-.176.118H7.943c-.141 0-.224-.153-.165-.27l2.249-4.321a8.262 8.262 0 0 1-3.308-1.613c-.071-.06-.095-.177-.036-.248l1.166-1.589c.07-.094.188-.106.27-.035 1.096.93 2.45 1.542 3.898 1.542s2.79-.6 3.897-1.542c.094-.07.223-.06.282.035Z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_pinterest .ya-share2__badge,
    .ya-share2__item_service_pinterest .ya-share2__mobile-popup-badge {
      background-color: #c20724;
    }

    .ya-share2__item_service_pinterest .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M6 9.742c0 1.58.599 2.986 1.884 3.51.21.087.4.003.46-.23.043-.16.144-.568.189-.738.06-.23.037-.31-.133-.512-.37-.436-.608-1.001-.608-1.802 0-2.322 1.74-4.402 4.53-4.402 2.471 0 3.829 1.508 3.829 3.522 0 2.65-1.174 4.887-2.917 4.887-.963 0-1.683-.795-1.452-1.77.276-1.165.812-2.421.812-3.262 0-.752-.405-1.38-1.24-1.38-.985 0-1.775 1.017-1.775 2.38 0 .867.293 1.454.293 1.454L8.69 16.406c-.352 1.487-.053 3.309-.028 3.492.015.11.155.136.22.054.09-.119 1.262-1.564 1.66-3.008.113-.409.647-2.526.647-2.526.32.61 1.254 1.145 2.248 1.145 2.957 0 4.964-2.693 4.964-6.298C18.4 6.539 16.089 4 12.576 4 8.204 4 6 7.13 6 9.742z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_pinterest .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M6 9.742c0 1.58.599 2.986 1.884 3.51.21.087.4.003.46-.23.043-.16.144-.568.189-.738.06-.23.037-.31-.133-.512-.37-.436-.608-1.001-.608-1.802 0-2.322 1.74-4.402 4.53-4.402 2.471 0 3.829 1.508 3.829 3.522 0 2.65-1.174 4.887-2.917 4.887-.963 0-1.683-.795-1.452-1.77.276-1.165.812-2.421.812-3.262 0-.752-.405-1.38-1.24-1.38-.985 0-1.775 1.017-1.775 2.38 0 .867.293 1.454.293 1.454L8.69 16.406c-.352 1.487-.053 3.309-.028 3.492.015.11.155.136.22.054.09-.119 1.262-1.564 1.66-3.008.113-.409.647-2.526.647-2.526.32.61 1.254 1.145 2.248 1.145 2.957 0 4.964-2.693 4.964-6.298C18.4 6.539 16.089 4 12.576 4 8.204 4 6 7.13 6 9.742z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_pocket .ya-share2__badge,
    .ya-share2__item_service_pocket .ya-share2__mobile-popup-badge {
      background-color: #ee4056;
    }

    .ya-share2__item_service_pocket .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M17.9 5c1.159 0 2.1.948 2.1 2.117v5.862c0 .108-.008.215-.024.32.016.156.024.314.024.473 0 3.36-3.582 6.085-8 6.085s-8-2.724-8-6.085c0-.159.008-.317.024-.473a2.148 2.148 0 01-.024-.32V7.117C4 5.948 4.94 5 6.1 5h11.8zM8.596 9.392L12 12.795l3.404-3.403a1.063 1.063 0 011.502 1.502l-4.132 4.131c-.21.21-.486.314-.76.311a1.062 1.062 0 01-.788-.31l-4.132-4.132a1.063 1.063 0 011.502-1.502z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_pocket .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M17.9 5c1.159 0 2.1.948 2.1 2.117v5.862c0 .108-.008.215-.024.32.016.156.024.314.024.473 0 3.36-3.582 6.085-8 6.085s-8-2.724-8-6.085c0-.159.008-.317.024-.473a2.148 2.148 0 01-.024-.32V7.117C4 5.948 4.94 5 6.1 5h11.8zM8.596 9.392L12 12.795l3.404-3.403a1.063 1.063 0 011.502 1.502l-4.132 4.131c-.21.21-.486.314-.76.311a1.062 1.062 0 01-.788-.31l-4.132-4.132a1.063 1.063 0 011.502-1.502z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_qzone .ya-share2__badge,
    .ya-share2__item_service_qzone .ya-share2__mobile-popup-badge {
      background-color: #f5b53c;
    }

    .ya-share2__item_service_qzone .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M17.367 14.463s-.105.148-.457.299l-.553.222.597 3.273c.062.282.25.983-.082 1.062-.17.04-.307-.067-.395-.121l-.769-.445-2.675-1.545c-.204-.122-.78-.546-1.093-.489-.205.038-.336.127-.483.216l-.77.445-2.39 1.386-.883.508c-.123.06-.301.058-.394-.025-.07-.063-.09-.253-.063-.388l.19-1.004.572-3.02c.047-.2.237-.975.166-1.137-.048-.107-.173-.196-.261-.267l-.61-.565-2.13-1.983c-.189-.153-.345-.345-.533-.496l-.235-.216c-.062-.078-.165-.235-.09-.369.142-.248.974-.218 1.335-.28l2.682-.31.82-.09c.146-.024.299-.004.413-.063.239-.123.51-.809.636-1.087l1.31-2.714c.151-.297.286-.603.431-.896.075-.15.133-.308.305-.356.162-.045.257.105.312.178.177.235.325.685.451.973l1.29 2.853c.104.238.363.964.54 1.074.266.166.858.108 1.227.172l2.841.292c.355.062 1.245.01 1.36.267.076.17-.072.314-.152.394l-.864.814-1.983 1.868c-.185.164-.77.637-.833.858-.04.14.02.414.088.722a95.62 95.62 0 01-1.182-.029c-.63-.007-2.616-.17-2.713-.178l-.84-.076c-.14-.023-.326.012-.4-.076v-.02c1.727-1.168 3.407-2.416 5.142-3.578l-.006-.044c-.146-.072-.359-.059-.54-.095-.385-.077-.79-.078-1.208-.147-.75-.124-1.59-.114-2.434-.114-1.172 0-2.329.03-3.35.21-.45.079-.894.095-1.309.197-.172.042-.358.03-.49.108l.007.012c.1.027.253.02.381.02l.928.019.808.025.813.032.591.032c.486.075 1.007.036 1.475.114.404.068.804.065 1.182.14.113.022.245.015.33.064v.006c-.039.094-.336.255-.432.318l-1.055.743-2.256 1.62-1.417.992c.003.048.024.035.045.061 1.15.167 2.52.258 3.77.262 1.298.005 2.465-.094 3.118-.193.561-.086 1.082-.147 1.653-.287.325-.08.521-.148.521-.148z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_qzone .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M17.367 14.463s-.105.148-.457.299l-.553.222.597 3.273c.062.282.25.983-.082 1.062-.17.04-.307-.067-.395-.121l-.769-.445-2.675-1.545c-.204-.122-.78-.546-1.093-.489-.205.038-.336.127-.483.216l-.77.445-2.39 1.386-.883.508c-.123.06-.301.058-.394-.025-.07-.063-.09-.253-.063-.388l.19-1.004.572-3.02c.047-.2.237-.975.166-1.137-.048-.107-.173-.196-.261-.267l-.61-.565-2.13-1.983c-.189-.153-.345-.345-.533-.496l-.235-.216c-.062-.078-.165-.235-.09-.369.142-.248.974-.218 1.335-.28l2.682-.31.82-.09c.146-.024.299-.004.413-.063.239-.123.51-.809.636-1.087l1.31-2.714c.151-.297.286-.603.431-.896.075-.15.133-.308.305-.356.162-.045.257.105.312.178.177.235.325.685.451.973l1.29 2.853c.104.238.363.964.54 1.074.266.166.858.108 1.227.172l2.841.292c.355.062 1.245.01 1.36.267.076.17-.072.314-.152.394l-.864.814-1.983 1.868c-.185.164-.77.637-.833.858-.04.14.02.414.088.722a95.62 95.62 0 01-1.182-.029c-.63-.007-2.616-.17-2.713-.178l-.84-.076c-.14-.023-.326.012-.4-.076v-.02c1.727-1.168 3.407-2.416 5.142-3.578l-.006-.044c-.146-.072-.359-.059-.54-.095-.385-.077-.79-.078-1.208-.147-.75-.124-1.59-.114-2.434-.114-1.172 0-2.329.03-3.35.21-.45.079-.894.095-1.309.197-.172.042-.358.03-.49.108l.007.012c.1.027.253.02.381.02l.928.019.808.025.813.032.591.032c.486.075 1.007.036 1.475.114.404.068.804.065 1.182.14.113.022.245.015.33.064v.006c-.039.094-.336.255-.432.318l-1.055.743-2.256 1.62-1.417.992c.003.048.024.035.045.061 1.15.167 2.52.258 3.77.262 1.298.005 2.465-.094 3.118-.193.561-.086 1.082-.147 1.653-.287.325-.08.521-.148.521-.148z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_reddit .ya-share2__badge,
    .ya-share2__item_service_reddit .ya-share2__mobile-popup-badge {
      background-color: #ff4500;
    }

    .ya-share2__item_service_reddit .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M16.542 10.63c-1.105-.636-2.494-1.033-4.025-1.118l.808-2.393 2.182.637c0 .963.78 1.742 1.743 1.742.964 0 1.758-.779 1.758-1.742C19.008 6.78 18.214 6 17.25 6c-.609 0-1.148.326-1.459.793l-2.65-.764a.482.482 0 00-.61.311l-1.063 3.172c-1.516.085-2.905.482-4.01 1.119a1.987 1.987 0 00-1.46-.623A1.995 1.995 0 004 12.004c0 .75.425 1.403 1.035 1.742-.029.17-.043.34-.043.51 0 2.62 3.146 4.744 7.015 4.744 3.855 0 7-2.124 7-4.744 0-.17-.013-.34-.042-.51A1.974 1.974 0 0020 12.004a1.995 1.995 0 00-1.998-1.996 2.01 2.01 0 00-1.46.623zM9.499 12.5a1.01 1.01 0 011.006 1.006.998.998 0 01-1.006.991.986.986 0 01-.992-.991.997.997 0 01.992-1.006zm5.002 0a.998.998 0 00-.992 1.006c0 .552.44.991.992.991a.998.998 0 001.006-.991 1.01 1.01 0 00-1.006-1.006zm-5.3 3.597a.484.484 0 01-.085-.694c.156-.226.482-.255.694-.085.567.44 1.474.68 2.197.68.709 0 1.616-.24 2.197-.68a.484.484 0 01.694.085.496.496 0 01-.085.694c-.737.58-1.885.907-2.806.907-.935 0-2.07-.326-2.806-.907zm8.05-7.59a.757.757 0 01-.752-.75c0-.426.34-.752.751-.752s.752.326.752.751c0 .41-.34.75-.752.75z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_reddit .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M16.542 10.63c-1.105-.636-2.494-1.033-4.025-1.118l.808-2.393 2.182.637c0 .963.78 1.742 1.743 1.742.964 0 1.758-.779 1.758-1.742C19.008 6.78 18.214 6 17.25 6c-.609 0-1.148.326-1.459.793l-2.65-.764a.482.482 0 00-.61.311l-1.063 3.172c-1.516.085-2.905.482-4.01 1.119a1.987 1.987 0 00-1.46-.623A1.995 1.995 0 004 12.004c0 .75.425 1.403 1.035 1.742-.029.17-.043.34-.043.51 0 2.62 3.146 4.744 7.015 4.744 3.855 0 7-2.124 7-4.744 0-.17-.013-.34-.042-.51A1.974 1.974 0 0020 12.004a1.995 1.995 0 00-1.998-1.996 2.01 2.01 0 00-1.46.623zM9.499 12.5a1.01 1.01 0 011.006 1.006.998.998 0 01-1.006.991.986.986 0 01-.992-.991.997.997 0 01.992-1.006zm5.002 0a.998.998 0 00-.992 1.006c0 .552.44.991.992.991a.998.998 0 001.006-.991 1.01 1.01 0 00-1.006-1.006zm-5.3 3.597a.484.484 0 01-.085-.694c.156-.226.482-.255.694-.085.567.44 1.474.68 2.197.68.709 0 1.616-.24 2.197-.68a.484.484 0 01.694.085.496.496 0 01-.085.694c-.737.58-1.885.907-2.806.907-.935 0-2.07-.326-2.806-.907zm8.05-7.59a.757.757 0 01-.752-.75c0-.426.34-.752.751-.752s.752.326.752.751c0 .41-.34.75-.752.75z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_renren .ya-share2__badge,
    .ya-share2__item_service_renren .ya-share2__mobile-popup-badge {
      background-color: #1760a7;
    }

    .ya-share2__item_service_renren .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.019 15.562l-.001-.003-.018.002a.055.055 0 00.019.001zM7.71 12.398l.146-.68c.048-.205.03-.452.03-.692V9.812L7.88 8c-.139 0-.278.043-.393.076-.358.102-.666.201-.962.352-1.158.59-2.022 1.565-2.387 2.944-.343 1.297-.007 2.652.522 3.507.118.19.269.48.44.61.135-.02.272-.15.375-.217a6.06 6.06 0 00.622-.452l.24-.229c.63-.506 1.075-1.346 1.373-2.193zm4.276 3.164h.02a.382.382 0 00-.019-.003v.003zm-3.01-.888l-.258-.575-.088-.264h-.01l-.264.498c-.176.288-.358.574-.557.839a6.5 6.5 0 01-.85.944l-.517.422.012.024.287.14c.206.091.43.173.657.235.788.217 1.811.177 2.545-.053.178-.055.643-.194.739-.305v-.017c-.177-.092-.324-.254-.47-.381a5.573 5.573 0 01-1.225-1.507zm10.884-3.302c-.365-1.379-1.23-2.354-2.387-2.944a5.277 5.277 0 00-.962-.352c-.115-.033-.254-.077-.393-.076l-.005 1.812v1.214c0 .24-.019.487.029.692l.147.68c.297.847.741 1.687 1.372 2.193l.24.23c.196.164.402.309.622.45.103.067.24.198.375.218.171-.13.322-.42.44-.61.529-.855.865-2.21.522-3.507zm-3.66 3.8c-.2-.265-.381-.55-.557-.839l-.264-.498h-.011l-.088.264-.258.575a5.576 5.576 0 01-1.226 1.507c-.145.127-.292.29-.469.38v.018c.096.111.561.25.739.305.734.23 1.757.27 2.545.053a4.85 4.85 0 00.657-.234l.287-.141a1.31 1.31 0 00.012-.024l-.516-.422a6.5 6.5 0 01-.85-.944zm-1.653-2.727c.068-.192.097-.402.146-.61.05-.21.024-.484.024-.727V9.753l-.006-1.741c-.015-.008-.02-.01-.047-.012-.197.047-.326.05-.592.14-.357.102-.685.275-.985.44-.289.16-.53.388-.78.587-.097.077-.199.19-.308.312l.01.01a1.19 1.19 0 00-.01.012l.36.47c.232.359.445.763.581 1.213.326 1.079.182 2.411-.235 3.273a4.9 4.9 0 01-.445.75l-.258.323a.018.018 0 01-.003.007c.004.007.01.016.012.022h.008c.395-.215.686-.574 1.027-.844.189-.15.354-.35.504-.54.404-.514.755-1.046.997-1.73zm-2.55 3.085l-.259-.323a4.903 4.903 0 01-.445-.75c-.417-.862-.561-2.194-.235-3.273.136-.45.35-.854.58-1.214L12 9.501l-.01-.011.01-.01a2.791 2.791 0 00-.308-.313c-.25-.2-.491-.427-.78-.586-.3-.166-.628-.339-.985-.44-.266-.09-.395-.094-.592-.141a.083.083 0 00-.047.012l-.006 1.741v1.355c0 .243-.026.517.024.727.049.208.078.418.146.61.242.684.593 1.216.997 1.73.15.19.315.39.505.54.34.27.63.629 1.026.844h.008c.001-.006.008-.015.012-.022a.019.019 0 01-.003-.007z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_renren .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.019 15.562l-.001-.003-.018.002a.055.055 0 00.019.001zM7.71 12.398l.146-.68c.048-.205.03-.452.03-.692V9.812L7.88 8c-.139 0-.278.043-.393.076-.358.102-.666.201-.962.352-1.158.59-2.022 1.565-2.387 2.944-.343 1.297-.007 2.652.522 3.507.118.19.269.48.44.61.135-.02.272-.15.375-.217a6.06 6.06 0 00.622-.452l.24-.229c.63-.506 1.075-1.346 1.373-2.193zm4.276 3.164h.02a.382.382 0 00-.019-.003v.003zm-3.01-.888l-.258-.575-.088-.264h-.01l-.264.498c-.176.288-.358.574-.557.839a6.5 6.5 0 01-.85.944l-.517.422.012.024.287.14c.206.091.43.173.657.235.788.217 1.811.177 2.545-.053.178-.055.643-.194.739-.305v-.017c-.177-.092-.324-.254-.47-.381a5.573 5.573 0 01-1.225-1.507zm10.884-3.302c-.365-1.379-1.23-2.354-2.387-2.944a5.277 5.277 0 00-.962-.352c-.115-.033-.254-.077-.393-.076l-.005 1.812v1.214c0 .24-.019.487.029.692l.147.68c.297.847.741 1.687 1.372 2.193l.24.23c.196.164.402.309.622.45.103.067.24.198.375.218.171-.13.322-.42.44-.61.529-.855.865-2.21.522-3.507zm-3.66 3.8c-.2-.265-.381-.55-.557-.839l-.264-.498h-.011l-.088.264-.258.575a5.576 5.576 0 01-1.226 1.507c-.145.127-.292.29-.469.38v.018c.096.111.561.25.739.305.734.23 1.757.27 2.545.053a4.85 4.85 0 00.657-.234l.287-.141a1.31 1.31 0 00.012-.024l-.516-.422a6.5 6.5 0 01-.85-.944zm-1.653-2.727c.068-.192.097-.402.146-.61.05-.21.024-.484.024-.727V9.753l-.006-1.741c-.015-.008-.02-.01-.047-.012-.197.047-.326.05-.592.14-.357.102-.685.275-.985.44-.289.16-.53.388-.78.587-.097.077-.199.19-.308.312l.01.01a1.19 1.19 0 00-.01.012l.36.47c.232.359.445.763.581 1.213.326 1.079.182 2.411-.235 3.273a4.9 4.9 0 01-.445.75l-.258.323a.018.018 0 01-.003.007c.004.007.01.016.012.022h.008c.395-.215.686-.574 1.027-.844.189-.15.354-.35.504-.54.404-.514.755-1.046.997-1.73zm-2.55 3.085l-.259-.323a4.903 4.903 0 01-.445-.75c-.417-.862-.561-2.194-.235-3.273.136-.45.35-.854.58-1.214L12 9.501l-.01-.011.01-.01a2.791 2.791 0 00-.308-.313c-.25-.2-.491-.427-.78-.586-.3-.166-.628-.339-.985-.44-.266-.09-.395-.094-.592-.141a.083.083 0 00-.047.012l-.006 1.741v1.355c0 .243-.026.517.024.727.049.208.078.418.146.61.242.684.593 1.216.997 1.73.15.19.315.39.505.54.34.27.63.629 1.026.844h.008c.001-.006.008-.015.012-.022a.019.019 0 01-.003-.007z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_sinaWeibo .ya-share2__badge,
    .ya-share2__item_service_sinaWeibo .ya-share2__mobile-popup-badge {
      background-color: #c53220;
    }

    .ya-share2__item_service_sinaWeibo .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M10.266 14.696c-.103.421.55.447.64.063.037-.191-.103-.332-.282-.332-.167 0-.333.128-.358.269zm-.128.945c.102-.498-.307-.869-.793-.843-.46.038-.843.358-.92.754-.115.511.307.882.793.844.46-.026.843-.345.92-.755zm3.797-3.157c-1.586-.997-3.707-1.01-5.42-.447-.857.28-1.764.818-2.301 1.495-.627.793-.882 1.815-.23 2.8.958 1.431 3.413 2.033 5.675 1.508 1.33-.307 2.749-1.048 3.35-2.326.562-1.177-.052-2.378-1.074-3.03zm-3.17.498c.945.167 1.7.755 1.827 1.739.243 1.854-2.173 3.336-4.026 2.327a1.933 1.933 0 01-.742-2.723c.435-.767 1.266-1.266 2.148-1.355a2.75 2.75 0 01.793.012zm6.11-.37c-.268-.18-.538-.281-.856-.383-.308-.103-.359-.154-.243-.46.076-.218.14-.41.166-.666.14-1.15-.793-1.495-1.854-1.406-.498.039-.92.167-1.355.307-.281.09-.806.384-.92.205-.064-.09.013-.23.038-.32.166-.626.23-1.496-.384-1.88-.447-.28-1.227-.204-1.7-.038-2.556.87-6.455 4.552-5.663 7.479.18.664.55 1.163.908 1.521 1.061 1.061 2.71 1.65 4.231 1.866 1.112.154 2.263.14 3.375-.064 1.815-.332 3.554-1.15 4.679-2.607.754-.972.997-2.352 0-3.235a3.334 3.334 0 00-.422-.319zm1.623-3.682c.652 1.483-.064 2.148.166 2.66.192.421.767.46 1.023.14.191-.243.294-.959.307-1.278a4.193 4.193 0 00-1.125-3.12c-.984-1.073-2.276-1.444-3.694-1.303-.256.025-.46.064-.601.217-.332.358-.166.882.294.959.384.063 1.342-.23 2.416.396.498.307.971.792 1.214 1.33zm-3.45-.562c-.282.345-.078.87.408.856.294-.012.358-.05.677.051.307.103.626.448.64.857.025.268-.282.895.32 1.061a.523.523 0 00.536-.166c.115-.128.166-.371.192-.575.089-.857-.333-1.598-1.01-2.02-.384-.23-1.445-.46-1.764-.064z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_sinaWeibo .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M10.266 14.696c-.103.421.55.447.64.063.037-.191-.103-.332-.282-.332-.167 0-.333.128-.358.269zm-.128.945c.102-.498-.307-.869-.793-.843-.46.038-.843.358-.92.754-.115.511.307.882.793.844.46-.026.843-.345.92-.755zm3.797-3.157c-1.586-.997-3.707-1.01-5.42-.447-.857.28-1.764.818-2.301 1.495-.627.793-.882 1.815-.23 2.8.958 1.431 3.413 2.033 5.675 1.508 1.33-.307 2.749-1.048 3.35-2.326.562-1.177-.052-2.378-1.074-3.03zm-3.17.498c.945.167 1.7.755 1.827 1.739.243 1.854-2.173 3.336-4.026 2.327a1.933 1.933 0 01-.742-2.723c.435-.767 1.266-1.266 2.148-1.355a2.75 2.75 0 01.793.012zm6.11-.37c-.268-.18-.538-.281-.856-.383-.308-.103-.359-.154-.243-.46.076-.218.14-.41.166-.666.14-1.15-.793-1.495-1.854-1.406-.498.039-.92.167-1.355.307-.281.09-.806.384-.92.205-.064-.09.013-.23.038-.32.166-.626.23-1.496-.384-1.88-.447-.28-1.227-.204-1.7-.038-2.556.87-6.455 4.552-5.663 7.479.18.664.55 1.163.908 1.521 1.061 1.061 2.71 1.65 4.231 1.866 1.112.154 2.263.14 3.375-.064 1.815-.332 3.554-1.15 4.679-2.607.754-.972.997-2.352 0-3.235a3.334 3.334 0 00-.422-.319zm1.623-3.682c.652 1.483-.064 2.148.166 2.66.192.421.767.46 1.023.14.191-.243.294-.959.307-1.278a4.193 4.193 0 00-1.125-3.12c-.984-1.073-2.276-1.444-3.694-1.303-.256.025-.46.064-.601.217-.332.358-.166.882.294.959.384.063 1.342-.23 2.416.396.498.307.971.792 1.214 1.33zm-3.45-.562c-.282.345-.078.87.408.856.294-.012.358-.05.677.051.307.103.626.448.64.857.025.268-.282.895.32 1.061a.523.523 0 00.536-.166c.115-.128.166-.371.192-.575.089-.857-.333-1.598-1.01-2.02-.384-.23-1.445-.46-1.764-.064z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_skype .ya-share2__badge,
    .ya-share2__item_service_skype .ya-share2__mobile-popup-badge {
      background-color: #00aff0;
    }

    .ya-share2__item_service_skype .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M19.537 13.698c.115-.52.176-1.06.176-1.614 0-4.155-3.415-7.524-7.63-7.524-.444 0-.88.038-1.304.11A4.444 4.444 0 008.425 4C5.981 4 4 5.954 4 8.364c0 .805.222 1.56.608 2.207a7.428 7.428 0 00-.155 1.513c0 4.156 3.416 7.4 7.63 7.4.477 0 .944-.044 1.397-.126.623.33 1.335.642 2.092.642 2.444 0 4.425-1.953 4.425-4.364a4.3 4.3 0 00-.46-1.938zm-3.974 1.457c-.294.418-.725.747-1.293.984-.567.238-1.239.356-2.016.356-.933 0-1.702-.162-2.308-.486a2.986 2.986 0 01-1.047-.934c-.268-.39-.403-.768-.403-1.137 0-.213.08-.395.242-.547a.855.855 0 01.615-.229.76.76 0 01.512.178c.14.119.26.294.358.527.12.278.25.51.39.695.139.185.336.34.589.46.254.12.587.18 1 .18.566 0 1.027-.12 1.382-.364.354-.243.532-.547.532-.91a.919.919 0 00-.287-.702 1.88 1.88 0 00-.741-.412 13.21 13.21 0 00-1.216-.303c-.678-.146-1.247-.318-1.703-.513-.458-.196-.822-.463-1.09-.8-.269-.34-.403-.759-.403-1.26 0-.48.142-.904.426-1.275.283-.372.693-.658 1.23-.858.537-.2 1.17-.299 1.895-.299.58 0 1.082.066 1.505.198.423.133.774.309 1.053.528.28.22.484.45.612.691.13.24.194.477.194.705 0 .21-.08.4-.241.567a.8.8 0 01-.603.252c-.22 0-.386-.05-.5-.151-.114-.101-.237-.266-.37-.495a2.27 2.27 0 00-.618-.768c-.241-.184-.627-.276-1.16-.276-.494 0-.893.1-1.196.3-.303.199-.455.44-.455.72 0 .173.053.324.155.45.103.128.245.235.426.326.18.091.363.162.547.214.185.052.49.126.916.225a15.47 15.47 0 011.446.38c.432.138.8.307 1.103.503.302.198.54.45.709.752.17.302.255.673.255 1.111 0 .525-.148.998-.442 1.417z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_skype .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M19.537 13.698c.115-.52.176-1.06.176-1.614 0-4.155-3.415-7.524-7.63-7.524-.444 0-.88.038-1.304.11A4.444 4.444 0 008.425 4C5.981 4 4 5.954 4 8.364c0 .805.222 1.56.608 2.207a7.428 7.428 0 00-.155 1.513c0 4.156 3.416 7.4 7.63 7.4.477 0 .944-.044 1.397-.126.623.33 1.335.642 2.092.642 2.444 0 4.425-1.953 4.425-4.364a4.3 4.3 0 00-.46-1.938zm-3.974 1.457c-.294.418-.725.747-1.293.984-.567.238-1.239.356-2.016.356-.933 0-1.702-.162-2.308-.486a2.986 2.986 0 01-1.047-.934c-.268-.39-.403-.768-.403-1.137 0-.213.08-.395.242-.547a.855.855 0 01.615-.229.76.76 0 01.512.178c.14.119.26.294.358.527.12.278.25.51.39.695.139.185.336.34.589.46.254.12.587.18 1 .18.566 0 1.027-.12 1.382-.364.354-.243.532-.547.532-.91a.919.919 0 00-.287-.702 1.88 1.88 0 00-.741-.412 13.21 13.21 0 00-1.216-.303c-.678-.146-1.247-.318-1.703-.513-.458-.196-.822-.463-1.09-.8-.269-.34-.403-.759-.403-1.26 0-.48.142-.904.426-1.275.283-.372.693-.658 1.23-.858.537-.2 1.17-.299 1.895-.299.58 0 1.082.066 1.505.198.423.133.774.309 1.053.528.28.22.484.45.612.691.13.24.194.477.194.705 0 .21-.08.4-.241.567a.8.8 0 01-.603.252c-.22 0-.386-.05-.5-.151-.114-.101-.237-.266-.37-.495a2.27 2.27 0 00-.618-.768c-.241-.184-.627-.276-1.16-.276-.494 0-.893.1-1.196.3-.303.199-.455.44-.455.72 0 .173.053.324.155.45.103.128.245.235.426.326.18.091.363.162.547.214.185.052.49.126.916.225a15.47 15.47 0 011.446.38c.432.138.8.307 1.103.503.302.198.54.45.709.752.17.302.255.673.255 1.111 0 .525-.148.998-.442 1.417z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_surfingbird .ya-share2__badge,
    .ya-share2__item_service_surfingbird .ya-share2__mobile-popup-badge {
      background-color: #30baff;
    }

    .ya-share2__item_service_surfingbird .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M17.315 8.49l-.214 1.987-3.436 3.382h-1.826l-.698 1.826v2.523l-2.47-.698 2.846-5.1L4 8.167l5.638.752L6.899 5l7.463 4.027 2.202-2.47h1.02L20 7.631z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_surfingbird .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M17.315 8.49l-.214 1.987-3.436 3.382h-1.826l-.698 1.826v2.523l-2.47-.698 2.846-5.1L4 8.167l5.638.752L6.899 5l7.463 4.027 2.202-2.47h1.02L20 7.631z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_telegram .ya-share2__badge,
    .ya-share2__item_service_telegram .ya-share2__mobile-popup-badge {
      background-color: #64a9dc;
    }

    .ya-share2__item_service_telegram .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18.92 6.089L4.747 11.555c-.967.388-.962.928-.176 1.168l3.534 1.104 1.353 4.146c.164.454.083.634.56.634.368 0 .53-.168.736-.368.13-.127.903-.88 1.767-1.719l3.677 2.717c.676.373 1.165.18 1.333-.628l2.414-11.374c.247-.99-.378-1.44-1.025-1.146zM8.66 13.573l7.967-5.026c.398-.242.763-.112.463.154l-6.822 6.155-.265 2.833-1.343-4.116z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_telegram .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18.92 6.089L4.747 11.555c-.967.388-.962.928-.176 1.168l3.534 1.104 1.353 4.146c.164.454.083.634.56.634.368 0 .53-.168.736-.368.13-.127.903-.88 1.767-1.719l3.677 2.717c.676.373 1.165.18 1.333-.628l2.414-11.374c.247-.99-.378-1.44-1.025-1.146zM8.66 13.573l7.967-5.026c.398-.242.763-.112.463.154l-6.822 6.155-.265 2.833-1.343-4.116z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_tencentWeibo .ya-share2__badge,
    .ya-share2__item_service_tencentWeibo .ya-share2__mobile-popup-badge {
      background-color: #53a9d7;
    }

    .ya-share2__item_service_tencentWeibo .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M8.813 6.01a4.397 4.397 0 00-4.326 6.121c.087.199.312.29.511.2a.382.382 0 00.206-.51 3.566 3.566 0 01-.286-1.668A3.616 3.616 0 018.76 6.79a3.615 3.615 0 013.366 3.84 3.615 3.615 0 01-4.65 3.218.39.39 0 00-.486.263.394.394 0 00.262.485c.315.093.647.152.977.174a4.397 4.397 0 004.677-4.087A4.398 4.398 0 008.813 6.01zm-1.348 5.658a1.67 1.67 0 10-.46-.655c-.274.27-.565.59-.854.966-1.022 1.315-2.224 3.694-2.148 7.007.006.204.157.484.355.497l.04.002c.213.015.394-.301.391-.516-.064-2.458.6-4.662 1.955-6.423.242-.316.488-.626.72-.878zm12.388 4.106c-1.307-.48-2.302-1.27-2.95-2.352a4.873 4.873 0 01-.354-.71.819.819 0 00.337-.36.829.829 0 00-.395-1.098.822.822 0 00-1.098.392.822.822 0 00.724 1.177c.091.237.218.516.39.81.483.812 1.431 1.912 3.196 2.558a.226.226 0 00.278-.113c0-.006.005-.01.007-.022a.224.224 0 00-.135-.282zm-3.767-1.676a2.04 2.04 0 01-1.707-3.042 2.039 2.039 0 012.784-.787 2.04 2.04 0 01.786 2.783 1.92 1.92 0 01-.268.378.223.223 0 00.014.314c.09.082.234.074.313-.016a2.489 2.489 0 10-4.017-2.89 2.493 2.493 0 002.08 3.708.224.224 0 00.015-.448z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_tencentWeibo .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M8.813 6.01a4.397 4.397 0 00-4.326 6.121c.087.199.312.29.511.2a.382.382 0 00.206-.51 3.566 3.566 0 01-.286-1.668A3.616 3.616 0 018.76 6.79a3.615 3.615 0 013.366 3.84 3.615 3.615 0 01-4.65 3.218.39.39 0 00-.486.263.394.394 0 00.262.485c.315.093.647.152.977.174a4.397 4.397 0 004.677-4.087A4.398 4.398 0 008.813 6.01zm-1.348 5.658a1.67 1.67 0 10-.46-.655c-.274.27-.565.59-.854.966-1.022 1.315-2.224 3.694-2.148 7.007.006.204.157.484.355.497l.04.002c.213.015.394-.301.391-.516-.064-2.458.6-4.662 1.955-6.423.242-.316.488-.626.72-.878zm12.388 4.106c-1.307-.48-2.302-1.27-2.95-2.352a4.873 4.873 0 01-.354-.71.819.819 0 00.337-.36.829.829 0 00-.395-1.098.822.822 0 00-1.098.392.822.822 0 00.724 1.177c.091.237.218.516.39.81.483.812 1.431 1.912 3.196 2.558a.226.226 0 00.278-.113c0-.006.005-.01.007-.022a.224.224 0 00-.135-.282zm-3.767-1.676a2.04 2.04 0 01-1.707-3.042 2.039 2.039 0 012.784-.787 2.04 2.04 0 01.786 2.783 1.92 1.92 0 01-.268.378.223.223 0 00.014.314c.09.082.234.074.313-.016a2.489 2.489 0 10-4.017-2.89 2.493 2.493 0 002.08 3.708.224.224 0 00.015-.448z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_tumblr .ya-share2__badge,
    .ya-share2__item_service_tumblr .ya-share2__mobile-popup-badge {
      background-color: #547093;
    }

    .ya-share2__item_service_tumblr .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.72 7.7h3.699v2.857h-3.7v4.102c0 .928-.01 1.463.087 1.726.098.262.343.534.61.69.355.213.758.32 1.214.32.81 0 1.616-.264 2.417-.79v2.522c-.683.322-1.302.55-1.857.678a7.94 7.94 0 01-1.798.195 4.905 4.905 0 01-1.724-.276 4.215 4.215 0 01-1.438-.79c-.399-.343-.673-.706-.826-1.09-.154-.386-.23-.945-.23-1.676v-5.611H7V8.29c.628-.203 1.357-.496 1.804-.877.45-.382.809-.84 1.08-1.374.272-.534.459-1.214.56-2.039h2.276v3.7z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_tumblr .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.72 7.7h3.699v2.857h-3.7v4.102c0 .928-.01 1.463.087 1.726.098.262.343.534.61.69.355.213.758.32 1.214.32.81 0 1.616-.264 2.417-.79v2.522c-.683.322-1.302.55-1.857.678a7.94 7.94 0 01-1.798.195 4.905 4.905 0 01-1.724-.276 4.215 4.215 0 01-1.438-.79c-.399-.343-.673-.706-.826-1.09-.154-.386-.23-.945-.23-1.676v-5.611H7V8.29c.628-.203 1.357-.496 1.804-.877.45-.382.809-.84 1.08-1.374.272-.534.459-1.214.56-2.039h2.276v3.7z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_twitter .ya-share2__badge,
    .ya-share2__item_service_twitter .ya-share2__mobile-popup-badge {
      background-color: #0f1419;
    }

    .ya-share2__item_service_twitter .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e %3cpath d='M13.5222 10.7749L19.4785 4H18.0671L12.8952 9.88256L8.76437 4H4L10.2466 12.8955L4 20H5.41155L10.8732 13.7878L15.2356 20H20L13.5222 10.7749ZM11.5889 12.9738L10.956 12.0881L5.92015 5.03974H8.0882L12.1522 10.728L12.7851 11.6137L18.0677 19.0075H15.8997L11.5889 12.9738Z' fill='%23fff'/%3e %3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_twitter .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e %3cpath d='M13.5222 10.7749L19.4785 4H18.0671L12.8952 9.88256L8.76437 4H4L10.2466 12.8955L4 20H5.41155L10.8732 13.7878L15.2356 20H20L13.5222 10.7749ZM11.5889 12.9738L10.956 12.0881L5.92015 5.03974H8.0882L12.1522 10.728L12.7851 11.6137L18.0677 19.0075H15.8997L11.5889 12.9738Z' fill='%23000'/%3e %3c/svg%3e");
    }

    .ya-share2__item_service_viber .ya-share2__badge,
    .ya-share2__item_service_viber .ya-share2__mobile-popup-badge {
      background-color: #7b519d;
    }

    .ya-share2__item_service_viber .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cg fill='%23FFF' fill-rule='evenodd'%3e%3cpath d='M18.434 15.574c-.484-.391-1.002-.743-1.511-1.102-1.016-.718-1.945-.773-2.703.38-.426.648-1.021.677-1.644.392-1.718-.782-3.044-1.989-3.821-3.743-.344-.777-.34-1.473.465-2.022.425-.29.854-.634.82-1.268-.045-.828-2.043-3.593-2.832-3.885a1.429 1.429 0 00-.984 0C4.373 4.95 3.606 6.48 4.34 8.292c2.19 5.405 6.043 9.167 11.349 11.463.302.13.638.183.808.23 1.208.012 2.623-1.158 3.032-2.318.393-1.117-.438-1.56-1.096-2.093zM12.485 4.88c3.879.6 5.668 2.454 6.162 6.38.045.363-.09.909.426.919.538.01.408-.528.413-.89.045-3.699-3.163-7.127-6.888-7.253-.281.04-.863-.195-.9.438-.024.427.466.357.787.406z'/%3e%3cpath d='M13.244 5.957c-.373-.045-.865-.222-.953.299-.09.546.458.49.811.57 2.395.538 3.23 1.414 3.624 3.802.057.349-.057.89.532.8.436-.066.278-.53.315-.802.02-2.293-1.936-4.38-4.329-4.669z'/%3e%3cpath d='M13.464 7.832c-.249.006-.493.033-.585.3-.137.4.152.496.446.544.983.158 1.5.74 1.598 1.725.027.268.195.484.452.454.356-.043.389-.361.378-.664.017-1.106-1.227-2.385-2.289-2.359z'/%3e%3c/g%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_viber .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cg fill='%23000' fill-rule='evenodd'%3e%3cpath d='M18.434 15.574c-.484-.391-1.002-.743-1.511-1.102-1.016-.718-1.945-.773-2.703.38-.426.648-1.021.677-1.644.392-1.718-.782-3.044-1.989-3.821-3.743-.344-.777-.34-1.473.465-2.022.425-.29.854-.634.82-1.268-.045-.828-2.043-3.593-2.832-3.885a1.429 1.429 0 00-.984 0C4.373 4.95 3.606 6.48 4.34 8.292c2.19 5.405 6.043 9.167 11.349 11.463.302.13.638.183.808.23 1.208.012 2.623-1.158 3.032-2.318.393-1.117-.438-1.56-1.096-2.093zM12.485 4.88c3.879.6 5.668 2.454 6.162 6.38.045.363-.09.909.426.919.538.01.408-.528.413-.89.045-3.699-3.163-7.127-6.888-7.253-.281.04-.863-.195-.9.438-.024.427.466.357.787.406z'/%3e%3cpath d='M13.244 5.957c-.373-.045-.865-.222-.953.299-.09.546.458.49.811.57 2.395.538 3.23 1.414 3.624 3.802.057.349-.057.89.532.8.436-.066.278-.53.315-.802.02-2.293-1.936-4.38-4.329-4.669z'/%3e%3cpath d='M13.464 7.832c-.249.006-.493.033-.585.3-.137.4.152.496.446.544.983.158 1.5.74 1.598 1.725.027.268.195.484.452.454.356-.043.389-.361.378-.664.017-1.106-1.227-2.385-2.289-2.359z'/%3e%3c/g%3e%3c/svg%3e");
    }

    .ya-share2__item_service_vkontakte .ya-share2__badge,
    .ya-share2__item_service_vkontakte .ya-share2__mobile-popup-badge {
      background-color: #07f;
    }

    .ya-share2__item_service_vkontakte .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.878 17.304c-5.411 0-8.695-3.755-8.823-9.994h2.74c.086 4.583 2.171 6.528 3.77 6.925V7.31h2.627v3.954c1.542-.17 3.155-1.97 3.698-3.954h2.584c-.414 2.441-2.17 4.24-3.412 4.983 1.242.6 3.24 2.17 4.011 5.01h-2.84c-.6-1.898-2.07-3.369-4.04-3.569v3.57h-.315Z' fill='%23fff'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_vkontakte .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.878 17.304c-5.411 0-8.695-3.755-8.823-9.994h2.74c.086 4.583 2.171 6.528 3.77 6.925V7.31h2.627v3.954c1.542-.17 3.155-1.97 3.698-3.954h2.584c-.414 2.441-2.17 4.24-3.412 4.983 1.242.6 3.24 2.17 4.011 5.01h-2.84c-.6-1.898-2.07-3.369-4.04-3.569v3.57h-.315Z' fill='%23000'/%3e%3c/svg%3e");
    }

    .ya-share2__item_service_whatsapp .ya-share2__badge,
    .ya-share2__item_service_whatsapp .ya-share2__mobile-popup-badge {
      background-color: #65bc54;
    }

    .ya-share2__item_service_whatsapp .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M20 11.794c0 4.304-3.517 7.794-7.855 7.794a7.87 7.87 0 01-3.796-.97L4 20l1.418-4.182a7.714 7.714 0 01-1.127-4.024C4.29 7.489 7.807 4 12.145 4S20 7.49 20 11.794zm-7.855-6.553c-3.641 0-6.603 2.94-6.603 6.553A6.48 6.48 0 006.8 15.636l-.825 2.433 2.537-.806a6.6 6.6 0 003.633 1.084c3.642 0 6.604-2.94 6.604-6.553s-2.962-6.553-6.604-6.553zm3.967 8.348c-.049-.08-.177-.128-.37-.223-.192-.095-1.139-.558-1.315-.621-.177-.064-.305-.096-.434.095a10.92 10.92 0 01-.61.749c-.112.128-.224.143-.416.048-.193-.096-.813-.297-1.549-.948a5.76 5.76 0 01-1.07-1.323c-.113-.191-.013-.295.084-.39.086-.086.192-.223.289-.334.096-.112.128-.191.192-.319s.032-.239-.016-.335c-.048-.095-.433-1.035-.594-1.418-.16-.382-.32-.318-.433-.318-.112 0-.24-.016-.369-.016a.71.71 0 00-.513.239c-.177.19-.674.653-.674 1.593s.69 1.848.786 1.976c.096.127 1.332 2.119 3.289 2.884 1.958.764 1.958.51 2.31.477.353-.031 1.14-.461 1.3-.908.16-.446.16-.829.113-.908z' fill='%23FFF' fill-rule='evenodd'/%3e%3c/svg%3e");
    }

    .ya-share2__container_color-scheme_whiteblack .ya-share2__item_service_whatsapp .ya-share2__icon {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M20 11.794c0 4.304-3.517 7.794-7.855 7.794a7.87 7.87 0 01-3.796-.97L4 20l1.418-4.182a7.714 7.714 0 01-1.127-4.024C4.29 7.489 7.807 4 12.145 4S20 7.49 20 11.794zm-7.855-6.553c-3.641 0-6.603 2.94-6.603 6.553A6.48 6.48 0 006.8 15.636l-.825 2.433 2.537-.806a6.6 6.6 0 003.633 1.084c3.642 0 6.604-2.94 6.604-6.553s-2.962-6.553-6.604-6.553zm3.967 8.348c-.049-.08-.177-.128-.37-.223-.192-.095-1.139-.558-1.315-.621-.177-.064-.305-.096-.434.095a10.92 10.92 0 01-.61.749c-.112.128-.224.143-.416.048-.193-.096-.813-.297-1.549-.948a5.76 5.76 0 01-1.07-1.323c-.113-.191-.013-.295.084-.39.086-.086.192-.223.289-.334.096-.112.128-.191.192-.319s.032-.239-.016-.335c-.048-.095-.433-1.035-.594-1.418-.16-.382-.32-.318-.433-.318-.112 0-.24-.016-.369-.016a.71.71 0 00-.513.239c-.177.19-.674.653-.674 1.593s.69 1.848.786 1.976c.096.127 1.332 2.119 3.289 2.884 1.958.764 1.958.51 2.31.477.353-.031 1.14-.461 1.3-.908.16-.446.16-.829.113-.908z' fill='%23000' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
  </style>
  <script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="openapi"
    src="//vk.com/js/api/openapi.js?120"></script>
  <script src="https://mc.yandex.ru/metrika/tag.js" defer=""></script>
</head>

<body class="is-anime-site">
  <div class="full-background"></div>
  <nav class="white" role="navigation">
    <div class="nav-wrapper container">
      <a id="logo-container" href="/" class="brand-logo"><span>Смотреть аниме онлайн. Anime 365.</span></a>
      <ul class="right hide-on-med-and-down" id="yw2">
        <li><a href="/">Главная</a></li>
        <li><a href="/notifications/index">Уведомления<i class="material-icons right grey-text text-darken-2"
              style="margin-left: 5px;">notifications_none</i></a></li>
        <li><a class="dropdown-button" data-activates="top-dropdown1" data-beloworigin="true" data-hover="true"
            href="/anime">Что посмотреть<i class="material-icons right grey-text text-darken-2"
              style="margin-left: 0;">arrow_drop_down</i></a>
          <ul class="dropdown-content" id="top-dropdown1"
            style="width: 167px; position: absolute; top: 64px; left: 842.2px; opacity: 1; display: none;">
            <li><a href="/anime">Каталог аниме</a></li>
            <li><a href="/catalog/search">Поиск по названию</a></li>
            <li><a href="/catalog/genres">Поиск по жанрам</a></li>
            <li><a href="/random">Случайные</a></li>
            <li><a href="/ongoing">Онгоинги</a></li>
            <li><a href="/translations/create">Добавить перевод</a></li>
          </ul>

        </li>
        <li><a href="/moments/index">Моменты</a></li>
        <li><a href="/about">О проекте</a></li>
        <li><a href="/users/login">Войти</a></li>
      </ul>
      <ul class="side-nav" id="nav-mobile" style="transform: translateX(-100%);">
        <li><a href="/"><i class="material-icons left grey-text text-darken-2">home</i>Главная</a></li>
        <li><a href="/notifications/index"><i
              class="material-icons left grey-text text-darken-2">notifications_none</i>Уведомления</a></li>
        <li><span class="divider"></span></li>
        <li><a class="subheader">Каталог аниме</a></li>
        <li><a href="/anime"><i class="material-icons left grey-text text-darken-2">view_list</i>Каталог аниме с
            фильтрами</a></li>
        <li><a href="/catalog/search"><i class="material-icons left grey-text text-darken-2">search</i>Поиск по
            названию</a></li>
        <li><a href="/catalog/genres"><i class="material-icons left grey-text text-darken-2">label</i>Поиск по
            жанрам</a></li>
        <li><a href="/random"><i class="material-icons left grey-text text-darken-2">shuffle</i>Случайные аниме</a></li>
        <li><a href="/ongoing"><i class="material-icons left grey-text text-darken-2">whatshot</i>Онгоинги</a></li>
        <li><span class="divider"></span></li>
        <li><a href="/moments/index"><i class="material-icons left grey-text text-darken-2">video_library</i>Моменты</a>
        </li>
        <li><a href="/about"><i class="material-icons left grey-text text-darken-2">info_outline</i>О проекте</a></li>
        <li><a href="/users/login"><i class="material-icons left grey-text text-darken-2">exit_to_app</i>Вход на
            сайт</a></li>
      </ul><a href="#" data-activates="nav-mobile" class="button-collapse"><i class="material-icons">menu</i></a>
    </div>
  </nav>

  <div class="body-container">





    <div class="section">
      <div class="container m-catalog-view">
        <div class="row">
          <div class="col s12 m8 l9 col-even">
            <div class="card">
              <div class="card-content">
                <div class="m-series-score hide-on-small-only" itemprop="aggregateRating" itemscope=""
                  itemtype="http://schema.org/AggregateRating">
                  <meta itemprop="bestRating" content="10">
                  <meta itemprop="worstRating" content="1">
                  <meta itemprop="ratingCount" content="37255">
                  <div class="m-series-score__title">Рейтинг аниме:</div>
                  <div class="m-series-score__value green-text"><span itemprop="ratingValue">7.9</span> из 10</div>
                </div>
                <h2 class="line-1">Так сложно любить отаку <span class="online-h">смотреть онлайн</span></h2>
                <h2 class="line-2">Wotaku ni Koi wa Muzukashii / Otakoi <span class="online-h">смотреть онлайн</span>
                </h2>
                <div class="m-genres-list"><a
                    class="m-genres-list__item waves-effect waves-light btn green darken-4 white-text"
                    href="/anime/genres/22-romantika"><i class="icon icon-romance left"></i>Романтика</a><a
                    class="m-genres-list__item waves-effect waves-light btn green darken-4 white-text"
                    href="/anime/genres/50-vzroslye-seyyu"><i class="icon icon- left"></i>Взрослые сейю</a><a
                    class="m-genres-list__item waves-effect waves-light btn green darken-4 white-text"
                    href="/anime/genres/69-kultura-otaku"><i class="icon icon- left"></i>Культура отаку</a><a
                    class="m-genres-list__item waves-effect waves-light btn green darken-4 white-text"
                    href="/anime/genres/48-rabota"><i class="icon icon- left"></i>Работа</a><a
                    class="m-genres-list__item waves-effect waves-light btn green darken-4 white-text"
                    href="/anime/genres/4-komediya"><i class="icon icon-comedy left"></i>Комедия</a></div>
                <div class="m-series-score hide-on-med-and-up">
                  <div class="m-series-score__title">Рейтинг аниме:</div>
                  <div class="m-series-score__value green-text"><span>7.9</span> из 10</div>
                </div>
              </div>
            </div><a href="/catalog/wotaku-ni-koi-wa-muzukashii-17750/smotret-online">
              <div class="card white-text grey darken-4">
                <div class="card-content m-black-box">
                  <div class="valign-wrapper">
                    <div class="valign center">
                      <div class="m-black-box-button"><i class="material-icons large left">play_circle_filled</i> Начать
                        просмотр</div>
                    </div>
                  </div>
                </div>
              </div>
            </a>
            <div class="card m-description-item">
              <div class="card-content">
                <h3>Описание аниме</h3>Ох уж эти отаку... Вечно молодые в душе и страдающие от неприятия окружающих
                настолько, что способны навеки отгородиться от мира в четырёх стенах. Всё потому, что многие излишне
                предвзято относятся к этим непомерно увлечённым своим хобби индивидам, избравшим подобный образ жизни, и
                привыкли их избегать. А ведь они такие же люди и могут испытывать чувства, подобные чувству безмерной
                любви или ярой ненависти.Ещё в детстве, не обделённый смазливой внешностью, Хиротака Нифудзи подавал
                признаки заядлого отаку: играл в видеоигры, смотрел аниме-сериалы, читал мангу и никогда этого не
                скрывал. Вот и в настоящее время этот его закалённый годами диагноз ни на йоту не поменялся. Правда,
                молодому человеку пришлось найти работу, чтобы прокормить себя, и он стал офисным планктоном. Наруми
                Момосэ, будучи писаной красавицей, была вынуждена бросить прежнее место работы и перевестись в другую
                фирму. Всё из-за того, что её тайное увлечение, как только становится явным, обычно рушит не только
                личную, но и повседневную жизнь. Она — фудзёси-отаку — самая что ни на есть отвязная любительница
                нетрадиционной мужской любви.Каково же было удивление Наруми, когда, проходя по коридору по дороге на
                своё новое рабочее место в новой компании, она заметила своего бывшего однокашника по начальной и
                средней школах — Хиротаку. Ведь именно ему она в своё время была обязана тем, что вообще встала на
                скользкую дорожку, с которой не сходит долгие годы.Аниме ответит на вопрос, смогут ли эти двое найти в
                себе силы смириться со своими недостатками и под влиянием совместного хобби проникнуться чувствами друг
                к другу.<div class="m-description-source">© shikimori</div>
              </div>
            </div>
            <div class="card m-description-item">
              <div class="card-content">
                <h3>Альтернативное описание аниме</h3>У Наруми Момосэ есть страшная тайна: она – отаку, и в придачу
                поклонница яоя! Когда ее секрет стал известен на предыдущей работе, Наруми пришлось уволиться, и в
                первый день в новой компании она торжественно клянется, что убьет каждого, кто ее выдаст. Cначала ничто
                не предвещало беды, но не прошло и нескольких часов, как Наруми встретила в офисе Хиротаку Нифудзи,
                который знает о ней слишком много. Надо же было такому случиться, что геймер Хиротака, ее бывший
                одноклассник, работает в той же самой фирме! Пока Наруми лихорадочно соображала, как обезвредить друга
                детства, тот успел проболтаться при коллегах. Не было бы счастья, да несчастье помогло – оказалось, что
                не одна Наруми скрывает под деловым костюмом увлечения, которых сложно ожидать от взрослого
                ответственного человека!<div class="m-description-source">© world-art</div>
              </div>
            </div>
            <div class="card m-connections-list">
              <div class="card-content">
                <h3>Порядок просмотра:</h3>
                <ul>
                  <li class="m-connections-list__item m-connections-list__item_current"><a
                      href="/catalog/wotaku-ni-koi-wa-muzukashii-17750">Wotaku ni Koi wa Muzukashii</a> <span
                      class="m-connections-list__type">ТВ сериал</span> 11 серий, <span
                      class="m-connections-list__year">2018</span>
                    <ul>
                      <li class="m-connections-list__item"><a
                          href="/catalog/otaku-ni-koi-wa-muzukashii-youth-19556">Otaku ni Koi wa Muzukashii: Youth</a>
                        <span class="m-connections-list__type">OVA</span> 3 серии, <span
                          class="m-connections-list__type">продолжение</span>, <span
                          class="m-connections-list__year">2019</span></li>
                    </ul>
                  </li>
                </ul>
              </div>
            </div>
            <div class="card">
              <div class="card-content m-episode-list">
                <h3>Смотреть онлайн:</h3>
                <div class="row">
                  <div class="col s12 m6 l4 x3"><a
                      class="m-episode-item waves-effect waves-light btn green darken-4 white-text"
                      href="/catalog/wotaku-ni-koi-wa-muzukashii-17750/1-seriya-170654"><i
                        class="material-icons left">play_circle_filled</i>1 серия</a></div>
                  <div class="col s12 m6 l4 x3"><a
                      class="m-episode-item waves-effect waves-light btn green darken-4 white-text"
                      href="/catalog/wotaku-ni-koi-wa-muzukashii-17750/2-seriya-172807"><i
                        class="material-icons left">play_circle_filled</i>2 серия</a></div>
                  <div class="col s12 m6 l4 x3"><a
                      class="m-episode-item waves-effect waves-light btn green darken-4 white-text"
                      href="/catalog/wotaku-ni-koi-wa-muzukashii-17750/3-seriya-173011"><i
                        class="material-icons left">play_circle_filled</i>3 серия</a></div>
                  <div class="col s12 m6 l4 x3"><a
                      class="m-episode-item waves-effect waves-light btn green darken-4 white-text"
                      href="/catalog/wotaku-ni-koi-wa-muzukashii-17750/4-seriya-173304"><i
                        class="material-icons left">play_circle_filled</i>4 серия</a></div>
                  <div class="col s12 m6 l4 x3"><a
                      class="m-episode-item waves-effect waves-light btn green darken-4 white-text"
                      href="/catalog/wotaku-ni-koi-wa-muzukashii-17750/5-seriya-173520"><i
                        class="material-icons left">play_circle_filled</i>5 серия</a></div>
                  <div class="col s12 m6 l4 x3"><a
                      class="m-episode-item waves-effect waves-light btn green darken-4 white-text"
                      href="/catalog/wotaku-ni-koi-wa-muzukashii-17750/6-seriya-173730"><i
                        class="material-icons left">play_circle_filled</i>6 серия</a></div>
                  <div class="col s12 m6 l4 x3"><a
                      class="m-episode-item waves-effect waves-light btn green darken-4 white-text"
                      href="/catalog/wotaku-ni-koi-wa-muzukashii-17750/7-seriya-174263"><i
                        class="material-icons left">play_circle_filled</i>7 серия</a></div>
                  <div class="col s12 m6 l4 x3"><a
                      class="m-episode-item waves-effect waves-light btn green darken-4 white-text"
                      href="/catalog/wotaku-ni-koi-wa-muzukashii-17750/8-seriya-174565"><i
                        class="material-icons left">play_circle_filled</i>8 серия</a></div>
                  <div class="col s12 m6 l4 x3"><a
                      class="m-episode-item waves-effect waves-light btn green darken-4 white-text"
                      href="/catalog/wotaku-ni-koi-wa-muzukashii-17750/9-seriya-174712"><i
                        class="material-icons left">play_circle_filled</i>9 серия</a></div>
                  <div class="col s12 m6 l4 x3"><a
                      class="m-episode-item waves-effect waves-light btn green darken-4 white-text"
                      href="/catalog/wotaku-ni-koi-wa-muzukashii-17750/10-seriya-174894"><i
                        class="material-icons left">play_circle_filled</i>10 серия</a></div>
                  <div class="col s12 m6 l4 x3"><a
                      class="m-episode-item waves-effect waves-light btn green darken-4 white-text"
                      href="/catalog/wotaku-ni-koi-wa-muzukashii-17750/11-seriya-175046"><i
                        class="material-icons left">play_circle_filled</i>11 серия</a></div>
                </div>
              </div>
            </div>
            <div class="card m-block-title">
              <div class="card-content">
                <div class="m-block-title__left">
                  <h3>Моменты:</h3>
                </div>

                <div class="m-block-title__right"><a class="waves-effect waves-light btn"
                    href="/moments/listBySeries/17750">Все</a></div>
              </div>
            </div>
            <div
              class="list-view m-moments-list-card m-moments-list-horiz list-view list-view-mod slick-initialized slick-slider slick-dotted"
              id="yw_moments_by_series" data-total="9" role="toolbar"><a
                class="btn-floating btn-large waves-effect waves-light slick-arrow slick-prev slick-disabled"
                aria-disabled="true" style="display: inline;"><i class="material-icons">chevron_left</i></a>
              <div class="keys" style="display:none" title="/catalog/wotaku-ni-koi-wa-muzukashii-17750">
                <span>218868</span><span>218865</span><span>218836</span><span>218833</span><span>218717</span><span>218716</span><span>218714</span><span>218704</span><span>218607</span><span>218602</span><span>218601</span><span>218236</span>
              </div>
              <div aria-live="polite" class="slick-list">
                <div class="slick-track" style="opacity: 1; width: 3185px; transform: translate3d(0px, 0px, 0px);"
                  role="listbox">
                  <div class="m-moment list-item slick-slide slick-current slick-active" id="moment-218868"
                    style="width: 225px;" tabindex="-1" role="option" aria-describedby="slick-slide00"
                    data-slick-index="0" aria-hidden="false">
                    <div class="page-anchor" id="yw_moments_by_series-page-0" data-page="0">
                    </div>
                    <div class="card m-moment__card">
                      <div class="m-moment__top card-image">
                        <a class="m-moment__img" dynpage-url="/moments/embed/218868?autoplay=1" href="/moments/218868"
                          style="height: 127.688px;" tabindex="0">
                          <div target="_blank" class="m-moment__thumb a"
                            style="background-image: url('/moments/thumbnail/218868.320x180.jpg?5');"><img
                              src="/moments/thumbnail/218868.320x180.jpg?5"
                              alt="Когда-то моё сердце и помыслы были чистыми"></div>
                          <div class="m-moment__duration card-title">
                            0:10 </div>
                          <i class="material-icons m-moment__play-button">play_arrow</i>
                        </a>
                      </div>
                      <div class="m-moment__bottom card-content">
                        <div class="m-moment__title-episode">
                          <div class="m-moment__title">
                            <a href="/moments/218868" tabindex="0">Когда-то моё сердце и помыслы были чистыми</a>
                          </div>
                          <div class="m-moment__episode">
                            из 11 серии </div>
                        </div>
                        <div class="m-moment__details">
                          <a href="/users/200266/moments" tabindex="0">
                            <div class="circle m-moment__author_avatar"
                              style="background-image: url('/users/avatars/200266.839843603.jpg');"></div>
                          </a>
                          <div class="m-moment__author">
                            <span class="m-moment-author-name"><a href="/users/200266/moments"
                                tabindex="0">Alex</a></span>
                          </div>
                          <div class="m-moment__meta">
                            <span class="m-moment__date">
                              1 месяц назад </span>
                            <span class="m-moment__views">
                              24&nbsp;просмотра </span>
                          </div>
                        </div>
                        <div class="m-clear-both"></div>
                      </div>
                    </div>
                  </div>
                  <div class="m-moment list-item slick-slide slick-active" id="moment-218865" style="width: 225px;"
                    tabindex="-1" role="option" aria-describedby="slick-slide00" data-slick-index="1"
                    aria-hidden="false">
                    <div class="card m-moment__card">
                      <div class="m-moment__top card-image">
                        <a class="m-moment__img" dynpage-url="/moments/embed/218865?autoplay=1" href="/moments/218865"
                          style="height: 127.688px;" tabindex="0">
                          <div target="_blank" class="m-moment__thumb a"
                            style="background-image: url('/moments/thumbnail/218865.320x180.jpg?5');"><img
                              src="/moments/thumbnail/218865.320x180.jpg?5" alt="Мудрые слова"></div>
                          <div class="m-moment__duration card-title">
                            0:11 </div>
                          <i class="material-icons m-moment__play-button">play_arrow</i>
                        </a>
                      </div>
                      <div class="m-moment__bottom card-content">
                        <div class="m-moment__title-episode">
                          <div class="m-moment__title">
                            <a href="/moments/218865" tabindex="0">Мудрые слова</a>
                          </div>
                          <div class="m-moment__episode">
                            из 11 серии </div>
                        </div>
                        <div class="m-moment__details">
                          <a href="/users/200266/moments" tabindex="0">
                            <div class="circle m-moment__author_avatar"
                              style="background-image: url('/users/avatars/200266.839843603.jpg');"></div>
                          </a>
                          <div class="m-moment__author">
                            <span class="m-moment-author-name"><a href="/users/200266/moments"
                                tabindex="0">Alex</a></span>
                          </div>
                          <div class="m-moment__meta">
                            <span class="m-moment__date">
                              1 месяц назад </span>
                            <span class="m-moment__views">
                              31&nbsp;просмотр </span>
                          </div>
                        </div>
                        <div class="m-clear-both"></div>
                      </div>
                    </div>
                  </div>
                  <div class="m-moment list-item slick-slide slick-active" id="moment-218836" style="width: 225px;"
                    tabindex="-1" role="option" aria-describedby="slick-slide00" data-slick-index="2"
                    aria-hidden="false">
                    <div class="card m-moment__card">
                      <div class="m-moment__top card-image">
                        <a class="m-moment__img" dynpage-url="/moments/embed/218836?autoplay=1" href="/moments/218836"
                          style="height: 127.688px;" tabindex="0">
                          <div target="_blank" class="m-moment__thumb a"
                            style="background-image: url('/moments/thumbnail/218836.320x180.jpg?5');"><img
                              src="/moments/thumbnail/218836.320x180.jpg?5" alt="Не забывайте очки дома 👓"></div>
                          <div class="m-moment__duration card-title">
                            1:09 </div>
                          <i class="material-icons m-moment__play-button">play_arrow</i>
                        </a>
                      </div>
                      <div class="m-moment__bottom card-content">
                        <div class="m-moment__title-episode">
                          <div class="m-moment__title">
                            <a href="/moments/218836" tabindex="0">Не забывайте очки дома 👓</a>
                          </div>
                          <div class="m-moment__episode">
                            из 10 серии </div>
                        </div>
                        <div class="m-moment__details">
                          <a href="/users/200266/moments" tabindex="0">
                            <div class="circle m-moment__author_avatar"
                              style="background-image: url('/users/avatars/200266.839843603.jpg');"></div>
                          </a>
                          <div class="m-moment__author">
                            <span class="m-moment-author-name"><a href="/users/200266/moments"
                                tabindex="0">Alex</a></span>
                          </div>
                          <div class="m-moment__meta">
                            <span class="m-moment__date">
                              1 месяц назад </span>
                            <span class="m-moment__views">
                              26&nbsp;просмотров </span>
                          </div>
                        </div>
                        <div class="m-clear-both"></div>
                      </div>
                    </div>
                  </div>
                  <div class="m-moment list-item slick-slide" id="moment-218833" style="width: 225px;" tabindex="-1"
                    role="option" aria-describedby="slick-slide01" data-slick-index="3" aria-hidden="true">
                    <div class="card m-moment__card">
                      <div class="m-moment__top card-image">
                        <a class="m-moment__img" dynpage-url="/moments/embed/218833?autoplay=1" href="/moments/218833"
                          style="height: 127.688px;" tabindex="-1">
                          <div target="_blank" class="m-moment__thumb a"
                            style="background-image: url('/moments/thumbnail/218833.320x180.jpg?5');"><img
                              src="/moments/thumbnail/218833.320x180.jpg?5" alt="Ваш скриншот был сохранён 😄"></div>
                          <div class="m-moment__duration card-title">
                            0:14 </div>
                          <i class="material-icons m-moment__play-button">play_arrow</i>
                        </a>
                      </div>
                      <div class="m-moment__bottom card-content">
                        <div class="m-moment__title-episode">
                          <div class="m-moment__title">
                            <a href="/moments/218833" tabindex="-1">Ваш скриншот был сохранён 😄</a>
                          </div>
                          <div class="m-moment__episode">
                            из 10 серии </div>
                        </div>
                        <div class="m-moment__details">
                          <a href="/users/200266/moments" tabindex="-1">
                            <div class="circle m-moment__author_avatar"
                              style="background-image: url('/users/avatars/200266.839843603.jpg');"></div>
                          </a>
                          <div class="m-moment__author">
                            <span class="m-moment-author-name"><a href="/users/200266/moments"
                                tabindex="-1">Alex</a></span>
                          </div>
                          <div class="m-moment__meta">
                            <span class="m-moment__date">
                              1 месяц назад </span>
                            <span class="m-moment__views">
                              14&nbsp;просмотров </span>
                          </div>
                        </div>
                        <div class="m-clear-both"></div>
                      </div>
                    </div>
                  </div>
                  <div class="m-moment list-item slick-slide" id="moment-218717" style="width: 225px;" tabindex="-1"
                    role="option" aria-describedby="slick-slide01" data-slick-index="4" aria-hidden="true">
                    <div class="card m-moment__card">
                      <div class="m-moment__top card-image">
                        <a class="m-moment__img" dynpage-url="/moments/embed/218717?autoplay=1" href="/moments/218717"
                          style="height: 127.688px;" tabindex="-1">
                          <div target="_blank" class="m-moment__thumb a"
                            style="background-image: url('/moments/thumbnail/218717.320x180.jpg?5');"><img
                              src="/moments/thumbnail/218717.320x180.jpg?5" alt="Жуёт и смотрит 👀"></div>
                          <div class="m-moment__duration card-title">
                            0:03 </div>
                          <i class="material-icons m-moment__play-button">play_arrow</i>
                        </a>
                      </div>
                      <div class="m-moment__bottom card-content">
                        <div class="m-moment__title-episode">
                          <div class="m-moment__title">
                            <a href="/moments/218717" tabindex="-1">Жуёт и смотрит 👀</a>
                          </div>
                          <div class="m-moment__episode">
                            из 9 серии </div>
                        </div>
                        <div class="m-moment__details">
                          <a href="/users/200266/moments" tabindex="-1">
                            <div class="circle m-moment__author_avatar"
                              style="background-image: url('/users/avatars/200266.839843603.jpg');"></div>
                          </a>
                          <div class="m-moment__author">
                            <span class="m-moment-author-name"><a href="/users/200266/moments"
                                tabindex="-1">Alex</a></span>
                          </div>
                          <div class="m-moment__meta">
                            <span class="m-moment__date">
                              1 месяц назад </span>
                            <span class="m-moment__views">
                              24&nbsp;просмотра </span>
                          </div>
                        </div>
                        <div class="m-clear-both"></div>
                      </div>
                    </div>
                  </div>
                  <div class="m-moment list-item slick-slide" id="moment-218716" style="width: 225px;" tabindex="-1"
                    role="option" aria-describedby="slick-slide01" data-slick-index="5" aria-hidden="true">
                    <div class="card m-moment__card">
                      <div class="m-moment__top card-image">
                        <a class="m-moment__img" dynpage-url="/moments/embed/218716?autoplay=1" href="/moments/218716"
                          style="height: 127.688px;" tabindex="-1">
                          <div target="_blank" class="m-moment__thumb a"
                            style="background-image: url('/moments/thumbnail/218716.320x180.jpg?5');"><img
                              src="/moments/thumbnail/218716.320x180.jpg?5" alt="Кушает (гифка)"></div>
                          <div class="m-moment__duration card-title">
                            0:02 </div>
                          <i class="material-icons m-moment__play-button">play_arrow</i>
                        </a>
                      </div>
                      <div class="m-moment__bottom card-content">
                        <div class="m-moment__title-episode">
                          <div class="m-moment__title">
                            <a href="/moments/218716" tabindex="-1">Кушает (гифка)</a>
                          </div>
                          <div class="m-moment__episode">
                            из 9 серии </div>
                        </div>
                        <div class="m-moment__details">
                          <a href="/users/200266/moments" tabindex="-1">
                            <div class="circle m-moment__author_avatar"
                              style="background-image: url('/users/avatars/200266.839843603.jpg');"></div>
                          </a>
                          <div class="m-moment__author">
                            <span class="m-moment-author-name"><a href="/users/200266/moments"
                                tabindex="-1">Alex</a></span>
                          </div>
                          <div class="m-moment__meta">
                            <span class="m-moment__date">
                              1 месяц назад </span>
                            <span class="m-moment__views">
                              8&nbsp;просмотров </span>
                          </div>
                        </div>
                        <div class="m-clear-both"></div>
                      </div>
                    </div>
                  </div>
                  <div class="m-moment list-item slick-slide" id="moment-218714" style="width: 225px;" tabindex="-1"
                    role="option" aria-describedby="slick-slide02" data-slick-index="6" aria-hidden="true">
                    <div class="card m-moment__card">
                      <div class="m-moment__top card-image">
                        <a class="m-moment__img" dynpage-url="/moments/embed/218714?autoplay=1" href="/moments/218714"
                          style="height: 127.688px;" tabindex="-1">
                          <div target="_blank" class="m-moment__thumb a"
                            style="background-image: url('/moments/thumbnail/218714.320x180.jpg?5');"><img
                              src="/moments/thumbnail/218714.320x180.jpg?5" alt="Кушает и смотрит 👀"></div>
                          <div class="m-moment__duration card-title">
                            0:08 </div>
                          <i class="material-icons m-moment__play-button">play_arrow</i>
                        </a>
                      </div>
                      <div class="m-moment__bottom card-content">
                        <div class="m-moment__title-episode">
                          <div class="m-moment__title">
                            <a href="/moments/218714" tabindex="-1">Кушает и смотрит 👀</a>
                          </div>
                          <div class="m-moment__episode">
                            из 9 серии </div>
                        </div>
                        <div class="m-moment__details">
                          <a href="/users/200266/moments" tabindex="-1">
                            <div class="circle m-moment__author_avatar"
                              style="background-image: url('/users/avatars/200266.839843603.jpg');"></div>
                          </a>
                          <div class="m-moment__author">
                            <span class="m-moment-author-name"><a href="/users/200266/moments"
                                tabindex="-1">Alex</a></span>
                          </div>
                          <div class="m-moment__meta">
                            <span class="m-moment__date">
                              1 месяц назад </span>
                            <span class="m-moment__views">
                              14&nbsp;просмотров </span>
                          </div>
                        </div>
                        <div class="m-clear-both"></div>
                      </div>
                    </div>
                  </div>
                  <div class="m-moment list-item slick-slide" id="moment-218704" style="width: 225px;" tabindex="-1"
                    role="option" aria-describedby="slick-slide02" data-slick-index="7" aria-hidden="true">
                    <div class="card m-moment__card">
                      <div class="m-moment__top card-image">
                        <a class="m-moment__img" dynpage-url="/moments/embed/218704?autoplay=1" href="/moments/218704"
                          style="height: 127.688px;" tabindex="-1">
                          <div target="_blank" class="m-moment__thumb a"
                            style="background-image: url('/moments/thumbnail/218704.320x180.jpg?5');"><img
                              src="/moments/thumbnail/218704.320x180.jpg?5" alt="Нормалфаг mode"></div>
                          <div class="m-moment__duration card-title">
                            0:29 </div>
                          <i class="material-icons m-moment__play-button">play_arrow</i>
                        </a>
                      </div>
                      <div class="m-moment__bottom card-content">
                        <div class="m-moment__title-episode">
                          <div class="m-moment__title">
                            <a href="/moments/218704" tabindex="-1">Нормалфаг mode</a>
                          </div>
                          <div class="m-moment__episode">
                            из 9 серии </div>
                        </div>
                        <div class="m-moment__details">
                          <a href="/users/200266/moments" tabindex="-1">
                            <div class="circle m-moment__author_avatar"
                              style="background-image: url('/users/avatars/200266.839843603.jpg');"></div>
                          </a>
                          <div class="m-moment__author">
                            <span class="m-moment-author-name"><a href="/users/200266/moments"
                                tabindex="-1">Alex</a></span>
                          </div>
                          <div class="m-moment__meta">
                            <span class="m-moment__date">
                              1 месяц назад </span>
                            <span class="m-moment__views">
                              20&nbsp;просмотров </span>
                          </div>
                        </div>
                        <div class="m-clear-both"></div>
                      </div>
                    </div>
                  </div>
                  <div class="m-moment list-item slick-slide" id="moment-218607" style="width: 225px;" tabindex="-1"
                    role="option" aria-describedby="slick-slide02" data-slick-index="8" aria-hidden="true">
                    <div class="card m-moment__card">
                      <div class="m-moment__top card-image">
                        <a class="m-moment__img" dynpage-url="/moments/embed/218607?autoplay=1" href="/moments/218607"
                          style="height: 127.688px;" tabindex="-1">
                          <div target="_blank" class="m-moment__thumb a"
                            style="background-image: url('/moments/thumbnail/218607.320x180.jpg?5');"><img
                              src="/moments/thumbnail/218607.320x180.jpg?5" alt="Покась 👋"></div>
                          <div class="m-moment__duration card-title">
                            0:02 </div>
                          <i class="material-icons m-moment__play-button">play_arrow</i>
                        </a>
                      </div>
                      <div class="m-moment__bottom card-content">
                        <div class="m-moment__title-episode">
                          <div class="m-moment__title">
                            <a href="/moments/218607" tabindex="-1">Покась 👋</a>
                          </div>
                          <div class="m-moment__episode">
                            из 7 серии </div>
                        </div>
                        <div class="m-moment__details">
                          <a href="/users/200266/moments" tabindex="-1">
                            <div class="circle m-moment__author_avatar"
                              style="background-image: url('/users/avatars/200266.839843603.jpg');"></div>
                          </a>
                          <div class="m-moment__author">
                            <span class="m-moment-author-name"><a href="/users/200266/moments"
                                tabindex="-1">Alex</a></span>
                          </div>
                          <div class="m-moment__meta">
                            <span class="m-moment__date">
                              2 месяца назад </span>
                            <span class="m-moment__views">
                              9&nbsp;просмотров </span>
                          </div>
                        </div>
                        <div class="m-clear-both"></div>
                      </div>
                    </div>
                  </div>
                  <div class="m-moment list-item slick-slide" id="moment-218602" style="width: 225px;" tabindex="-1"
                    role="option" aria-describedby="slick-slide03" data-slick-index="9" aria-hidden="true">
                    <div class="card m-moment__card">
                      <div class="m-moment__top card-image">
                        <a class="m-moment__img" dynpage-url="/moments/embed/218602?autoplay=1" href="/moments/218602"
                          style="height: 127.688px;" tabindex="-1">
                          <div target="_blank" class="m-moment__thumb a"
                            style="background-image: url('/moments/thumbnail/218602.320x180.jpg?5');"><img
                              src="/moments/thumbnail/218602.320x180.jpg?5" alt="Ваш скриншот был сохранён"></div>
                          <div class="m-moment__duration card-title">
                            0:22 </div>
                          <i class="material-icons m-moment__play-button">play_arrow</i>
                        </a>
                      </div>
                      <div class="m-moment__bottom card-content">
                        <div class="m-moment__title-episode">
                          <div class="m-moment__title">
                            <a href="/moments/218602" tabindex="-1">Ваш скриншот был сохранён</a>
                          </div>
                          <div class="m-moment__episode">
                            из 7 серии </div>
                        </div>
                        <div class="m-moment__details">
                          <a href="/users/200266/moments" tabindex="-1">
                            <div class="circle m-moment__author_avatar"
                              style="background-image: url('/users/avatars/200266.839843603.jpg');"></div>
                          </a>
                          <div class="m-moment__author">
                            <span class="m-moment-author-name"><a href="/users/200266/moments"
                                tabindex="-1">Alex</a></span>
                          </div>
                          <div class="m-moment__meta">
                            <span class="m-moment__date">
                              2 месяца назад </span>
                            <span class="m-moment__views">
                              31&nbsp;просмотр </span>
                          </div>
                        </div>
                        <div class="m-clear-both"></div>
                      </div>
                    </div>
                  </div>
                  <div class="m-moment list-item slick-slide" id="moment-218601" style="width: 225px;" tabindex="-1"
                    role="option" aria-describedby="slick-slide03" data-slick-index="10" aria-hidden="true">
                    <div class="card m-moment__card">
                      <div class="m-moment__top card-image">
                        <a class="m-moment__img" dynpage-url="/moments/embed/218601?autoplay=1" href="/moments/218601"
                          style="height: 127.688px;" tabindex="-1">
                          <div target="_blank" class="m-moment__thumb a"
                            style="background-image: url('/moments/thumbnail/218601.320x180.jpg?5');"><img
                              src="/moments/thumbnail/218601.320x180.jpg?5" alt="Кавайный ассасин"></div>
                          <div class="m-moment__duration card-title">
                            0:16 </div>
                          <i class="material-icons m-moment__play-button">play_arrow</i>
                        </a>
                      </div>
                      <div class="m-moment__bottom card-content">
                        <div class="m-moment__title-episode">
                          <div class="m-moment__title">
                            <a href="/moments/218601" tabindex="-1">Кавайный ассасин</a>
                          </div>
                          <div class="m-moment__episode">
                            из 7 серии </div>
                        </div>
                        <div class="m-moment__details">
                          <a href="/users/200266/moments" tabindex="-1">
                            <div class="circle m-moment__author_avatar"
                              style="background-image: url('/users/avatars/200266.839843603.jpg');"></div>
                          </a>
                          <div class="m-moment__author">
                            <span class="m-moment-author-name"><a href="/users/200266/moments"
                                tabindex="-1">Alex</a></span>
                          </div>
                          <div class="m-moment__meta">
                            <span class="m-moment__date">
                              2 месяца назад </span>
                            <span class="m-moment__views">
                              16&nbsp;просмотров </span>
                          </div>
                        </div>
                        <div class="m-clear-both"></div>
                      </div>
                    </div>
                  </div>
                  <div class="m-moment list-item slick-slide" id="moment-218236" style="width: 225px;" tabindex="-1"
                    role="option" aria-describedby="slick-slide03" data-slick-index="11" aria-hidden="true">
                    <div class="card m-moment__card">
                      <div class="m-moment__top card-image">
                        <a class="m-moment__img" dynpage-url="/moments/embed/218236?autoplay=1" href="/moments/218236"
                          style="height: 127.688px;" tabindex="-1">
                          <div target="_blank" class="m-moment__thumb a"
                            style="background-image: url('/moments/thumbnail/218236.320x180.jpg?5');"><img
                              src="/moments/thumbnail/218236.320x180.jpg?5" alt="Love is... Задротить вместе 👍"></div>
                          <div class="m-moment__duration card-title">
                            0:14 </div>
                          <i class="material-icons m-moment__play-button">play_arrow</i>
                        </a>
                      </div>
                      <div class="m-moment__bottom card-content">
                        <div class="m-moment__title-episode">
                          <div class="m-moment__title">
                            <a href="/moments/218236" tabindex="-1">Love is... Задротить вместе 👍</a>
                          </div>
                          <div class="m-moment__episode">
                            из 6 серии </div>
                        </div>
                        <div class="m-moment__details">
                          <a href="/users/200266/moments" tabindex="-1">
                            <div class="circle m-moment__author_avatar"
                              style="background-image: url('/users/avatars/200266.839843603.jpg');"></div>
                          </a>
                          <div class="m-moment__author">
                            <span class="m-moment-author-name"><a href="/users/200266/moments"
                                tabindex="-1">Alex</a></span>
                          </div>
                          <div class="m-moment__meta">
                            <span class="m-moment__date">
                              2 месяца назад </span>
                            <span class="m-moment__views">
                              34&nbsp;просмотра </span>
                          </div>
                        </div>
                        <div class="m-clear-both"></div>
                      </div>
                    </div>
                  </div>
                  <div class="load-more-wrapper slick-slide" style="width: 225px;" tabindex="-1" role="option"
                    aria-describedby="slick-slide04" data-slick-index="12" aria-hidden="true">
                    <div class="load-more-trigger">
                    </div><a style="" class="load-more btn waves-effect waves-light orange darken-4 white-text"
                      href="/moments/listBySeries/17750?recent=1&amp;moments-page=2" data-page="1" tabindex="-1">
                      Еще</a>
                    <div class="load-more-progress " style="display:none">

                      <div class="preloader-wrapper small active">
                        <div class="spinner-layer spinner-blue">
                          <div class="circle-clipper left">
                            <div class="circle"></div>
                          </div>
                          <div class="gap-patch">
                            <div class="circle"></div>
                          </div>
                          <div class="circle-clipper right">
                            <div class="circle"></div>
                          </div>
                        </div>

                        <div class="spinner-layer spinner-red">
                          <div class="circle-clipper left">
                            <div class="circle"></div>
                          </div>
                          <div class="gap-patch">
                            <div class="circle"></div>
                          </div>
                          <div class="circle-clipper right">
                            <div class="circle"></div>
                          </div>
                        </div>

                        <div class="spinner-layer spinner-yellow">
                          <div class="circle-clipper left">
                            <div class="circle"></div>
                          </div>
                          <div class="gap-patch">
                            <div class="circle"></div>
                          </div>
                          <div class="circle-clipper right">
                            <div class="circle"></div>
                          </div>
                        </div>

                        <div class="spinner-layer spinner-green">
                          <div class="circle-clipper left">
                            <div class="circle"></div>
                          </div>
                          <div class="gap-patch">
                            <div class="circle"></div>
                          </div>
                          <div class="circle-clipper right">
                            <div class="circle"></div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div><a class="btn-floating btn-large waves-effect waves-light slick-arrow slick-next"
                style="display: block;" aria-disabled="false"><i class="material-icons">chevron_right</i></a>
              <ul class="slick-dots" style="display: block;" role="tablist">
                <li class="slick-active" aria-hidden="false" role="presentation" aria-selected="true"
                  aria-controls="navigation00" id="slick-slide00"><button type="button" data-role="none" role="button"
                    tabindex="0">1</button></li>
                <li aria-hidden="true" role="presentation" aria-selected="false" aria-controls="navigation01"
                  id="slick-slide01"><button type="button" data-role="none" role="button" tabindex="0">2</button></li>
                <li aria-hidden="true" role="presentation" aria-selected="false" aria-controls="navigation02"
                  id="slick-slide02"><button type="button" data-role="none" role="button" tabindex="0">3</button></li>
                <li aria-hidden="true" role="presentation" aria-selected="false" aria-controls="navigation03"
                  id="slick-slide03"><button type="button" data-role="none" role="button" tabindex="0">4</button></li>
                <li aria-hidden="true" role="presentation" aria-selected="false" aria-controls="navigation04"
                  id="slick-slide04"><button type="button" data-role="none" role="button" tabindex="0">5</button></li>
              </ul>
            </div>
            <div class="m-comments collection with-header z-depth-1" id="comments">
              <div class="collection-header">
                <h3>Обсуждение:</h3>
              </div>
              <div class="collection-item">
                <p>
                  Расскажите, что вы думаете об этом аниме!<br>В комментариях запрещены спойлеры из следующих сезонов,
                  но разрешены по текущему и предыдущим. Также запрещены личные оскорбления, а сообщения не по теме
                  могут быть удалены.<br> </p>

                <p>
                  Чтобы оставлять комментарии не нужна регистрация. Просто нажмите кнопку ниже и войдите через
                  ВКонтакте.
                </p>

                <p>
                  <a class="green darken-4 white-text waves-effect waves-light btn-large" href="/users/login">Вход или
                    регистрация</a>
                </p>
              </div>

              <div class="m-black-box white-text grey darken-4 m-show-comments">
                <div class="valign-wrapper">
                  <div class="valign center">
                    <div class="m-black-box-button">
                      <i class="material-icons large left">expand_more</i> Раскрыть комментарии
                    </div>
                  </div>
                </div>
              </div>

              <div class="list-view m-comments-list hidden list-view list-view-mod" id="yw0" data-total="2">
                <div class="page-anchor" id="yw0-page-0" data-page="0">
                </div>
                <div class="items">

                  <div class="m-comment collection-item avatar" id="comment-223519">
                    <div class="circle" style="background-image: url('/users/avatars/129637.1425968417.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-223519">17.09.23 00:49</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/223519?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/129637">Ilya</a></div> <span
                        class="m-comment-episode">к 11 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/129637">Ilya</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 11 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-223519">17.09.23 00:49</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/223519?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Добренькое аниме) </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-222613">
                    <div class="circle" style="background-image: url('/users/avatars/154486.3916161980.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-222613">23.08.23 14:02</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/222613?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/154486">Ruiz_Kawa</a></div> <span
                        class="m-comment-episode">к 1 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/154486">Ruiz_Kawa</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 1 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-222613">23.08.23 14:02</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/222613?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Лучшее предложение чтобы начать встречаться :) </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-206552">
                    <div class="circle" style="background-image: url('/users/avatars/225127.181600411.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-206552">26.09.22 23:12</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/206552?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/225127">MikoTN</a></div> <span
                        class="m-comment-episode">к 8 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/225127">MikoTN</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 8 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-206552">26.09.22 23:12</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/206552?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      доброе и милое аниме, и рисовка не бесит </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-206546">
                    <div class="circle" style="background-image: url('/users/avatars/89093.984617085.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-206546">26.09.22 21:28</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/206546?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/89093">Жека</a></div> <span
                        class="m-comment-episode">к 8 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/89093">Жека</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 8 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-206546">26.09.22 21:28</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/206546?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Буду дико рад, если кто-нибудь подкинет ссылку на стикерпак или название стикерпака со стикером из
                      ep.8 - 07:07<br>
                      ( ‾ - ‾)<br>
                      👉👈 </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-196645">
                    <div class="circle" style="background-image: url('/users/avatars/175692.4266522902.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-196645">05.12.21 14:30</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/196645?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/175692">саня чернота</a></div> <span
                        class="m-comment-episode">к 1 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/175692">саня чернота</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 1 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-196645">05.12.21 14:30</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/196645?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      пока что не нравится </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-195942">
                    <div class="circle" style="background-image: url('/users/avatars/85381.3246694843.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-195942">09.11.21 23:00</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/195942?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/85381">Башка с бедой</a></div> <span
                        class="m-comment-episode">к 7 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/85381">Башка с бедой</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 7 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-195942">09.11.21 23:00</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/195942?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Ох как было бы круто если бы онлайн игры Действительно зависили от навыка, то это именно так круто
                      и выглядело бы. Но увы. =( </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-193572">
                    <div class="circle" style="background-image: url('/users/avatars/157899.181600411.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-193572">22.08.21 15:22</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/193572?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/157899">Дмитрий</a></div>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/157899">Дмитрий</a></div>
                      <div class="m-comment-meta-bottom">
                        <a class="m-comment-date" rel="nofollow" href="#comment-193572">22.08.21 15:22</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/193572?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Кто знает на какой главе манги аниме закончилось?<br>
                    </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-190078">
                    <div class="circle" style="background-image: url('/users/avatars/98451.2699078504.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-190078">27.04.21 10:30</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/190078?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/98451">Артур Сокол</a></div> <span
                        class="m-comment-episode">к 11 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/98451">Артур Сокол</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 11 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-190078">27.04.21 10:30</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/190078?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Пересмотрел с удовольствием, надеюсь на второй сезон. Учитывая крайне медленно развивающееся
                      повествование, напихать сюда можно еще тучу всего, а слова не "Конец", а "До встречи" в конце
                      последней серии позволяют надеяться и ждать. Восьмерка крепкая, покамест. </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-189051">
                    <div class="circle" style="background-image: url('/users/avatars/107216.193404661.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-189051">03.04.21 01:29</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/189051?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/107216">Kill.ua</a></div> <span
                        class="m-comment-episode">к 1 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/107216">Kill.ua</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 1 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-189051">03.04.21 01:29</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/189051?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Като, мы то знаем где она и с кем )) </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-188563">
                    <div class="circle" style="background-image: url('/users/avatars/109042.506050136.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-188563">22.03.21 14:24</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/188563?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/109042">Катерина</a></div> <span
                        class="m-comment-episode">к 4 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/109042">Катерина</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 4 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-188563">22.03.21 14:24</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/188563?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      блин я тоже плачу когда смотрю Сейлор Мун,всё таки моё детство))) </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-187031">
                    <div class="circle" style="background-image: url('/users/avatars/98451.2699078504.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-187031">14.02.21 17:43</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/187031?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/98451">Артур Сокол</a></div>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/98451">Артур Сокол</a></div>
                      <div class="m-comment-meta-bottom">
                        <a class="m-comment-date" rel="nofollow" href="#comment-187031">14.02.21 17:43</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/187031?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Посмотрел на Хиротаку, будто в зеркало посмотрелся... Характер один в один. А так посмотрел с
                      удовольствием. Вкусно, но мало. </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-184401">
                    <div class="circle" style="background-image: url('/users/avatars/100195.3849359143.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-184401">18.12.20 00:07</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/184401?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/100195">Айс</a></div> <span
                        class="m-comment-episode">к 1 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/100195">Айс</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 1 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-184401">18.12.20 00:07</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/184401?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Черт, мне нравится этот парень. Он реально хорош, даже напрямую высказал, что думает. Как же мне
                      не хватало мне таких прямолинейных главных героев. </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-172727">
                    <div class="circle" style="background-image: url('/users/avatars/121057.832612869.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-172727">03.02.20 20:30</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/172727?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/121057">Maison</a></div> <span
                        class="m-comment-episode">к 1 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/121057">Maison</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 1 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-172727">03.02.20 20:30</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/172727?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Ладно задротство, но еще и курят и бухают, и домой как стеклышко трезвые идут. </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-170426">
                    <div class="circle" style="background-image: url('/users/avatars/99966.3408293942.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-170426">08.12.19 04:03</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/170426?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/99966">reversdok</a></div> <span
                        class="m-comment-episode">к 1 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/99966">reversdok</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 1 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-170426">08.12.19 04:03</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/170426?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      только ради одного опенинга уже можно пересматривать это аниме бесконечно, а так одно из самых
                      простых и легких аним, скоротать время под данную аниму лучший выбор и еще потом захочется
                      пересмотреть не раз<br>
                    </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-157671">
                    <div class="circle" style="background-image: url('/users/avatars/116836.2773125634.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-157671">19.05.19 19:20</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/157671?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/116836">Арина Назарова</a></div> <span
                        class="m-comment-episode">к 9 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/116836">Арина Назарова</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 9 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-157671">19.05.19 19:20</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/157671?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Ржущий хиротака это нечто. Побльше бы шутил и смеялся со своим каменным лицом </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-157580">
                    <div class="circle" style="background-image: url('/users/avatars/116836.2773125634.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-157580">17.05.19 20:52</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/157580?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/116836">Арина Назарова</a></div> <span
                        class="m-comment-episode">к 2 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/116836">Арина Назарова</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 2 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-157580">17.05.19 20:52</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/157580?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Эх я тож хочу такой книжный. Только не с такими жанрами что выбрали персонажи </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-149135">
                    <div class="circle" style="background-image: url('/users/avatars/85314.3567327029.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-149135">05.10.18 22:19</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/149135?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/85314">Виктор Лапин</a></div> <span
                        class="m-comment-episode">к 8 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/85314">Виктор Лапин</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 8 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-149135">05.10.18 22:19</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/149135?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      В начале случаем она не сказала "грядёт восточный ветер"? Просто пипец как похоже на отсылку, но
                      перевод вообще ничего не говорит внятного. </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-148142">
                    <div class="circle" style="background-image: url('/users/avatars/89293.3266094504.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-148142">04.09.18 03:48</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/148142?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/89293">princertihon</a></div> <span
                        class="m-comment-episode">к 1 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/89293">princertihon</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 1 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-148142">04.09.18 03:48</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/148142?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Мысли хиротаки - а мне по...й мне ваще по...й мне ваще по...ую😁 </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-146460">
                    <div class="circle" style="background-image: url('/users/avatars/5278.4163528409.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-146460">10.07.18 11:12</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/146460?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/5278">Владислав Силкин</a></div> <span
                        class="m-comment-episode">к 11 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/5278">Владислав Силкин</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 11 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-146460">10.07.18 11:12</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/146460?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Нет какого-то привычного финала, ожидал, что будет ещё 12 серия. Но смотрел я тайтл не ради
                      концовки, конечно же.<br>
                      Очень приятно провёл время за просмотром </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-145972">
                    <div class="circle" style="background-image: url('/users/avatars/41901.1261621732.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145972">28.06.18 18:32</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145972?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/41901">Варюша Рыбалко</a></div>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/41901">Варюша Рыбалко</a></div>
                      <div class="m-comment-meta-bottom">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145972">28.06.18 18:32</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145972?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Мне очень понравился тайтл. В каждой серии можно и посмеяться и поумиляться. К тому же лично мне
                      он показался жизненным.Можно ко всему прочему добавить кучу отсылок.<br>
                      Очень рекомендую всем любителям повседневности.Тот тип аниме,который можно смотреть для
                      расслабления. </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-145862">
                    <div class="circle" style="background-image: url('/users/avatars/72917.2956607129.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145862">24.06.18 23:36</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145862?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/72917">Константин Михеев</a></div> <span
                        class="m-comment-episode">к 10 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/72917">Константин Михеев</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 10 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-145862">24.06.18 23:36</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145862?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Комментов много, но если про сам сериал...это чистая повседневность, более менее что то похожее на
                      романтику начинается с серии 9. Повседневность с друзьями...с мелкими добавками комедии и
                      романтики, очень мелкими. Да и к слову они весь сериал даже на пару не похожи, как общались когда
                      были друзья так и общаются...но с редкими крупицами флирта наверное...В целом спокойно и скучно.
                      Кому то понравится. </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-145830">
                    <div class="circle" style="background-image: url('/users/avatars/75321.1558904583.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145830">24.06.18 08:53</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145830?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/75321">Игнис Вакуа</a></div> <span
                        class="m-comment-episode">к 11 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/75321">Игнис Вакуа</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 11 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-145830">24.06.18 08:53</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145830?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Великолепная романтика взрослых отаку, без наигранной сладости седзе! Советую к просмотру </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-145782">
                    <div class="circle" style="background-image: url('/users/avatars/14618.1074269908.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145782">22.06.18 17:40</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145782?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/14618">Екатерина Каленская</a></div> <span
                        class="m-comment-episode">к 11 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/14618">Екатерина Каленская</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 11 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-145782">22.06.18 17:40</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145782?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Как же жаль, что это конец( Это было прекрасно!!! Для меня одно из лучших в этом сезоне ❤ </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-145584">
                    <div class="circle" style="background-image: url('/users/avatars/82622.4246112750.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145584">12.06.18 22:54</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145584?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/82622">Hikyxa</a></div> <span
                        class="m-comment-episode">к 9 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/82622">Hikyxa</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 9 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-145584">12.06.18 22:54</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145584?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      И да, нас всех на*бали) </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-145583">
                    <div class="circle" style="background-image: url('/users/avatars/82622.4246112750.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145583">12.06.18 22:54</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145583?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/82622">Hikyxa</a></div> <span
                        class="m-comment-episode">к 9 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/82622">Hikyxa</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 9 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-145583">12.06.18 22:54</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145583?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Я все никак не мог понять, к чему же отсылка на 18:34 и вот до меня наконец дошел тот факт, что
                      скорее всего это Фури-кури) </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-145540">
                    <div class="circle" style="background-image: url('/users/avatars/83174.2420738386.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145540">10.06.18 18:22</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145540?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/83174">Der Wanderer</a></div> <span
                        class="m-comment-episode">к 9 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/83174">Der Wanderer</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 9 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-145540">10.06.18 18:22</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145540?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Настолько сильно цепляет,даже не знаю почему...просто так много мыслей доносят которые схожи с тем
                      о чём я довольно часто думаю,ах да ещё моя вторая половинка это точная копия Наруми,хех выходит
                      некий учебник по общению и пониманию отаку. В целом одно из лучших няме в жанре повседневность за
                      последнее время ,на 8.5\10 уж точно) </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-145488">
                    <div class="circle" style="background-image: url('/users/avatars/70817.959425991.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145488">08.06.18 07:00</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145488?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/70817">Тая Абдрахманова</a></div> <span
                        class="m-comment-episode">к 2 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/70817">Тая Абдрахманова</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 2 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-145488">08.06.18 07:00</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145488?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Наруми таки права!<br>
                      Рей навсегда, Аска кошмар. </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-145421">
                    <div class="circle" style="background-image: url('/users/avatars/27888.251658751.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145421">05.06.18 02:15</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145421?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/27888">Sunday Morning</a></div> <span
                        class="m-comment-episode">к 6 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/27888">Sunday Morning</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 6 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-145421">05.06.18 02:15</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145421?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      да ёлы-палы!<br>
                      я уже ждала, что там предложение будет, в конце серии...<br>
                      отаку проклятые) </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-145397">
                    <div class="circle" style="background-image: url('/users/avatars/55995.2960783250.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145397">03.06.18 23:41</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145397?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/55995">Polina Serikova</a></div>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/55995">Polina Serikova</a></div>
                      <div class="m-comment-meta-bottom">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145397">03.06.18 23:41</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145397?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      Очень нравится это аниме! Такое романтичное, смешное, и атмосферное. Персонажи очень живые, давно
                      не получала такого удовольствия от аниме этого жанра! :)))))))))) </div>
                  </div>
                  <div class="m-comment collection-item avatar" id="comment-145244">
                    <div class="circle" style="background-image: url('/users/avatars/82628.3699523837.jpg');"></div>
                    <div class="m-comment-meta hide-on-small-and-down">
                      <div class="right">
                        <a class="m-comment-date" rel="nofollow" href="#comment-145244">28.05.18 06:33</a> <a
                          class="m-report-comment edit-comment no-dynpage" onclick=""
                          data-tooltip="Пожаловаться на комментарий" data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145244?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                      <div class="m-comment-author-name"><a href="/users/82628">Алгыс Николаев</a></div> <span
                        class="m-comment-episode">к 7 серии</span>
                    </div>
                    <div class="m-comment-meta hide-on-med-and-up">
                      <div class="m-comment-author-name"><a href="/users/82628">Алгыс Николаев</a></div>
                      <div class="m-comment-meta-bottom">
                        <span class="m-comment-episode">к 7 серии</span>, <a class="m-comment-date" rel="nofollow"
                          href="#comment-145244">28.05.18 06:33</a> <a class="m-report-comment edit-comment no-dynpage"
                          onclick="" data-tooltip="Пожаловаться на комментарий"
                          data-alert="Отправить жалобу на этот комментарий?"
                          href="/comments/report/145244?isReport=1&amp;csrf=bVNTa1NqSGtITlpwMEkyamVfQnB6NWlaV3k5Z2RKN2idM4s_c--Sd5SzpNNczvVqXPftbZlXx-s0fJPZVcB31A%3D%3D"><i
                            class="tiny material-icons grey-text">report</i></a>
                      </div>
                    </div>
                    <div class="m-comment-body">
                      я так понял, всё идёт к свапу? xD </div>
                  </div>
                </div>
                <div class="load-more-wrapper">
                  <div class="load-more-trigger">
                  </div><a style="display:none"
                    class="load-more btn waves-effect waves-light orange darken-4 white-text"
                    href="/catalog/wotaku-ni-koi-wa-muzukashii-17750?comments-page=2" data-page="1">
                    Загрузить еще</a>
                  <div class="load-more-progress " style="display:none">

                    <div class="preloader-wrapper small active">
                      <div class="spinner-layer spinner-blue">
                        <div class="circle-clipper left">
                          <div class="circle"></div>
                        </div>
                        <div class="gap-patch">
                          <div class="circle"></div>
                        </div>
                        <div class="circle-clipper right">
                          <div class="circle"></div>
                        </div>
                      </div>

                      <div class="spinner-layer spinner-red">
                        <div class="circle-clipper left">
                          <div class="circle"></div>
                        </div>
                        <div class="gap-patch">
                          <div class="circle"></div>
                        </div>
                        <div class="circle-clipper right">
                          <div class="circle"></div>
                        </div>
                      </div>

                      <div class="spinner-layer spinner-yellow">
                        <div class="circle-clipper left">
                          <div class="circle"></div>
                        </div>
                        <div class="gap-patch">
                          <div class="circle"></div>
                        </div>
                        <div class="circle-clipper right">
                          <div class="circle"></div>
                        </div>
                      </div>

                      <div class="spinner-layer spinner-green">
                        <div class="circle-clipper left">
                          <div class="circle"></div>
                        </div>
                        <div class="gap-patch">
                          <div class="circle"></div>
                        </div>
                        <div class="circle-clipper right">
                          <div class="circle"></div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="pager" style="display: none;">
                  <ul class="pagination" id="yw1">
                    <li class="hidden waves-effect disabled"><a
                        href="/catalog/wotaku-ni-koi-wa-muzukashii-17750">&lt;&lt; Первая</a></li>
                    <li class="waves-effect disabled"><a href="/catalog/wotaku-ni-koi-wa-muzukashii-17750"><i
                          class="material-icons">chevron_left</i></a></li>
                    <li class="waves-effect active green darken-4"><a
                        href="/catalog/wotaku-ni-koi-wa-muzukashii-17750">1</a></li>
                    <li class="waves-effect"><a href="/catalog/wotaku-ni-koi-wa-muzukashii-17750?comments-page=2">2</a>
                    </li>
                    <li class="waves-effect"><a href="/catalog/wotaku-ni-koi-wa-muzukashii-17750?comments-page=2"><i
                          class="material-icons">chevron_right</i></a></li>
                    <li class="hidden waves-effect"><a
                        href="/catalog/wotaku-ni-koi-wa-muzukashii-17750?comments-page=2">Последняя &gt;&gt;</a></li>
                  </ul>
                </div>
                <div class="mini-pager card" style="display: none;">
                  <ul class="pagination">
                    <li class="waves-effect mini-pager-load-first disabled loaded"><a
                        href="/catalog/wotaku-ni-koi-wa-muzukashii-17750" onclick="return false;"><i
                          class="material-icons">arrow_upward</i></a></li>
                    <li class="waves-effect mini-pager-load-prev disabled loaded"><a
                        href="/catalog/wotaku-ni-koi-wa-muzukashii-17750" onclick="return false;"><i
                          class="material-icons">chevron_left</i></a></li>
                    <li class="waves-effect loaded active green darken-4"><a
                        href="/catalog/wotaku-ni-koi-wa-muzukashii-17750"
                        onclick="$.fn.yiiListViewMod.gotoPage('yw0', 0); return false;">1</a></li>
                    <li class="waves-effect"><a href="/catalog/wotaku-ni-koi-wa-muzukashii-17750?comments-page=2"
                        onclick="$.fn.yiiListViewMod.gotoPage('yw0', 1); return false;">2</a></li>
                    <li class="waves-effect mini-pager-load-next"><a
                        href="/catalog/wotaku-ni-koi-wa-muzukashii-17750?comments-page=2"
                        onclick="$.fn.yiiListViewMod.gotoPage('yw0', 1); return false;"><i
                          class="material-icons">chevron_right</i></a></li>
                  </ul>
                </div>
                <div class="keys" style="display:none" title="/catalog/wotaku-ni-koi-wa-muzukashii-17750">
                  <span>223519</span><span>222613</span><span>206552</span><span>206546</span><span>196645</span><span>195942</span><span>193572</span><span>190078</span><span>189051</span><span>188563</span><span>187031</span><span>184401</span><span>172727</span><span>170426</span><span>157671</span><span>157580</span><span>149135</span><span>148142</span><span>146460</span><span>145972</span><span>145862</span><span>145830</span><span>145782</span><span>145584</span><span>145583</span><span>145540</span><span>145488</span><span>145421</span><span>145397</span><span>145244</span>
                </div>
              </div>
            </div>

            <div class="card">
              <div class="card-content">
                <h1 class="h3">Смотреть аниме Wotaku ni Koi wa Muzukashii онлайн</h1>
                <p>На этой странице вы можете посмотреть аниме Wotaku ni Koi wa Muzukashii онлайн и в хорошем качестве.
                  Для начала просмотра выберите серию (см. выше). После выбора серии можно выбрать перевод (русская
                  озвучка или субтитры). Если вам понравилось аниме Так сложно любить отаку, то советуем обратить
                  внимание на жанры романтика, взрослые сейю, культура отаку, а также работа. Ещё вы можете посмотреть
                  другие аниме от студии A-1 Pictures Inc. или другие аниме в весеннем сезоне 2018 года.</p>
                <h3>Другие аниме:</h3>
                <ul class="no-margin">
                  <li>Следующее аниме из этого сезона: <a href="/catalog/anime-17782">Великий из бродячих псов: Сгнившее
                      яблоко / Bungou Stray Dogs: Dead Apple смотреть онлайн</a></li>
                  <li>Предыдущее аниме из этого сезона: <a href="/catalog/devils-line-17742">Линия Дьявола / Devils Line
                      смотреть онлайн</a></li>
                  <li>Следующее аниме от этой студии: <a href="/catalog/fairy-tail-final-series-17755">Хвост Феи: Финал
                      / Fairy Tail: Final Series смотреть онлайн</a></li>
                  <li>Предыдущее аниме от этой студии: <a
                      href="/catalog/nanatsu-no-taizai-movie-1-tenkuu-no-torawarebito-17748">Семь смертных грехов:
                      Узники небес / Nanatsu no Taizai Movie 1: Tenkuu no Torawarebito смотреть онлайн</a></li>
                  <li>Романтика: <a href="/catalog/hajimete-no-gal-hajimete-no-bunkasai-17772">Моя первая модница OVA /
                      Hajimete no Gal: Hajimete no Bunkasai смотреть онлайн</a></li>
                  <li>Культура отаку: <a href="/catalog/3d-kanojo-real-girl-18457">Реальная девушка / 3D Kanojo: Real
                      Girl смотреть онлайн</a></li>
                  <li>Работа: <a href="/catalog/rokuhou-dou-yotsuiro-biyori-18216">Чайная «Рокуходо» / Rokuhou-dou
                      Yotsuiro Biyori смотреть онлайн</a></li>
                </ul>
              </div>
            </div>
          </div>

          <div class="col s12 m4 l3 col-even">
            <div class="card">
              <div class="card-image" itemprop="thumbnail" itemscope="" itemtype="http://schema.org/ImageObject">
                <div class="m-catalog-item__poster"><a style="background-image: url('/posters/17750.26297182654.jpg');"
                    href="/catalog/wotaku-ni-koi-wa-muzukashii-17750"><img itemprop="contentUrl"
                      src="/posters/17750.26297182654.jpg" alt="Wotaku ni Koi wa Muzukashii постер"></a></div>
              </div>
              <div class="card-content">
                <div class="m-translation-back-links"><a class="waves-effect waves-light btn green darken-4 white-text"
                    href="/translations/create?seriesId=17750">Добавить перевод</a></div>
              </div>
            </div>

            <div class="card">
              <div class="card-content">
                <div class="m-translation-view__share">
                  <div class="m-small-title">Поделиться аниме:</div>
                  <script src="//yastatic.net/es5-shims/0.0.2/es5-shims.min.js"></script>
                  <script src="//yastatic.net/share2/share.js"></script>
                  <div class="ya-share2 ya-share2_inited"
                    data-url="https://smotret-anime.com/catalog/wotaku-ni-koi-wa-muzukashii-17750?utm_source=share"
                    data-title="Аниме Так сложно любить отаку смотреть онлайн / Wotaku ni Koi wa Muzukashii / Otakoi"
                    data-copy="first"
                    data-services="vkontakte,facebook,odnoklassniki,twitter,skype,telegram,moimir,gplus,blogger,lj"
                    data-limit="6">
                    <div
                      class="ya-share2__container ya-share2__container_size_m ya-share2__container_color-scheme_normal ya-share2__container_shape_normal">
                      <ul class="ya-share2__list ya-share2__list_direction_horizontal">
                        <li class="ya-share2__item ya-share2__item_service_vkontakte"><a class="ya-share2__link"
                            href="https://vk.com/share.php?url=https%3A%2F%2Fsmotret-anime.com%2Fcatalog%2Fwotaku-ni-koi-wa-muzukashii-17750%3Futm_source%3Dshare&amp;title=%D0%90%D0%BD%D0%B8%D0%BC%D0%B5%20%D0%A2%D0%B0%D0%BA%20%D1%81%D0%BB%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%BB%D1%8E%D0%B1%D0%B8%D1%82%D1%8C%20%D0%BE%D1%82%D0%B0%D0%BA%D1%83%20%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B5%D1%82%D1%8C%20%D0%BE%D0%BD%D0%BB%D0%B0%D0%B9%D0%BD%20%2F%20Wotaku%20ni%20Koi%20wa%20Muzukashii%20%2F%20Otakoi&amp;utm_source=share2"
                            rel="nofollow noopener" target="_blank" title="ВКонтакте"><span
                              class="ya-share2__badge"><span class="ya-share2__icon"></span></span><span
                              class="ya-share2__title">ВКонтакте</span></a></li>
                        <li class="ya-share2__item ya-share2__item_service_odnoklassniki"><a class="ya-share2__link"
                            href="https://connect.ok.ru/offer?url=https%3A%2F%2Fsmotret-anime.com%2Fcatalog%2Fwotaku-ni-koi-wa-muzukashii-17750%3Futm_source%3Dshare&amp;title=%D0%90%D0%BD%D0%B8%D0%BC%D0%B5%20%D0%A2%D0%B0%D0%BA%20%D1%81%D0%BB%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%BB%D1%8E%D0%B1%D0%B8%D1%82%D1%8C%20%D0%BE%D1%82%D0%B0%D0%BA%D1%83%20%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B5%D1%82%D1%8C%20%D0%BE%D0%BD%D0%BB%D0%B0%D0%B9%D0%BD%20%2F%20Wotaku%20ni%20Koi%20wa%20Muzukashii%20%2F%20Otakoi&amp;utm_source=share2"
                            rel="nofollow noopener" target="_blank" title="Одноклассники"><span
                              class="ya-share2__badge"><span class="ya-share2__icon"></span></span><span
                              class="ya-share2__title">Одноклассники</span></a></li>
                        <li class="ya-share2__item ya-share2__item_service_twitter"><a class="ya-share2__link"
                            href="https://twitter.com/intent/tweet?text=%D0%90%D0%BD%D0%B8%D0%BC%D0%B5%20%D0%A2%D0%B0%D0%BA%20%D1%81%D0%BB%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%BB%D1%8E%D0%B1%D0%B8%D1%82%D1%8C%20%D0%BE%D1%82%D0%B0%D0%BA%D1%83%20%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B5%D1%82%D1%8C%20%D0%BE%D0%BD%D0%BB%D0%B0%D0%B9%D0%BD%20%2F%20Wotaku%20ni%20Koi%20wa%20Muzukashii%20%2F%20Otakoi&amp;url=https%3A%2F%2Fsmotret-anime.com%2Fcatalog%2Fwotaku-ni-koi-wa-muzukashii-17750%3Futm_source%3Dshare&amp;utm_source=share2"
                            rel="nofollow noopener" target="_blank" title="Twitter"><span class="ya-share2__badge"><span
                                class="ya-share2__icon"></span></span><span class="ya-share2__title">Twitter</span></a>
                        </li>
                        <li class="ya-share2__item ya-share2__item_service_skype"><a class="ya-share2__link"
                            href="https://web.skype.com/share?url=https%3A%2F%2Fsmotret-anime.com%2Fcatalog%2Fwotaku-ni-koi-wa-muzukashii-17750%3Futm_source%3Dshare&amp;utm_source=share2"
                            rel="nofollow noopener" target="_blank" title="Skype"><span class="ya-share2__badge"><span
                                class="ya-share2__icon"></span></span><span class="ya-share2__title">Skype</span></a>
                        </li>
                        <li class="ya-share2__item ya-share2__item_service_telegram"><a class="ya-share2__link"
                            href="https://t.me/share/url?url=https%3A%2F%2Fsmotret-anime.com%2Fcatalog%2Fwotaku-ni-koi-wa-muzukashii-17750%3Futm_source%3Dshare&amp;text=%D0%90%D0%BD%D0%B8%D0%BC%D0%B5%20%D0%A2%D0%B0%D0%BA%20%D1%81%D0%BB%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%BB%D1%8E%D0%B1%D0%B8%D1%82%D1%8C%20%D0%BE%D1%82%D0%B0%D0%BA%D1%83%20%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B5%D1%82%D1%8C%20%D0%BE%D0%BD%D0%BB%D0%B0%D0%B9%D0%BD%20%2F%20Wotaku%20ni%20Koi%20wa%20Muzukashii%20%2F%20Otakoi&amp;utm_source=share2"
                            rel="nofollow noopener" target="_blank" title="Telegram"><span
                              class="ya-share2__badge"><span class="ya-share2__icon"></span></span><span
                              class="ya-share2__title">Telegram</span></a></li>
                        <li class="ya-share2__item ya-share2__item_service_moimir"><a class="ya-share2__link"
                            href="https://connect.mail.ru/share?url=https%3A%2F%2Fsmotret-anime.com%2Fcatalog%2Fwotaku-ni-koi-wa-muzukashii-17750%3Futm_source%3Dshare&amp;title=%D0%90%D0%BD%D0%B8%D0%BC%D0%B5%20%D0%A2%D0%B0%D0%BA%20%D1%81%D0%BB%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%BB%D1%8E%D0%B1%D0%B8%D1%82%D1%8C%20%D0%BE%D1%82%D0%B0%D0%BA%D1%83%20%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B5%D1%82%D1%8C%20%D0%BE%D0%BD%D0%BB%D0%B0%D0%B9%D0%BD%20%2F%20Wotaku%20ni%20Koi%20wa%20Muzukashii%20%2F%20Otakoi&amp;utm_source=share2"
                            rel="nofollow noopener" target="_blank" title="Мой Мир"><span class="ya-share2__badge"><span
                                class="ya-share2__icon"></span></span><span class="ya-share2__title">Мой Мир</span></a>
                        </li>
                        <li class="ya-share2__item ya-share2__item_more"><a class="ya-share2__link ya-share2__link_more"
                            href="javascript:void(0);"><span class="ya-share2__badge ya-share2__badge_more"><span
                                class="ya-share2__icon ya-share2__icon_more"></span></span></a>
                          <div
                            class="ya-share2__popup ya-share2__popup_direction_bottom ya-share2__popup_list-direction_horizontal">
                            <ul class="ya-share2__list ya-share2__list_direction_vertical">
                              <li class="ya-share2__item ya-share2__item_copy"><a
                                  class="ya-share2__link ya-share2__link_copy" href="javascript:void(0);"
                                  title="Скопировать ссылку"><span class="ya-share2__badge ya-share2__badge_copy"><span
                                      class="ya-share2__icon ya-share2__icon_copy"></span></span><span
                                    class="ya-share2__title">Скопировать ссылку</span></a><input
                                  class="ya-share2__input_copy"
                                  value="https://smotret-anime.com/catalog/wotaku-ni-koi-wa-muzukashii-17750?utm_source=share">
                              </li>
                              <li class="ya-share2__item ya-share2__item_service_blogger"><a class="ya-share2__link"
                                  href="https://www.blogger.com/blog-this.g?u=https%3A%2F%2Fsmotret-anime.com%2Fcatalog%2Fwotaku-ni-koi-wa-muzukashii-17750%3Futm_source%3Dshare&amp;n=%D0%90%D0%BD%D0%B8%D0%BC%D0%B5%20%D0%A2%D0%B0%D0%BA%20%D1%81%D0%BB%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%BB%D1%8E%D0%B1%D0%B8%D1%82%D1%8C%20%D0%BE%D1%82%D0%B0%D0%BA%D1%83%20%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B5%D1%82%D1%8C%20%D0%BE%D0%BD%D0%BB%D0%B0%D0%B9%D0%BD%20%2F%20Wotaku%20ni%20Koi%20wa%20Muzukashii%20%2F%20Otakoi&amp;utm_source=share2"
                                  rel="nofollow noopener" target="_blank" title="Blogger"><span
                                    class="ya-share2__badge"><span class="ya-share2__icon"></span></span><span
                                    class="ya-share2__title">Blogger</span></a></li>
                              <li class="ya-share2__item ya-share2__item_service_lj"><a class="ya-share2__link"
                                  href="https://www.livejournal.com/update.bml?subject=%D0%90%D0%BD%D0%B8%D0%BC%D0%B5%20%D0%A2%D0%B0%D0%BA%20%D1%81%D0%BB%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%BB%D1%8E%D0%B1%D0%B8%D1%82%D1%8C%20%D0%BE%D1%82%D0%B0%D0%BA%D1%83%20%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B5%D1%82%D1%8C%20%D0%BE%D0%BD%D0%BB%D0%B0%D0%B9%D0%BD%20%2F%20Wotaku%20ni%20Koi%20wa%20Muzukashii%20%2F%20Otakoi&amp;event=https%3A%2F%2Fsmotret-anime.com%2Fcatalog%2Fwotaku-ni-koi-wa-muzukashii-17750%3Futm_source%3Dshare&amp;utm_source=share2"
                                  rel="nofollow noopener" target="_blank" title="LiveJournal"><span
                                    class="ya-share2__badge"><span class="ya-share2__icon"></span></span><span
                                    class="ya-share2__title">LiveJournal</span></a></li>
                            </ul>
                          </div>
                        </li>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="card">
              <div class="card-content">
                <div class="m-translation-view__share">
                  <div class="m-small-title">Наш <img src="/images/telegram-icon.png" width="16" height="16"
                      style="vertical-align: -2px; margin-right: -2px;"> Telegram</div>
                  <a href="tg://resolve?domain=anime365">Подписывайтесь на канал</a> чтобы узнавать о важных
                  изменениях.<br>
                  <a href="tg://join?invite=t8Iju39lWaQyZjky">Заходите в чат</a> если хотите задать вопрос или
                  пообщаться.

                </div>
              </div>
            </div>



            <div class="card">
              <div class="card-content">
                <div class="m-small-title">Добавить в список:</div>
                <p>
                  Чтобы добавить в список и следить за новыми сериями не нужна регистрация. Просто нажмите кнопку ниже и
                  войдите через ВКонтакте.
                </p>
                <a class="green darken-4 white-text waves-effect waves-light btn-large m-filling-button"
                  href="/users/login">Вход или регистрация</a>
              </div>
            </div>

            <div class="card">
              <div class="card-content">
                <div class="m-small-title">Студия:</div>
                <div class="m-studios-list"><a class="m-studios-list_item" href="/anime/studios/56-a-1-pictures-inc">A-1
                    Pictures Inc.</a></div>
              </div>
            </div>

            <div class="card">
              <div class="card-content">
                <div class="m-small-title">Другие названия:</div>
                <div class="m-minor-titles-list"><span>Так сложно любить отаку</span> / <span>Wotaku ni Koi wa
                    Muzukashii</span> / <span>Otaku ni Koi wa Muzukashii</span> / <span>Wotakoi: Love Is Hard for
                    Otaku</span> / <span>ヲタクに恋は難しい</span> / <span>ヲタ恋</span> / <span>Otakoi</span> / <span>Любовь -
                    проблема для отаку</span> / <span>wotakoi</span> / <span>Wotakoi: Love is Hard for Otaku</span> /
                  <span>WotaKoi</span> / <span>Любовь — проблема для отаку</span> / <span>It's Difficult to Love an
                    Otaku</span> / <span>Любовь и отаку</span> / <span>Love is Hard for Otaku</span> / <span>Очень
                    трудно любить отаку</span></div>
              </div>
            </div>

            <div class="card">
              <div class="card-content">
                <div class="m-small-title">Ссылки:</div>
                <ul class="m-catalog-view-links">
                  <li><a rel="nofollow" target="_blank"
                      href="http://www.world-art.ru/animation/animation.php?id=9332">World Art</a></li>
                  <li><a rel="nofollow" target="_blank" href="https://shikimori.one/animes/35968">Шикимори</a></li>
                  <li><a rel="nofollow" target="_blank" href="https://myanimelist.net/anime/35968">MyAnimeList</a></li>
                  <li><a rel="nofollow" target="_blank"
                      href="https://anidb.net/perl-bin/animedb.pl?show=anime&amp;aid=13293">AniDb </a></li>
                  <li><a rel="nofollow" target="_blank"
                      href="https://www.animenewsnetwork.com/encyclopedia/anime.php?id=20478">Anime News Network</a>
                  </li>
                  <li><a rel="nofollow" target="_blank" href="http://fansubs.ru/base.php?id=5968">Kage Project</a></li>
                  <li><a rel="nofollow" target="_blank"
                      href="https://ja.wikipedia.org/wiki/%E3%83%B2%E3%82%BF%E3%82%AF%E3%81%AB%E6%81%8B%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84">ウィキペディア</a>
                  </li>
                  <li><a rel="nofollow" target="_blank"
                      href="http://www.allcinema.net/prog/show_c.php?num_c=361293">Allcinema</a></li>
                  <li><a rel="nofollow" target="_blank" href="http://cal.syoboi.jp/tid/4869/time">Сетка вещания</a></li>
                  <li><a rel="nofollow" target="_blank"
                      href="http://seesaawiki.jp/w/radioi_34/d/%a5%f2%a5%bf%a5%af%a4%cb%ce%f8%a4%cf%c6%f1%a4%b7%a4%a4">seesaa</a>
                  </li>
                  <li><a rel="nofollow" target="_blank"
                      href="https://en.wikipedia.org/wiki/Wotakoi:_Love_is_Hard_for_Otaku">Wikipedia</a></li>
                  <li><a rel="nofollow" target="_blank"
                      href="https://ru.wikipedia.org/wiki/Otaku_ni_Koi_wa_Muzukashii">Википедия</a></li>
                  <li><a rel="nofollow" target="_blank" href="https://www.kinopoisk.ru/series/1169248">kinopoisk</a>
                  </li>
                </ul>
              </div>
            </div>


          </div>
        </div>
      </div>
    </div>
  </div>


  <footer class="page-footer orange m-footer-genres" id="footer">
    <div class="container">
      <div class="row m-footer-genres-title">
        <div class="col s12">
          <h3 class="white-text">Жанры</h3>
        </div>
      </div>

      <div class="row">
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/1-ekshen">Экшен</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/2-priklyucheniya">Приключения</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/4-komediya">Комедия</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/8-drama">Драма</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/24-fantastika">Фантастика</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/29-kosmos">Космос</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/22-romantika">Романтика</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/27-senen">Сёнен</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/38-voennoe">Военное</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/9-etti">Этти</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/10-fentezi">Фэнтези</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/14-uzhasy">Ужасы</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/23-shkola">Школа</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/41-triller">Триллер</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/30-sport">Спорт</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/25-sedze">Сёдзе</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/28-senen-ay">Сёнен Ай</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/36-povsednevnost">Повседневность</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/42-seynen">Сейнен</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate"
            href="/anime/genres/37-sverhestestvennoe">Сверхъестественное</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/18-meha">Меха</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/19-muzyka">Музыка</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/32-vampiry">Вампиры</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/35-garem">Гарем</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" rel="nofollow" href="https://hentai365.ru/">Хентай</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/6-demony">Демоны</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/40-psihologicheskoe">Психологическое</a>
        </div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/16-magiya">Магия</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/13-istoricheskiy">Исторический</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/39-policiya">Полиция</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/20-parodiya">Пародия</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/17-boevye-iskusstva">Боевые искусства</a>
        </div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/31-super-sila">Супер сила</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/26-sedze-ay">Сёдзе Ай</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/21-samurai">Самураи</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/15-detskoe">Детское</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" rel="nofollow"
            href="https://hentai365.ru/anime/genres/33-yaoy">Яой</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/3-mashiny">Машины</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/5-bezumie">Безумие</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/43-dzesey">Дзёсей</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/34-yuri">Юри</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/7-detektiv">Детектив</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/46-udostoeno-nagrad">Удостоено наград</a>
        </div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/55-pravonarushiteli">Правонарушители</a>
        </div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/56-obrazovatelnoe">Образовательное</a>
        </div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/58-krov">Кровь</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/60-idoly-devushki">Идолы (девушки)</a>
        </div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/62-isekay">Исекай</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/63-iyashikey">Ияшикей</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/64-lyubovnyy-mnogougolnik">Любовный
            многоугольник</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/66-maho-sedze">Махо-сёдзё</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/67-medicina">Медицина</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/69-kultura-otaku">Культура отаку</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/71-pitomcy">Питомцы</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/77-komandnyy-sport">Командный спорт</a>
        </div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/78-puteshestvie-vo-vremeni">Путешествие во
            времени</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate"
            href="/anime/genres/80-izobrazitelnoe-iskusstvo">Изобразительное искусство</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/54-boevye-iskusstva">Боевые искусства</a>
        </div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/47-gurman">Гурман</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/49-erotika">Эротика</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/48-rabota">Работа</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/50-vzroslye-seyyu">Взрослые сейю</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/51-antropomorfizm">Антропоморфизм</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/52-cgdct">CGDCT</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/53-uhod-za-detmi">Уход за детьми</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/59-igra-s-vysokimi-stavkami">Игра с
            высокими ставками</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/61-idoly-parni">Идолы (парни)</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/65-smena-pola">Смена пола</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate"
            href="/anime/genres/68-organizovannaya-prestupnost">Организованная преступность</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/57-geg-yumor">Гэг юмор</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate"
            href="/anime/genres/70-ispolnitelskoe-iskusstvo">Исполнительское искусство</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/72-reinkarnaciya">Реинкарнация</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/73-obratnyy-garem">Обратный гарем</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/74-romanticheskiy-podtekst">Романтический
            подтекст</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/75-shou-biznes">Шоу-бизнес</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/76-vyzhivanie">Выживание</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/79-igry">Игры</a></div>
        <div class="col s6 m4 l2 x2"><a class="truncate" href="/anime/genres/81-krossdressing">Кроссдрессинг</a></div>
      </div>
    </div>
    <div class="footer-copyright">
      <div class="container">
        <div class="right hide-on-med-and-down"><a href="/translations/recent">Новые видео</a></div>
        <a class="orange-text text-lighten-3" href="https://smotret-anime.com/">Anime 365</a> ©
        2014-2024
      </div>
    </div>
  </footer>

  <div class="adsbygoogle ad-placement"></div>
  <!-- Yandex.Metrika counter -->
  <script type="text/javascript"> (function (d, w, c) {
      (w[c] = w[c] || []).push(function () {
        try {
          w.yaCounter37370165 = new Ya.Metrika({
            id: 37370165,
            clickmap: true,
            trackLinks: true,
            accurateTrackBounce: true
          });
        } catch (e) {
        }
      });
    })(document, window, "yandex_metrika_callbacks"); </script>
  <noscript>
    <div><img src="https://mc.yandex.ru/watch/37370165" style="position:absolute; left:-9999px;" alt="" />
    </div>
  </noscript> <!-- /Yandex.Metrika counter -->
  <!-- Yandex.Metrika counter -->
  <script type="text/javascript"> (function (d, w, c) {
      (w[c] = w[c] || []).push(function () {
        try {
          w.yaCounter32448950 = new Ya.Metrika({
            id: 32448950,
            clickmap: true,
            trackLinks: true,
            accurateTrackBounce: true
          });
        } catch (e) {
        }
      });
      var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () {
        n.parentNode.insertBefore(s, n);
      };
      s.type = "text/javascript";
      s.async = true;
      s.src = "https://cdn.jsdelivr.net/npm/yandex-metrica-watch/watch.js";
      if (w.opera == "[object Opera]") {
        d.addEventListener("DOMContentLoaded", f, false);
      } else {
        f();
      }
    })(document, window, "yandex_metrika_callbacks");</script>
  <noscript>
    <div><img src="https://mc.yandex.ru/watch/32448950" style="position:absolute; left:-9999px;" alt="" /></div>
  </noscript><!-- /Yandex.Metrika counter -->
  <!--LiveInternet counter-->
  <script
    type="text/javascript">new Image().src = "//counter.yadro.ru/hit?r" + escape(document.referrer) + ((typeof (screen) == "undefined") ? "" : ";s" + screen.width + "*" + screen.height + "*" + (screen.colorDepth ? screen.colorDepth : screen.pixelDepth)) + ";u" + escape(document.URL) + ";" + Math.random();</script>
  <!--/LiveInternet-->
  <script>
    (function (i, s, o, g, r, a, m) {
      i['GoogleAnalyticsObject'] = r;
      i[r] = i[r] || function () {
        (i[r].q = i[r].q || []).push(arguments)
      }, i[r].l = 1 * new Date();
      a = s.createElement(o),
        m = s.getElementsByTagName(o)[0];
      a.async = 1;
      a.src = g;
      m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-67498519-1', 'auto');
    ga('send', 'pageview');

  </script>

  <script>
    window.countPageView = function () {
      var localUrl = document.location.href.substr(document.location.origin.length);
      ga('set', 'page', localUrl);
      ga('send', 'pageview');
      if (window.yaCounter35304100) {
        yaCounter35304100.hit(document.location.href);
      }
      if (window.yaCounter37370165) {
        yaCounter37370165.hit(document.location.href);
      }
      new Image().src = "//counter.yadro.ru/hit?r" + escape(document.referrer) + ((typeof (screen) == "undefined") ? "" : ";s" + screen.width + "*" + screen.height + "*" + (screen.colorDepth ? screen.colorDepth : screen.pixelDepth)) + ";u" + escape(document.URL) + ";" + Math.random();
    }
  </script>
  <script type="text/javascript" pos="0">
    /*<![CDATA[*/

    /*]]>*/
  </script>
  <script type="text/javascript" src="/js/vendor/jquery.min.js" pos="1"></script>
  <script type="text/javascript" src="/assets/4e4f91a5/jquery.ba-bbq.min.js" pos="1"></script>
  <script type="text/javascript" src="/js/lib/jquery.ba-throttle-debounce-mod.min.js" pos="1"></script>
  <script type="text/javascript" src="/js/vendor/slick.min.js?1484779601" pos="1"></script>
  <script type="text/javascript" src="/js/lib/jquery.yiilistview-mod.min.js?1568673211" pos="1"></script>
  <script type="text/javascript" src="/js/vendor/historyjs/bundled-uncompressed/html4+html5/jquery.history.min.js"
    pos="1"></script>
  <script type="text/javascript" src="/js/vendor/isMobile.min.js" pos="1"></script>
  <script type="text/javascript" src="/js/lib/utils.min.js?1484779953" pos="1"></script>
  <script type="text/javascript" src="/js/lib/main_helpers.min.js?1569365716" pos="1"></script>
  <script type="text/javascript" src="/js/vendor/hammer.min.js" pos="1"></script>
  <script type="text/javascript" src="/js/vendor/jquery.hammer.min.js" pos="1"></script>
  <script type="text/javascript" src="/js/vendor/materialize.min.js?1484779636" pos="1"></script>
  <script type="text/javascript" src="/js/vendor/jquery.actual.min.js" pos="1"></script>
  <script type="text/javascript" src="/js/vendor/jquery.form.min.js" pos="1"></script>
  <script type="text/javascript" src="/js/app/main.min.js?1659182698" pos="1"></script>
  <script type="text/javascript" src="/js/require.min.js" pos="1"></script>
  <script type="text/javascript" pos="2">
    /*<![CDATA[*/
    'requirejs_config';
    requirejs.config({ 'baseUrl': '\x2Fjs', 'paths': { 'jquery': '\x2Fjs\x2Fvendor\x2Fjquery', 'bbq': '\x2Fassets\x2F4e4f91a5\x2Fjquery.ba\x2Dbbq.min', 'history': '\x2Fjs\x2Fvendor\x2Fhistoryjs\x2Fbundled\x2Duncompressed\x2Fhtml4\x2Bhtml5\x2Fjquery.history', 'domReady': '\x2Fjs\x2Frequirejs\x2Ddomready', 'jquery.ui': '\x2Fjs\x2Fvendor\x2Fjquery\x2Dui', 'jquery.hammer': '\x2Fjs\x2Fvendor\x2Fjquery.hammer', 'jquery.actual': '\x2Fjs\x2Fvendor\x2Fjquery.actual', 'jquery.ba\x2Dthrottle\x2Ddebounce': '\x2Fjs\x2Flib\x2Fjquery.ba\x2Dthrottle\x2Ddebounce\x2Dmod', 'jquery.form': '\x2Fjs\x2Fvendor\x2Fjquery.form', 'jquery.doubletap': '\x2Fjs\x2Fvendor\x2Fjquery.doubletap', 'openapi': '\x2F\x2Fvk.com\x2Fjs\x2Fapi\x2Fopenapi.js\x3F120', 'hammerjs': '\x2Fjs\x2Fvendor\x2Fhammer', 'velocity': '\x2Fjs\x2Fvendor\x2Fvelocity', 'angular': '\x2F\x2Fajax.googleapis.com\x2Fajax\x2Flibs\x2Fangularjs\x2F1.5.3.js', 'angular\x2Fangular': '\x2F\x2Fajax.googleapis.com\x2Fajax\x2Flibs\x2Fangularjs\x2F1.5.3\x2Fangular', 'angular\x2Fanimate': '\x2F\x2Fajax.googleapis.com\x2Fajax\x2Flibs\x2Fangularjs\x2F1.5.3\x2Fangular\x2Danimate', 'angular\x2Faria': '\x2F\x2Fajax.googleapis.com\x2Fajax\x2Flibs\x2Fangularjs\x2F1.5.3\x2Fangular\x2Daria', 'angular\x2Fmessages': '\x2F\x2Fajax.googleapis.com\x2Fajax\x2Flibs\x2Fangularjs\x2F1.5.3\x2Fangular\x2Dmessages', 'angular\x2Fmaterial': '\x2Fjs\x2Fvendor\x2Fangular\x2Dmaterial\x2D1.1.0\x2Drc4\x2Dmod', 'materialize': '\x2Fjs\x2Fvendor\x2Fmaterialize.min.js\x3F1484779636', 'Snowball': '\x2Fjs\x2Fvendor\x2FSnowball', 'jquery.yiilistview\x2Dmod': '\x2Fjs\x2Flib\x2Fjquery.yiilistview\x2Dmod.min.js\x3F1568673211', 'owl.carousel': '\x2Fjs\x2Fvendor\x2Fowl.carousel.min.js\x3F1484779608', 'slick': '\x2Fjs\x2Fvendor\x2Fslick.min.js\x3F1484779601', 'fine\x2Duploader': '\x2Fjs\x2Fvendor\x2Ffine\x2Duploader\x2Fjquery.fine\x2Duploader.min', 'videojs': '\x2Fjs\x2Fvendor\x2Fvideojs\x2Fvideo.dev.min.js\x3F1575369477', 'videojs.concatenate': '\x2Fjs\x2Flib\x2Fvideojs.concatenate.min.js\x3F1606529448', 'videojs.hotkeys': '\x2Fjs\x2Flib\x2Fvideojs.hotkeys.min.js\x3F1575369225', 'videojs.persistvolume': '\x2Fjs\x2Flib\x2Fvideojs.persistvolume.min.js\x3F1484779981', 'videojs.logo': '\x2Fjs\x2Flib\x2Fvideojs.logo.min.js\x3F1559522137', 'videojs.subtitles': '\x2Fjs\x2Flib\x2Fvideojs.subtitles.min.js\x3F1621145608', 'libassjs': '\x2Fjs\x2Fvendor\x2Flibassjs.js\x3F1471358973', 'd3': '\x2Fjs\x2Fvendor\x2Fd3.v3.min.js\x3F1484779748', 'd3.scaletimebar': '\x2Fjs\x2Flib\x2Fd3\x2Dscale\x2Dtimebar.min.js\x3F1484779911', 'videojs.rangeslider': '\x2Fjs\x2Flib\x2Fvideojs.rangeslider.min.js\x3F1556219983', 'videojs.rangeslider.components': '\x2Fjs\x2Flib\x2Fvideojs.rangeslider.components.min.js\x3F1556219529', 'videojs.helpers': '\x2Fjs\x2Flib\x2Fvideojs.helpers.min.js\x3F1487022131', 'isMobile': '\x2Fjs\x2Fvendor\x2FisMobile', 'videojs.screenshoot': '\x2Fjs\x2Flib\x2Fvideojs.screenshoot.min.js\x3F1699955626', 'videojs.seektooltip': '\x2Fjs\x2Flib\x2Fvideojs.seektooltip.min.js\x3F1484780004', 'videojs.topbar': '\x2Fjs\x2Flib\x2Fvideojs.topbar.min.js\x3F1484780014', 'videojs.seed': '\x2Fjs\x2Flib\x2Fvideojs.seed.min.js\x3F1569718656', 'videojs.vast': '\x2Fjs\x2Fvendor\x2Fvast\x2Fvideojs_4.vast.vpaid.min', 'angular.material': '\x2Fjs\x2Fangular.material.js\x3F3', 'app\x2Fan': '\x2Fjs\x2Fapp\x2Fan.min.js\x3F1484779888', 'app\x2Fmain': '\x2Fjs\x2Fapp\x2Fmain.min.js\x3F1659182698', 'app\x2Fadmin': '\x2Fjs\x2Fapp\x2Fadmin.min.js\x3F1695809958', 'lib\x2Futils': '\x2Fjs\x2Flib\x2Futils.min.js\x3F1484779953', 'lib\x2Fmain_helpers': '\x2Fjs\x2Flib\x2Fmain_helpers.min.js\x3F1569365716', 'lib\x2FRuUtils': '\x2Fjs\x2Flib\x2FRuUtils.min.js\x3F1484779946', 'lib\x2FRuStemmer': '\x2Fjs\x2Flib\x2FRuStemmer.min.js\x3F1484779940', 'lib\x2FCatalogChipsSearchCore': '\x2Fjs\x2Flib\x2FCatalogChipsSearchCore.min.js\x3F1484779901', 'lib\x2FCatalogChipsSearchUI': '\x2Fjs\x2Flib\x2FCatalogChipsSearchUI.min.js\x3F1484779906', 'app\x2Fembed': '\x2Fjs\x2Fapp\x2Fembed.min.js\x3F1571819613' }, 'shim': { 'jquery': { 'exports': 'jQuery', 'deps': [] }, 'jquery.ui': { 'deps': ['jquery'], 'exports': 'jQuery.ui' }, 'jquery.actual': { 'exports': '\x24.fn.actual', 'deps': ['jquery'] }, 'jquery.ba\x2Dthrottle\x2Ddebounce': { 'exports': '\x24.throttle', 'deps': ['jquery'] }, 'jquery.form': { 'exports': '\x24.fn.ajaxSubmit', 'deps': ['jquery'] }, 'jquery.doubletap': { 'exports': '\x24.fn.addSwipeEvents', 'deps': ['jquery'] }, 'owl.carousel': { 'exports': '\x24.fn.owlCarousel', 'deps': ['jquery'] }, 'slick': { 'exports': '\x24.fn.slick', 'deps': ['jquery'] }, 'fine\x2Duploader': { 'deps': ['jquery'] }, 'history': { 'exports': 'History', 'deps': ['jquery'] }, 'jquery.yiilistview': { 'exports': '\x24.fn.yiiListView', 'deps': ['jquery', 'jquery.ba\x2Dthrottle\x2Ddebounce'] }, 'jquery.yiilistview\x2Dmod': { 'exports': '\x24.fn.yiiListViewMod', 'deps': ['jquery', 'jquery.ba\x2Dthrottle\x2Ddebounce', 'slick'] }, 'hammerjs': { 'exports': 'Hammer' }, 'jquery.hammer': { 'exports': '\x24.fn.hammer', 'deps': ['hammerjs', 'jquery'] }, 'velocity': { 'exports': 'Velocity', 'deps': ['jquery'] }, 'materialize': { 'deps': ['hammerjs', 'jquery.hammer'], 'exports': 'Materialize' }, 'angular\x2Fangular': { 'exports': 'angular' }, 'angular\x2Fanimate': ['angular\x2Fangular'], 'angular\x2Faria': ['angular\x2Fangular'], 'angular\x2Fmessages': ['angular\x2Fangular'], 'angular\x2Fmaterial': ['angular\x2Fangular', 'angular\x2Fanimate', 'angular\x2Faria', 'angular\x2Fmessages'], 'lib\x2FCatalogChipsSearchCore': { 'deps': ['lib\x2FRuUtils', 'lib\x2Futils'], 'exports': 'CatalogChipsSearch' }, 'lib\x2FCatalogChipsSearchUI': { 'deps': ['lib\x2FCatalogChipsSearchCore', 'jquery', 'jquery.ba\x2Dthrottle\x2Ddebounce'], 'exports': 'CatalogChipsSearchUI' }, 'lib\x2FRuUtils': { 'deps': ['lib\x2FRuStemmer'], 'exports': 'RuUtils' }, 'lib\x2FRuStemmer': { 'deps': ['Snowball'], 'exports': 'Stemmer' }, 'Snowball': { 'exports': 'Snowball' }, 'lib\x2Futils': { 'deps': ['isMobile'] }, 'app\x2Fmain': ['jquery', 'lib\x2Futils', 'isMobile', 'lib\x2Fmain_helpers', 'materialize', 'jquery.actual', 'history', 'jquery.form', 'jquery.ba\x2Dthrottle\x2Ddebounce'], 'app\x2Fadmin': ['jquery', 'lib\x2Futils', 'materialize'], 'app\x2Fan': ['jquery', 'angular\x2Fangular', 'angular\x2Fmaterial'], 'app\x2Fembed': ['jquery', 'jquery.ui', 'lib\x2Futils', 'videojs', 'videojs.concatenate', 'videojs.hotkeys', 'videojs.persistvolume', 'videojs.logo', 'videojs.subtitles', 'videojs.rangeslider', 'videojs.screenshoot', 'videojs.seektooltip', 'videojs.seed', 'videojs.topbar', 'videojs.helpers', 'jquery.doubletap', 'isMobile'], 'videojs': { 'exports': 'vjs' }, 'videojs.concatenate': ['videojs'], 'videojs.hotkeys': ['videojs'], 'videojs.persistvolume': ['videojs'], 'videojs.logo': ['videojs'], 'videojs.subtitles': ['videojs'], 'd3': { 'exports': 'd3' }, 'd3.scaletimebar': ['jquery', 'd3', 'jquery.ba\x2Dthrottle\x2Ddebounce', 'isMobile'], 'videojs.rangeslider': ['jquery', 'jquery.ba\x2Dthrottle\x2Ddebounce', 'videojs', 'd3.scaletimebar', 'isMobile', 'videojs.helpers', 'videojs.rangeslider.components'], 'videojs.rangeslider.components': ['jquery', 'videojs', 'videojs.helpers'], 'videojs.screenshoot': ['jquery', 'videojs', 'videojs.helpers', 'videojs.concatenate'], 'videojs.seektooltip': ['jquery', 'videojs', 'videojs.helpers'], 'videojs.topbar': ['jquery', 'videojs', 'videojs.helpers'], 'videojs.helpers': ['jquery', 'videojs', 'lib\x2Futils'], 'videojs.seed': ['jquery', 'videojs', 'videojs.helpers'], 'yii': { 'deps': ['jquery'] }, 'yiitab': { 'deps': ['jquery'] }, 'yiiactiveform': { 'deps': ['jquery'] }, 'bgiframe': { 'deps': ['jquery'] }, 'ajaxqueue': { 'deps': ['jquery'] }, 'autocomplete': { 'deps': ['jquery', 'bgiframe', 'ajaxqueue'] }, 'maskedinput': { 'deps': ['jquery'] }, 'cookie': { 'deps': ['jquery'] }, 'treeview': { 'deps': ['jquery', 'cookie'] }, 'jquery.treeview.edit': { 'deps': ['treeview'] }, 'jquery.treeview.async': { 'deps': ['treeview'] }, 'multifile': { 'deps': ['jquery'] }, 'rating': { 'deps': ['jquery', 'metadata'] }, 'metadata': { 'deps': ['jquery'] }, 'bbq': { 'deps': ['jquery'] }, 'punycode': { 'deps': [] } }, 'waitSeconds': 60 });

    /*]]>*/
  </script>
  <script type="text/javascript" src="/js/vendor/OneSignalSDK.js" async="async" pos="1"></script>
  <script type="text/javascript">
    /*<![CDATA[*/
    jQuery(function ($) {
      'requirejs_preload';
      if (typeof jQuery != 'undefined') { define('jquery', function () { return jQuery }); }
      define('bbq', function () { });
      if (typeof $.throttle != 'undefined') { define('jquery.ba-throttle-debounce', function () { return $.throttle }); }
      if (typeof $.fn.slick != 'undefined') { define('slick', function () { return $.fn.slick }); }
      if (typeof $.fn.yiiListViewMod != 'undefined') { define('jquery.yiilistview-mod', function () { return $.fn.yiiListViewMod }); }
      if (typeof History != 'undefined') { define('history', function () { return History }); }
      define('isMobile', function () { });
      define('lib/utils', function () { });
      define('lib/main_helpers', function () { });
      if (typeof Hammer != 'undefined') { define('hammerjs', function () { return Hammer }); }
      if (typeof $.fn.hammer != 'undefined') { define('jquery.hammer', function () { return $.fn.hammer }); }
      if (typeof Materialize != 'undefined') { define('materialize', function () { return Materialize }); }
      if (typeof $.fn.actual != 'undefined') { define('jquery.actual', function () { return $.fn.actual }); }
      if (typeof $.fn.ajaxSubmit != 'undefined') { define('jquery.form', function () { return $.fn.ajaxSubmit }); }
      define('app/main', function () { });

      'init_scripts';
      require(['jquery.yiilistview\x2Dmod', 'history'], (function () {
        'yii widget init - ListView#yw_moments_by_series';
        jQuery('#yw_moments_by_series').yiiListViewMod({ 'ajaxUpdate': ['yw_moments_by_series'], 'ajaxVar': 'ajax', 'pagerClass': 'pager', 'loadingClass': 'list\x2Dview\x2Dloading', 'sorterClass': 'sorter', 'enableHistory': false, 'loadPrevClass': 'load\x2Dprev', 'loadMoreClass': 'load\x2Dmore', 'loadMoreTriggerClass': 'load\x2Dmore\x2Dtrigger', 'ajaxPageVar': 'ajaxPage', 'pageVar': 'moments\x2Dpage', 'ajaxPageModeVar': 'ajaxPageMode', 'reloadOnNewFilterVar': 'reloadOnNewFilter', 'ajaxPageLoad': true, 'ajaxPageInfiniteLoad': true, 'pageAnchorClass': 'page\x2Danchor', 'loadMoreProgressClass': 'load\x2Dmore\x2Dprogress', 'loadPrevProgressClass': 'load\x2Dprev\x2Dprogress', 'loadPrevWrapperClass': 'load\x2Dprev\x2Dwrapper', 'loadMoreWrapperClass': 'load\x2Dmore\x2Dwrapper', 'loadMoreTriggerOffset': 1200, 'loadMoreTriggerHrizPagesOffset': 1, 'baseUrl': '\x2Fmoments\x2FlistBySeries\x2F17750\x3Frecent\x3D1', 'miniPagerOptions': { 'size': 5, 'class': 'mini\x2Dpager\x20card', 'loadedPageClass': 'loaded', 'hiddenPageClass': 'disabled', 'selectedPageClass': 'active\x20green\x20darken\x2D4', 'pageClass': 'waves\x2Deffect', 'nextPageClass': 'waves\x2Deffect\x20mini\x2Dpager\x2Dload\x2Dnext', 'prevPageClass': 'waves\x2Deffect\x20mini\x2Dpager\x2Dload\x2Dprev', 'firstPageClass': 'waves\x2Deffect\x20mini\x2Dpager\x2Dload\x2Dfirst', 'firstPageLabel': '\x3Ci\x20class\x3D\x22material\x2Dicons\x22\x3Earrow_upward\x3C\x2Fi\x3E', 'prevPageLabel': '\x3Ci\x20class\x3D\x22material\x2Dicons\x22\x3Echevron_left\x3C\x2Fi\x3E', 'nextPageLabel': '\x3Ci\x20class\x3D\x22material\x2Dicons\x22\x3Echevron_right\x3C\x2Fi\x3E' }, 'showMiniPager': true, 'isGrid': true, 'isHoriz': true, 'enableHistory2': false, 'slickerOptions': { 'slidesToShow': 4, 'slidesToScroll': 4, 'prevArrow': '\x3Ca\x20class\x3D\x22btn\x2Dfloating\x20btn\x2Dlarge\x20waves\x2Deffect\x20waves\x2Dlight\x20slick\x2Darrow\x20slick\x2Dprev\x22\x3E\x3Ci\x20class\x3D\x22material\x2Dicons\x22\x3Echevron_left\x3C\x2Fi\x3E\x3C\x2Fa\x3E', 'nextArrow': '\x3Ca\x20class\x3D\x22btn\x2Dfloating\x20btn\x2Dlarge\x20waves\x2Deffect\x20waves\x2Dlight\x20slick\x2Darrow\x20slick\x2Dnext\x22\x3E\x3Ci\x20class\x3D\x22material\x2Dicons\x22\x3Echevron_right\x3C\x2Fi\x3E\x3C\x2Fa\x3E', 'responsive': [{ 'breakpoint': 1180, 'settings': { 'slidesToShow': 3, 'slidesToScroll': 3 } }, { 'breakpoint': 900, 'settings': { 'slidesToShow': 2, 'slidesToScroll': 2 } }, { 'breakpoint': 601, 'settings': { 'slidesToShow': 2, 'slidesToScroll': 2 } }, { 'breakpoint': 460, 'settings': { 'slidesToShow': 1, 'slidesToScroll': 1 } }] }, 'initContent': listViewInitContent, 'beforeAjaxUpdate': listViewBeforeAjaxUpdate, 'afterAjaxUpdate': listViewAfterAjaxUpdate, 'ajaxUpdateError': listViewErrorAjaxUpdate, 'beforeAjaxPageLoad': listViewBeforeAjaxPageLoad, 'afterAjaxPageLoad': listViewAfterAjaxPageLoad, 'ajaxPageLoadError': listViewErrorAjaxPageLoad, 'preprocessAjaxPageLoadData': listViewPreprocessAjaxPageLoadData, 'visiblePageChanged': listViewVisiblePageChanged });
      }));
      require(['lib\x2Futils'], function () { var args = arguments; $(document).ready(function () { initComments.apply(this, args) }); });
      require(['jquery.yiilistview\x2Dmod', 'history'], (function () {
        'yii widget init - ListView#yw0';
        jQuery('#yw0').yiiListViewMod({ 'ajaxUpdate': true, 'ajaxVar': 'ajax', 'pagerClass': 'pager', 'loadingClass': 'list\x2Dview\x2Dloading', 'sorterClass': 'sorter', 'enableHistory': false, 'loadPrevClass': 'load\x2Dprev', 'loadMoreClass': 'load\x2Dmore', 'loadMoreTriggerClass': 'load\x2Dmore\x2Dtrigger', 'ajaxPageVar': 'ajaxPage', 'pageVar': 'comments\x2Dpage', 'ajaxPageModeVar': 'ajaxPageMode', 'reloadOnNewFilterVar': 'reloadOnNewFilter', 'ajaxPageLoad': true, 'ajaxPageInfiniteLoad': true, 'pageAnchorClass': 'page\x2Danchor', 'loadMoreProgressClass': 'load\x2Dmore\x2Dprogress', 'loadPrevProgressClass': 'load\x2Dprev\x2Dprogress', 'loadPrevWrapperClass': 'load\x2Dprev\x2Dwrapper', 'loadMoreWrapperClass': 'load\x2Dmore\x2Dwrapper', 'loadMoreTriggerOffset': 1200, 'loadMoreTriggerHrizPagesOffset': 1, 'baseUrl': '\x2Fcatalog\x2Fwotaku\x2Dni\x2Dkoi\x2Dwa\x2Dmuzukashii\x2D17750', 'miniPagerOptions': { 'size': 5, 'class': 'mini\x2Dpager\x20card', 'loadedPageClass': 'loaded', 'hiddenPageClass': 'disabled', 'selectedPageClass': 'active\x20green\x20darken\x2D4', 'pageClass': 'waves\x2Deffect', 'nextPageClass': 'waves\x2Deffect\x20mini\x2Dpager\x2Dload\x2Dnext', 'prevPageClass': 'waves\x2Deffect\x20mini\x2Dpager\x2Dload\x2Dprev', 'firstPageClass': 'waves\x2Deffect\x20mini\x2Dpager\x2Dload\x2Dfirst', 'firstPageLabel': '\x3Ci\x20class\x3D\x22material\x2Dicons\x22\x3Earrow_upward\x3C\x2Fi\x3E', 'prevPageLabel': '\x3Ci\x20class\x3D\x22material\x2Dicons\x22\x3Echevron_left\x3C\x2Fi\x3E', 'nextPageLabel': '\x3Ci\x20class\x3D\x22material\x2Dicons\x22\x3Echevron_right\x3C\x2Fi\x3E' }, 'showMiniPager': true, 'isGrid': false, 'isHoriz': false, 'enableHistory2': false, 'slickerOptions': { 'slidesToShow': 4, 'slidesToScroll': 4, 'prevArrow': '\x3Ca\x20class\x3D\x22btn\x2Dfloating\x20btn\x2Dlarge\x20waves\x2Deffect\x20waves\x2Dlight\x20slick\x2Darrow\x20slick\x2Dprev\x22\x3E\x3Ci\x20class\x3D\x22material\x2Dicons\x22\x3Echevron_left\x3C\x2Fi\x3E\x3C\x2Fa\x3E', 'nextArrow': '\x3Ca\x20class\x3D\x22btn\x2Dfloating\x20btn\x2Dlarge\x20waves\x2Deffect\x20waves\x2Dlight\x20slick\x2Darrow\x20slick\x2Dnext\x22\x3E\x3Ci\x20class\x3D\x22material\x2Dicons\x22\x3Echevron_right\x3C\x2Fi\x3E\x3C\x2Fa\x3E' }, 'initContent': listViewInitContent, 'beforeAjaxUpdate': listViewBeforeAjaxUpdate, 'afterAjaxUpdate': listViewAfterAjaxUpdate, 'ajaxUpdateError': listViewErrorAjaxUpdate, 'beforeAjaxPageLoad': listViewBeforeAjaxPageLoad, 'afterAjaxPageLoad': listViewAfterAjaxPageLoad, 'ajaxPageLoadError': listViewErrorAjaxPageLoad, 'preprocessAjaxPageLoadData': listViewPreprocessAjaxPageLoadData, 'visiblePageChanged': listViewVisiblePageChanged });
      }));

    });
    /*]]>*/
  </script>

  <div class="hiddendiv common"></div>
  <div class="drag-target" data-sidenav="nav-mobile"
    style="left: 0px; touch-action: pan-y; user-select: none; -webkit-user-drag: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0);">
  </div>
</body>

</html>
