<html lang="en" data-n-head="%7B%22lang%22:%7B%22ssr%22:%22en%22%7D%7D">

<head>
  <meta http-equiv="origin-trial"
    content="A89JPrWYXvEpNQ/xE+PjjlGJiBu/L2GfQcplC/QkDJOS1fBoX5Q4/HLfT1dXpD1td7C2peXE3bSCJiYdwoFcNgQAAACSeyJvcmlnaW4iOiJodHRwczovL3JlY2FwdGNoYS5uZXQ6NDQzIiwiZmVhdHVyZSI6IkRpc2FibGVUaGlyZFBhcnR5U3RvcmFnZVBhcnRpdGlvbmluZyIsImV4cGlyeSI6MTcyNTQwNzk5OSwiaXNTdWJkb21haW4iOnRydWUsImlzVGhpcmRQYXJ0eSI6dHJ1ZX0=">
  <meta data-n-head="ssr" data-hid="lang" lang="en">
  <meta data-n-head="ssr" data-hid="language" language="English">
  <meta data-n-head="ssr" data-hid="charset" charset="utf-8">
  <meta data-n-head="ssr" data-hid="publisher" key="publisher" property="publisher" name="publisher"
    content="Swordflake 2022">
  <meta data-n-head="ssr" data-hid="format-detection" key="format-detection" property="format-detection"
    name="format-detection" content="telephone=no">
  <meta data-n-head="ssr" data-hid="viewport" key="viewport" property="viewport" name="viewport"
    content="width=device-width, initial-scale=1">
  <meta data-n-head="ssr" data-hid="name" key="name" property="name" name="name" content="ZEROSCANS">
  <meta data-n-head="ssr" data-hid="og:site_name" key="og:site_name" property="og:site_name" name="og:site_name"
    content="ZEROSCANS">
  <meta data-n-head="ssr" data-hid="og:locale" key="og:locale" property="og:locale" name="og:locale" content="en">
  <meta data-n-head="ssr" data-hid="og:type" key="og:type" property="og:type" name="og:type" content="website">
  <meta data-n-head="ssr" data-hid="image:width" key="image:width" property="image:width" name="image:width"
    content="400">
  <meta data-n-head="ssr" data-hid="image:height" key="image:height" property="image:height" name="image:height"
    content="400">
  <meta data-n-head="ssr" data-hid="image:alt" key="image:alt" property="image:alt" name="image:alt"
    content="High quality comics and more with zero scans!">
  <meta data-n-head="ssr" data-hid="twitter:card" key="twitter:card" property="twitter:card" name="twitter:card"
    content="/icon.png">
  <meta data-n-head="ssr" data-hid="robots" key="robots" property="robots" name="robots" content="all">
  <meta data-n-head="ssr" data-hid="description" key="description" property="description" name="description"
    content="Yeon-woo had a twin brother who disappeared five years ago. One day, a pocket watch left by his brother returned to his possession. Inside, he found a hidden diary in whi...">
  <meta data-n-head="ssr" data-hid="twitter:description" key="twitter:description" property="twitter:description"
    name="twitter:description"
    content="Yeon-woo had a twin brother who disappeared five years ago. One day, a pocket watch left by his brother returned to his possession. Inside, he found a hidden diary in whi...">
  <meta data-n-head="ssr" data-hid="og:description" key="og:description" property="og:description" name="og:description"
    content="Yeon-woo had a twin brother who disappeared five years ago. One day, a pocket watch left by his brother returned to his possession. Inside, he found a hidden diary in whi...">
  <meta data-n-head="ssr" data-hid="twitter:title" key="twitter:title" property="twitter:title" name="twitter:title"
    content="Read Second Life Ranker with up to date chapters!">
  <meta data-n-head="ssr" data-hid="og:image" key="og:image" property="og:image" name="og:image"
    content="https://api.zeroscans.com/storage/76949/conversions/66d577365a1a39ad8be0ee2e22652ed9-full.webp">
  <title>Read Second Life Ranker with up to date chapters! • Zero Scans</title>
  <link data-n-head="ssr" rel="icon" type="image/x-icon" href="/favicon.ico">
  <link data-n-head="ssr" data-hid="canonical" rel="canonical" href="https://zeroscans.com/comics/second-life-ranker">
  <style data-n-head="vuetify" type="text/css" id="vuetify-theme-stylesheet" nonce="undefined">
    .v-application a {
      color: #cc444b;
    }

    .v-application .primary {
      background-color: #cc444b !important;
      border-color: #cc444b !important;
    }

    .v-application .primary--text {
      color: #cc444b !important;
      caret-color: #cc444b !important;
    }

    .v-application .primary.lighten-5 {
      background-color: #ffd0cc !important;
      border-color: #ffd0cc !important;
    }

    .v-application .primary--text.text--lighten-5 {
      color: #ffd0cc !important;
      caret-color: #ffd0cc !important;
    }

    .v-application .primary.lighten-4 {
      background-color: #ffb3b0 !important;
      border-color: #ffb3b0 !important;
    }

    .v-application .primary--text.text--lighten-4 {
      color: #ffb3b0 !important;
      caret-color: #ffb3b0 !important;
    }

    .v-application .primary.lighten-3 {
      background-color: #ff9796 !important;
      border-color: #ff9796 !important;
    }

    .v-application .primary--text.text--lighten-3 {
      color: #ff9796 !important;
      caret-color: #ff9796 !important;
    }

    .v-application .primary.lighten-2 {
      background-color: #ff7b7c !important;
      border-color: #ff7b7c !important;
    }

    .v-application .primary--text.text--lighten-2 {
      color: #ff7b7c !important;
      caret-color: #ff7b7c !important;
    }

    .v-application .primary.lighten-1 {
      background-color: #eb6063 !important;
      border-color: #eb6063 !important;
    }

    .v-application .primary--text.text--lighten-1 {
      color: #eb6063 !important;
      caret-color: #eb6063 !important;
    }

    .v-application .primary.darken-1 {
      background-color: #ad2634 !important;
      border-color: #ad2634 !important;
    }

    .v-application .primary--text.text--darken-1 {
      color: #ad2634 !important;
      caret-color: #ad2634 !important;
    }

    .v-application .primary.darken-2 {
      background-color: #8f001f !important;
      border-color: #8f001f !important;
    }

    .v-application .primary--text.text--darken-2 {
      color: #8f001f !important;
      caret-color: #8f001f !important;
    }

    .v-application .primary.darken-3 {
      background-color: #710009 !important;
      border-color: #710009 !important;
    }

    .v-application .primary--text.text--darken-3 {
      color: #710009 !important;
      caret-color: #710009 !important;
    }

    .v-application .primary.darken-4 {
      background-color: #550000 !important;
      border-color: #550000 !important;
    }

    .v-application .primary--text.text--darken-4 {
      color: #550000 !important;
      caret-color: #550000 !important;
    }

    .v-application .secondary {
      background-color: #ff8f00 !important;
      border-color: #ff8f00 !important;
    }

    .v-application .secondary--text {
      color: #ff8f00 !important;
      caret-color: #ff8f00 !important;
    }

    .v-application .secondary.lighten-5 {
      background-color: #ffff9f !important;
      border-color: #ffff9f !important;
    }

    .v-application .secondary--text.text--lighten-5 {
      color: #ffff9f !important;
      caret-color: #ffff9f !important;
    }

    .v-application .secondary.lighten-4 {
      background-color: #ffff83 !important;
      border-color: #ffff83 !important;
    }

    .v-application .secondary--text.text--lighten-4 {
      color: #ffff83 !important;
      caret-color: #ffff83 !important;
    }

    .v-application .secondary.lighten-3 {
      background-color: #ffe267 !important;
      border-color: #ffe267 !important;
    }

    .v-application .secondary--text.text--lighten-3 {
      color: #ffe267 !important;
      caret-color: #ffe267 !important;
    }

    .v-application .secondary.lighten-2 {
      background-color: #ffc64b !important;
      border-color: #ffc64b !important;
    }

    .v-application .secondary--text.text--lighten-2 {
      color: #ffc64b !important;
      caret-color: #ffc64b !important;
    }

    .v-application .secondary.lighten-1 {
      background-color: #ffaa2d !important;
      border-color: #ffaa2d !important;
    }

    .v-application .secondary--text.text--lighten-1 {
      color: #ffaa2d !important;
      caret-color: #ffaa2d !important;
    }

    .v-application .secondary.darken-1 {
      background-color: #df7500 !important;
      border-color: #df7500 !important;
    }

    .v-application .secondary--text.text--darken-1 {
      color: #df7500 !important;
      caret-color: #df7500 !important;
    }

    .v-application .secondary.darken-2 {
      background-color: #bf5b00 !important;
      border-color: #bf5b00 !important;
    }

    .v-application .secondary--text.text--darken-2 {
      color: #bf5b00 !important;
      caret-color: #bf5b00 !important;
    }

    .v-application .secondary.darken-3 {
      background-color: #a04200 !important;
      border-color: #a04200 !important;
    }

    .v-application .secondary--text.text--darken-3 {
      color: #a04200 !important;
      caret-color: #a04200 !important;
    }

    .v-application .secondary.darken-4 {
      background-color: #832900 !important;
      border-color: #832900 !important;
    }

    .v-application .secondary--text.text--darken-4 {
      color: #832900 !important;
      caret-color: #832900 !important;
    }

    .v-application .accent {
      background-color: #424242 !important;
      border-color: #424242 !important;
    }

    .v-application .accent--text {
      color: #424242 !important;
      caret-color: #424242 !important;
    }

    .v-application .accent.lighten-5 {
      background-color: #c1c1c1 !important;
      border-color: #c1c1c1 !important;
    }

    .v-application .accent--text.text--lighten-5 {
      color: #c1c1c1 !important;
      caret-color: #c1c1c1 !important;
    }

    .v-application .accent.lighten-4 {
      background-color: #a6a6a6 !important;
      border-color: #a6a6a6 !important;
    }

    .v-application .accent--text.text--lighten-4 {
      color: #a6a6a6 !important;
      caret-color: #a6a6a6 !important;
    }

    .v-application .accent.lighten-3 {
      background-color: #8b8b8b !important;
      border-color: #8b8b8b !important;
    }

    .v-application .accent--text.text--lighten-3 {
      color: #8b8b8b !important;
      caret-color: #8b8b8b !important;
    }

    .v-application .accent.lighten-2 {
      background-color: #727272 !important;
      border-color: #727272 !important;
    }

    .v-application .accent--text.text--lighten-2 {
      color: #727272 !important;
      caret-color: #727272 !important;
    }

    .v-application .accent.lighten-1 {
      background-color: #595959 !important;
      border-color: #595959 !important;
    }

    .v-application .accent--text.text--lighten-1 {
      color: #595959 !important;
      caret-color: #595959 !important;
    }

    .v-application .accent.darken-1 {
      background-color: #2c2c2c !important;
      border-color: #2c2c2c !important;
    }

    .v-application .accent--text.text--darken-1 {
      color: #2c2c2c !important;
      caret-color: #2c2c2c !important;
    }

    .v-application .accent.darken-2 {
      background-color: #171717 !important;
      border-color: #171717 !important;
    }

    .v-application .accent--text.text--darken-2 {
      color: #171717 !important;
      caret-color: #171717 !important;
    }

    .v-application .accent.darken-3 {
      background-color: #000000 !important;
      border-color: #000000 !important;
    }

    .v-application .accent--text.text--darken-3 {
      color: #000000 !important;
      caret-color: #000000 !important;
    }

    .v-application .accent.darken-4 {
      background-color: #000000 !important;
      border-color: #000000 !important;
    }

    .v-application .accent--text.text--darken-4 {
      color: #000000 !important;
      caret-color: #000000 !important;
    }

    .v-application .error {
      background-color: #dd2c00 !important;
      border-color: #dd2c00 !important;
    }

    .v-application .error--text {
      color: #dd2c00 !important;
      caret-color: #dd2c00 !important;
    }

    .v-application .error.lighten-5 {
      background-color: #ffc187 !important;
      border-color: #ffc187 !important;
    }

    .v-application .error--text.text--lighten-5 {
      color: #ffc187 !important;
      caret-color: #ffc187 !important;
    }

    .v-application .error.lighten-4 {
      background-color: #ffa46c !important;
      border-color: #ffa46c !important;
    }

    .v-application .error--text.text--lighten-4 {
      color: #ffa46c !important;
      caret-color: #ffa46c !important;
    }

    .v-application .error.lighten-3 {
      background-color: #ff8753 !important;
      border-color: #ff8753 !important;
    }

    .v-application .error--text.text--lighten-3 {
      color: #ff8753 !important;
      caret-color: #ff8753 !important;
    }

    .v-application .error.lighten-2 {
      background-color: #ff6a39 !important;
      border-color: #ff6a39 !important;
    }

    .v-application .error--text.text--lighten-2 {
      color: #ff6a39 !important;
      caret-color: #ff6a39 !important;
    }

    .v-application .error.lighten-1 {
      background-color: #fe4d1f !important;
      border-color: #fe4d1f !important;
    }

    .v-application .error--text.text--lighten-1 {
      color: #fe4d1f !important;
      caret-color: #fe4d1f !important;
    }

    .v-application .error.darken-1 {
      background-color: #bc0000 !important;
      border-color: #bc0000 !important;
    }

    .v-application .error--text.text--darken-1 {
      color: #bc0000 !important;
      caret-color: #bc0000 !important;
    }

    .v-application .error.darken-2 {
      background-color: #9d0000 !important;
      border-color: #9d0000 !important;
    }

    .v-application .error--text.text--darken-2 {
      color: #9d0000 !important;
      caret-color: #9d0000 !important;
    }

    .v-application .error.darken-3 {
      background-color: #7f0000 !important;
      border-color: #7f0000 !important;
    }

    .v-application .error--text.text--darken-3 {
      color: #7f0000 !important;
      caret-color: #7f0000 !important;
    }

    .v-application .error.darken-4 {
      background-color: #630000 !important;
      border-color: #630000 !important;
    }

    .v-application .error--text.text--darken-4 {
      color: #630000 !important;
      caret-color: #630000 !important;
    }

    .v-application .info {
      background-color: #26a69a !important;
      border-color: #26a69a !important;
    }

    .v-application .info--text {
      color: #26a69a !important;
      caret-color: #26a69a !important;
    }

    .v-application .info.lighten-5 {
      background-color: #c3ffff !important;
      border-color: #c3ffff !important;
    }

    .v-application .info--text.text--lighten-5 {
      color: #c3ffff !important;
      caret-color: #c3ffff !important;
    }

    .v-application .info.lighten-4 {
      background-color: #a5ffff !important;
      border-color: #a5ffff !important;
    }

    .v-application .info--text.text--lighten-4 {
      color: #a5ffff !important;
      caret-color: #a5ffff !important;
    }

    .v-application .info.lighten-3 {
      background-color: #87fbed !important;
      border-color: #87fbed !important;
    }

    .v-application .info--text.text--lighten-3 {
      color: #87fbed !important;
      caret-color: #87fbed !important;
    }

    .v-application .info.lighten-2 {
      background-color: #6aded0 !important;
      border-color: #6aded0 !important;
    }

    .v-application .info--text.text--lighten-2 {
      color: #6aded0 !important;
      caret-color: #6aded0 !important;
    }

    .v-application .info.lighten-1 {
      background-color: #4bc2b5 !important;
      border-color: #4bc2b5 !important;
    }

    .v-application .info--text.text--lighten-1 {
      color: #4bc2b5 !important;
      caret-color: #4bc2b5 !important;
    }

    .v-application .info.darken-1 {
      background-color: #008b80 !important;
      border-color: #008b80 !important;
    }

    .v-application .info--text.text--darken-1 {
      color: #008b80 !important;
      caret-color: #008b80 !important;
    }

    .v-application .info.darken-2 {
      background-color: #007167 !important;
      border-color: #007167 !important;
    }

    .v-application .info--text.text--darken-2 {
      color: #007167 !important;
      caret-color: #007167 !important;
    }

    .v-application .info.darken-3 {
      background-color: #00584f !important;
      border-color: #00584f !important;
    }

    .v-application .info--text.text--darken-3 {
      color: #00584f !important;
      caret-color: #00584f !important;
    }

    .v-application .info.darken-4 {
      background-color: #004038 !important;
      border-color: #004038 !important;
    }

    .v-application .info--text.text--darken-4 {
      color: #004038 !important;
      caret-color: #004038 !important;
    }

    .v-application .success {
      background-color: #00e676 !important;
      border-color: #00e676 !important;
    }

    .v-application .success--text {
      color: #00e676 !important;
      caret-color: #00e676 !important;
    }

    .v-application .success.lighten-5 {
      background-color: #ceffff !important;
      border-color: #ceffff !important;
    }

    .v-application .success--text.text--lighten-5 {
      color: #ceffff !important;
      caret-color: #ceffff !important;
    }

    .v-application .success.lighten-4 {
      background-color: #afffe4 !important;
      border-color: #afffe4 !important;
    }

    .v-application .success--text.text--lighten-4 {
      color: #afffe4 !important;
      caret-color: #afffe4 !important;
    }

    .v-application .success.lighten-3 {
      background-color: #8fffc8 !important;
      border-color: #8fffc8 !important;
    }

    .v-application .success--text.text--lighten-3 {
      color: #8fffc8 !important;
      caret-color: #8fffc8 !important;
    }

    .v-application .success.lighten-2 {
      background-color: #6dffac !important;
      border-color: #6dffac !important;
    }

    .v-application .success--text.text--lighten-2 {
      color: #6dffac !important;
      caret-color: #6dffac !important;
    }

    .v-application .success.lighten-1 {
      background-color: #47ff91 !important;
      border-color: #47ff91 !important;
    }

    .v-application .success--text.text--lighten-1 {
      color: #47ff91 !important;
      caret-color: #47ff91 !important;
    }

    .v-application .success.darken-1 {
      background-color: #00c95c !important;
      border-color: #00c95c !important;
    }

    .v-application .success--text.text--darken-1 {
      color: #00c95c !important;
      caret-color: #00c95c !important;
    }

    .v-application .success.darken-2 {
      background-color: #00ad43 !important;
      border-color: #00ad43 !important;
    }

    .v-application .success--text.text--darken-2 {
      color: #00ad43 !important;
      caret-color: #00ad43 !important;
    }

    .v-application .success.darken-3 {
      background-color: #009129 !important;
      border-color: #009129 !important;
    }

    .v-application .success--text.text--darken-3 {
      color: #009129 !important;
      caret-color: #009129 !important;
    }

    .v-application .success.darken-4 {
      background-color: #00760d !important;
      border-color: #00760d !important;
    }

    .v-application .success--text.text--darken-4 {
      color: #00760d !important;
      caret-color: #00760d !important;
    }

    .v-application .warning {
      background-color: #ffc107 !important;
      border-color: #ffc107 !important;
    }

    .v-application .warning--text {
      color: #ffc107 !important;
      caret-color: #ffc107 !important;
    }

    .v-application .warning.lighten-5 {
      background-color: #ffffae !important;
      border-color: #ffffae !important;
    }

    .v-application .warning--text.text--lighten-5 {
      color: #ffffae !important;
      caret-color: #ffffae !important;
    }

    .v-application .warning.lighten-4 {
      background-color: #ffff91 !important;
      border-color: #ffff91 !important;
    }

    .v-application .warning--text.text--lighten-4 {
      color: #ffff91 !important;
      caret-color: #ffff91 !important;
    }

    .v-application .warning.lighten-3 {
      background-color: #ffff74 !important;
      border-color: #ffff74 !important;
    }

    .v-application .warning--text.text--lighten-3 {
      color: #ffff74 !important;
      caret-color: #ffff74 !important;
    }

    .v-application .warning.lighten-2 {
      background-color: #fff956 !important;
      border-color: #fff956 !important;
    }

    .v-application .warning--text.text--lighten-2 {
      color: #fff956 !important;
      caret-color: #fff956 !important;
    }

    .v-application .warning.lighten-1 {
      background-color: #ffdd37 !important;
      border-color: #ffdd37 !important;
    }

    .v-application .warning--text.text--lighten-1 {
      color: #ffdd37 !important;
      caret-color: #ffdd37 !important;
    }

    .v-application .warning.darken-1 {
      background-color: #e0a600 !important;
      border-color: #e0a600 !important;
    }

    .v-application .warning--text.text--darken-1 {
      color: #e0a600 !important;
      caret-color: #e0a600 !important;
    }

    .v-application .warning.darken-2 {
      background-color: #c18c00 !important;
      border-color: #c18c00 !important;
    }

    .v-application .warning--text.text--darken-2 {
      color: #c18c00 !important;
      caret-color: #c18c00 !important;
    }

    .v-application .warning.darken-3 {
      background-color: #a27300 !important;
      border-color: #a27300 !important;
    }

    .v-application .warning--text.text--darken-3 {
      color: #a27300 !important;
      caret-color: #a27300 !important;
    }

    .v-application .warning.darken-4 {
      background-color: #855a00 !important;
      border-color: #855a00 !important;
    }

    .v-application .warning--text.text--darken-4 {
      color: #855a00 !important;
      caret-color: #855a00 !important;
    }
  </style><noscript data-n-head="ssr">This site requires JAVASCRIPT support, currently you don&#x27;t have.</noscript>
  <link rel="preload" href="/zero-scans/36e70da.js" as="script">
  <link rel="preload" href="/zero-scans/0acc8e8.js" as="script">
  <link rel="preload" href="/zero-scans/css/6de3be0.css" as="style">
  <link rel="preload" href="/zero-scans/027c375.js" as="script">
  <link rel="preload" href="/zero-scans/css/8e61334.css" as="style">
  <link rel="preload" href="/zero-scans/358f87b.js" as="script">
  <link rel="preload" href="/zero-scans/css/08b59ea.css" as="style">
  <link rel="preload" href="/zero-scans/257c778.js" as="script">
  <link rel="preload" href="/zero-scans/2ddbf20.js" as="script">
  <link rel="preload" href="/zero-scans/css/1751c20.css" as="style">
  <link rel="preload" href="/zero-scans/58b05b1.js" as="script">
  <link rel="stylesheet" href="/zero-scans/css/6de3be0.css">
  <link rel="stylesheet" href="/zero-scans/css/8e61334.css">
  <link rel="stylesheet" href="/zero-scans/css/08b59ea.css">
  <link rel="stylesheet" href="/zero-scans/css/1751c20.css">
  <style type="text/css">
    .toasted {
      padding: 0 20px
    }

    .toasted.rounded {
      border-radius: 24px
    }

    .toasted .primary,
    .toasted.toasted-primary {
      border-radius: 2px;
      min-height: 38px;
      line-height: 1.1em;
      background-color: #353535;
      padding: 6px 20px;
      font-size: 15px;
      font-weight: 300;
      color: #fff;
      box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24)
    }

    .toasted .primary.success,
    .toasted.toasted-primary.success {
      background: #4caf50
    }

    .toasted .primary.error,
    .toasted.toasted-primary.error {
      background: #f44336
    }

    .toasted .primary.info,
    .toasted.toasted-primary.info {
      background: #3f51b5
    }

    .toasted .primary .action,
    .toasted.toasted-primary .action {
      color: #a1c2fa
    }

    .toasted.bubble {
      border-radius: 30px;
      min-height: 38px;
      line-height: 1.1em;
      background-color: #ff7043;
      padding: 0 20px;
      font-size: 15px;
      font-weight: 300;
      color: #fff;
      box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24)
    }

    .toasted.bubble.success {
      background: #4caf50
    }

    .toasted.bubble.error {
      background: #f44336
    }

    .toasted.bubble.info {
      background: #3f51b5
    }

    .toasted.bubble .action {
      color: #8e2b0c
    }

    .toasted.outline {
      border-radius: 30px;
      min-height: 38px;
      line-height: 1.1em;
      background-color: #fff;
      border: 1px solid #676767;
      padding: 0 20px;
      font-size: 15px;
      color: #676767;
      box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
      font-weight: 700
    }

    .toasted.outline.success {
      color: #4caf50;
      border-color: #4caf50
    }

    .toasted.outline.error {
      color: #f44336;
      border-color: #f44336
    }

    .toasted.outline.info {
      color: #3f51b5;
      border-color: #3f51b5
    }

    .toasted.outline .action {
      color: #607d8b
    }

    .toasted-container {
      position: fixed;
      z-index: 10000
    }

    .toasted-container,
    .toasted-container.full-width {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: column;
      flex-direction: column
    }

    .toasted-container.full-width {
      max-width: 86%;
      width: 100%
    }

    .toasted-container.full-width.fit-to-screen {
      min-width: 100%
    }

    .toasted-container.full-width.fit-to-screen .toasted:first-child {
      margin-top: 0
    }

    .toasted-container.full-width.fit-to-screen.top-right {
      top: 0;
      right: 0
    }

    .toasted-container.full-width.fit-to-screen.top-left {
      top: 0;
      left: 0
    }

    .toasted-container.full-width.fit-to-screen.top-center {
      top: 0;
      left: 0;
      -webkit-transform: translateX(0);
      transform: translateX(0)
    }

    .toasted-container.full-width.fit-to-screen.bottom-right {
      right: 0;
      bottom: 0
    }

    .toasted-container.full-width.fit-to-screen.bottom-left {
      left: 0;
      bottom: 0
    }

    .toasted-container.full-width.fit-to-screen.bottom-center {
      left: 0;
      bottom: 0;
      -webkit-transform: translateX(0);
      transform: translateX(0)
    }

    .toasted-container.top-right {
      top: 10%;
      right: 7%
    }

    .toasted-container.top-left {
      top: 10%;
      left: 7%
    }

    .toasted-container.top-center {
      top: 10%;
      left: 50%;
      -webkit-transform: translateX(-50%);
      transform: translateX(-50%)
    }

    .toasted-container.bottom-right {
      right: 5%;
      bottom: 7%
    }

    .toasted-container.bottom-left {
      left: 5%;
      bottom: 7%
    }

    .toasted-container.bottom-center {
      left: 50%;
      -webkit-transform: translateX(-50%);
      transform: translateX(-50%);
      bottom: 7%
    }

    .toasted-container.bottom-left .toasted,
    .toasted-container.top-left .toasted {
      float: left
    }

    .toasted-container.bottom-right .toasted,
    .toasted-container.top-right .toasted {
      float: right
    }

    .toasted-container .toasted {
      top: 35px;
      width: auto;
      clear: both;
      margin-top: 10px;
      position: relative;
      max-width: 100%;
      height: auto;
      word-break: normal;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-align: center;
      align-items: center;
      -ms-flex-pack: justify;
      justify-content: space-between;
      box-sizing: inherit
    }

    .toasted-container .toasted .fa,
    .toasted-container .toasted .fab,
    .toasted-container .toasted .far,
    .toasted-container .toasted .fas,
    .toasted-container .toasted .material-icons,
    .toasted-container .toasted .mdi {
      margin-right: .5rem;
      margin-left: -.4rem
    }

    .toasted-container .toasted .fa.after,
    .toasted-container .toasted .fab.after,
    .toasted-container .toasted .far.after,
    .toasted-container .toasted .fas.after,
    .toasted-container .toasted .material-icons.after,
    .toasted-container .toasted .mdi.after {
      margin-left: .5rem;
      margin-right: -.4rem
    }

    .toasted-container .toasted .action {
      text-decoration: none;
      font-size: .8rem;
      padding: 8px;
      margin: 5px -7px 5px 7px;
      border-radius: 3px;
      text-transform: uppercase;
      letter-spacing: .03em;
      font-weight: 600;
      cursor: pointer
    }

    .toasted-container .toasted .action.icon {
      padding: 4px;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-align: center;
      align-items: center;
      -ms-flex-pack: center;
      justify-content: center
    }

    .toasted-container .toasted .action.icon .fa,
    .toasted-container .toasted .action.icon .material-icons,
    .toasted-container .toasted .action.icon .mdi {
      margin-right: 0;
      margin-left: 4px
    }

    .toasted-container .toasted .action.icon:hover {
      text-decoration: none
    }

    .toasted-container .toasted .action:hover {
      text-decoration: underline
    }

    @media only screen and (max-width:600px) {
      .toasted-container {
        min-width: 100%
      }

      .toasted-container .toasted:first-child {
        margin-top: 0
      }

      .toasted-container.top-right {
        top: 0;
        right: 0
      }

      .toasted-container.top-left {
        top: 0;
        left: 0
      }

      .toasted-container.top-center {
        top: 0;
        left: 0;
        -webkit-transform: translateX(0);
        transform: translateX(0)
      }

      .toasted-container.bottom-right {
        right: 0;
        bottom: 0
      }

      .toasted-container.bottom-left {
        left: 0;
        bottom: 0
      }

      .toasted-container.bottom-center {
        left: 0;
        bottom: 0;
        -webkit-transform: translateX(0);
        transform: translateX(0)
      }

      .toasted-container.bottom-center,
      .toasted-container.top-center {
        -ms-flex-align: stretch !important;
        align-items: stretch !important
      }

      .toasted-container.bottom-left .toasted,
      .toasted-container.bottom-right .toasted,
      .toasted-container.top-left .toasted,
      .toasted-container.top-right .toasted {
        float: none
      }

      .toasted-container .toasted {
        border-radius: 0
      }
    }
  </style>
  <script type="text/javascript" async="" src="https://www.googletagmanager.com/gtag/js?id=UA-115740280-1"></script>
  <script
    type="text/javascript">window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag('js', new Date()); gtag('config', "UA-115740280-1");</script>
  <script async="" data-cfasync="false" src="https://cdn.pubfuture-ad.com/v2/unit/pt.js"
    type="text/javascript"></script>
  <script type="text/javascript" async=""
    src="https://www.gstatic.com/recaptcha/releases/MydHw_zggsxIJuhSbyOmPv5R/recaptcha__de.js" crossorigin="anonymous"
    integrity="sha384-ygbX2yp+QgVysYp6WuX24k7l6nxkqq4pH5suMdfhxKUhngcB0THZCu0ZSeR6XEGC"></script>
  <script async="" defer=""
    src="https://www.recaptcha.net/recaptcha/api.js?render=6LdfDaUeAAAAAIpzPN6FlbFOI08NI_EAnec6VA4g"></script>
  <script async="" id="dsq-count-scr" src="//zero-scans.disqus.com/count.js"></script>
  <style>
    .grecaptcha-badge {
      display: none
    }
  </style>
  <script src="https://zero-scans.disqus.com/count-data.js?1=%2Fcomics%2Fsecond-life-ranker"></script>
  <script charset="utf-8" src="/zero-scans/31e7fa4.js"></script>
  <link rel="preload" as="style" href="/zero-scans/css/72f6cd7.css">
  <script charset="utf-8" src="/zero-scans/9f35b49.js"></script>
  <link rel="preload" as="style" href="/zero-scans/css/3e697a8.css">
  <script charset="utf-8" src="/zero-scans/0363189.js"></script>
</head>

<body>
  <div id="__zeroscans"><!---->
    <div id="__layout">
      <div data-app="true" id="app" class="v-application zs-app v-application--is-ltr theme--dark">
        <div class="v-application--wrap">
          <aside
            class="zs-bg-1 v-navigation-drawer v-navigation-drawer--close v-navigation-drawer--fixed v-navigation-drawer--is-mobile v-navigation-drawer--temporary theme--dark"
            style="height: 100%; top: 0px; transform: translateX(-100%); width: 256px;" data-booted="true">
            <div class="v-navigation-drawer__prepend">
              <div tabindex="0" aria-label="member" class="v-list-item v-list-item--link theme--dark"
                style="height: 56px;">
                <div class="v-list-item__content">
                  <div class="v-list-item__title d-flex align-center">
                    Sign in to your account
                    <div class="spacer"></div> <span aria-hidden="true" icon=""
                      class="v-icon notranslate theme--dark"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                        role="img" aria-hidden="true" class="v-icon__svg">
                        <path
                          d="M10,17V14H3V10H10V7L15,12L10,17M10,2H19A2,2 0 0,1 21,4V20A2,2 0 0,1 19,22H10A2,2 0 0,1 8,20V18H10V20H19V4H10V6H8V4A2,2 0 0,1 10,2Z">
                        </path>
                      </svg></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="v-navigation-drawer__content">
              <hr role="separator" aria-orientation="horizontal" class="v-divider theme--dark">
              <div role="list" class="v-list v-sheet theme--dark v-list--dense v-list--nav">
                <div role="listbox" class="v-item-group theme--dark v-list-item-group"><a href="/"
                    class="v-list-item v-list-item--link theme--dark" tabindex="0" role="option" aria-selected="false">
                    <div class="v-list-item__icon"><span aria-hidden="true" class="v-icon notranslate theme--dark"><svg
                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                          class="v-icon__svg">
                          <path d="M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z"></path>
                        </svg></span></div>
                    <div class="v-list-item__title text-capitalize">
                      home
                    </div>
                  </a><a href="/comics" aria-current="page"
                    class="v-item--active v-list-item--active v-list-item v-list-item--link theme--dark" tabindex="0"
                    role="option" aria-selected="true">
                    <div class="v-list-item__icon"><span aria-hidden="true" class="v-icon notranslate theme--dark"><svg
                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                          class="v-icon__svg">
                          <path d="M9 3V18H12V3H9M12 5L16 18L19 17L15 4L12 5M5 5V18H8V5H5M3 19V21H21V19H3Z"></path>
                        </svg></span></div>
                    <div class="v-list-item__title text-capitalize">
                      comics
                    </div>
                  </a></div>
              </div>
              <hr role="separator" aria-orientation="horizontal" class="v-divider v-divider--inset theme--dark">
              <div role="list" class="v-list v-sheet theme--dark v-list--dense v-list--nav">
                <div role="listbox" class="v-item-group theme--dark v-list-item-group">
                  <div tabindex="0" role="option" aria-selected="false"
                    class="v-list-item v-list-item--link theme--dark">
                    <div class="v-list-item__icon"><span aria-hidden="true" class="v-icon notranslate theme--dark"><svg
                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                          class="v-icon__svg">
                          <path
                            d="M15,5A2,2 0 0,1 17,7V23L10,20L3,23V7C3,5.89 3.9,5 5,5H15M9,1H19A2,2 0 0,1 21,3V19L19,18.13V3H7A2,2 0 0,1 9,1Z">
                          </path>
                        </svg></span></div>
                    <div class="v-list-item__title text-capitalize">
                      Bookmarks
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="v-navigation-drawer__append">
              <hr role="separator" aria-orientation="horizontal" class="v-divider theme--dark">
              <div class="d-flex pa-4 justify-space-around"><a href="https://paypal.me/zeroscanss"
                  rel="noopener noreferrer nofollow" target="_blank" aria-label="Support us through paypal"
                  class="zs-link"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 48 48"
                    style="height: 26px;">
                    <path fill="#009CDE" fill-rule="evenodd"
                      d="M37.097 5.318C35.061 2.995 31.384 2 26.678 2H13.021c-.961 0-1.78.7-1.93 1.652L5.404 39.76a1.173 1.173 0 0 0 1.158 1.357h8.432l-.582 3.695A1.027 1.027 0 0 0 15.425 46h7.107a1.71 1.71 0 0 0 1.688-1.445l.07-.362 1.338-8.5.087-.47a1.71 1.71 0 0 1 1.688-1.445h1.063c6.885 0 12.276-2.8 13.852-10.9.657-3.385.318-6.21-1.423-8.197-.527-.6-1.181-1.097-1.945-1.503.535-3.422-.004-5.75-1.853-7.86z"
                      clip-rule="evenodd"></path>
                    <path fill="#012169" fill-rule="evenodd"
                      d="M37.097 5.318C35.061 2.995 31.384 2 26.678 2H13.021c-.961 0-1.78.7-1.93 1.652L5.404 39.76a1.173 1.173 0 0 0 1.158 1.357h8.432L17.11 27.67l-.065.422a1.947 1.947 0 0 1 1.923-1.652h4.007c7.87 0 14.033-3.201 15.834-12.46a23.8 23.8 0 0 0 .14-.802c.535-3.422-.004-5.75-1.853-7.86z"
                      clip-rule="evenodd"></path>
                    <path fill="#003087" fill-rule="evenodd"
                      d="M20.337 11.947c.225-.108.475-.168.739-.168H31.78c1.268 0 2.45.083 3.532.258.309.05.61.107.902.171a13.44 13.44 0 0 1 1.254.345 9.7 9.7 0 0 1 1.48.625c.536-3.422-.003-5.75-1.852-7.86C35.061 2.995 31.384 2 26.678 2H13.021c-.961 0-1.78.7-1.93 1.652L5.404 39.76a1.173 1.173 0 0 0 1.158 1.357h8.432l4.393-27.894c.09-.572.457-1.04.95-1.277z"
                      clip-rule="evenodd"></path>
                  </svg></a>
                <hr role="separator" aria-orientation="vertical" class="v-divider v-divider--vertical theme--dark"> <a
                  href="https://www.patreon.com/zeroscans" rel="noopener noreferrer nofollow" target="_blank"
                  aria-label="Support us through patreon" class="zs-link"><span aria-hidden="true"
                    class="v-icon notranslate theme--dark"
                    style="color: rgb(255, 66, 77); caret-color: rgb(255, 66, 77);"><svg
                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                      class="v-icon__svg">
                      <path
                        d="M14.82 2.41C18.78 2.41 22 5.65 22 9.62C22 13.58 18.78 16.8 14.82 16.8C10.85 16.8 7.61 13.58 7.61 9.62C7.61 5.65 10.85 2.41 14.82 2.41M2 21.6H5.5V2.41H2V21.6Z">
                      </path>
                    </svg></span></a>
                <hr role="separator" aria-orientation="vertical" class="v-divider v-divider--vertical theme--dark"> <a
                  href="https://discord.gg/4u5vct3" rel="noopener noreferrer nofollow" target="_blank"
                  aria-label="Speak with us through discord" class="zs-link"><span aria-hidden="true"
                    class="v-icon notranslate theme--dark"
                    style="color: rgb(88, 101, 242); caret-color: rgb(88, 101, 242);"><svg
                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                      class="v-icon__svg">
                      <path
                        d="M22,24L16.75,19L17.38,21H4.5A2.5,2.5 0 0,1 2,18.5V3.5A2.5,2.5 0 0,1 4.5,1H19.5A2.5,2.5 0 0,1 22,3.5V24M12,6.8C9.32,6.8 7.44,7.95 7.44,7.95C8.47,7.03 10.27,6.5 10.27,6.5L10.1,6.33C8.41,6.36 6.88,7.53 6.88,7.53C5.16,11.12 5.27,14.22 5.27,14.22C6.67,16.03 8.75,15.9 8.75,15.9L9.46,15C8.21,14.73 7.42,13.62 7.42,13.62C7.42,13.62 9.3,14.9 12,14.9C14.7,14.9 16.58,13.62 16.58,13.62C16.58,13.62 15.79,14.73 14.54,15L15.25,15.9C15.25,15.9 17.33,16.03 18.73,14.22C18.73,14.22 18.84,11.12 17.12,7.53C17.12,7.53 15.59,6.36 13.9,6.33L13.73,6.5C13.73,6.5 15.53,7.03 16.56,7.95C16.56,7.95 14.68,6.8 12,6.8M9.93,10.59C10.58,10.59 11.11,11.16 11.1,11.86C11.1,12.55 10.58,13.13 9.93,13.13C9.29,13.13 8.77,12.55 8.77,11.86C8.77,11.16 9.28,10.59 9.93,10.59M14.1,10.59C14.75,10.59 15.27,11.16 15.27,11.86C15.27,12.55 14.75,13.13 14.1,13.13C13.46,13.13 12.94,12.55 12.94,11.86C12.94,11.16 13.45,10.59 14.1,10.59Z">
                      </path>
                    </svg></span></a>
              </div>
            </div>
            <div class="v-navigation-drawer__border"></div>
          </aside>
          <header class="zs-bg-1 relative v-sheet theme--dark v-toolbar v-app-bar"
            style="height:64px;margin-top:0px;transform:translateY(0px);left:0px;right:0px;" data-booted="true">
            <div class="v-toolbar__content" style="height: 64px;">
              <div class="container d-flex align-center py-0" style="gap:10px;z-index:4;"><button type="button"
                  class="v-app-bar__nav-icon d-md-none d-flex v-btn v-btn--icon v-btn--round theme--dark v-size--default"
                  style="margin-left:-20px;"><span class="v-btn__content"><span aria-hidden="true"
                      class="v-icon notranslate theme--dark"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                        role="img" aria-hidden="true" class="v-icon__svg">
                        <path d="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z"></path>
                      </svg></span></span></button> <a href="/" area-label="Zeroscans Logo - Home button"
                  title="Home logo button" class="d-flex align-center nuxt-link-active"><svg viewBox="0 0 245.15 245"
                    class="zs---logo_svg" data-v-21b9de84="">
                    <g data-v-21b9de84="">
                      <path fill="hsl(0, 100%, 60%)"
                        d="M242.27,230.6a8.43,8.43,0,0,1-6,14.4H29.58a8.45,8.45,0,0,1-6-14.4L230.68,23.5a8.49,8.49,0,0,1,12,12L50,228.1h165.9l-69.5-69.5,12-12Z"
                        data-v-21b9de84=""></path>
                      <path fill="white"
                        d="M221.58,14.5,14.47,221.5a8.49,8.49,0,0,1-12-12L195.08,16.9H29.27l69.5,69.5-12,11.9L2.87,14.4A8.43,8.43,0,0,1,8.87,0h206.7A8.49,8.49,0,0,1,221.58,14.5Z"
                        data-v-21b9de84=""></path>
                    </g>
                  </svg></a> <a href="/"
                  class="text--secondary zs-nav-btn d-none d-md-flex v-btn v-btn--router v-btn--text theme--dark v-size--default"
                  style="margin-top:1.2px;"><span class="v-btn__content">
                    home
                  </span></a><a href="/comics" aria-current="page"
                  class="text--secondary zs-nav-btn d-none d-md-flex v-btn--active v-btn v-btn--router v-btn--text theme--dark v-size--default"
                  style="margin-top:1.2px;"><span class="v-btn__content">
                    comics
                  </span></a>
                <div class="spacer"></div> <button type="button" aria-label="search"
                  class="v-btn v-btn--icon v-btn--round theme--dark v-size--default"><span class="v-btn__content"><span
                      aria-hidden="true" class="v-icon notranslate theme--dark"><svg xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 24 24" role="img" aria-hidden="true" class="v-icon__svg">
                        <path
                          d="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z">
                        </path>
                      </svg></span></span></button>
                <div class="d-md-flex d-none"><button type="button" aria-label="bookmark"
                    class="v-btn v-btn--icon v-btn--round theme--dark v-size--default"><span
                      class="v-btn__content"><span aria-hidden="true" class="v-icon notranslate theme--dark"><svg
                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                          class="v-icon__svg">
                          <path
                            d="M9,1H19A2,2 0 0,1 21,3V19L19,18.13V3H7A2,2 0 0,1 9,1M15,20V7H5V20L10,17.82L15,20M15,5C16.11,5 17,5.9 17,7V23L10,20L3,23V7A2,2 0 0,1 5,5H15Z">
                          </path>
                        </svg></span></span></button></div>
                <div style=""><button type="button" aria-label="member"
                    class="zs-bg-1-variant v-btn v-btn--icon v-btn--round theme--dark v-size--default"><span
                      class="v-btn__content"><span aria-hidden="true" class="v-icon notranslate theme--dark"><svg
                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                          class="v-icon__svg">
                          <path
                            d="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z">
                          </path>
                        </svg></span></span></button></div>
              </div> <!---->
            </div>
          </header>
          <main app="" class="v-main zs-bg-2"
            style="padding-top:0px;padding-right:0px;padding-bottom:0px;padding-left:0px;" data-booted="true">
            <div class="v-main__wrap">
              <div announcements="" class="container pt-4">
                <div id="pf-5520-1" class="mb-5">
                  <script type="text/javascript">window.pubfuturetag = window.pubfuturetag || []; window.pubfuturetag.push({
                      unit: "64f3706d3cedff003ec5c17f",
                      id: "pf-5520-1"
                    })</script>
                </div>
                <div class="row mb-5">
                  <div class="col-md-4 col-lg-3 col-xl-2 col-12">
                    <div innerwrapperselector=".sidebar__inner" class="sidebar">
                      <div class="inner-wrapper-sticky" style="position: relative;">
                        <div class="relative d-flex align-center">
                          <div aria-label="Second Life Ranker, free and high quality chapters" role="img"
                            class="v-image v-responsive rounded elevation-2 theme--dark"
                            style="height:420px;width:300px;">
                            <div class="v-responsive__sizer" style="padding-bottom: 136%;"></div>
                            <div class="v-image__image v-image__image--cover"
                              style="background-image: url(&quot;https://api.zeroscans.com/storage/76949/conversions/66d577365a1a39ad8be0ee2e22652ed9-full.webp&quot;); background-position: center center;">
                            </div><!---->
                            <div class="v-responsive__content" style="width: 300px;"></div>
                          </div>
                          <div class="absolute-left pa-4">
                            <div class="v-item-group theme--dark v-slide-group v-chip-group v-chip-group--column">
                              <div class="v-slide-group__prev v-slide-group__prev--disabled"><!----></div>
                              <div class="v-slide-group__wrapper">
                                <div class="v-slide-group__content"><a href="/comics?status=ongoing" tabindex="0"
                                    draggable="false"
                                    class="v-chip v-chip--clickable v-chip--link v-chip--no-color theme--dark v-size--x-small"
                                    style="opacity:0.85;"><span class="v-chip__content"><span aria-hidden="true"
                                        class="v-icon notranslate v-icon--left theme--dark"
                                        style="font-size:12px;height:12px;width:12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size:12px;height:12px;width:12px;">
                                          <path
                                            d="M3,13H5.79L10.1,4.79L11.28,13.75L14.5,9.66L17.83,13H21V15H17L14.67,12.67L9.92,18.73L8.94,11.31L7,15H3V13Z">
                                          </path>
                                        </svg></span> <span>Ongoing</span></span></a><a href="/comics?status=hiatus"
                                    tabindex="0" draggable="false"
                                    class="v-chip v-chip--clickable v-chip--link v-chip--no-color theme--dark v-size--x-small"
                                    style="opacity:0.85;"><span class="v-chip__content"><span aria-hidden="true"
                                        class="v-icon notranslate v-icon--left theme--dark"
                                        style="font-size:12px;height:12px;width:12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size:12px;height:12px;width:12px;">
                                          <path
                                            d="M3,13H5.79L10.1,4.79L11.28,13.75L14.5,9.66L17.83,13H21V15H17L14.67,12.67L9.92,18.73L8.94,11.31L7,15H3V13Z">
                                          </path>
                                        </svg></span> <span>Hiatus</span></span></a></div>
                              </div>
                              <div class="v-slide-group__next v-slide-group__next--disabled"><!----></div>
                            </div>
                          </div>
                        </div>
                        <div class="d-flex justify-space-between mt-5">
                          <div aria-haspopup="true" aria-expanded="false"
                            class="rounded-xl aspect-1 zs-bg-1 d-flex flex-column align-center justify-center v-sheet theme--dark elevation-2"
                            style="width:64px;"><span aria-hidden="true" class="v-icon notranslate theme--dark"><svg
                                xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                                class="v-icon__svg">
                                <path
                                  d="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z">
                                </path>
                              </svg></span>
                            <div class="text-caption">4.9</div>
                          </div><span class="v-tooltip v-tooltip--bottom"><!----></span><span
                            class="v-tooltip v-tooltip--bottom"><!----></span>
                          <div aria-haspopup="true" aria-expanded="false"
                            class="rounded-xl aspect-1 zs-bg-1 d-flex flex-column align-center justify-center v-sheet theme--dark elevation-2"
                            style="width:64px;"><span aria-hidden="true" class="v-icon notranslate theme--dark"><svg
                                xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                                class="v-icon__svg">
                                <path
                                  d="M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z">
                                </path>
                              </svg></span>
                            <div class="text-caption">2.343.750</div>
                          </div><span class="v-tooltip v-tooltip--bottom"><!----></span>
                          <div aria-haspopup="true" aria-expanded="false"
                            class="rounded-xl aspect-1 zs-bg-1 d-flex flex-column align-center justify-center v-sheet theme--dark elevation-2"
                            style="width:64px;"><span aria-hidden="true" class="v-icon notranslate theme--dark"><svg
                                xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                                class="v-icon__svg">
                                <path
                                  d="M12,16L19.36,10.27L21,9L12,2L3,9L4.63,10.27M12,18.54L4.62,12.81L3,14.07L12,21.07L21,14.07L19.37,12.8L12,18.54Z">
                                </path>
                              </svg></span>
                            <div class="text-caption">161</div>
                          </div><span class="v-tooltip v-tooltip--bottom"><!----></span>
                          <div aria-haspopup="true" aria-expanded="false"
                            class="rounded-xl aspect-1 zs-bg-1 d-flex flex-column align-center justify-center v-sheet theme--dark elevation-2"
                            style="width:64px;"><span aria-hidden="true" class="v-icon notranslate theme--dark"><svg
                                xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                                class="v-icon__svg">
                                <path
                                  d="M15,5A2,2 0 0,1 17,7V23L10,20L3,23V7C3,5.89 3.9,5 5,5H15M9,1H19A2,2 0 0,1 21,3V19L19,18.13V3H7A2,2 0 0,1 9,1Z">
                                </path>
                              </svg></span>
                            <div class="text-caption">1.827</div>
                          </div>
                        </div>
                        <div class="mt-5">
                          <div class="d-flex align-center zs-bg-1 rounded-xl elevation-2" style="padding:2px 12px;">
                            <div class="v-rating v-rating--dense"><button type="button"
                                class="v-icon notranslate v-icon--link theme--dark grey--text text--darken-1"><svg
                                  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                                  class="v-icon__svg">
                                  <path
                                    d="M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z">
                                  </path>
                                </svg></button><button type="button"
                                class="v-icon notranslate v-icon--link theme--dark grey--text text--darken-1"><svg
                                  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                                  class="v-icon__svg">
                                  <path
                                    d="M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z">
                                  </path>
                                </svg></button><button type="button"
                                class="v-icon notranslate v-icon--link theme--dark grey--text text--darken-1"><svg
                                  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                                  class="v-icon__svg">
                                  <path
                                    d="M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z">
                                  </path>
                                </svg></button><button type="button"
                                class="v-icon notranslate v-icon--link theme--dark grey--text text--darken-1"><svg
                                  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                                  class="v-icon__svg">
                                  <path
                                    d="M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z">
                                  </path>
                                </svg></button><button type="button"
                                class="v-icon notranslate v-icon--link theme--dark grey--text text--darken-1"><svg
                                  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                                  class="v-icon__svg">
                                  <path
                                    d="M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z">
                                  </path>
                                </svg></button></div>
                            <div class="spacer"></div>
                            <div class="pr-1"><b class="text-h6">0</b> <small class="text--disabled">/5</small></div>
                          </div>
                        </div>
                        <div class="d-flex align-center mt-5"><a href="/comics/second-life-ranker/390"
                            class="rounded-xl zs-bg-3 mr-4 v-btn v-btn--is-elevated v-btn--has-bg v-btn--router theme--dark v-size--default"
                            style="flex:1;"><span class="v-btn__content"><span class="text-capitalize">Chapter
                                <b>1</b></span></span></a> <button type="button" aria-label="Add bookmark"
                            class="zs-bg-3 v-btn v-btn--is-elevated v-btn--fab v-btn--has-bg v-btn--round theme--dark elevation-2 v-size--small"><span
                              class="v-btn__content"><span aria-hidden="true"
                                class="v-icon notranslate theme--dark"><svg xmlns="http://www.w3.org/2000/svg"
                                  viewBox="0 0 24 24" role="img" aria-hidden="true" class="v-icon__svg">
                                  <path
                                    d="M17,18L12,15.82L7,18V5H17M17,3H7A2,2 0 0,0 5,5V21L12,18L19,21V5C19,3.89 18.1,3 17,3Z">
                                  </path>
                                </svg></span></span></button></div>
                        <div id="pf-5520-1" class="mt-5">
                          <script type="text/javascript">window.pubfuturetag = window.pubfuturetag || []; window.pubfuturetag.push({
                              unit: "64f3706d3cedff003ec5c17f",
                              id: "pf-5520-1"
                            })</script>
                        </div>
                        <div style="padding-bottom:22px;"></div>
                      </div>
                    </div>
                  </div>
                  <div id="content_area" class="col-md-8 col-lg-9 col-xl-10 col-12">
                    <div>
                      <div class="w-100 zs-bg-1 elevation-2 rounded v-card v-sheet theme--dark">
                        <div class="v-card__title text-h4 pb-0 font-weight-bold">
                          Second Life Ranker
                        </div>
                        <div class="px-4 py-0 v-item-group theme--dark v-slide-group v-chip-group v-chip-group--column">
                          <div class="v-slide-group__prev v-slide-group__prev--disabled"><!----></div>
                          <div class="v-slide-group__wrapper">
                            <div class="v-slide-group__content"><a href="/comics?genres=drama" tabindex="0"
                                draggable="false"
                                class="v-chip v-chip--clickable v-chip--link v-chip--no-color theme--dark v-size--small"><span
                                  class="v-chip__content"><span aria-hidden="true"
                                    class="v-icon notranslate v-icon--left theme--dark"
                                    style="font-size:12px;height:12px;width:12px;"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size:12px;height:12px;width:12px;">
                                      <path
                                        d="M5.5,7A1.5,1.5 0 0,1 4,5.5A1.5,1.5 0 0,1 5.5,4A1.5,1.5 0 0,1 7,5.5A1.5,1.5 0 0,1 5.5,7M21.41,11.58L12.41,2.58C12.05,2.22 11.55,2 11,2H4C2.89,2 2,2.89 2,4V11C2,11.55 2.22,12.05 2.59,12.41L11.58,21.41C11.95,21.77 12.45,22 13,22C13.55,22 14.05,21.77 14.41,21.41L21.41,14.41C21.78,14.05 22,13.55 22,13C22,12.44 21.77,11.94 21.41,11.58Z">
                                      </path>
                                    </svg></span> <span style="padding-top:2px;">Drama</span></span></a><a
                                href="/comics?genres=historical" tabindex="0" draggable="false"
                                class="v-chip v-chip--clickable v-chip--link v-chip--no-color theme--dark v-size--small"><span
                                  class="v-chip__content"><span aria-hidden="true"
                                    class="v-icon notranslate v-icon--left theme--dark"
                                    style="font-size:12px;height:12px;width:12px;"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size:12px;height:12px;width:12px;">
                                      <path
                                        d="M5.5,7A1.5,1.5 0 0,1 4,5.5A1.5,1.5 0 0,1 5.5,4A1.5,1.5 0 0,1 7,5.5A1.5,1.5 0 0,1 5.5,7M21.41,11.58L12.41,2.58C12.05,2.22 11.55,2 11,2H4C2.89,2 2,2.89 2,4V11C2,11.55 2.22,12.05 2.59,12.41L11.58,21.41C11.95,21.77 12.45,22 13,22C13.55,22 14.05,21.77 14.41,21.41L21.41,14.41C21.78,14.05 22,13.55 22,13C22,12.44 21.77,11.94 21.41,11.58Z">
                                      </path>
                                    </svg></span> <span style="padding-top:2px;">Historical</span></span></a></div>
                          </div>
                          <div class="v-slide-group__next v-slide-group__next--disabled"><!----></div>
                        </div>
                        <div class="v-card__text pt-0 font-weight-medium">
                          Yeon-woo had a twin brother who disappeared five years ago. One day, a pocket watch left by
                          his brother returned to his possession. Inside, he found a hidden diary in which was recorded
                          “By the time you hear this, I guess I will be already dead….”
                          Obelisk, the Tower of the Sun God, a world where several universes and dimensions intersect.
                          In this world, his brother had fallen victim to betrayal while climbing up the tower. After
                          learning the truth, Yeon-woo decided to climb the tower along with his brother’s diary.
                          Yeon-woo then proceeds to go through the same trials and fights as his younger brother did as
                          an anonymous player. His goal? Defeating the Obelisk Tower and get revenge for his brother.
                        </div>
                      </div>
                      <div class="rounded w-100 my-5">
                        <div class="zs-bg-1 elevation-2 w-100 archive_chapters v-card v-sheet theme--dark">
                          <div class="d-flex align-center pl-4 pr-2 pt-4" style="gap:10px;">
                            <div class="v-toolbar__title">Chapters</div>
                            <hr role="separator" aria-orientation="horizontal" class="v-divider theme--dark"> <button
                              type="button" class="v-btn v-btn--icon v-btn--round theme--dark v-size--default"
                              aria-label="Sort the chapters"><span class="v-btn__content"><span aria-hidden="true"
                                  class="v-icon notranslate theme--dark"><svg xmlns="http://www.w3.org/2000/svg"
                                    viewBox="0 0 24 24" role="img" aria-hidden="true" class="v-icon__svg">
                                    <path
                                      d="M19 7H22L18 3L14 7H17V21H19M9 21H5V19H9V18H7C5.9 18 5 17.11 5 16V15C5 13.9 5.9 13 7 13H9C10.11 13 11 13.9 11 15V19C11 20.11 10.11 21 9 21M9 15H7V16H9M7 3H9C10.11 3 11 3.9 11 5V9C11 10.11 10.11 11 9 11H7C5.9 11 5 10.11 5 9V5C5 3.9 5.9 3 7 3M7 9H9V5H7Z">
                                    </path>
                                  </svg></span></span></button>
                          </div>
                          <div class="row pa-4"><!---->
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5985"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">161</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>3 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>86.374</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>63</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5936"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">160</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>3 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>42.741</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>51</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5929"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">159</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>3 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>40.019</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>45</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5916"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">158</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>4 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>47.532</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>46</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5899"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">157</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>4 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>56.433</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>51</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5880"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">156</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>4 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>42.459</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>44</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5849"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">155</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>5 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>43.587</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>43</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5819"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">154</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>5 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>51.644</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>53</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5793"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">153</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>5 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>45.432</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>54</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5764"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">152</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>5 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>46.158</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>55</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5628"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">151</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>6 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>69.638</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>62</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5586"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">150</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>7 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>55.596</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>62</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5547"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">149</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>7 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>51.768</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>62</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5544"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">148</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>7 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>67.732</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>63</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5529"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">147</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>8 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>66.834</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>68</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5488"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">146</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>8 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>65.183</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>69</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5487"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">145</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>8 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>54.953</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>62</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5466"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">144</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>8 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>64.441</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>62</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5462"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">143</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>9 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>55.210</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>63</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                            <div class="col-md-6 col-12"><a href="/comics/second-life-ranker/5424"
                                class="d-flex align-center zs-bg-3 pa-1 v-card v-card--flat v-card--link v-sheet theme--dark"
                                tabindex="0">
                                <div class="d-flex align-center justify-center rounded icon_wrapper v-sheet theme--dark"
                                  style="height: 60px; width: 60px; --read-icon: hsla(0, 100%, 60%, 10%);"><span
                                    aria-hidden="true" class="v-icon notranslate theme--dark"
                                    style="font-size: 16px; height: 16px; width: 16px; color: var(--primary); caret-color: var(--primary);"><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size: 16px; height: 16px; width: 16px;">
                                      <path
                                        d="M12 4.5A11.8 11.8 0 0 0 1 12A11.8 11.8 0 0 0 12 19.5H13.1A3.8 3.8 0 0 1 13 18.5A4.1 4.1 0 0 1 13.1 17.4H12A9.6 9.6 0 0 1 3.2 12A9.6 9.6 0 0 1 12 6.5A9.6 9.6 0 0 1 20.8 12L20.4 12.7A4.6 4.6 0 0 1 22.3 13.5A10.1 10.1 0 0 0 23 12A11.8 11.8 0 0 0 12 4.5M12 9A3 3 0 1 0 15 12A2.9 2.9 0 0 0 12 9M15 17.5V19.5H23V17.5Z">
                                      </path>
                                    </svg></span></div>
                                <div class="d-flex justify-center flex-column w-100 py-1 px-2">
                                  <div class="d-flex justify-space-between">
                                    <div>
                                      Chapter <span class="font-weight-bold">142</span></div> <!---->
                                  </div>
                                  <div class="d-flex justify-space-between text--disabled text-caption">
                                    <div class="d-flex">
                                      <div>9 months ago</div>
                                    </div>
                                    <div class="text-caption"><span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>76.847</span>
                                      &nbsp;&nbsp;
                                      <span aria-hidden="true"
                                        class="v-icon notranslate theme--dark grey--text text--darken-1"
                                        style="font-size: 12px; height: 12px; width: 12px;"><svg
                                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                          aria-hidden="true" class="v-icon__svg"
                                          style="font-size: 12px; height: 12px; width: 12px;">
                                          <path
                                            d="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z">
                                          </path>
                                        </svg></span>&nbsp;
                                      <span>74</span>
                                    </div>
                                  </div>
                                </div>
                              </a></div>
                          </div>
                          <hr role="separator" aria-orientation="horizontal" class="v-divider theme--dark">
                          <div class="text-center zs-pagination py-2">
                            <nav role="navigation" aria-label="Pagination Navigation">
                              <ul class="v-pagination theme--dark">
                                <li><button disabled="disabled" type="button" aria-label="Previous page"
                                    class="v-pagination__navigation v-pagination__navigation--disabled"><span
                                      aria-hidden="true" class="v-icon notranslate theme--dark"><svg
                                        xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                        aria-hidden="true" class="v-icon__svg">
                                        <path d="M14,7L9,12L14,17V7Z"></path>
                                      </svg></span></button></li>
                                <li><button type="button" aria-current="true" aria-label="Current Page, Page 1"
                                    class="v-pagination__item v-pagination__item--active primary">1</button></li>
                                <li><button type="button" aria-label="Goto Page 2" class="v-pagination__item">2</button>
                                </li>
                                <li><button type="button" aria-label="Goto Page 3" class="v-pagination__item">3</button>
                                </li>
                                <li><button type="button" aria-label="Goto Page 4" class="v-pagination__item">4</button>
                                </li>
                                <li><button type="button" aria-label="Goto Page 5" class="v-pagination__item">5</button>
                                </li>
                                <li><button type="button" aria-label="Goto Page 6" class="v-pagination__item">6</button>
                                </li>
                                <li><button type="button" aria-label="Goto Page 7" class="v-pagination__item">7</button>
                                </li>
                                <li><button type="button" aria-label="Goto Page 8" class="v-pagination__item">8</button>
                                </li>
                                <li><button type="button" aria-label="Goto Page 9" class="v-pagination__item">9</button>
                                </li>
                                <li><button type="button" aria-label="Next page" class="v-pagination__navigation"><span
                                      aria-hidden="true" class="v-icon notranslate theme--dark"><svg
                                        xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                        aria-hidden="true" class="v-icon__svg">
                                        <path d="M10,17L15,12L10,7V17Z"></path>
                                      </svg></span></button></li>
                              </ul>
                            </nav>
                          </div>
                        </div>
                      </div>
                      <div id="pf-5520-1" class="mb-5 mt-8">
                        <script type="text/javascript">window.pubfuturetag = window.pubfuturetag || []; window.pubfuturetag.push({
                            unit: "64f3706d3cedff003ec5c17f",
                            id: "pf-5520-1"
                          })</script>
                      </div>
                      <div id="pf-5521-1">
                        <script type="text/javascript">window.pubfuturetag = window.pubfuturetag || []; window.pubfuturetag.push({
                            unit: "64f372033cedff003ec5c229",
                            id: "pf-5521-1"
                          })</script>
                      </div>
                      <div class="zs-bg-1 w-100 v-sheet theme--dark rounded">
                        <section aria-labelledby="comment" id="zs_disqus_zone" data-v-cf961104=""><button type="button"
                            class="w-100 h-100 v-btn v-btn--plain theme--dark v-size--large"
                            style="border:2px dashed grey;height:150px;" data-v-cf961104=""><span
                              class="v-btn__content">
                              <div class="d-flex flex-column" data-v-cf961104="">
                                <div class="text-h4 font-weight-bold d-flex align-center justify-center text--white"
                                  data-v-cf961104=""><span data-v-cf961104=""
                                    data-disqus-identifier="/comics/second-life-ranker" class="disqus-comment-count">74
                                    Comments</span> <span aria-hidden="true" class="v-icon notranslate px-1 theme--dark"
                                    style="font-size:38px;height:38px;width:38px;" data-v-cf961104=""><svg
                                      xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img"
                                      aria-hidden="true" class="v-icon__svg"
                                      style="font-size:38px;height:38px;width:38px;">
                                      <path
                                        d="M12.08,22C9.63,22 7.39,21.11 5.66,19.63L1.41,20.21L3.05,16.15C2.5,14.88 2.16,13.5 2.16,12C2.16,6.5 6.6,2 12.08,2C17.56,2 22,6.5 22,12C22,17.5 17.56,22 12.08,22M17.5,11.97V11.94C17.5,9.06 15.46,7 11.95,7H8.16V17H11.9C15.43,17 17.5,14.86 17.5,11.97M12,14.54H10.89V9.46H12C13.62,9.46 14.7,10.39 14.7,12V12C14.7,13.63 13.62,14.54 12,14.54Z">
                                      </path>
                                    </svg></span></div> <span class="mt-1" data-v-cf961104="">click to show
                                  reviews</span>
                              </div>
                            </span></button></section>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </main>
          <footer class="v-footer zs-bg-none v-sheet theme--dark v-footer--padless" data-booted="true">
            <div class="zs-bg-1 white--text text-center w-100 v-card v-card--flat v-sheet theme--dark rounded-0">
              <div class="v-card__text d-flex align-center justify-center" style="gap:10px;"><a
                  href="https://www.patreon.com/zeroscans" target="_blank" rel="noopener noreferrer nofollow"
                  aria-label="Support us through patreon"
                  class="pa-3 v-btn v-btn--icon v-btn--round theme--dark v-size--x-large"><span
                    class="v-btn__content"><span aria-hidden="true" class="v-icon notranslate theme--dark"
                      style="font-size:38px;height:38px;width:38px;color:#FF424D;caret-color:#FF424D;"><svg
                        xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                        class="v-icon__svg" style="font-size:38px;height:38px;width:38px;">
                        <path
                          d="M14.82 2.41C18.78 2.41 22 5.65 22 9.62C22 13.58 18.78 16.8 14.82 16.8C10.85 16.8 7.61 13.58 7.61 9.62C7.61 5.65 10.85 2.41 14.82 2.41M2 21.6H5.5V2.41H2V21.6Z">
                        </path>
                      </svg></span></span></a> <a href="https://paypal.me/zeroscanss" target="_blank"
                  rel="noopener noreferrer nofollow" aria-label="Support us through paypal"
                  class="pa-3 v-btn v-btn--icon v-btn--round theme--dark v-size--x-large"><span
                    class="v-btn__content"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 48 48"
                      style="height:38px;">
                      <path fill="#009CDE" fill-rule="evenodd"
                        d="M37.097 5.318C35.061 2.995 31.384 2 26.678 2H13.021c-.961 0-1.78.7-1.93 1.652L5.404 39.76a1.173 1.173 0 0 0 1.158 1.357h8.432l-.582 3.695A1.027 1.027 0 0 0 15.425 46h7.107a1.71 1.71 0 0 0 1.688-1.445l.07-.362 1.338-8.5.087-.47a1.71 1.71 0 0 1 1.688-1.445h1.063c6.885 0 12.276-2.8 13.852-10.9.657-3.385.318-6.21-1.423-8.197-.527-.6-1.181-1.097-1.945-1.503.535-3.422-.004-5.75-1.853-7.86z"
                        clip-rule="evenodd"></path>
                      <path fill="#012169" fill-rule="evenodd"
                        d="M37.097 5.318C35.061 2.995 31.384 2 26.678 2H13.021c-.961 0-1.78.7-1.93 1.652L5.404 39.76a1.173 1.173 0 0 0 1.158 1.357h8.432L17.11 27.67l-.065.422a1.947 1.947 0 0 1 1.923-1.652h4.007c7.87 0 14.033-3.201 15.834-12.46a23.8 23.8 0 0 0 .14-.802c.535-3.422-.004-5.75-1.853-7.86z"
                        clip-rule="evenodd"></path>
                      <path fill="#003087" fill-rule="evenodd"
                        d="M20.337 11.947c.225-.108.475-.168.739-.168H31.78c1.268 0 2.45.083 3.532.258.309.05.61.107.902.171a13.44 13.44 0 0 1 1.254.345 9.7 9.7 0 0 1 1.48.625c.536-3.422-.003-5.75-1.852-7.86C35.061 2.995 31.384 2 26.678 2H13.021c-.961 0-1.78.7-1.93 1.652L5.404 39.76a1.173 1.173 0 0 0 1.158 1.357h8.432l4.393-27.894c.09-.572.457-1.04.95-1.277z"
                        clip-rule="evenodd"></path>
                    </svg></span></a> <a href="https://discord.gg/4u5vct3" target="_blank"
                  rel="noopener noreferrer nofollow" aria-label="Speak with us through discord"
                  class="pa-3 v-btn v-btn--icon v-btn--round theme--dark v-size--x-large"><span
                    class="v-btn__content"><span aria-hidden="true" class="v-icon notranslate theme--dark"
                      style="font-size:38px;height:38px;width:38px;color:#5865F2;caret-color:#5865F2;"><svg
                        xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" role="img" aria-hidden="true"
                        class="v-icon__svg" style="font-size:38px;height:38px;width:38px;">
                        <path
                          d="M22,24L16.75,19L17.38,21H4.5A2.5,2.5 0 0,1 2,18.5V3.5A2.5,2.5 0 0,1 4.5,1H19.5A2.5,2.5 0 0,1 22,3.5V24M12,6.8C9.32,6.8 7.44,7.95 7.44,7.95C8.47,7.03 10.27,6.5 10.27,6.5L10.1,6.33C8.41,6.36 6.88,7.53 6.88,7.53C5.16,11.12 5.27,14.22 5.27,14.22C6.67,16.03 8.75,15.9 8.75,15.9L9.46,15C8.21,14.73 7.42,13.62 7.42,13.62C7.42,13.62 9.3,14.9 12,14.9C14.7,14.9 16.58,13.62 16.58,13.62C16.58,13.62 15.79,14.73 14.54,15L15.25,15.9C15.25,15.9 17.33,16.03 18.73,14.22C18.73,14.22 18.84,11.12 17.12,7.53C17.12,7.53 15.59,6.36 13.9,6.33L13.73,6.5C13.73,6.5 15.53,7.03 16.56,7.95C16.56,7.95 14.68,6.8 12,6.8M9.93,10.59C10.58,10.59 11.11,11.16 11.1,11.86C11.1,12.55 10.58,13.13 9.93,13.13C9.29,13.13 8.77,12.55 8.77,11.86C8.77,11.16 9.28,10.59 9.93,10.59M14.1,10.59C14.75,10.59 15.27,11.16 15.27,11.86C15.27,12.55 14.75,13.13 14.1,13.13C13.46,13.13 12.94,12.55 12.94,11.86C12.94,11.16 13.45,10.59 14.1,10.59Z">
                        </path>
                      </svg></span></span></a></div>
              <hr role="separator" aria-orientation="horizontal" class="v-divider theme--dark">
              <div class="container">
                <div class="d-flex align-center py-1"><small class="white--text">
                    Copyright ©
                    2023
                    <strong>Zero Scans</strong></small>
                  <div class="spacer"></div> <a href="https://swordflake.com" target="_blank"
                    class="d-flex align-center v-btn v-btn--text theme--dark v-size--x-small"><span
                      class="v-btn__content"><svg x="0px" y="0px" width="20px" viewBox="0 0 325 325"
                        enable-background="new 0 0 325 325" xml:space="preserve" class="mr-1">
                        <image width="325" height="325" x="0" y="0" href="data:image/png;base64,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
OjAwViQLYwAAAABJRU5ErkJggg=="></image>
                      </svg>
                      <div class="font-weight-bold" style="padding-top:2px;">
                        Swordflake
                      </div>
                    </span></a>
                </div>
              </div>
            </div>
          </footer>
          <div class="v-dialog__container"><!----></div>
          <div class="v-dialog__container"><!----></div>
          <div class="v-dialog__container"><!----></div>
          <div class="v-dialog__container"><!----></div>
          <div class="v-dialog__container"><!----></div>
          <div class="v-dialog__container"><!----></div>
          <div class="v-dialog__container"><!----></div>
        </div>
      </div>
    </div>
  </div>
  <script>window.__ZEROSCANS__ = (function (a, b, c, d, e, f, g, h) { return { layout: "default", data: [{ details: { id: 7, name: "Second Life Ranker", summary: "Yeon-woo had a twin brother who disappeared five years ago. One day, a pocket watch left by his brother returned to his possession. Inside, he found a hidden diary in which was recorded “By the time you hear this, I guess I will be already dead….”\r\nObelisk, the Tower of the Sun God, a world where several universes and dimensions intersect. In this world, his brother had fallen victim to betrayal while climbing up the tower. After learning the truth, Yeon-woo decided to climb the tower along with his brother’s diary.\r\nYeon-woo then proceeds to go through the same trials and fights as his younger brother did as an anonymous player. His goal? Defeating the Obelisk Tower and get revenge for his brother.", slug: "second-life-ranker", view_count: 2343750, grouping_type: a, chapters_count: 161, bookmarks_count: 1827, bookmarked: e, rating: "4.9174311926605505", user_rating: a, genres: [{ name: "Drama", slug: "drama" }, { name: "Historical", slug: "historical" }], statuses: [{ name: "Ongoing", slug: "ongoing" }, { name: "Hiatus", slug: "hiatus" }], first_chapter: [{ name: f, id: 390 }], created_at: "1 year ago", cover: { full: "https:\u002F\u002Fapi.zeroscans.com\u002Fstorage\u002F76949\u002Fconversions\u002F66d577365a1a39ad8be0ee2e22652ed9-full.webp" } } }], fetch: {}, error: a, state: { chapterReading: { comic_id: a, current_page: f, page_count_array: [], page_count: 0, reading_type: "long", chapter_list: [], surrounding_chapters: {}, breadcrumb: [], container_width: 100, data_saving_pages: g, chapter_information: {}, featured_comics: [] }, auth: { user: a, loggedIn: e, strategy: "laravel" } }, serverRendered: g, routePath: "\u002Fcomics\u002Fsecond-life-ranker", config: { frontendUrl: "https:\u002F\u002Fzeroscans.com", appName: "zeroscans", appNameUppercase: "ZEROSCANS", appFooterDescription: "Phasellus feugiat arcu sapien, et iaculis ipsum elementum sit amet. Mauris cursus commodo interdum. Praesent ut risus eget metus luctus accumsan id ultrices nunc. Sed at orci sed massa consectetur dignissim a sit amet dui. Duis commodo vitae velit et faucibus Morbi vehicula lacinia malesuada. Nulla placerat augue vel ipsum ultrices, cursus iaculis dui sollicitudin. Vestibulum eu ipsum vel diam elementum tempor vel ut orci. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.", seoTitle: h, seoTitleTemplate: "High quality free comics with data saving chapters!", footerName: h, googleAnalytics: "UA_115740280_1", discordUrl: "https:\u002F\u002Fdiscord.gg\u002F4u5vct3", patreonUrl: "https:\u002F\u002Fwww.patreon.com\u002Fzeroscans", paypalUrl: "https:\u002F\u002Fpaypal.me\u002Fzeroscanss", disqusUrl: "zero-scans", adsenseHome_masthead: b, adsenseHome_content: c, adsenseHome_footer: d, adsenseArchive_masthead: b, adsenseArchive_content: c, adsenseArchive_footer: d, adsenseComic_masthead: b, adsenseComic_content: c, adsenseComic_footer: d, adsenseChapter_masthead: b, adsenseChapter_content: c, adsenseChapter_footer: d, _app: { basePath: "\u002F", assetsPath: "\u002Fzero-scans\u002F", cdnURL: a } } } }(null, 9246033117, 1938388731, 4400900544, false, 1, true, "Zero Scans"));</script>
  <script src="/zero-scans/36e70da.js" defer=""></script>
  <script src="/zero-scans/257c778.js" defer=""></script>
  <script src="/zero-scans/2ddbf20.js" defer=""></script>
  <script src="/zero-scans/58b05b1.js" defer=""></script>
  <script src="/zero-scans/0acc8e8.js" defer=""></script>
  <script src="/zero-scans/027c375.js" defer=""></script>
  <script src="/zero-scans/358f87b.js" defer=""></script>


  <div id="pJRP_9yJ2" role="status" aria-live="polite" aria-atomic="false"></div>
  <link href="/zero-scans/css/1751c20.css" rel="stylesheet" type="text/css">
  <link href="/zero-scans/css/08b59ea.css" rel="stylesheet" type="text/css">
  <link href="/zero-scans/css/72f6cd7.css" rel="stylesheet" type="text/css">
  <link href="/zero-scans/css/3e697a8.css" rel="stylesheet" type="text/css">
  <div>
    <div class="grecaptcha-badge" data-style="bottomright"
      style="width: 256px; height: 60px; position: fixed; visibility: hidden; display: block; transition: right 0.3s ease 0s; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;">
      <div class="grecaptcha-logo"><iframe title="reCAPTCHA" width="256" height="60" role="presentation"
          name="a-fk7pghj01bi2" frameborder="0" scrolling="no"
          sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation"
          src="https://www.recaptcha.net/recaptcha/api2/anchor?ar=1&amp;k=6LdfDaUeAAAAAIpzPN6FlbFOI08NI_EAnec6VA4g&amp;co=aHR0cHM6Ly96ZXJvc2NhbnMuY29tOjQ0Mw..&amp;hl=de&amp;v=MydHw_zggsxIJuhSbyOmPv5R&amp;size=invisible&amp;cb=1uwuxrc0z0gb"></iframe>
      </div>
      <div class="grecaptcha-error"></div><textarea id="g-recaptcha-response-100000" name="g-recaptcha-response"
        class="g-recaptcha-response"
        style="width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;"></textarea>
    </div><iframe style="display: none;"></iframe>
  </div>
</body>

</html>
