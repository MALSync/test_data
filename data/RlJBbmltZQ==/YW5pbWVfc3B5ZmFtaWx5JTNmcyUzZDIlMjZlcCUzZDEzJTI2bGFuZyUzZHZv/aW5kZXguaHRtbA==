<html lang="fr">

<head>
  <meta charset="utf-8">
  <title>SPY×FAMILY | Épisode 13 | FRAnime - Voir vos animes en streaming et sans pub</title>
  <meta name="viewport" content="width=device-width,initial-scale=1,shrink-to-fit=no">
  <meta name="application-name" content="FRAnime - Voir un animé en streaming VF ou VOSTFR, est gratuit et sans pub">
  <meta name="description" content="Regarder un animé en VF ou en VOSTFR est gratuit et sans pub sur FRAnime.">
  <meta property="og:site_name" content="FRAnime - Voir vos animes en streaming et sans pub">
  <meta property="og:description" content="Regarder un animé en VF et en VOSTFR est gratuit et sans pub sur FRAnime.">
  <meta property="og:title" content="FRAnime - #1 DE L'ANIME SANS PUB ET GRATUIT">
  <meta property="og:url" content="https://www.franime.fr/">
  <meta property="og:type" content="website">
  <meta property="og:image" content="/logo.png">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="#17191f">
  <meta name="apple-mobile-web-app-title" content="FRAnime">
  <meta name="theme-color" content="#911313">
  <link href="https://fonts.googleapis.com/css2?family=Varela+Round&amp;display=swap" rel="stylesheet">
  <meta name="twitter:card" content="summary">
  <meta name="twitter:title" content="FRanime">
  <meta name="twitter:description" content="Regarder un animé en VF et en VOSTFR est gratuit et sans pub sur FRAnime.">
  <meta name="twitter:image" content="https://franime.fr/logo.png">
  <link rel="stylesheet" href="/output.css">
  <link rel="stylesheet" href="/outputindex.css">
  <link rel="apple-touch-icon" sizes="180x180" href="/logos/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/logos/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/logos/favicon-16x16.png">
  <link rel="manifest" href="/site.webmanifest">
  <link rel="mask-icon" href="/logos/safari-pinned-tab.svg" color="#911313">
  <link rel="shortcut icon" href="/logos/favicon.ico">
  <meta name="msapplication-TileColor" content="#911313">
  <meta name="msapplication-TileImage" content="/logos/mstile-150x150.png">
  <script async="" src="https://arc.io/widget.min.js#K5UkKjzw" type="text/javascript"></script>
  <script defer=""
    type="text/javascript">let aaaaaaaaaa = setInterval((() => { document.querySelector("#arc-widget-container") && (document.querySelector("#arc-widget-container").style = "display:none !important", clearInterval(aaaaaaaaaa)) }), 100)</script>
  <script defer="defer" src="/static/js/main.64c36733.js" type="text/javascript"></script>
  <link href="/static/css/main.5d005e66.css" rel="stylesheet">
  <style type="text/css">
    .react-horizontal-scrolling-menu--wrapper {
      display: flex;
    }

    .react-horizontal-scrolling-menu--scroll-container {
      display: flex;
      height: max-content;
      overflow-y: hidden;
      position: relative;
      width: 100%;
    }

    :export {
      wrapper: react-horizontal-scrolling-menu--wrapper;
      container: react-horizontal-scrolling-menu--scroll-container;
    }
  </style>
  <style id="artplayer-style">
    .art-video-player {
      z-index: 20;
      width: 100%;
      height: 100%;

      zoom: 1;
      color: #eee;
      text-align: left;
      direction: ltr;
      user-select: none;
      -webkit-tap-highlight-color: #0000;
      touch-action: manipulation;
      -ms-high-contrast-adjust: none;
      background-color: #000;
      outline: 0;
      margin: 0 auto;
      font-family: Roboto, Arial, Helvetica, sans-serif;
      font-size: 14px;
      line-height: 1.3;
      display: flex;
      position: relative
    }

    .art-video-player *,
    .art-video-player :before,
    .art-video-player :after {
      box-sizing: border-box;
      margin: 0;
      padding: 0
    }

    .art-video-player ::-webkit-scrollbar {
      width: 5px;
      height: 5px
    }

    .art-video-player ::-webkit-scrollbar-thumb {
      background-color: #666
    }

    .art-video-player ::-webkit-scrollbar-thumb:hover {
      background-color: #ccc
    }

    .art-video-player .art-icon {
      justify-content: center;
      align-items: center;
      line-height: 1.5;
      display: inline-flex
    }

    .art-video-player .art-icon svg {
      fill: #fff
    }

    .art-video-player img {
      max-width: 100%;
      vertical-align: top
    }

    @supports ((-webkit-backdrop-filter: initial) or (backdrop-filter: initial)) {
      .art-video-player .art-backdrop-filter {
        -webkit-backdrop-filter: saturate(180%)blur(20px);
        backdrop-filter: saturate(180%)blur(20px);
        background-color: #000000b3 !important
      }
    }

    .art-video-player .art-video {
      z-index: 10;
      width: 100%;
      height: 100%;
      cursor: pointer;
      background-color: #000;
      position: absolute;
      inset: 0
    }

    .art-video-player .art-poster {
      z-index: 11;
      width: 100%;
      height: 100%;
      user-select: none;
      pointer-events: none;
      background-position: 50%;
      background-repeat: no-repeat;
      background-size: cover;
      position: absolute;
      inset: 0
    }

    .art-video-player .art-subtitle {
      z-index: 20;
      width: 100%;
      text-align: center;
      color: #fff;
      pointer-events: none;
      text-shadow: 1px 0 1px #000, 0 1px 1px #000, -1px 0 1px #000, 0 -1px 1px #000, 1px 1px 1px #000, -1px -1px 1px #000, 1px -1px 1px #000, -1px 1px 1px #000;
      padding: 0 20px;
      font-size: 20px;
      transition: bottom .2s;
      display: none;
      position: absolute;
      bottom: 10px
    }

    .art-video-player .art-subtitle p {
      word-break: break-all;
      height: fit-content;
      margin: 5px 0 0;
      line-height: 1.2
    }

    .art-video-player.art-subtitle-show .art-subtitle {
      display: block
    }

    .art-video-player.art-control-show .art-subtitle {
      bottom: 50px
    }

    .art-video-player .art-danmuku {
      z-index: 30;
      width: 100%;
      height: 100%;
      pointer-events: none;
      position: absolute;
      inset: 0;
      overflow: hidden
    }

    .art-video-player .art-layers {
      z-index: 40;
      width: 100%;
      height: 100%;
      pointer-events: none;
      display: none;
      position: absolute;
      inset: 0;
      overflow: hidden
    }

    .art-video-player .art-layers .art-layer {
      pointer-events: auto
    }

    .art-video-player.art-layer-show .art-layers {
      display: block
    }

    .art-video-player .art-mask {
      z-index: 50;
      width: 100%;
      height: 100%;
      pointer-events: none;
      justify-content: center;
      align-items: center;
      display: none;
      position: absolute;
      inset: 0;
      overflow: hidden
    }

    .art-video-player .art-mask .art-state {
      width: 60px;
      height: 60px;
      opacity: .85;
      cursor: pointer;
      pointer-events: auto;
      justify-content: center;
      align-items: center;
      display: flex;
      position: absolute;
      bottom: 65px;
      right: 30px
    }

    .art-video-player.art-mask-show .art-mask {
      display: flex
    }

    .art-video-player.art-mobile .art-state {
      position: static
    }

    .art-video-player .art-loading {
      z-index: 70;
      width: 100%;
      height: 100%;
      pointer-events: none;
      justify-content: center;
      align-items: center;
      display: none;
      position: absolute;
      inset: 0
    }

    .art-video-player.art-loading-show .art-loading {
      display: flex
    }

    .art-video-player .art-bottom {
      z-index: 60;
      height: 100px;
      opacity: 0;
      visibility: hidden;
      pointer-events: none;
      background-image: linear-gradient(#0000, #0006, #000);
      background-position: bottom;
      background-repeat: repeat-x;
      flex-direction: column;
      justify-content: space-between;
      padding: 50px 10px 0;
      transition: all .2s ease-in-out;
      display: flex;
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0
    }

    .art-video-player .art-bottom .art-progress {
      z-index: 0;
      pointer-events: auto;
      flex: 1;
      position: relative
    }

    .art-video-player .art-bottom .art-progress .art-control-progress {
      height: 4px;
      cursor: pointer;
      flex-direction: row;
      align-items: center;
      display: flex;
      position: relative
    }

    .art-video-player .art-bottom .art-progress .art-control-progress .art-control-progress-inner {
      height: 100%;
      width: 100%;
      background: #fff3;
      align-items: center;
      transition: all .2s;
      display: flex;
      position: relative
    }

    .art-video-player .art-bottom .art-progress .art-control-progress .art-control-progress-inner .art-progress-loaded {
      z-index: 10;
      height: 100%;
      width: 0;
      background: #fff6;
      position: absolute;
      inset: 0
    }

    .art-video-player .art-bottom .art-progress .art-control-progress .art-control-progress-inner .art-progress-played {
      z-index: 20;
      height: 100%;
      width: 0;
      position: absolute;
      inset: 0
    }

    .art-video-player .art-bottom .art-progress .art-control-progress .art-control-progress-inner .art-progress-highlight {
      z-index: 30;
      height: 100%;
      pointer-events: none;
      position: absolute;
      inset: 0
    }

    .art-video-player .art-bottom .art-progress .art-control-progress .art-control-progress-inner .art-progress-highlight span {
      width: 7px;
      height: 100%;
      pointer-events: auto;
      background: #ffffff80;
      display: inline-block;
      position: absolute;
      top: 0;
      left: 0
    }

    .art-video-player .art-bottom .art-progress .art-control-progress .art-control-progress-inner .art-progress-indicator {
      visibility: hidden;
      z-index: 40;
      border-radius: 50%;
      justify-content: center;
      align-items: center;
      transition: transform .1s ease-in-out;
      position: absolute;
      transform: scale(.1)
    }

    .art-video-player .art-bottom .art-progress .art-control-progress .art-control-progress-inner .art-progress-indicator .art-icon {
      width: 100%;
      height: 100%;
      pointer-events: none;
      user-select: none
    }

    .art-video-player .art-bottom .art-progress .art-control-progress .art-control-progress-inner .art-progress-indicator:hover {
      transform: scale(1.2) !important
    }

    .art-video-player .art-bottom .art-progress .art-control-progress .art-control-progress-inner .art-progress-tip {
      z-index: 50;
      height: 20px;
      color: #fff;
      text-align: center;
      white-space: nowrap;
      background: #000000b3;
      border-radius: 3px;
      padding: 0 5px;
      font-size: 12px;
      font-weight: 700;
      line-height: 20px;
      display: none;
      position: absolute;
      top: -25px;
      left: 0
    }

    .art-video-player .art-bottom .art-progress .art-control-thumbnails {
      pointer-events: none;
      background-color: #000000b3;
      border-radius: 3px;
      display: none;
      position: absolute;
      bottom: 10px;
      left: 0;
      box-shadow: 0 1px 3px #0003, 0 1px 2px -1px #0003
    }

    .art-video-player .art-bottom .art-progress .art-control-loop {
      width: 100%;
      height: 100%;
      pointer-events: none;
      display: none;
      position: absolute;
      inset: 0
    }

    .art-video-player .art-bottom .art-progress .art-control-loop .art-loop-point {
      width: 2px;
      height: 8px;
      background: #ffffffbf;
      position: absolute;
      top: -2px;
      left: 0
    }

    .art-video-player .art-bottom .art-controls {
      z-index: 1;
      pointer-events: auto;
      height: 45px;
      justify-content: space-between;
      align-items: center;
      display: flex;
      position: relative
    }

    .art-video-player .art-bottom .art-controls .art-controls-left,
    .art-video-player .art-bottom .art-controls .art-controls-right {
      display: flex
    }

    .art-video-player .art-bottom .art-controls .art-controls-center {
      height: 100%;
      flex: 1;
      justify-content: center;
      align-items: center;
      padding: 0 10px;
      display: flex
    }

    .art-video-player .art-bottom .art-controls .art-controls-right {
      justify-content: flex-end
    }

    .art-video-player .art-bottom .art-controls .art-control {
      opacity: .75;
      min-height: 36px;
      min-width: 36px;
      text-align: center;
      cursor: pointer;
      white-space: nowrap;
      justify-content: center;
      align-items: center;
      font-size: 12px;
      line-height: 1;
      transition: opacity .1s ease-in-out;
      display: flex
    }

    .art-video-player .art-bottom .art-controls .art-control .art-icon {
      float: left;
      height: 36px;
      width: 36px;
      justify-content: center;
      align-items: center;
      transition: transform .2s ease-in-out;
      display: flex;
      transform: scale(1)
    }

    .art-video-player .art-bottom .art-controls .art-control .art-icon:active {
      transform: scale(.85)
    }

    .art-video-player .art-bottom .art-controls .art-control:hover {
      opacity: 1
    }

    .art-video-player .art-bottom .art-controls .art-control-volume .art-volume-panel {
      float: left;
      width: 0;
      height: 100%;
      transition: margin .2s cubic-bezier(.4, 0, 1, 1), width .2s cubic-bezier(.4, 0, 1, 1);
      position: relative;
      overflow: hidden
    }

    .art-video-player .art-bottom .art-controls .art-control-volume .art-volume-panel .art-volume-slider-handle {
      width: 12px;
      height: 12px;
      background: #fff;
      border-radius: 12px;
      margin-top: -6px;
      position: absolute;
      top: 50%;
      left: 0
    }

    .art-video-player .art-bottom .art-controls .art-control-volume .art-volume-panel .art-volume-slider-handle:before {
      background: #fff;
      left: -54px
    }

    .art-video-player .art-bottom .art-controls .art-control-volume .art-volume-panel .art-volume-slider-handle:after {
      background: #fff3;
      left: 6px
    }

    .art-video-player .art-bottom .art-controls .art-control-volume .art-volume-panel .art-volume-slider-handle:before,
    .art-video-player .art-bottom .art-controls .art-control-volume .art-volume-panel .art-volume-slider-handle:after {
      content: "";
      height: 3px;
      width: 60px;
      margin-top: -2px;
      display: block;
      position: absolute;
      top: 50%
    }

    .art-video-player .art-bottom .art-controls .art-control-volume:hover .art-volume-panel {
      width: 60px
    }

    .art-video-player .art-bottom .art-controls .art-control-quality {
      z-index: 30;
      position: relative
    }

    .art-video-player .art-bottom .art-controls .art-control-quality .art-qualitys {
      width: 100px;
      text-align: center;
      color: #fff;
      background: #000c;
      border-radius: 3px;
      padding: 5px 0;
      display: none;
      position: absolute;
      bottom: 35px
    }

    .art-video-player .art-bottom .art-controls .art-control-quality .art-qualitys .art-quality-item {
      height: 30px;
      text-overflow: ellipsis;
      white-space: nowrap;
      text-shadow: 0 0 2px #00000080;
      line-height: 30px;
      overflow: hidden
    }

    .art-video-player .art-bottom .art-controls .art-control-quality .art-qualitys .art-quality-item:hover {
      background-color: #ffffff1a
    }

    .art-video-player .art-bottom .art-controls .art-control-quality:hover .art-qualitys {
      display: block
    }

    .art-video-player .art-bottom:hover .art-progress .art-control-progress .art-control-progress-inner .art-progress-indicator {
      visibility: visible;
      transform: scale(1)
    }

    .art-video-player.art-control-show .art-bottom,
    .art-video-player.art-hover .art-bottom {
      opacity: 1;
      visibility: visible
    }

    .art-video-player.art-error .art-progress-indicator,
    .art-video-player.art-destroy .art-progress-indicator,
    .art-video-player.art-error .art-progress-tip,
    .art-video-player.art-destroy .art-progress-tip {
      display: none !important
    }

    .art-video-player.art-mobile .art-bottom {
      height: 105px;
      padding: 50px 7px 0
    }

    .art-video-player.art-mobile .art-bottom .art-controls {
      height: 40px
    }

    .art-video-player.art-mobile .art-bottom .art-progress-indicator {
      visibility: visible !important;
      transform: scale(1) !important
    }

    .art-video-player .art-notice {
      z-index: 80;
      width: 100%;
      pointer-events: none;
      padding: 10px;
      font-size: 14px;
      display: none;
      position: absolute;
      top: 0;
      left: 0
    }

    .art-video-player .art-notice .art-notice-inner {
      color: #fff;
      background-color: #0009;
      border-radius: 3px;
      padding: 5px 10px;
      display: inline-block
    }

    .art-video-player.art-notice-show .art-notice {
      display: flex
    }

    .art-video-player .art-contextmenus {
      z-index: 120;
      min-width: 200px;
      background-color: #000000e6;
      border-radius: 3px;
      flex-direction: column;
      padding: 5px 0;
      display: none;
      position: absolute;
      top: 10px;
      left: 10px
    }

    .art-video-player .art-contextmenus .art-contextmenu {
      cursor: pointer;
      color: #fff;
      text-overflow: ellipsis;
      white-space: nowrap;
      text-shadow: 0 0 2px #00000080;
      border-bottom: 1px solid #ffffff1a;
      padding: 10px 15px;
      font-size: 12px;
      display: block;
      overflow: hidden
    }

    .art-video-player .art-contextmenus .art-contextmenu a {
      color: #fff;
      text-decoration: none
    }

    .art-video-player .art-contextmenus .art-contextmenu span {
      padding: 0 7px;
      display: inline-block
    }

    .art-video-player .art-contextmenus .art-contextmenu span:hover,
    .art-video-player .art-contextmenus .art-contextmenu span.art-current {
      color: var(--theme)
    }

    .art-video-player .art-contextmenus .art-contextmenu:hover {
      background-color: #ffffff1a
    }

    .art-video-player .art-contextmenus .art-contextmenu:last-child {
      border-bottom: none
    }

    .art-video-player.art-contextmenu-show .art-contextmenus {
      display: flex
    }

    .art-video-player .art-settings {
      z-index: 90;
      height: auto;
      max-height: 300px;
      background-color: #000000e6;
      border-radius: 3px;
      font-size: 13px;
      transition: all .2s;
      display: none;
      position: absolute;
      bottom: 60px;
      left: 0;
      overflow: auto
    }

    .art-video-player .art-settings .art-setting-panel {
      display: none
    }

    .art-video-player .art-settings .art-setting-panel.art-current {
      display: block
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item {
      height: 35px;
      cursor: pointer;
      color: #fffc;
      justify-content: space-between;
      align-items: center;
      padding: 0 5px;
      line-height: 1;
      display: flex;
      overflow: hidden
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item:hover {
      color: #fff;
      background-color: #ffffff1a
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item.art-current {
      color: var(--theme)
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item .art-icon {
      width: 30px;
      height: 30px;
      justify-content: center;
      align-items: center;
      display: flex
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item .art-icon-check {
      visibility: hidden;
      height: 15px
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item.art-current .art-icon-check {
      visibility: visible
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item .art-setting-item-left {
      white-space: nowrap;
      align-items: center;
      display: flex
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item .art-setting-item-left .art-setting-item-left-icon {
      height: 24px;
      width: 24px;
      justify-content: center;
      align-items: center;
      margin-right: 10px;
      display: flex
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item .art-setting-item-right {
      align-items: center;
      display: flex
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item .art-setting-item-right .art-setting-item-right-tooltip {
      white-space: nowrap;
      color: #ffffff80;
      margin-right: 5px;
      font-size: 12px
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item .art-setting-item-right .art-setting-item-right-icon {
      height: 24px;
      justify-content: center;
      align-items: center;
      display: flex
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item .art-setting-item-right .art-setting-range {
      height: 3px;
      width: 80px;
      appearance: none;
      background-color: #fff3;
      outline: none
    }

    .art-video-player .art-settings .art-setting-panel .art-setting-item-back {
      border-bottom: 1px solid #ffffff1a
    }

    .art-video-player.art-setting-show .art-settings {
      display: block
    }

    .art-video-player.art-mobile .art-settings {
      max-height: 200px
    }

    .art-video-player .art-info {
      z-index: 100;
      width: 350px;
      color: #fff;
      -webkit-font-smoothing: antialiased;
      background-color: #000000e6;
      flex-direction: column;
      padding: 10px;
      font-family: Noto Sans CJK SC DemiLight, Roboto, Segoe UI, Tahoma, Arial, Helvetica, sans-serif;
      font-size: 12px;
      display: none;
      position: absolute;
      top: 10px;
      left: 10px
    }

    .art-video-player .art-info .art-info-item {
      margin-bottom: 5px;
      display: flex
    }

    .art-video-player .art-info .art-info-item .art-info-title {
      width: 100px;
      text-align: right
    }

    .art-video-player .art-info .art-info-item .art-info-content {
      text-overflow: ellipsis;
      white-space: nowrap;
      user-select: all;
      flex: 1;
      padding-left: 5px;
      overflow: hidden
    }

    .art-video-player .art-info .art-info-item:last-child {
      margin-bottom: 0
    }

    .art-video-player .art-info .art-info-close {
      cursor: pointer;
      position: absolute;
      top: 5px;
      right: 5px
    }

    .art-video-player.art-info-show .art-info {
      display: flex
    }

    .art-video-player.art-hide-cursor * {
      cursor: none !important
    }

    .art-video-player[data-aspect-ratio] video {
      box-sizing: content-box;
      object-fit: fill
    }

    .art-video-player.art-fullscreen-web {
      z-index: 9999;
      width: 100%;
      height: 100%;
      position: fixed;
      inset: 0
    }

    .art-video-player .art-mini-header {
      z-index: 110;
      height: 35px;
      color: #fff;
      opacity: 0;
      visibility: hidden;
      background-color: #00000080;
      justify-content: space-between;
      align-items: center;
      line-height: 35px;
      transition: all .2s ease-in-out;
      display: none;
      position: absolute;
      top: 0;
      left: 0;
      right: 0
    }

    .art-video-player .art-mini-header .art-mini-title {
      text-overflow: ellipsis;
      white-space: nowrap;
      cursor: move;
      flex: 1;
      padding: 0 10px;
      overflow: hidden
    }

    .art-video-player .art-mini-header .art-mini-close {
      width: 35px;
      text-align: center;
      cursor: pointer;
      font-size: 22px
    }

    .art-video-player.art-is-dragging {
      opacity: .7
    }

    .art-video-player.art-mini {
      z-index: 9999;
      width: 400px;
      height: 225px;
      position: fixed;
      box-shadow: 0 2px 5px #00000029, 0 3px 6px #0003
    }

    .art-video-player.art-mini .art-mini-header {
      user-select: none;
      display: flex
    }

    .art-video-player.art-mini.art-hover .art-mini-header {
      opacity: 1;
      visibility: visible
    }

    .art-video-player.art-mini .art-mask .art-state {
      position: static
    }

    .art-video-player.art-mini .art-contextmenu,
    .art-video-player.art-mini .art-bottom,
    .art-video-player.art-mini .art-danmu,
    .art-video-player.art-mini .art-info,
    .art-video-player.art-mini .art-layers,
    .art-video-player.art-mini .art-notice,
    .art-video-player.art-mini .art-settings,
    .art-video-player.art-mini .art-subtitle {
      display: none !important
    }

    .art-auto-size {
      justify-content: center;
      align-items: center;
      display: flex
    }

    .art-auto-size .art-video-player {
      transition: all .2s
    }

    .art-video-player[data-flip=horizontal] .art-video {
      transform: scaleX(-1)
    }

    .art-video-player[data-flip=vertical] .art-video {
      transform: scaleY(-1)
    }

    .art-video-player .art-layer-miniProgressBar {
      height: 2px;
      background-color: var(--theme);
      display: block;
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0
    }

    .art-video-player .art-layer-lock {
      height: 34px;
      width: 34px;
      color: #fff;
      background-color: #00000080;
      border-radius: 50%;
      justify-content: center;
      align-items: center;
      display: none;
      position: absolute;
      top: calc(50% - 17px);
      left: 15px
    }

    .art-video-player .art-layer-autoPlayback {
      background-color: #000c;
      border-radius: 3px;
      align-items: center;
      padding: 10px;
      line-height: 1;
      display: none;
      position: absolute;
      bottom: 60px;
      left: 20px
    }

    .art-video-player .art-layer-autoPlayback .art-autoPlayback-close {
      cursor: pointer;
      align-items: center;
      margin-right: 10px;
      display: flex
    }

    .art-video-player .art-layer-autoPlayback .art-autoPlayback-close svg {
      width: 15px;
      height: 15px;
      fill: var(--theme)
    }

    .art-video-player .art-layer-autoPlayback .art-autoPlayback-last {
      margin-right: 10px
    }

    .art-video-player .art-layer-autoPlayback .art-autoPlayback-jump {
      color: var(--theme);
      cursor: pointer
    }

    .art-video-player.art-lock .art-bottom {
      display: none !important
    }

    .art-video-player.art-lock .art-subtitle {
      bottom: 10px !important
    }

    .art-video-player.art-lock .art-layer-miniProgressBar {
      display: block !important
    }

    .art-video-player.art-control-show .art-layer-miniProgressBar {
      display: none
    }

    .art-video-player.art-control-show .art-layer-lock {
      display: flex
    }

    .art-video-player .art-control-selector {
      position: relative
    }

    .art-video-player .art-control-selector .art-selector-list {
      min-width: 100px;
      max-width: 200px;
      max-height: 200px;
      text-align: center;
      color: #fff;
      background-color: #000c;
      border-radius: 3px;
      padding: 5px 0;
      display: none;
      position: absolute;
      bottom: 35px;
      overflow: auto
    }

    .art-video-player .art-control-selector .art-selector-list .art-selector-item {
      height: 30px;
      text-overflow: ellipsis;
      white-space: nowrap;
      text-shadow: 0 0 2px #00000080;
      padding: 0 5px;
      line-height: 30px;
      overflow: hidden
    }

    .art-video-player .art-control-selector .art-selector-list .art-selector-item:hover {
      background-color: #ffffff1a
    }

    .art-video-player .art-control-selector .art-selector-list .art-selector-item:hover,
    .art-video-player .art-control-selector .art-selector-list .art-selector-item.art-current {
      color: var(--theme)
    }

    .art-video-player .art-control-selector:hover .art-selector-list {
      display: block
    }

    [class*=hint--] {
      font-style: normal;
      display: inline-block;
      position: relative
    }

    [class*=hint--]:before,
    [class*=hint--]:after {
      visibility: hidden;
      opacity: 0;
      z-index: 1000000;
      pointer-events: none;
      transition: all .3s;
      position: absolute;
      transform: translate(0, 0)
    }

    [class*=hint--]:hover:before,
    [class*=hint--]:hover:after {
      visibility: visible;
      opacity: 1;
      transition-delay: .1s
    }

    [class*=hint--]:before {
      content: "";
      z-index: 1000001;
      background: 0 0;
      border: 6px solid #0000;
      position: absolute
    }

    [class*=hint--]:after {
      color: #fff;
      white-space: nowrap;
      background: #000;
      padding: 8px 10px;
      font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
      font-size: 12px;
      line-height: 12px
    }

    [class*=hint--][aria-label]:after {
      content: attr(aria-label)
    }

    [class*=hint--][data-hint]:after {
      content: attr(data-hint)
    }

    [aria-label=""]:before,
    [aria-label=""]:after,
    [data-hint=""]:before,
    [data-hint=""]:after {
      display: none !important
    }

    .hint--top-left:before,
    .hint--top-right:before,
    .hint--top:before {
      border-top-color: #000
    }

    .hint--bottom-left:before,
    .hint--bottom-right:before,
    .hint--bottom:before {
      border-bottom-color: #000
    }

    .hint--left:before {
      border-left-color: #000
    }

    .hint--right:before {
      border-right-color: #000
    }

    .hint--top:before {
      margin-bottom: -11px
    }

    .hint--top:before,
    .hint--top:after {
      bottom: 100%;
      left: 50%
    }

    .hint--top:before {
      left: calc(50% - 6px)
    }

    .hint--top:after {
      transform: translate(-50%)
    }

    .hint--top:hover:before {
      transform: translateY(-8px)
    }

    .hint--top:hover:after {
      transform: translate(-50%)translateY(-8px)
    }

    .hint--bottom:before {
      margin-top: -11px
    }

    .hint--bottom:before,
    .hint--bottom:after {
      top: 100%;
      left: 50%
    }

    .hint--bottom:before {
      left: calc(50% - 6px)
    }

    .hint--bottom:after {
      transform: translate(-50%)
    }

    .hint--bottom:hover:before {
      transform: translateY(8px)
    }

    .hint--bottom:hover:after {
      transform: translate(-50%)translateY(8px)
    }

    .hint--right:before {
      margin-bottom: -6px;
      margin-left: -11px
    }

    .hint--right:after {
      margin-bottom: -14px
    }

    .hint--right:before,
    .hint--right:after {
      bottom: 50%;
      left: 100%
    }

    .hint--right:hover:before,
    .hint--right:hover:after {
      transform: translate(8px)
    }

    .hint--left:before {
      margin-bottom: -6px;
      margin-right: -11px
    }

    .hint--left:after {
      margin-bottom: -14px
    }

    .hint--left:before,
    .hint--left:after {
      bottom: 50%;
      right: 100%
    }

    .hint--left:hover:before,
    .hint--left:hover:after {
      transform: translate(-8px)
    }

    .hint--top-left:before {
      margin-bottom: -11px
    }

    .hint--top-left:before,
    .hint--top-left:after {
      bottom: 100%;
      left: 50%
    }

    .hint--top-left:before {
      left: calc(50% - 6px)
    }

    .hint--top-left:after {
      margin-left: 12px;
      transform: translate(-100%)
    }

    .hint--top-left:hover:before {
      transform: translateY(-8px)
    }

    .hint--top-left:hover:after {
      transform: translate(-100%)translateY(-8px)
    }

    .hint--top-right:before {
      margin-bottom: -11px
    }

    .hint--top-right:before,
    .hint--top-right:after {
      bottom: 100%;
      left: 50%
    }

    .hint--top-right:before {
      left: calc(50% - 6px)
    }

    .hint--top-right:after {
      margin-left: -12px;
      transform: translate(0)
    }

    .hint--top-right:hover:before,
    .hint--top-right:hover:after {
      transform: translateY(-8px)
    }

    .hint--bottom-left:before {
      margin-top: -11px
    }

    .hint--bottom-left:before,
    .hint--bottom-left:after {
      top: 100%;
      left: 50%
    }

    .hint--bottom-left:before {
      left: calc(50% - 6px)
    }

    .hint--bottom-left:after {
      margin-left: 12px;
      transform: translate(-100%)
    }

    .hint--bottom-left:hover:before {
      transform: translateY(8px)
    }

    .hint--bottom-left:hover:after {
      transform: translate(-100%)translateY(8px)
    }

    .hint--bottom-right:before {
      margin-top: -11px
    }

    .hint--bottom-right:before,
    .hint--bottom-right:after {
      top: 100%;
      left: 50%
    }

    .hint--bottom-right:before {
      left: calc(50% - 6px)
    }

    .hint--bottom-right:after {
      margin-left: -12px;
      transform: translate(0)
    }

    .hint--bottom-right:hover:before,
    .hint--bottom-right:hover:after {
      transform: translateY(8px)
    }

    .hint--small:after,
    .hint--medium:after,
    .hint--large:after {
      white-space: normal;
      word-wrap: break-word;
      line-height: 1.4em
    }

    .hint--small:after {
      width: 80px
    }

    .hint--medium:after {
      width: 150px
    }

    .hint--large:after {
      width: 300px
    }

    [class*=hint--]:after {
      text-shadow: 0 -1px #000;
      box-shadow: 4px 4px 8px #0000004d
    }

    .hint--error:after {
      text-shadow: 0 -1px #592726;
      background-color: #b34e4d
    }

    .hint--error.hint--top-left:before,
    .hint--error.hint--top-right:before,
    .hint--error.hint--top:before {
      border-top-color: #b34e4d
    }

    .hint--error.hint--bottom-left:before,
    .hint--error.hint--bottom-right:before,
    .hint--error.hint--bottom:before {
      border-bottom-color: #b34e4d
    }

    .hint--error.hint--left:before {
      border-left-color: #b34e4d
    }

    .hint--error.hint--right:before {
      border-right-color: #b34e4d
    }

    .hint--warning:after {
      text-shadow: 0 -1px #6c5328;
      background-color: #c09854
    }

    .hint--warning.hint--top-left:before,
    .hint--warning.hint--top-right:before,
    .hint--warning.hint--top:before {
      border-top-color: #c09854
    }

    .hint--warning.hint--bottom-left:before,
    .hint--warning.hint--bottom-right:before,
    .hint--warning.hint--bottom:before {
      border-bottom-color: #c09854
    }

    .hint--warning.hint--left:before {
      border-left-color: #c09854
    }

    .hint--warning.hint--right:before {
      border-right-color: #c09854
    }

    .hint--info:after {
      text-shadow: 0 -1px #1a3c4d;
      background-color: #3986ac
    }

    .hint--info.hint--top-left:before,
    .hint--info.hint--top-right:before,
    .hint--info.hint--top:before {
      border-top-color: #3986ac
    }

    .hint--info.hint--bottom-left:before,
    .hint--info.hint--bottom-right:before,
    .hint--info.hint--bottom:before {
      border-bottom-color: #3986ac
    }

    .hint--info.hint--left:before {
      border-left-color: #3986ac
    }

    .hint--info.hint--right:before {
      border-right-color: #3986ac
    }

    .hint--success:after {
      text-shadow: 0 -1px #1a321a;
      background-color: #458746
    }

    .hint--success.hint--top-left:before,
    .hint--success.hint--top-right:before,
    .hint--success.hint--top:before {
      border-top-color: #458746
    }

    .hint--success.hint--bottom-left:before,
    .hint--success.hint--bottom-right:before,
    .hint--success.hint--bottom:before {
      border-bottom-color: #458746
    }

    .hint--success.hint--left:before {
      border-left-color: #458746
    }

    .hint--success.hint--right:before {
      border-right-color: #458746
    }

    .hint--always:after,
    .hint--always:before {
      opacity: 1;
      visibility: visible
    }

    .hint--always.hint--top:before {
      transform: translateY(-8px)
    }

    .hint--always.hint--top:after {
      transform: translate(-50%)translateY(-8px)
    }

    .hint--always.hint--top-left:before {
      transform: translateY(-8px)
    }

    .hint--always.hint--top-left:after {
      transform: translate(-100%)translateY(-8px)
    }

    .hint--always.hint--top-right:before,
    .hint--always.hint--top-right:after {
      transform: translateY(-8px)
    }

    .hint--always.hint--bottom:before {
      transform: translateY(8px)
    }

    .hint--always.hint--bottom:after {
      transform: translate(-50%)translateY(8px)
    }

    .hint--always.hint--bottom-left:before {
      transform: translateY(8px)
    }

    .hint--always.hint--bottom-left:after {
      transform: translate(-100%)translateY(8px)
    }

    .hint--always.hint--bottom-right:before,
    .hint--always.hint--bottom-right:after {
      transform: translateY(8px)
    }

    .hint--always.hint--left:before,
    .hint--always.hint--left:after {
      transform: translate(-8px)
    }

    .hint--always.hint--right:before,
    .hint--always.hint--right:after {
      transform: translate(8px)
    }

    .hint--rounded:after {
      border-radius: 4px
    }

    .hint--no-animate:before,
    .hint--no-animate:after {
      transition-duration: 0s
    }

    .hint--bounce:before,
    .hint--bounce:after {
      -webkit-transition: opacity .3s, visibility .3s, -webkit-transform .3s cubic-bezier(.71, 1.7, .77, 1.24);
      -moz-transition: opacity .3s, visibility .3s, -moz-transform .3s cubic-bezier(.71, 1.7, .77, 1.24);
      transition: opacity .3s, visibility .3s, transform .3s cubic-bezier(.71, 1.7, .77, 1.24)
    }

    .hint--no-shadow:before,
    .hint--no-shadow:after {
      text-shadow: initial;
      box-shadow: initial
    }

    .hint--no-arrow:before {
      display: none
    }
  </style>
  <link rel="canonical" href="https://franime.fr/anime/spyfamily?s=2&amp;ep=13&amp;lang=vo" data-react-helmet="true">
  <link rel="apple-touch-icon" sizes="180x180"
    href="https://media.kitsu.io/anime/45398/poster_image/cc0bbc0dd2a123fb79b041078fce6f89.jpg"
    data-react-helmet="true">
  <meta charset="utf-8" data-react-helmet="true">
  <meta name="application-name"
    content="SPY×FAMILY | {episode.title} | FRAnime - Voir vos animes en streaming et sans pub"
    data-react-helmet="true">
  <meta name="description"
    content="Regarder l'épisode {endsWithNumber(episode.title)} de l'animé SPY×FAMILY en VOSTFR et en VF est gratuit et sans pub sur FRAnime."
    data-react-helmet="true">
  <meta property="og:site_name"
    content="SPY×FAMILY | {episode.title} | FRAnime - Voir vos animes en streaming et sans pub"
    data-react-helmet="true">
  <meta property="og:description"
    content="Regarder l'épisode {endsWithNumber(episode.title)} de l'animé SPY×FAMILY en VOSTFR et en VF est gratuit et sans pub sur FRAnime."
    data-react-helmet="true">
  <meta property="og:title" content="SPY×FAMILY | {episode.title} | FRAnime - Voir vos animes en streaming et sans pub"
    data-react-helmet="true">
  <meta property="og:url" content="https://www.franime.fr/anime/spyfamily?s=2&amp;ep=13&amp;lang=vo"
    data-react-helmet="true">
  <meta property="og:image"
    content="https://media.kitsu.io/anime/45398/poster_image/cc0bbc0dd2a123fb79b041078fce6f89.jpg"
    data-react-helmet="true">
</head>

<body style="background-color:#17191f">
  <div id="root">
    <div class="text-white">
      <div>
        <div class="select-none sm:static sticky z-50 top-0 bg-[#1e222c]" style="font-family: Poppins;">
          <div class="flex justify-start items-center w-full h-[60px] relative">
            <div class="sm:hidden flex flex-col justify-start items-center w-full relative container">
              <div class="flex justify-between w-full items-center flex-grow-0 flex-shrink-0 relative"><a class=""
                  href="/"><img alt="accueil" src="/logo.png"
                    class="flex-grow-0 flex-shrink-0 w-[45px] h-[35px] object-cover"></a>
                <div class="flex justify-end items-center flex-grow gap-7"><button
                    class="cursor-pointer flex justify-end items-center flex-grow-0 flex-shrink-0 relative gap-7"><svg
                      width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"
                      class="flex-grow-0 flex-shrink-0 w-6 h-6 relative" preserveAspectRatio="xMidYMid meet">
                      <g clip-path="url(#clip0_288_524)">
                        <path d="M3 18H21V16H3V18ZM3 13H21V11H3V13ZM3 6V8H21V6H3Z" fill="white"></path>
                      </g>
                      <defs>
                        <clippath id="clip0_288_524">
                          <rect width="24" height="24" fill="white"></rect>
                        </clippath>
                      </defs>
                    </svg></button></div>
              </div>
            </div>
            <div class="hidden sm:flex md:hidden justify-start items-center w-full relative container">
              <div class="flex justify-between items-center flex-grow gap-7"><a class="" href="/"><img alt="accueil"
                    src="/logo.png" class="flex-grow-0 flex-shrink-0 w-[45px] h-[35px] object-cover"></a>
                <div class="flex items-center gap-7"><a
                    class="flex cursor-pointer justify-start items-start flex-grow-0 flex-shrink-0 relative gap-2.5 p-2.5"
                    href="/recherche?search=&amp;type=TOUT&amp;format=TOUT&amp;status=TOUT&amp;ordre=Ressemblance&amp;themes=TOUT&amp;algorithme=Normal&amp;page=0&amp;scrolltotop=true"><svg
                      width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"
                      class="flex-grow-0 flex-shrink-0" preserveAspectRatio="xMidYMid meet">
                      <path
                        d="M14.2939 12.5786H13.3905L13.0703 12.2699C14.191 10.9663 14.8656 9.27387 14.8656 7.43282C14.8656 3.32762 11.538 0 7.43282 0C3.32762 0 0 3.32762 0 7.43282C0 11.538 3.32762 14.8656 7.43282 14.8656C9.27387 14.8656 10.9663 14.191 12.2699 13.0703L12.5786 13.3905V14.2939L18.2962 20L20 18.2962L14.2939 12.5786ZM7.43282 12.5786C4.58548 12.5786 2.28702 10.2802 2.28702 7.43282C2.28702 4.58548 4.58548 2.28702 7.43282 2.28702C10.2802 2.28702 12.5786 4.58548 12.5786 7.43282C12.5786 10.2802 10.2802 12.5786 7.43282 12.5786Z"
                        fill="white"></path>
                    </svg></a><a
                    class="flex cursor-pointer justify-start items-start flex-grow-0 flex-shrink-0 relative gap-2.5 p-2.5"
                    href="/"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                      class="flex-grow-0 cursor-pointer flex-shrink-0 w-7 h-7 relative"
                      preserveAspectRatio="xMidYMid meet">
                      <g clip-path="url(#clip0_269_516)">
                        <path d="M10 20V14H14V20H19V12H22L12 3L2 12H5V20H10Z" fill="white"></path>
                      </g>
                      <defs>
                        <clippath id="clip0_269_516">
                          <rect width="24" height="24" fill="white"></rect>
                        </clippath>
                      </defs>
                    </svg></a><a
                    class="flex cursor-pointer justify-start items-start flex-grow-0 flex-shrink-0 relative gap-2.5 p-2.5"
                    href="/recherche?search=&amp;type=TOUT&amp;format=TOUT&amp;status=TOUT&amp;ordre=Ressemblance&amp;themes=TOUT&amp;algorithme=Normal&amp;page=0&amp;scrolltotop=true"><svg
                      width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"
                      class="flex-grow-0 cursor-pointer flex-shrink-0 w-6 h-6 relative"
                      preserveAspectRatio="xMidYMid meet">
                      <g clip-path="url(#clip0_269_519)">
                        <path
                          d="M21 3H3C1.9 3 1 3.9 1 5V17C1 18.1 1.9 19 3 19H8V21H16V19H21C22.1 19 22.99 18.1 22.99 17L23 5C23 3.9 22.1 3 21 3ZM21 17H3V5H21V17Z"
                          fill="white"></path>
                      </g>
                      <defs>
                        <clippath id="clip0_269_519">
                          <rect width="24" height="24" fill="white"></rect>
                        </clippath>
                      </defs>
                    </svg></a><a
                    class="flex cursor-pointer justify-start items-start flex-grow-0 flex-shrink-0 relative gap-2.5 p-2.5"
                    href="/annonces"><svg width="20" class="flex-grow-0 cursor-pointer flex-shrink-0 w-6 h-6 relative"
                      height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path
                        d="M19.99 2C19.99 0.9 19.1 0 18 0H2C0.9 0 0 0.9 0 2V14C0 15.1 0.9 16 2 16H16L20 20L19.99 2ZM16 12H4V10H16V12ZM16 9H4V7H16V9ZM16 6H4V4H16V6Z"
                        fill="white"></path>
                    </svg></a></div>
                <div class="flex items-center">
                  <div class="flex justify-end items-center flex-grow-0 flex-shrink-0 relative gap-7"><a
                      class="flex justify-center items-center flex-grow-0 flex-shrink-0 h-9 relative gap-2.5 pr-[10px] pl-[7px] py-2.5 rounded-[7px] bg-[#eb1b31]"
                      href="/login"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                        xmlns="http://www.w3.org/2000/svg" class="flex-grow-0 flex-shrink-0 w-6 h-6 relative"
                        preserveAspectRatio="xMidYMid meet">
                        <g clip-path="url(#clip0_1_69)">
                          <path
                            d="M10.3 7.7C9.91 8.09 9.91 8.71 10.3 9.1L12.2 11H3C2.45 11 2 11.45 2 12C2 12.55 2.45 13 3 13H12.2L10.3 14.9C9.91 15.29 9.91 15.91 10.3 16.3C10.69 16.69 11.31 16.69 11.7 16.3L15.29 12.71C15.68 12.32 15.68 11.69 15.29 11.3L11.7 7.7C11.31 7.31 10.69 7.31 10.3 7.7ZM20 19H13C12.45 19 12 19.45 12 20C12 20.55 12.45 21 13 21H20C21.1 21 22 20.1 22 19V5C22 3.9 21.1 3 20 3H13C12.45 3 12 3.45 12 4C12 4.55 12.45 5 13 5H20V19Z"
                            fill="white"></path>
                        </g>
                        <defs>
                          <clippath id="clip0_1_69">
                            <rect width="24" height="24" fill="white"></rect>
                          </clippath>
                        </defs>
                      </svg></a></div>
                </div>
              </div>
            </div>
            <div class="hidden md:flex lg:hidden justify-between px-4 gap-4 items-center w-full relative"><a
                class="flex flex-grow" href="/"><img alt="accueil" src="/logo.png"
                  class="flex-grow-0 flex-shrink-0 w-[45px] h-[35px] object-cover"></a>
              <div class="flex justify-between items-center gap-4">
                <div
                  class="flex justify-start items-center flex-grow-0 flex-shrink-0 w-[203px] h-10 relative gap-2.5 p-2.5 rounded-[7px] bg-[#303541]">
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"
                    class="flex-grow-0 cursor-pointer flex-shrink-0 w-6 h-6 relative"
                    preserveAspectRatio="xMidYMid meet">
                    <g clip-path="url(#clip0_269_449)">
                      <path
                        d="M15.5 14H14.71L14.43 13.73C15.41 12.59 16 11.11 16 9.5C16 5.91 13.09 3 9.5 3C5.91 3 3 5.91 3 9.5C3 13.09 5.91 16 9.5 16C11.11 16 12.59 15.41 13.73 14.43L14 14.71V15.5L19 20.49L20.49 19L15.5 14V14ZM9.5 14C7.01 14 5 11.99 5 9.5C5 7.01 7.01 5 9.5 5C11.99 5 14 7.01 14 9.5C14 11.99 11.99 14 9.5 14Z"
                        fill="white" fill-opacity="0.81"></path>
                    </g>
                    <defs>
                      <clippath id="clip0_269_449">
                        <rect width="24" height="24" fill="white"></rect>
                      </clippath>
                    </defs>
                  </svg><input
                    class=" w-full outline-none text-base font-semibold text-left text-white/[0.81] bg-[#303541]"
                    placeholder="Rechercher..." value="">
                  <div class="top-[55px] rounded-md z-40 absolute flex flex-col w-[360px] left-0 h-auto"></div>
                </div><a
                  class="flex cursor-pointer justify-start items-center flex-grow-0 flex-shrink-0 relative gap-2.5 py-2.5 pl-2"
                  href="/"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                    xmlns="http://www.w3.org/2000/svg" class="flex-grow-0 cursor-pointer flex-shrink-0 w-7 h-7 relative"
                    preserveAspectRatio="xMidYMid meet">
                    <g clip-path="url(#clip0_269_516)">
                      <path d="M10 20V14H14V20H19V12H22L12 3L2 12H5V20H10Z" fill="white"></path>
                    </g>
                    <defs>
                      <clippath id="clip0_269_516">
                        <rect width="24" height="24" fill="white"></rect>
                      </clippath>
                    </defs>
                  </svg>
                  <p class="flex-grow-0 mt-[3px] flex-shrink-0 text-base font-semibold text-left text-white">Accueil</p>
                </a><a
                  class="flex cursor-pointer justify-start items-center flex-grow-0 flex-shrink-0 relative gap-2.5 py-2.5"
                  href="/recherche?search=&amp;type=TOUT&amp;format=TOUT&amp;status=TOUT&amp;ordre=Ressemblance&amp;themes=TOUT&amp;algorithme=Normal&amp;page=0&amp;scrolltotop=true"><svg
                    width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"
                    class="flex-grow-0 cursor-pointer flex-shrink-0 w-6 h-6 relative"
                    preserveAspectRatio="xMidYMid meet">
                    <g clip-path="url(#clip0_269_519)">
                      <path
                        d="M21 3H3C1.9 3 1 3.9 1 5V17C1 18.1 1.9 19 3 19H8V21H16V19H21C22.1 19 22.99 18.1 22.99 17L23 5C23 3.9 22.1 3 21 3ZM21 17H3V5H21V17Z"
                        fill="white"></path>
                    </g>
                    <defs>
                      <clippath id="clip0_269_519">
                        <rect width="24" height="24" fill="white"></rect>
                      </clippath>
                    </defs>
                  </svg>
                  <p class="flex-grow-0 mt-[3px] flex-shrink-0 text-base font-semibold text-left text-white">Animes</p>
                </a><a
                  class="flex cursor-pointer justify-start items-center flex-grow-0 flex-shrink-0 relative gap-2.5 py-2.5 pr-2"
                  href="/annonces"><svg width="20" class="flex-grow-0 cursor-pointer flex-shrink-0 w-6 h-6 relative"
                    height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                      d="M19.99 2C19.99 0.9 19.1 0 18 0H2C0.9 0 0 0.9 0 2V14C0 15.1 0.9 16 2 16H16L20 20L19.99 2ZM16 12H4V10H16V12ZM16 9H4V7H16V9ZM16 6H4V4H16V6Z"
                      fill="white"></path>
                  </svg>
                  <p class="flex-grow-0 mt-[3px] flex-shrink-0 text-base font-semibold text-left text-white">News</p>
                </a>
                <div class="flex justify-end items-center flex-grow-0 flex-shrink-0 relative gap-4"><a
                    class="flex justify-center items-center flex-grow-0 flex-shrink-0 h-9 relative gap-2.5 pr-[10px] pl-[7px] py-2.5 rounded-[7px] bg-[#eb1b31]"
                    href="/login"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                      xmlns="http://www.w3.org/2000/svg" class="flex-grow-0 flex-shrink-0 w-6 h-6 relative"
                      preserveAspectRatio="xMidYMid meet">
                      <g clip-path="url(#clip0_1_69)">
                        <path
                          d="M10.3 7.7C9.91 8.09 9.91 8.71 10.3 9.1L12.2 11H3C2.45 11 2 11.45 2 12C2 12.55 2.45 13 3 13H12.2L10.3 14.9C9.91 15.29 9.91 15.91 10.3 16.3C10.69 16.69 11.31 16.69 11.7 16.3L15.29 12.71C15.68 12.32 15.68 11.69 15.29 11.3L11.7 7.7C11.31 7.31 10.69 7.31 10.3 7.7ZM20 19H13C12.45 19 12 19.45 12 20C12 20.55 12.45 21 13 21H20C21.1 21 22 20.1 22 19V5C22 3.9 21.1 3 20 3H13C12.45 3 12 3.45 12 4C12 4.55 12.45 5 13 5H20V19Z"
                          fill="white"></path>
                      </g>
                      <defs>
                        <clippath id="clip0_1_69">
                          <rect width="24" height="24" fill="white"></rect>
                        </clippath>
                      </defs>
                    </svg></a></div>
              </div>
            </div>
            <div class="hidden lg:flex justify-start items-center w-full relative container"><a class="" href="/"><img
                  alt="accueil" src="/logo.png" class="flex-grow-0 flex-shrink-0 w-[45px] h-[35px] object-cover"></a>
              <div class="flex justify-end items-center flex-grow gap-7">
                <div
                  class="flex justify-start items-center flex-grow-0 flex-shrink-0 w-[360px] h-10 relative gap-2.5 p-2.5 rounded-[7px] bg-[#303541]">
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"
                    class="flex-grow-0 cursor-pointer flex-shrink-0 w-6 h-6 relative"
                    preserveAspectRatio="xMidYMid meet">
                    <g clip-path="url(#clip0_269_449)">
                      <path
                        d="M15.5 14H14.71L14.43 13.73C15.41 12.59 16 11.11 16 9.5C16 5.91 13.09 3 9.5 3C5.91 3 3 5.91 3 9.5C3 13.09 5.91 16 9.5 16C11.11 16 12.59 15.41 13.73 14.43L14 14.71V15.5L19 20.49L20.49 19L15.5 14V14ZM9.5 14C7.01 14 5 11.99 5 9.5C5 7.01 7.01 5 9.5 5C11.99 5 14 7.01 14 9.5C14 11.99 11.99 14 9.5 14Z"
                        fill="white" fill-opacity="0.81"></path>
                    </g>
                    <defs>
                      <clippath id="clip0_269_449">
                        <rect width="24" height="24" fill="white"></rect>
                      </clippath>
                    </defs>
                  </svg><input
                    class=" w-full outline-none text-base font-semibold text-left text-white/[0.81] bg-[#303541]"
                    placeholder="Rechercher..." value="">
                  <div class="top-[55px] rounded-md z-40 absolute flex flex-col w-[300px] left-0 h-auto"></div>
                </div><a
                  class="flex cursor-pointer justify-start items-center flex-grow-0 flex-shrink-0 relative gap-2.5 p-2.5"
                  href="/"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                    xmlns="http://www.w3.org/2000/svg" class="flex-grow-0 cursor-pointer flex-shrink-0 w-7 h-7 relative"
                    preserveAspectRatio="xMidYMid meet">
                    <g clip-path="url(#clip0_269_516)">
                      <path d="M10 20V14H14V20H19V12H22L12 3L2 12H5V20H10Z" fill="white"></path>
                    </g>
                    <defs>
                      <clippath id="clip0_269_516">
                        <rect width="24" height="24" fill="white"></rect>
                      </clippath>
                    </defs>
                  </svg>
                  <p class="flex-grow-0 mt-[3px] flex-shrink-0 text-base font-semibold text-left text-white">Accueil</p>
                </a><a
                  class="flex cursor-pointer justify-start items-center flex-grow-0 flex-shrink-0 relative gap-2.5 p-2.5"
                  href="/recherche?search=&amp;type=TOUT&amp;format=TOUT&amp;status=TOUT&amp;ordre=Ressemblance&amp;themes=TOUT&amp;algorithme=Normal&amp;page=0&amp;scrolltotop=true"><svg
                    width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"
                    class="flex-grow-0 cursor-pointer flex-shrink-0 w-6 h-6 relative"
                    preserveAspectRatio="xMidYMid meet">
                    <g clip-path="url(#clip0_269_519)">
                      <path
                        d="M21 3H3C1.9 3 1 3.9 1 5V17C1 18.1 1.9 19 3 19H8V21H16V19H21C22.1 19 22.99 18.1 22.99 17L23 5C23 3.9 22.1 3 21 3ZM21 17H3V5H21V17Z"
                        fill="white"></path>
                    </g>
                    <defs>
                      <clippath id="clip0_269_519">
                        <rect width="24" height="24" fill="white"></rect>
                      </clippath>
                    </defs>
                  </svg>
                  <p class="flex-grow-0 mt-[3px] flex-shrink-0 text-base font-semibold text-left text-white">Animes</p>
                </a><a
                  class="flex cursor-pointer justify-start items-center flex-grow-0 flex-shrink-0 relative gap-2.5 p-2.5"
                  href="/annonces"><svg width="20" class="flex-grow-0 cursor-pointer flex-shrink-0 w-6 h-6 relative"
                    height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                      d="M19.99 2C19.99 0.9 19.1 0 18 0H2C0.9 0 0 0.9 0 2V14C0 15.1 0.9 16 2 16H16L20 20L19.99 2ZM16 12H4V10H16V12ZM16 9H4V7H16V9ZM16 6H4V4H16V6Z"
                      fill="white"></path>
                  </svg>
                  <p class="flex-grow-0 mt-[3px] flex-shrink-0 text-base font-semibold text-left text-white">News</p>
                </a>
                <div class="flex justify-end items-center flex-grow-0 flex-shrink-0 relative gap-7"><a
                    class="flex justify-center items-center flex-grow-0 flex-shrink-0 h-9 relative gap-2.5 pr-[10px] pl-[7px] py-2.5 rounded-[7px] bg-[#eb1b31]"
                    href="/login"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                      xmlns="http://www.w3.org/2000/svg" class="flex-grow-0 flex-shrink-0 w-6 h-6 relative"
                      preserveAspectRatio="xMidYMid meet">
                      <g clip-path="url(#clip0_1_69)">
                        <path
                          d="M10.3 7.7C9.91 8.09 9.91 8.71 10.3 9.1L12.2 11H3C2.45 11 2 11.45 2 12C2 12.55 2.45 13 3 13H12.2L10.3 14.9C9.91 15.29 9.91 15.91 10.3 16.3C10.69 16.69 11.31 16.69 11.7 16.3L15.29 12.71C15.68 12.32 15.68 11.69 15.29 11.3L11.7 7.7C11.31 7.31 10.69 7.31 10.3 7.7ZM20 19H13C12.45 19 12 19.45 12 20C12 20.55 12.45 21 13 21H20C21.1 21 22 20.1 22 19V5C22 3.9 21.1 3 20 3H13C12.45 3 12 3.45 12 4C12 4.55 12.45 5 13 5H20V19Z"
                          fill="white"></path>
                      </g>
                      <defs>
                        <clippath id="clip0_1_69">
                          <rect width="24" height="24" fill="white"></rect>
                        </clippath>
                      </defs>
                    </svg>
                    <p class="flex-grow-0 flex-shrink-0 text-base font-semibold text-left text-white">Connexion</p>
                  </a></div>
              </div>
            </div>
          </div>
          <div class="hidden sm:hidden justify-around w-full py-3 items-center px-2">
            <div class="flex flex-wrap justify-evenly items-center flex-grow-0 flex-shrink-0 w-full relative gap-7"><a
                class="" href="/"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                  xmlns="http://www.w3.org/2000/svg" class="flex-grow-0 cursor-pointer flex-shrink-0 w-7 h-7 relative"
                  preserveAspectRatio="xMidYMid meet">
                  <g clip-path="url(#clip0_269_516)">
                    <path d="M10 20V14H14V20H19V12H22L12 3L2 12H5V20H10Z" fill="white"></path>
                  </g>
                  <defs>
                    <clippath id="clip0_269_516">
                      <rect width="24" height="24" fill="white"></rect>
                    </clippath>
                  </defs>
                </svg></a><a class=""
                href="/recherche?search=&amp;type=TOUT&amp;format=TOUT&amp;status=TOUT&amp;ordre=Ressemblance&amp;themes=TOUT&amp;algorithme=Normal&amp;page=0&amp;scrolltotop=true"><svg
                  width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"
                  class="flex-grow-0 flex-shrink-0" preserveAspectRatio="xMidYMid meet">
                  <path
                    d="M14.2939 12.5786H13.3905L13.0703 12.2699C14.191 10.9663 14.8656 9.27387 14.8656 7.43282C14.8656 3.32762 11.538 0 7.43282 0C3.32762 0 0 3.32762 0 7.43282C0 11.538 3.32762 14.8656 7.43282 14.8656C9.27387 14.8656 10.9663 14.191 12.2699 13.0703L12.5786 13.3905V14.2939L18.2962 20L20 18.2962L14.2939 12.5786ZM7.43282 12.5786C4.58548 12.5786 2.28702 10.2802 2.28702 7.43282C2.28702 4.58548 4.58548 2.28702 7.43282 2.28702C10.2802 2.28702 12.5786 4.58548 12.5786 7.43282C12.5786 10.2802 10.2802 12.5786 7.43282 12.5786Z"
                    fill="white"></path>
                </svg></a><a class="" href="/annonces"><svg width="20"
                  class="flex-grow-0 cursor-pointer flex-shrink-0 w-6 h-6 relative" height="20" viewBox="0 0 20 20"
                  fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M19.99 2C19.99 0.9 19.1 0 18 0H2C0.9 0 0 0.9 0 2V14C0 15.1 0.9 16 2 16H16L20 20L19.99 2ZM16 12H4V10H16V12ZM16 9H4V7H16V9ZM16 6H4V4H16V6Z"
                    fill="white"></path>
                </svg></a><a
                class="flex justify-center items-center flex-grow-0 flex-shrink-0 h-9 relative gap-2.5 pr-[10px] pl-[7px] py-2.5 rounded-[7px] bg-[#eb1b31]"
                href="/login"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                  xmlns="http://www.w3.org/2000/svg" class="flex-grow-0 flex-shrink-0 w-6 h-6 relative"
                  preserveAspectRatio="xMidYMid meet">
                  <g clip-path="url(#clip0_1_69)">
                    <path
                      d="M10.3 7.7C9.91 8.09 9.91 8.71 10.3 9.1L12.2 11H3C2.45 11 2 11.45 2 12C2 12.55 2.45 13 3 13H12.2L10.3 14.9C9.91 15.29 9.91 15.91 10.3 16.3C10.69 16.69 11.31 16.69 11.7 16.3L15.29 12.71C15.68 12.32 15.68 11.69 15.29 11.3L11.7 7.7C11.31 7.31 10.69 7.31 10.3 7.7ZM20 19H13C12.45 19 12 19.45 12 20C12 20.55 12.45 21 13 21H20C21.1 21 22 20.1 22 19V5C22 3.9 21.1 3 20 3H13C12.45 3 12 3.45 12 4C12 4.55 12.45 5 13 5H20V19Z"
                      fill="white"></path>
                  </g>
                  <defs>
                    <clippath id="clip0_1_69">
                      <rect width="24" height="24" fill="white"></rect>
                    </clippath>
                  </defs>
                </svg></a></div>
          </div>
        </div>
        <div>
          <script
            type="application/ld+json">{"@context":"https://schema.org","@type":"VideoObject","name":"SPY×FAMILY","description":"Sauvez le monde avec l'élite des agents (très) spéciaux : la famille Forger ! Une comédie d'espionnage pétillante !  Twilight, le plus grand espion du monde, doit pour sa nouvelle mission créer une famille de toutes pièces afin de pouvoir s'introduire dans la plus prestigieuse école de l'aristocratie. Totalement dépourvu d'expérience familiale, il va adopter une petite fille en ignorant qu'elle est télépathe, et s'associer à une jeune femme timide, sans se douter qu'elle est une redoutable tueuse à gages. Ce trio atypique va devoir composer pour passer inaperçu, tout en découvrant les vraies valeurs d'une famille unie et aimante.","thumbnailUrl":"https://media.kitsu.io/anime/45398/poster_image/cc0bbc0dd2a123fb79b041078fce6f89.jpg","uploadDate":"2016-03-31T08:00:00+08:00","duration":"PT20M54S","embedUrl":"https://video.sibnet.ru/shell.php?videoid=4245758","éditeur":{"@type":"Organisation","Nom":"FRAnime","logo":{"@type":"ObjetImage","URL":"https://media.discordapp.net/attachments/744565410657075260/1010500001614548992/FRAnime_Logo.png","largeur":60,"la taille":60}},"potentiel d'action":{"@type":"ChercherVersAction","cible":"https://www.franime.fr/anime/spyfamily?s=2&ep=13&lang=vo","startOffset-input":"nom requis=seek_to_second_number"}}</script>
          <script
            type="application/ld+json">{"@context":"https://schema.org/","@type":"Product","description":"Sauvez le monde avec l'élite des agents (très) spéciaux : la famille Forger ! Une comédie d'espionnage pétillante !  Twilight, le plus grand espion du monde, doit pour sa nouvelle mission créer une famille de toutes pièces afin de pouvoir s'introduire dans la plus prestigieuse école de l'aristocratie. Totalement dépourvu d'expérience familiale, il va adopter une petite fille en ignorant qu'elle est télépathe, et s'associer à une jeune femme timide, sans se douter qu'elle est une redoutable tueuse à gages. Ce trio atypique va devoir composer pour passer inaperçu, tout en découvrant les vraies valeurs d'une famille unie et aimante.","image":"https://media.kitsu.io/anime/45398/poster_image/cc0bbc0dd2a123fb79b041078fce6f89.jpg","name":"SPY×FAMILY","aggregateRating":{"@type":"AggregateRating","reviewCount":3999,"ratingValue":4.755}}</script>
          <div class="mt-10" id="flex" style="font-family: Poppins;">
            <div class="flex flex-col w-full mx-auto md:container px-1 md:px-3">
              <div class="flex flex-col justify-start items-center w-full gap-[26px]">
                <div
                  class="flex flex-wrap justify-between items-start md:items-center flex-grow-0 flex-shrink-0 w-full relative gap-[26px]">
                  <h1 class="flex-grow font-bold text-[22px] md:text-[32px] text-left text-white"
                    style="font-family: Poppins;">SPY x FAMILY <span class="ml-2 text-blue-500 font-semibold">Saison
                      2</span></h1>
                  <div class="select-none flex justify-start w-full sm:w-auto items-center relative gap-[13px]">
                    <p class="flex-grow-0 flex-shrink-0 text-xl md:text-2xl font-bold text-left text-white">Épisode</p>
                    <select
                      class="flex justify-start items-center max-w-[238px] w-full h-9 relative gap-2.5 px-[13px] rounded-[7px] bg-[#303541]">
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">1</option>
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">2</option>
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">3</option>
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">4</option>
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">5</option>
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">6</option>
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">7</option>
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">8</option>
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">9</option>
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">10</option>
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">11</option>
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">12</option>
                      <option class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">13</option>
                    </select>
                  </div>
                </div>
                <div class="select-none flex justify-start flex-col items-center lg:flex-row w-full gap-4"
                  style="font-family: Poppins;">
                  <div class="flex w-full h-full justify-between lg:justify-start items-center"><button
                      class="bg-[#1e222c] cursor-pointer flex justify-center px-3 mr-2 mb-2 lg:mb-0 items-center h-10 rounded-[7px]"><svg
                        width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"
                        class="mx-2 w-6 h-6" preserveAspectRatio="xMidYMid meet">
                        <g clip-path="url(#clip0_22_318)">
                          <path d="M17.51 3.87L15.73 2.1L5.83997 12L15.74 21.9L17.51 20.13L9.37997 12L17.51 3.87V3.87Z"
                            fill="white"></path>
                        </g>
                        <defs>
                          <clippath id="clip0_22_318">
                            <rect width="24" height="24" fill="white"></rect>
                          </clippath>
                        </defs>
                      </svg>
                      <p
                        class="hidden mt-[1px] truncate md:flex flex-grow-0 text-base font-semibold text-left text-white">
                        Épisode précédent</p>
                    </button><button
                      class="cursor-pointer flex justify-center mr-2 mb-2 items-center h-10 relative gap-2.5 px-3 py-1.5 w-[280px] rounded-[7px] bg-[#1e222c]"><svg
                        width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg"
                        class="w-[22px] h-[22px] relative" preserveAspectRatio="xMidYMid meet">
                        <g clip-path="url(#clip0_22_325)">
                          <path
                            d="M10.9999 1.83334C5.93992 1.83334 1.83325 5.94 1.83325 11C1.83325 16.06 5.93992 20.1667 10.9999 20.1667C16.0599 20.1667 20.1666 16.06 20.1666 11C20.1666 5.94 16.0599 1.83334 10.9999 1.83334ZM11.9166 15.5833H10.0833V10.0833H11.9166V15.5833ZM11.9166 8.25H10.0833V6.41667H11.9166V8.25Z"
                            fill="white"></path>
                        </g>
                        <defs>
                          <clippath id="clip0_22_325">
                            <rect width="22" height="22" fill="white"></rect>
                          </clippath>
                        </defs>
                      </svg>
                      <p class="hidden mt-[1px] xs:flex text-sm md:text-base font-semibold text-left text-white">Liste
                        des épisodes</p>
                    </button><button
                      class="bg-[#17191f] cursor-default flex justify-center px-3 mb-2 items-center h-10 rounded-[7px]">
                      <p class="hidden mt-[1px] truncate md:flex text-base font-semibold text-left text-white">Épisode
                        suivant</p><svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                        xmlns="http://www.w3.org/2000/svg" class="mx-2 w-6 h-6" preserveAspectRatio="xMidYMid meet">
                        <g clip-path="url(#clip0_17_696)">
                          <path
                            d="M6.48991 3.87L8.26991 2.1L18.1599 12L8.25991 21.9L6.48991 20.13L14.6199 12L6.48991 3.87V3.87Z"
                            fill="white"></path>
                        </g>
                        <defs>
                          <clippath id="clip0_17_696">
                            <rect width="24" height="24" fill="white" transform="matrix(-1 0 0 1 24 0)"></rect>
                          </clippath>
                        </defs>
                      </svg>
                    </button></div>
                  <div class="select-none flex justify-start lg:justify-end w-full items-center flex-wrap gap-3">
                    <div class="w-full mb-[5px] relative h-10 flex"><button
                        class="z-20 absolute cursor-pointer w-full flex flex-row items-center h-9 relative p-2.5 rounded-[7px] focus:outline-none ring-1 focus:ring-[#ad091a] ring-[#eb1b31] sm:text-sm bg-[#1e222c]"
                        id="headlessui-listbox-button-:r0:" type="button" aria-haspopup="true"
                        aria-expanded="false"><span class="flex w-full justify-between relative align-items-center">
                          <div class="flex items-center"><span
                              class="font-normal truncate pr-[28px] block truncate">Lecteur SIBNET</span></div><span
                            class="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2"><svg
                              xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"
                              aria-hidden="true" class="h-5 w-5 text-gray-400">
                              <path fill-rule="evenodd"
                                d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z"
                                clip-rule="evenodd"></path>
                            </svg></span>
                        </span></button></div>
                  </div>
                </div>
              </div>
              <div class="select-none w-full">
                <div class="flex justify-center my-4">
                  <div
                    class="aspect-video border-[1.5px] border-gray-700 rounded-lg flex w-full justify-center align-items-center"
                    style="background-image: url(&quot;https://media.kitsu.io/anime/45398/cover_image/7584152e78b582a70fc68013d91aad67.jpg&quot;); background-position: center center; background-size: cover; background-repeat: no-repeat;">
                    <button tabindex="0" id="play_button"
                      class="p-3 font-semibold text-xl rounded-md bg-zinc-700 w-[240px]">Regarder l'épisode</button>
                  </div>
                </div>
                <div class="flex justify-between flex-row flex-wrap mb-10 gap-5 w-full">
                  <div class="flex flex-row flex-wrap gap-4"></div>
                  <div class="flex flex-row gap-3 flex-wrap items-center">
                    <div
                      class="bg-[#eb1b31] cursor-default cursor-pointer select-none flex flex-col justify-center items-center max-w-[151px] w-[151px] h-[34px] gap-2.5 p-2.5 rounded-[10px]">
                      <p class="flex-grow-0 flex-shrink-0 text-base text-left text-white">VOSTFR</p>
                    </div>
                    <div
                      class="bg-[#1e222c]/60 cursor-pointer flex flex-col justify-center items-center w-[149px] h-[34px] gap-2.5 p-2.5 rounded-[10px]">
                      <p class="select-none flex-grow-0 flex-shrink-0 text-base text-left text-white">VF</p>
                    </div>
                  </div>
                </div>
                <div
                  class="hidden flex flex-col justify-start items-start w-full mb-10 gap-[22px] p-4 rounded-[7px] border-[1.5px] border-[#303541]">
                  <div class="flex flex-col justify-start items-start flex-grow-0 flex-shrink-0 relative gap-2.5">
                    <p class="flex-grow-0 flex-shrink-0 text-base text-left text-white">Avancer la vidéo</p>
                    <div class="flex justify-start flex-wrap items-start flex-grow-0 flex-shrink-0 gap-2.5"><label
                        class="flex flex-row justify-center items-center flex-grow-0 flex-shrink-0 w-44 h-9 relative gap-2.5 p-2.5 rounded-[10px] bg-[#1e222c]"><input
                          type="number" step="1" min="0" max="99"
                          class="bg-[#303541] w-[45px] rounded-md text-[16px] text-center" value="1">
                        <p class="flex-grow-0 flex-shrink-0 text-base text-left text-white">minute</p>
                      </label><label
                        class="flex flex-row justify-center items-center flex-grow-0 flex-shrink-0 w-44 h-9 relative gap-2.5 p-2.5 rounded-[10px] bg-[#1e222c]"><input
                          type="number" step="1" min="0" max="99"
                          class="bg-[#303541] w-[45px] rounded-md text-[16px] text-center" value="30">
                        <p class="flex-grow-0 flex-shrink-0 text-base text-left text-white">secondes</p>
                      </label><button id="artplayer_seek_button"
                        class="flex flex-col justify-center items-center flex-grow-0 flex-shrink-0 h-9 w-44 relative gap-2.5 p-2.5 rounded-[7px] bg-[#eb1b31]">
                        <p class="flex-grow-0 flex-shrink-0 text-base text-left text-white">Avancer</p>
                      </button></div>
                  </div>
                  <div class="flex flex-col justify-start items-start flex-grow-0 flex-shrink-0 relative gap-2.5">
                    <p class="flex-grow-0 flex-shrink-0 text-base text-left text-white">Auto-lecture</p>
                    <div class="flex justify-start items-start flex-grow-0 flex-shrink-0 gap-2.5"><label
                        class="flex justify-center items-center flex-grow-0 flex-shrink-0 w-44 h-9 relative gap-2.5 p-2.5 rounded-[10px] bg-[#1e222c]"><input
                          type="checkbox" class="w-5 h-5" checked="">
                        <p class="flex-grow-0 flex-shrink-0 text-base text-left text-white">Activer</p>
                      </label></div>
                  </div>
                </div>
                <div
                  class="flex flex-col justify-start items-start relative gap-2 px-[30px] py-[15px] rounded-[7px] bg-[#1e222c]">
                  <div class="flex-grow-0 flex-shrink-0 text-2xl font-bold text-left text-white">Résumé</div>
                  <p class="self-stretch flex-grow-0 flex-shrink-0 text-base text-left text-white">Sauvez le monde avec
                    l'élite des agents (très) spéciaux : la famille Forger ! Une comédie d'espionnage pétillante !
                    Twilight, le plus grand espion du monde, doit pour sa nouvelle mission créer une famille de toutes
                    pièces afin de pouvoir s'introduire dans la plus prestigieuse école de l'aristocratie. Totalement
                    dépourvu d'expérience familiale, il va adopter une petite fille en ignorant qu'elle est télépathe,
                    et s'associer à une jeune femme timide, sans se douter qu'elle est une redoutable tueuse à gages. Ce
                    trio atypique va devoir composer pour passer inaperçu, tout en découvrant les vraies valeurs d'une
                    famille unie et aimante.</p>
                </div>
                <div
                  class="flex flex-col justify-center items-start relative gap-1.5 px-[30px] py-[15px] mt-3 mb-10 rounded-[7px] bg-[#1e222c]">
                  <p class="flex-grow-0 flex-shrink-0 text-base font-bold text-left text-white">Un problème ?</p>
                  <p class="self-stretch flex-grow-0 flex-shrink-0 text-left text-white">Hey, si tu as un quelconque
                    problème ou une suggestion à nous faire remonter nous t'invitons à rejoindre notre serveur <a
                      target="_blank" class="hover:text-blue-200 text-blue-300" rel="noreferrer"
                      href="https://discord.gg/EZG9ANfzjq">Discord</a>. Et si tu souhaites rejoindre l'équipe n'hésite
                    pas à postuler dessus. Merci d'utiliser FRAnime ! Nous te souhaitons une bonne continuation chez
                    nous.</p>
                </div>
                <div id="disqus_thread"></div>
              </div>
            </div>
          </div>
        </div>
        <div class="mt-[100px] flex flex-col justify-center items-start gap-2.5 px-2 py-10 bg-[#1e222c]"
          style="font-family: Poppins;">
          <div
            class="flex flex-wrap justify-center xl:justify-between items-center self-stretch flex-grow-0 flex-shrink-0 container gap-2.5">
            <div class="flex flex-col justify-center items-start max-w-[782px] relative gap-[34px]"><img alt="logo"
                src="https://franime.fr/logo.png" class="flex-grow-0 flex-shrink-0 w-[45px] h-[35px] object-cover">
              <div class="flex flex-col justify-center items-start flex-grow-0 flex-shrink-0 relative gap-2.5">
                <p class="flex-grow-0 flex-shrink-0 text-sm text-left text-white"><span
                    class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">Le site FRAnime.fr n'héberge aucun
                    fichier vidéo, que ce soit pour du streaming ou du téléchargements. Celui-ci consiste en une
                    indexation de liens vidéos sur différents hébergeurs publiques et connus.</span><br></p>
                <p class="flex-grow-0 flex-shrink-0 text-sm text-left text-white">Design / Maquette réalisée par Nenaff
                  (Aucune affilliation directe avec FRAnime.fr)</p>
                <p class="flex-grow-0 flex-shrink-0 text-base text-left text-white"><span
                    class="flex-grow-0 flex-shrink-0 text-base text-left text-white">© 2023 FRAnime - Aucun droits
                    réservés.</span><br><br></p>
              </div>
            </div>
            <div class="flex flex-wrap justify-center mb-4 items-center relative gap-[45px]"><a rel="noreferrer"
                href="https://www.tiktok.com/@franime_fr" target="_blank"
                class="flex-grow-0 flex-shrink-0 w-12 h-12 relative"><svg width="49" height="48" viewBox="0 0 49 48"
                  fill="none" xmlns="http://www.w3.org/2000/svg" class="flex-grow-0 flex-shrink-0 w-12 h-12 relative"
                  preserveAspectRatio="xMidYMid meet">
                  <path
                    d="M35.5666 10.1446C35.2937 10.0036 35.0282 9.84905 34.7708 9.68149C34.0224 9.18674 33.3363 8.60377 32.7271 7.94515C31.203 6.20124 30.6338 4.43206 30.4241 3.19339H30.4325C30.2573 2.16523 30.3298 1.5 30.3407 1.5H23.3987V28.3433C23.3987 28.7037 23.3987 29.0599 23.3836 29.4119C23.3836 29.4557 23.3794 29.4961 23.3769 29.5432C23.3769 29.5626 23.3769 29.5828 23.3726 29.603C23.3726 29.6081 23.3726 29.6131 23.3726 29.6182C23.2995 30.5813 22.9907 31.5117 22.4736 32.3275C21.9564 33.1433 21.2467 33.8195 20.4069 34.2967C19.5316 34.7946 18.5416 35.0558 17.5346 35.0545C14.3003 35.0545 11.6789 32.4172 11.6789 29.1601C11.6789 25.903 14.3003 23.2657 17.5346 23.2657C18.1469 23.2651 18.7553 23.3614 19.3375 23.5511L19.3459 16.4828C17.5787 16.2546 15.7834 16.395 14.0732 16.8953C12.363 17.3956 10.7751 18.2449 9.40955 19.3896C8.21303 20.4292 7.20712 21.6697 6.43707 23.0551C6.14403 23.5604 5.0384 25.5906 4.90451 28.8856C4.8203 30.7558 5.38196 32.6934 5.64974 33.4942V33.511C5.81815 33.9826 6.47075 35.5918 7.53427 36.9483C8.39186 38.0365 9.40507 38.9924 10.5413 39.7852V39.7684L10.5581 39.7852C13.9188 42.0689 17.6449 41.919 17.6449 41.919C18.2899 41.8929 20.4507 41.919 22.9045 40.7561C25.626 39.4669 27.1754 37.5462 27.1754 37.5462C28.1652 36.3985 28.9523 35.0906 29.5029 33.6786C30.131 32.0273 30.3407 30.0468 30.3407 29.2552V15.0143C30.4249 15.0648 31.5465 15.8067 31.5465 15.8067C31.5465 15.8067 33.1625 16.8424 35.6836 17.5169C37.4924 17.9969 39.9293 18.0979 39.9293 18.0979V11.2065C39.0754 11.2991 37.3416 11.0296 35.5666 10.1446Z"
                    fill="white"></path>
                </svg></a><a rel="noreferrer" href="https://twitter.com/FRAnime_FR" target="_blank"
                class="flex-grow-0 flex-shrink-0 w-12 h-12 relative"><svg width="49" height="48" viewBox="0 0 49 48"
                  fill="none" xmlns="http://www.w3.org/2000/svg" class="flex-grow-0 flex-shrink-0 w-12 h-12 relative"
                  preserveAspectRatio="none">
                  <path
                    d="M46.1244 12.7837C44.6646 13.4303 43.0944 13.8618 41.4381 14.0659C43.1219 13.0662 44.4174 11.4717 45.0254 9.58814C43.4497 10.5117 41.704 11.1903 39.8469 11.5479C38.3639 9.97545 36.2486 9 33.9048 9C29.4028 9 25.7537 12.6171 25.7537 17.0772C25.7537 17.7084 25.8276 18.323 25.9666 18.92C19.1937 18.5801 13.1865 15.3603 9.16773 10.4742C8.46152 11.6681 8.06428 13.0662 8.06428 14.5415C8.06428 17.3454 9.49987 19.8138 11.6891 21.2681C10.3528 21.2273 9.0949 20.8554 7.99366 20.2596C7.99366 20.2839 7.99366 20.3203 7.99366 20.3545C7.99366 24.2728 10.8041 27.5357 14.5294 28.2783C13.8486 28.4648 13.1291 28.5686 12.3876 28.5686C11.8612 28.5686 11.3481 28.509 10.8516 28.4196C11.8888 31.6218 14.8979 33.9622 18.4632 34.0317C15.6737 36.1945 12.1603 37.4899 8.34014 37.4899C7.68028 37.4899 7.03477 37.4524 6.39697 37.3752C10.0064 39.6604 14.2921 41 18.8924 41C33.8828 41 42.0836 28.6899 42.0836 18.0108C42.0836 17.661 42.0726 17.3123 42.056 16.968C43.656 15.8381 45.0353 14.4124 46.1244 12.7837Z"
                    fill="white"></path>
                </svg></a><a rel="noreferrer" href="https://discord.gg/EZG9ANfzjq" target="_blank"
                class="flex-grow-0 flex-shrink-0 w-[42.6px] h-12 relative"><svg width="43" height="48"
                  viewBox="0 0 43 48" fill="none" xmlns="http://www.w3.org/2000/svg"
                  class="flex-grow-0 flex-shrink-0 w-[42.6px] h-12 relative" preserveAspectRatio="xMidYMid meet">
                  <g clip-path="url(#clip0_261_438)">
                    <path
                      d="M35.94 8.29972C33.2641 7.07194 30.3947 6.16736 27.3946 5.64927C27.3399 5.63927 27.2853 5.66426 27.2572 5.71423C26.8882 6.37059 26.4794 7.22686 26.1931 7.89988C22.9663 7.41678 19.756 7.41678 16.5953 7.89988C16.309 7.2119 15.8853 6.37059 15.5147 5.71423C15.4865 5.66593 15.4319 5.64094 15.3773 5.64927C12.3788 6.1657 9.50936 7.07028 6.83188 8.29972C6.8087 8.30971 6.78883 8.32639 6.77564 8.34803C1.33295 16.4793 -0.15803 24.4107 0.573396 32.2438C0.576705 32.2821 0.598218 32.3187 0.628004 32.342C4.21894 34.9791 7.69737 36.5801 11.1112 37.6413C11.1658 37.6579 11.2237 37.6379 11.2585 37.593C12.066 36.4902 12.7859 35.3274 13.4031 34.1045C13.4395 34.0329 13.4048 33.948 13.3303 33.9196C12.1885 33.4865 11.1013 32.9584 10.0554 32.3587C9.97271 32.3104 9.96609 32.1921 10.0422 32.1354C10.2623 31.9705 10.4824 31.7989 10.6926 31.6257C10.7306 31.594 10.7836 31.5874 10.8283 31.6074C17.699 34.7443 25.1374 34.7443 31.927 31.6074C31.9717 31.5857 32.0247 31.5924 32.0644 31.624C32.2746 31.7973 32.4947 31.9705 32.7164 32.1354C32.7925 32.1921 32.7875 32.3104 32.7048 32.3587C31.659 32.9701 30.5717 33.4865 29.4283 33.918C29.3538 33.9463 29.3207 34.0329 29.3572 34.1045C29.9876 35.3257 30.7075 36.4885 31.5001 37.5913C31.5332 37.6379 31.5928 37.6579 31.6474 37.6413C35.0778 36.5801 38.5562 34.9791 42.1471 32.342C42.1786 32.3187 42.1985 32.2837 42.2018 32.2454C43.0771 23.1895 40.7356 15.3232 35.9945 8.34969C35.983 8.32639 35.9631 8.30971 35.94 8.29972ZM14.4291 27.4742C12.3606 27.4742 10.6561 25.5752 10.6561 23.2429C10.6561 20.9106 12.3275 19.0115 14.4291 19.0115C16.5472 19.0115 18.2352 20.9273 18.2021 23.2429C18.2021 25.5752 16.5307 27.4742 14.4291 27.4742ZM28.3791 27.4742C26.3106 27.4742 24.6062 25.5752 24.6062 23.2429C24.6062 20.9106 26.2775 19.0115 28.3791 19.0115C30.4973 19.0115 32.1852 20.9273 32.1521 23.2429C32.1521 25.5752 30.4973 27.4742 28.3791 27.4742Z"
                      fill="white"></path>
                  </g>
                  <defs>
                    <clippath id="clip0_261_438">
                      <rect width="42.6" height="48" fill="white" transform="translate(0.399902)"></rect>
                    </clippath>
                  </defs>
                </svg></a><a rel="noreferrer" href="https://www.instagram.com/franime_fr/" target="_blank"
                class="flex-grow-0 flex-shrink-0 w-[42.6px] h-12 relative"><svg width="43" height="47"
                  viewBox="0 0 256 256" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M127.999746,23.06353 C162.177385,23.06353 166.225393,23.1936027 179.722476,23.8094161 C192.20235,24.3789926 198.979853,26.4642218 203.490736,28.2166477 C209.464938,30.5386501 213.729395,33.3128586 218.208268,37.7917319 C222.687141,42.2706052 225.46135,46.5350617 227.782844,52.5092638 C229.535778,57.0201472 231.621007,63.7976504 232.190584,76.277016 C232.806397,89.7746075 232.93647,93.8226147 232.93647,128.000254 C232.93647,162.177893 232.806397,166.225901 232.190584,179.722984 C231.621007,192.202858 229.535778,198.980361 227.782844,203.491244 C225.46135,209.465446 222.687141,213.729903 218.208268,218.208776 C213.729395,222.687649 209.464938,225.461858 203.490736,227.783352 C198.979853,229.536286 192.20235,231.621516 179.722476,232.191092 C166.227425,232.806905 162.179418,232.936978 127.999746,232.936978 C93.8200742,232.936978 89.772067,232.806905 76.277016,232.191092 C63.7971424,231.621516 57.0196391,229.536286 52.5092638,227.783352 C46.5345536,225.461858 42.2700971,222.687649 37.7912238,218.208776 C33.3123505,213.729903 30.538142,209.465446 28.2166477,203.491244 C26.4637138,198.980361 24.3784845,192.202858 23.808908,179.723492 C23.1930946,166.225901 23.0630219,162.177893 23.0630219,128.000254 C23.0630219,93.8226147 23.1930946,89.7746075 23.808908,76.2775241 C24.3784845,63.7976504 26.4637138,57.0201472 28.2166477,52.5092638 C30.538142,46.5350617 33.3123505,42.2706052 37.7912238,37.7917319 C42.2700971,33.3128586 46.5345536,30.5386501 52.5092638,28.2166477 C57.0196391,26.4642218 63.7971424,24.3789926 76.2765079,23.8094161 C89.7740994,23.1936027 93.8221066,23.06353 127.999746,23.06353 M127.999746,0 C93.2367791,0 88.8783247,0.147348072 75.2257637,0.770274749 C61.601148,1.39218523 52.2968794,3.55566141 44.1546281,6.72008828 C35.7374966,9.99121548 28.5992446,14.3679613 21.4833489,21.483857 C14.3674532,28.5997527 9.99070739,35.7380046 6.71958019,44.1551362 C3.55515331,52.2973875 1.39167714,61.6016561 0.769766653,75.2262718 C0.146839975,88.8783247 0,93.2372872 0,128.000254 C0,162.763221 0.146839975,167.122183 0.769766653,180.774236 C1.39167714,194.398852 3.55515331,203.703121 6.71958019,211.845372 C9.99070739,220.261995 14.3674532,227.400755 21.4833489,234.516651 C28.5992446,241.632547 35.7374966,246.009293 44.1546281,249.28042 C52.2968794,252.444847 61.601148,254.608323 75.2257637,255.230233 C88.8783247,255.85316 93.2367791,256 127.999746,256 C162.762713,256 167.121675,255.85316 180.773728,255.230233 C194.398344,254.608323 203.702613,252.444847 211.844864,249.28042 C220.261995,246.009293 227.400247,241.632547 234.516143,234.516651 C241.632039,227.400755 246.008785,220.262503 249.279912,211.845372 C252.444339,203.703121 254.607815,194.398852 255.229725,180.774236 C255.852652,167.122183 256,162.763221 256,128.000254 C256,93.2372872 255.852652,88.8783247 255.229725,75.2262718 C254.607815,61.6016561 252.444339,52.2973875 249.279912,44.1551362 C246.008785,35.7380046 241.632039,28.5997527 234.516143,21.483857 C227.400247,14.3679613 220.261995,9.99121548 211.844864,6.72008828 C203.702613,3.55566141 194.398344,1.39218523 180.773728,0.770274749 C167.121675,0.147348072 162.762713,0 127.999746,0 Z M127.999746,62.2703115 C91.698262,62.2703115 62.2698034,91.69877 62.2698034,128.000254 C62.2698034,164.301738 91.698262,193.730197 127.999746,193.730197 C164.30123,193.730197 193.729689,164.301738 193.729689,128.000254 C193.729689,91.69877 164.30123,62.2703115 127.999746,62.2703115 Z M127.999746,170.667175 C104.435741,170.667175 85.3328252,151.564259 85.3328252,128.000254 C85.3328252,104.436249 104.435741,85.3333333 127.999746,85.3333333 C151.563751,85.3333333 170.666667,104.436249 170.666667,128.000254 C170.666667,151.564259 151.563751,170.667175 127.999746,170.667175 Z M211.686338,59.6734287 C211.686338,68.1566129 204.809755,75.0337031 196.326571,75.0337031 C187.843387,75.0337031 180.966297,68.1566129 180.966297,59.6734287 C180.966297,51.1902445 187.843387,44.3136624 196.326571,44.3136624 C204.809755,44.3136624 211.686338,51.1902445 211.686338,59.6734287 Z"
                    fill="white"></path>
                </svg></a><a rel="noreferrer"
                href="https://cdn.discordapp.com/attachments/744565410657075260/1063795283407945758/FRAnimeV-2.apk"
                target="_blank"
                class="flex-grow-0 gap-4 items-center flex-col flex flex-shrink-0 w-[38px] h-[38px] relative"><svg
                  width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg"
                  class="flex-grow-0 flex-shrink-0 w-[38px] h-[38px] relative" preserveAspectRatio="xMidYMid meet">
                  <g clip-path="url(#clip0_261_440)">
                    <path
                      d="M9.50008 28.5C9.50008 29.3708 10.2126 30.0833 11.0834 30.0833H12.6667V35.625C12.6667 36.9392 13.7276 38 15.0417 38C16.3559 38 17.4167 36.9392 17.4167 35.625V30.0833H20.5834V35.625C20.5834 36.9392 21.6442 38 22.9584 38C24.2726 38 25.3334 36.9392 25.3334 35.625V30.0833H26.9167C27.7876 30.0833 28.5001 29.3708 28.5001 28.5V12.6667H9.50008V28.5ZM5.54175 12.6667C4.22758 12.6667 3.16675 13.7275 3.16675 15.0417V26.125C3.16675 27.4392 4.22758 28.5 5.54175 28.5C6.85591 28.5 7.91675 27.4392 7.91675 26.125V15.0417C7.91675 13.7275 6.85591 12.6667 5.54175 12.6667ZM32.4584 12.6667C31.1442 12.6667 30.0834 13.7275 30.0834 15.0417V26.125C30.0834 27.4392 31.1442 28.5 32.4584 28.5C33.7726 28.5 34.8334 27.4392 34.8334 26.125V15.0417C34.8334 13.7275 33.7726 12.6667 32.4584 12.6667ZM24.5892 3.42L26.6476 1.36167C26.9642 1.045 26.9642 0.554167 26.6476 0.2375C26.3309 -0.0791667 25.8401 -0.0791667 25.5234 0.2375L23.1801 2.58083C21.9292 1.9475 20.5042 1.58333 19.0001 1.58333C17.4801 1.58333 16.0551 1.9475 14.7884 2.58083L12.4292 0.2375C12.1126 -0.0791667 11.6217 -0.0791667 11.3051 0.2375C10.9884 0.554167 10.9884 1.045 11.3051 1.36167L13.3792 3.43583C11.0359 5.16167 9.50008 7.9325 9.50008 11.0833H28.5001C28.5001 7.9325 26.9642 5.14583 24.5892 3.42V3.42ZM15.8334 7.91667H14.2501V6.33333H15.8334V7.91667ZM23.7501 7.91667H22.1667V6.33333H23.7501V7.91667Z"
                      fill="white"></path>
                  </g>
                  <defs>
                    <clippath id="clip0_261_440">
                      <rect width="38" height="38" fill="white"></rect>
                    </clippath>
                  </defs>
                </svg>
                <div class="px-2 bg-red-500 select-none rounded-md">Nouveau</div>
              </a><a rel="noreferrer" href="https://twitter.com/FRAnime_FR/status/1614961895483604993" target="_blank"
                class="flex-grow-0 ml-2 gap-4 items-center flex-col flex flex-shrink-0 w-[38px] h-[38px] relative"><svg
                  fill="#ffffff" width="38" height="38" class="flex-grow-0 flex-shrink-0 w-[38px] h-[38px] relative"
                  viewBox="2 2 20.00 20.00" xmlns="http://www.w3.org/2000/svg" stroke="#ffffff" stroke-width="0.168">
                  <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                  <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                  <g id="SVGRepo_iconCarrier">
                    <path
                      d="M5.5,3 L18.5,3 C19.8807119,3 21,4.11928813 21,5.5 L21,18.5 C21,19.8807119 19.8807119,21 18.5,21 L5.5,21 C4.11928813,21 3,19.8807119 3,18.5 L3,5.5 C3,4.11928813 4.11928813,3 5.5,3 Z M5.5,4 C4.67157288,4 4,4.67157288 4,5.5 L4,18.5 C4,19.3284271 4.67157288,20 5.5,20 L18.5,20 C19.3284271,20 20,19.3284271 20,18.5 L20,5.5 C20,4.67157288 19.3284271,4 18.5,4 L5.5,4 Z M8,14.5 C8,14.7761424 7.77614237,15 7.5,15 C7.22385763,15 7,14.7761424 7,14.5 L7,11.5 C7,11.2238576 7.22385763,11 7.5,11 C7.77614237,11 8,11.2238576 8,11.5 L8,14.5 Z M7,9 L8,9 L8,10 L7,10 L7,9 Z M9,13.5 L9,10.5 C9,9.67157288 9.67157288,9 10.5,9 L11.5,9 C12.3284271,9 13,9.67157288 13,10.5 L13,13.5 C13,14.3284271 12.3284271,15 11.5,15 L10.5,15 C9.67157288,15 9,14.3284271 9,13.5 Z M10,13.5 C10,13.7761424 10.2238576,14 10.5,14 L11.5,14 C11.7761424,14 12,13.7761424 12,13.5 L12,10.5 C12,10.2238576 11.7761424,10 11.5,10 L10.5,10 C10.2238576,10 10,10.2238576 10,10.5 L10,13.5 Z M18,10.5 C18,10.7761424 17.7761424,11 17.5,11 C17.2238576,11 17,10.7761424 17,10.5 C17,10.2238576 16.7761424,10 16.5,10 L15.5,10 C15.2238576,10 15,10.2238576 15,10.5 L15,10.7792408 C15,10.994456 15.137715,11.1855254 15.3418861,11.2535824 L16.9743416,11.7977343 C17.5868549,12.0019053 18,12.5751136 18,13.2207592 L18,13.5 C18,14.3284271 17.3284271,15 16.5,15 L15.5,15 C14.6715729,15 14,14.3284271 14,13.5 C14,13.2238576 14.2238576,13 14.5,13 C14.7761424,13 15,13.2238576 15,13.5 C15,13.7761424 15.2238576,14 15.5,14 L16.5,14 C16.7761424,14 17,13.7761424 17,13.5 L17,13.2207592 C17,13.005544 16.862285,12.8144746 16.6581139,12.7464176 L15.0256584,12.2022657 C14.4131451,11.9980947 14,11.4248864 14,10.7792408 L14,10.5 C14,9.67157288 14.6715729,9 15.5,9 L16.5,9 C17.3284271,9 18,9.67157288 18,10.5 Z">
                    </path>
                  </g>
                </svg>
                <div class="px-2 bg-red-500 select-none rounded-md">Nouveau</div>
              </a></div>
          </div>
        </div>
        <div class="fixed cursor-pointer bottom-10 right-10"><svg stroke="currentColor" fill="currentColor"
            stroke-width="0" viewBox="0 0 512 512" class="h-10 w-10" height="1em" width="1em"
            xmlns="http://www.w3.org/2000/svg" style="display: none;">
            <path
              d="M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm143.6 28.9l72.4-75.5V392c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24V209.4l72.4 75.5c9.3 9.7 24.8 9.9 34.3.4l10.9-11c9.4-9.4 9.4-24.6 0-33.9L273 107.7c-9.4-9.4-24.6-9.4-33.9 0L106.3 240.4c-9.4 9.4-9.4 24.6 0 33.9l10.9 11c9.6 9.5 25.1 9.3 34.4-.4z">
            </path>
          </svg></div>
      </div>
    </div>
  </div>
  <div style="height:20px; overflow: hidden; margin-top:30px; background-color: #1e222c;">
    <div id="bg_696417739" style="color:#9fa3ab">Publicité: cliquer est le meilleur moyen de nous soutenir</div>
  </div>
  <div id="ads" style="height:90px;background-color:#1e222c"><iframe data-aa="2066531"
      src="//ad.a-ads.com/2066531?size=728x90" style="height:90px;background-color:#1e222c"
      class="w-full bg-transparent" b4vr7vufo=""></iframe>
  </div>

  <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-G7N52TZE9M"></script>
  <script async="" src="https://.disqus.com/embed.js" id="dsq-embed-scr"></script>
</body>

</html>