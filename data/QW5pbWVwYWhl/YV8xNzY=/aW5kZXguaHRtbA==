<html lang="en">

<head>
  <link rel="profile" href="https://gmpg.org/xfn/11">
  <link rel="alternate" href="https://animepahe.ru" hreflang="en-us">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="theme-color" content="#373a3c">
  <meta name="msapplication-navbutton-color" content="#373a3c">
  <meta name="apple-mobile-web-app-status-bar-style" content="#373a3c">
  <meta http-equiv="x-dns-prefetch-control" content="on">
  <link rel="preconnect" href="//i.animepahe.ru">
  <link rel="preload" href="/app/fonts/QldONTRRphEb_-V7LB6xTA.woff2" as="font" type="font/woff2" crossorigin="">
  <link rel="preload" href="/app/css/bootstrap.min.css" as="style">
  <link rel="preload" href="/app/css/fork-awesome.min.css" as="style">
  <link rel="preload" href="/app/css/style.css" as="style">
  <link rel="preload" href="/app/js/vendor/bootstrap.bundle.min.js" as="script">
  <link rel="preload" href="/app/js/core.js" as="script">
  <meta name="msapplication-TileImage" content="https://animepahe.ru/animepahe-270x270.png">
  <title>No Game No Life Ep. 1-12 [Completed] :: animepahe</title>
  <meta name="description"
    content="Sixteen sentient races inhabit Disboard, a world overseen by Tet, the One True God.">
  <meta name="keywords" content="Anime,Pahe,Mini,720p,HD,mp4,English,Subtitle,Hardsub">
  <meta name="robots" content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1">
  <meta property="og:site_name" content="animepahe">
  <meta property="og:locale" content="en_US">
  <meta property="og:image"
    content="https://i.animepahe.com/posters/f79fae9cd5116341039ea478bfe8b0fd22941cb37dac2bd662a60551353d588d.jpg">
  <meta property="og:url" content="https://animepahe.com/anime/c41840d1-7921-ec75-e5d1-925a6217664d">
  <meta property="og:type" content="video.tv_show">
  <meta property="og:title" content="No Game No Life Ep. 1-12 [Completed]">
  <meta property="og:description"
    content="Sixteen sentient races inhabit Disboard, a world overseen by Tet, the One True God.">
  <meta name="author" content="animepahe">
  <link href="/apple-touch-icon.png" rel="apple-touch-icon-precomposed" type="image/png">
  <link href="/apple-touch-icon.png" rel="shortcut icon">
  <link href="/pikacon-32x32.png" rel="shortcut icon" type="image/png">
  <link href="/pikacon.ico" rel="shortcut icon" type="image/x-icon">
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="https://animepahe.com/feed">
  <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Sansita:400">
  <link rel="stylesheet" href="/app/css/bootstrap.min.css">
  <link rel="stylesheet" href="/app/css/fork-awesome.min.css">
  <link rel="stylesheet" href="/app/css/style.css">
  <link rel="preload" as="image" href="//i.animepahe.ru/covers/cover_default4.jpg">
  <link rel="preload" as="image"
    href="https://i.animepahe.ru/posters/f79fae9cd5116341039ea478bfe8b0fd22941cb37dac2bd662a60551353d588d.jpg">
  <meta name="id" content="176">
  <meta name="anidb" content="9998">
  <meta name="anilist" content="19815">
  <meta name="ann" content="15784">
  <meta name="kitsu" content="7880">
  <meta name="myanimelist" content="19815">
  <script>
    let id = "c41840d1-7921-ec75-e5d1-925a6217664d";
    let preview = "https://www.youtube.com/watch?v=fV7nGIUuyzA?vq=hd720&autoplay=1";
    let sort = "episode_asc";
  </script>
  <style>
    h1 .fa {
      font-size: 1.25rem;
      margin-left: .5rem;
      cursor: pointer;
      opacity: .5;
    }

    h1 .fa:hover {
      opacity: 1;
    }
  </style>
</head>

<body>
  <header class="main-header">
    <nav class="navbar navbar-expand-lg">
      <a href="/" class="navbar-brand" title="animepahe"><img
          src="/app/images/apdoesnthavelogotheysaidapistooplaintheysaid.svg"
          onerror="this.src='/app/images/apdoesnthavelogotheysaidapistooplaintheysaid.png'" loading="lazy"
          alt="AnimePahe"></a>
      <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse"
        data-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false"
        aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNavDropdown">
        <ul class="navbar-nav mr-auto main-nav">
          <li class="nav-item">
            <a class="nav-link" href="/" title="home">home</a>
          </li>

          <li class="nav-item">
            <a class="nav-link" href="/anime" title="anime">anime</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/queue" title="queue">queue</a>
          </li>
        </ul>
        <form class="form-inline nav-search" onkeypress="return event.keyCode != 13;">
          <input name="q" class="input-search" type="text" placeholder="Search" autocomplete="off" required="">
          <div class="search-results-wrap"></div>
        </form>
      </div>
    </nav>
  </header>
  <div class="alert alert-top alert-dismissible fade show ann-fakesite" style="padding-right:1.25rem;z-index:2"
    role="alert">
    <div class="wrapper" style="position:relative">
      <button type="button" class="close close-ann-fakesite" style="padding:0" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">×</span>
      </button>
      <small>Beware of fake websites, our only domains are <a href="//animepahe.com"
          style="color:#fff;font-weight:bold;text-decoration:underline">animepahe.com</a>, <a href="//animepahe.org"
          style="color:#fff;font-weight:bold;text-decoration:underline">animepahe.org</a> and <a href="//animepahe.ru"
          style="color:#fff;font-weight:bold;text-decoration:underline">animepahe.ru</a>.</small>
    </div>
  </div>
  <section class="main">
    <article class="page-detail">
      <div class="header-wrapper">
        <div class="anime-cover" data-src="//i.animepahe.ru/covers/cover_default4.jpg"
          style="opacity: 1; background-image: url(&quot;//i.animepahe.ru/covers/cover_default4.jpg&quot;);"
          tabindex="99">
        </div>
        <header class="anime-header">
          <div class="title-wrapper">
            <div class="poster-wrapper">
              <div class="anime-poster">
                <a href="https://i.animepahe.ru/posters/f79fae9cd5116341039ea478bfe8b0fd22941cb37dac2bd662a60551353d588d.jpg"
                  class="youtube-preview"><img
                    data-src="https://i.animepahe.ru/posters/f79fae9cd5116341039ea478bfe8b0fd22941cb37dac2bd662a60551353d588d.jpg"
                    class=" lazyloaded" alt="Poster of No Game No Life"
                    src="https://i.animepahe.ru/posters/f79fae9cd5116341039ea478bfe8b0fd22941cb37dac2bd662a60551353d588d.jpg"></a>
              </div>
            </div>
            <h1><span>No Game No Life</span><a href="/a/176" class="fa fa-link text-white" aria-hidden="true"
                data-toggle="modal" data-target="#modalBookmark" title="Bookmark No Game No Life"><span
                  class="sr-only unselectable">No Game No Life</span></a></h1>
            <h2 class="japanese" style="font-weight:600">No Game, No Life</h2>
          </div>
        </header>
      </div>
      <div class="content-wrapper">
        <div class="nav-wrapper">
          <nav class="anime-nav">
            <ul class="row">
              <li class="col active">
                <a data-tab="anime-detail" title="Summary">Summary</a>
              </li>
              <li class="col">
                <a data-tab="anime-relation" title="Relations">Relations</a>
              </li>
              <li class="col">
                <a data-tab="anime-recommendation" title="Recommendations">Recommendations</a>
              </li>
            </ul>
          </nav>
        </div>
        <div class="anime-content">
          <div class="tab-content anime-detail anime-176 row active">
            <div class="col-sm-8 anime-summary">
              <div class="anime-synopsis">Sixteen sentient races inhabit Disboard, a world overseen by Tet, the One True
                God. The lowest of the sixteen—Imanity—consists of humans, a race with no affinity for magic. In a place
                where everything is decided through simple games, humankind seems to have no way out of their
                predicament—but the arrival of two outsiders poses a change.<br><br>On Earth, stepsiblings Sora and
                Shiro are two inseparable shut-ins who dominate various online games under the username "Blank." While
                notorious on the internet, the pair believe that life is merely another dull game. However, after
                responding to a message from an unknown user, they are suddenly transported to Disboard. The mysterious
                sender turns out to be Tet, who informs them about the world's absolute rules. After Tet leaves, Sora
                and Shiro begin their search for more information and a place to stay, taking them to Elkia—Imanity's
                only remaining kingdom.<br><br>There, the duo encounters Stephanie Dola, an emotional girl vying for the
                kingdom's sovereignty. In desperation, she attempts to regain her father's throne, but her foolhardiness
                makes her goal unachievable. Inspired by the girl's motivation and passion, Sora and Shiro decide to aid
                Stephanie in getting Elkia back on its feet, ultimately aiming to become the new rulers of the enigmatic
                realm.</div>
            </div>
            <div class="col-sm-4 anime-info">
              <p><strong>Synonyms: </strong>NGNL</p>
              <p><strong>Japanese: </strong>ノーゲーム・ノーライフ</p>
              <p><strong>Type: <a href="/anime/type/tv" title="TV">TV</a></strong></p>
              <p><strong>Episodes:</strong> 12</p>
              <p>
                <strong>Status:
                  <a href="/anime/completed" title="Finished Airing">Finished Airing</a>
                </strong>
              </p>
              <p><strong>Duration:</strong> 23 minutes</p>
              <p>
                <strong>Aired:</strong>
                Apr 09, 2014
                to Jun 25, 2014
              </p>
              <p><strong>Season: <a href="/anime/season/spring-2014" title="Spring 2014">Spring 2014</a></strong></p>
              <p>
                <strong>Studio:</strong>
                Madhouse
              </p>
              <p>
                <strong>Themes:</strong>
                <a href="/anime/theme/isekai" class="font-weight-bold" title="Isekai">Isekai</a>, <a
                  href="/anime/theme/strategy-game" class="font-weight-bold" title="Strategy Game">Strategy Game</a>
              </p>
              <p class="external-links">
                <strong>External Links:</strong>
                <a href="//anilist.co/anime/19815" class="font-weight-bold" title="No Game No Life on AniList"
                  rel="noreferrer noopener" target="_blank">AniList</a>,
                <a href="//kitsu.io/anime/7880" class="font-weight-bold" title="No Game No Life on Kitsu"
                  rel="noreferrer noopener" target="_blank">Kitsu</a>,
                <a href="//anidb.net/anime/9998" class="font-weight-bold" title="No Game No Life on AniDB"
                  rel="noreferrer noopener" target="_blank">AniDB</a>,
                <a href="//www.animenewsnetwork.com/encyclopedia/anime.php?id=15784" class="font-weight-bold"
                  title="No Game No Life on AnimeNewsNetwork" rel="noreferrer noopener"
                  target="_blank">AnimeNewsNetwork</a>,
                <a href="//myanimelist.net/anime/19815" class="font-weight-bold" title="No Game No Life on MyAnimeList"
                  rel="noreferrer noopener" target="_blank">MyAnimeList</a>
              </p>
              <div class="anime-genre font-weight-bold">
                <ul>
                  <li>
                    <a href="/anime/genre/comedy" title="Comedy">Comedy</a>
                  </li>
                  <li>
                    <a href="/anime/genre/fantasy" title="Fantasy">Fantasy</a>
                  </li>
                  <li>
                    <a href="/anime/genre/ecchi" title="Ecchi">Ecchi</a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
          <div class="tab-content anime-relation row">
            <div class="col-12 col-sm-6">
              <h4><span>Prequel</span></h4>
              <div class="row">
                <div class="col-12 col-sm-12 mb-3">
                  <div class="row mx-n1">
                    <div class="col-2 px-1">
                      <a href="/anime/57db4fb3-9712-6bde-dd40-5a9011e4df9c" title="No Game No Life: Zero">
                        <img class="img-fluid rounded lazyload"
                          data-src="https://i.animepahe.ru/posters/0783be24a26df7535f9afff48c65744686387ad077957cd3db8c7f68dedef19c.th.jpg"
                          alt="Poster of No Game No Life: Zero">
                      </a>
                    </div>
                    <div class="col-9 px-1">
                      <h5><a href="/anime/57db4fb3-9712-6bde-dd40-5a9011e4df9c" title="No Game No Life: Zero">No Game No
                          Life: Zero</a></h5>
                      <strong><a href="/anime/type/movie" title="Movie">Movie</a></strong> - 1 Episode (Finished
                      Airing)<br>
                      <a href="/anime/season/summer-2017" title="Summer 2017">Summer 2017</a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6">
              <h4><span>Side Story</span></h4>
              <div class="row">
                <div class="col-12 col-sm-12 mb-3">
                  <div class="row mx-n1">
                    <div class="col-2 px-1">
                      <a href="/anime/cd4c4aa8-400e-2a6c-84ed-8a7c1a9b8f3f" title="No Game No Life Specials">
                        <img class="img-fluid rounded lazyload"
                          data-src="https://i.animepahe.ru/posters/c13f33878a2379ee524cdc7eafde2494f5afedfb01ede2bc6411950e42150ebb.th.jpg"
                          alt="Poster of No Game No Life Specials">
                      </a>
                    </div>
                    <div class="col-9 px-1">
                      <h5><a href="/anime/cd4c4aa8-400e-2a6c-84ed-8a7c1a9b8f3f" title="No Game No Life Specials">No Game
                          No Life Specials</a></h5>
                      <strong><a href="/anime/type/special" title="Special">Special</a></strong> - 6 Episodes (Finished
                      Airing)<br>
                      <a href="/anime/season/summer-2014" title="Summer 2014">Summer 2014</a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="tab-content anime-recommendation row">
            <div class="col-12" style="margin:0">
              <h4><span>anime you might like</span></h4>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/31803f6e-c534-add4-2bc5-3571cb863cb0"
                    title="Mondaiji-tachi ga Isekai kara Kuru Sou desu yo?">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/a265290668c9fed9f3dc61522e9f5f60ffd4e8b5eed584f81517c6d7e902b75c.th.jpg"
                      alt="Poster of Mondaiji-tachi ga Isekai kara Kuru Sou desu yo?">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/31803f6e-c534-add4-2bc5-3571cb863cb0"
                      title="Mondaiji-tachi ga Isekai kara Kuru Sou desu yo?">Mondaiji-tachi ga Isekai kara Kuru Sou
                      desu yo?</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 10 Episodes (Finished Airing)<br>
                  <a href="/anime/season/winter-2013" title="Winter 2013">Winter 2013</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/7e9d0d55-d378-f8b7-a2f9-a391be112755" title="Sword Art Online">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/7f82faa94d96c87ccfc9ca73c9a816f6f89ae29478eaae6fa2c436d72677409b.th.jpg"
                      alt="Poster of Sword Art Online">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/7e9d0d55-d378-f8b7-a2f9-a391be112755" title="Sword Art Online">Sword Art
                      Online</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 25 Episodes (Finished Airing)<br>
                  <a href="/anime/season/summer-2012" title="Summer 2012">Summer 2012</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/604a092f-5e96-0af9-bd39-d14c8ff46c8f" title="Kakegurui">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/19c8fcbc286728429b242f76aa993042727bd823d3725d80283549386ce0cf98.th.jpg"
                      alt="Poster of Kakegurui">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/604a092f-5e96-0af9-bd39-d14c8ff46c8f" title="Kakegurui">Kakegurui</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 12 Episodes (Finished Airing)<br>
                  <a href="/anime/season/summer-2017" title="Summer 2017">Summer 2017</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/315a666a-a775-6eb2-a527-82dc63c5ef32" title="Log Horizon">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/f8d013569cb80c93e660efd401da2d3ac9bdcfddb065b61c29da3fbb2d73ce71.th.jpg"
                      alt="Poster of Log Horizon">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/315a666a-a775-6eb2-a527-82dc63c5ef32" title="Log Horizon">Log Horizon</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 25 Episodes (Finished Airing)<br>
                  <a href="/anime/season/fall-2013" title="Fall 2013">Fall 2013</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/46f7ad8e-648f-ec03-ddff-55dbd5af0df1" title="Code Geass: Hangyaku no Lelouch">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/8f8b5801f7aa8249a6fca4664ba681ebcedf7f1cc2f0665310e240c4f4522530.th.jpg"
                      alt="Poster of Code Geass: Hangyaku no Lelouch">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/46f7ad8e-648f-ec03-ddff-55dbd5af0df1" title="Code Geass: Hangyaku no Lelouch">Code
                      Geass: Hangyaku no Lelouch</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 25 Episodes (Finished Airing)<br>
                  <a href="/anime/season/fall-2006" title="Fall 2006">Fall 2006</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/82129e76-2e3d-074d-070b-ac1104657dab" title="Death Note">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/0dd64eacaaa5f02e5fbd685a96f49e7af3cb4c88b21fe252a87552c24c09c163.th.jpg"
                      alt="Poster of Death Note">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/82129e76-2e3d-074d-070b-ac1104657dab" title="Death Note">Death Note</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 37 Episodes (Finished Airing)<br>
                  <a href="/anime/season/fall-2006" title="Fall 2006">Fall 2006</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/03cfd15c-4d57-a9c9-672a-7f8ac1a71ff3" title="Kono Subarashii Sekai ni Shukufuku wo!">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/ca68e3444ed002822e4c13dbc7d8fdc446cfc18a6a1c497ddb300f710ecefa42.th.jpg"
                      alt="Poster of Kono Subarashii Sekai ni Shukufuku wo!">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/03cfd15c-4d57-a9c9-672a-7f8ac1a71ff3"
                      title="Kono Subarashii Sekai ni Shukufuku wo!">Kono Subarashii Sekai ni Shukufuku wo!</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 10 Episodes (Finished Airing)<br>
                  <a href="/anime/season/winter-2016" title="Winter 2016">Winter 2016</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/f9982b2d-1c3e-4c12-adab-8efb14dd74fb" title="Overlord">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/e78bf21dfd4e382dbc985501edb0f57bda7d5305b87863fe8991a5e658c9c1a8.th.jpg"
                      alt="Poster of Overlord">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/f9982b2d-1c3e-4c12-adab-8efb14dd74fb" title="Overlord">Overlord</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 13 Episodes (Finished Airing)<br>
                  <a href="/anime/season/summer-2015" title="Summer 2015">Summer 2015</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/33fcad10-b6cc-e68c-6f7a-db4e3f00c185" title="Death Parade">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/75babc00bb92dc96cad3c07e8492db0977c88d9d04486c8489b6ac65b898e715.th.jpg"
                      alt="Poster of Death Parade">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/33fcad10-b6cc-e68c-6f7a-db4e3f00c185" title="Death Parade">Death Parade</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 12 Episodes (Finished Airing)<br>
                  <a href="/anime/season/winter-2015" title="Winter 2015">Winter 2015</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/3f92860e-de34-3ec4-9a21-1e77225bc238" title="One Outs">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/90620fc22663baa10a37ee79931f3f6b0cfbe98a2aaf093fda813723905256fb.th.jpg"
                      alt="Poster of One Outs">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/3f92860e-de34-3ec4-9a21-1e77225bc238" title="One Outs">One Outs</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 25 Episodes (Finished Airing)<br>
                  <a href="/anime/season/fall-2008" title="Fall 2008">Fall 2008</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/386da21b-13ab-d26d-25b6-34e2caf54080" title="Shokugeki no Souma">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/d738b851c97d6e657c1d3f203d4e1e5707de1f32e08070c0510e8327942d5f37.th.jpg"
                      alt="Poster of Shokugeki no Souma">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/386da21b-13ab-d26d-25b6-34e2caf54080" title="Shokugeki no Souma">Shokugeki no
                      Souma</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 24 Episodes (Finished Airing)<br>
                  <a href="/anime/season/spring-2015" title="Spring 2015">Spring 2015</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/60c8d50b-224b-f768-b089-c16e62a34080" title="Gyakkyou Burai Kaiji: Ultimate Survivor">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/f4665625df1ac50ab936134d7066f07ec51b8f763c4215a51f2b67b6684922ef.th.jpg"
                      alt="Poster of Gyakkyou Burai Kaiji: Ultimate Survivor">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/60c8d50b-224b-f768-b089-c16e62a34080"
                      title="Gyakkyou Burai Kaiji: Ultimate Survivor">Gyakkyou Burai Kaiji: Ultimate Survivor</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 26 Episodes (Finished Airing)<br>
                  <a href="/anime/season/fall-2007" title="Fall 2007">Fall 2007</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/5868ea68-70ae-8e84-7b6b-f1d55fe776a8" title="Mahouka Koukou no Rettousei">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/286ea5c5a117a79ce8d52a32d033f5c6ae925bb49b7b56ee6cae2f6514c6403a.th.jpg"
                      alt="Poster of Mahouka Koukou no Rettousei">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/5868ea68-70ae-8e84-7b6b-f1d55fe776a8" title="Mahouka Koukou no Rettousei">Mahouka
                      Koukou no Rettousei</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 26 Episodes (Finished Airing)<br>
                  <a href="/anime/season/spring-2014" title="Spring 2014">Spring 2014</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/2fb543ce-50a2-4b20-b700-7d768f3485f4" title="Btooom!">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/8e7d0057fe5fcd1b3ddb5ed18d195c9cb97d16c79b2db77224599364dc58957f.th.jpg"
                      alt="Poster of Btooom!">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/2fb543ce-50a2-4b20-b700-7d768f3485f4" title="Btooom!">Btooom!</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 12 Episodes (Finished Airing)<br>
                  <a href="/anime/season/fall-2012" title="Fall 2012">Fall 2012</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/0ac1c833-fe17-3d6e-a741-38b0eef73867" title="Accel World">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/c62b6264d89b9432ab7cfc498517de6695f6bb9cee35d112ef9687c8b8c47bde.th.jpg"
                      alt="Poster of Accel World">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/0ac1c833-fe17-3d6e-a741-38b0eef73867" title="Accel World">Accel World</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 24 Episodes (Finished Airing)<br>
                  <a href="/anime/season/spring-2012" title="Spring 2012">Spring 2012</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/5c617cdb-59eb-61ab-cbbf-c0a25c29c614" title="Outbreak Company">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/3fc3bbd9239d117a89f38f80ab4526ebba461ca6e20117003dcbb53afe1c3f24.th.jpg"
                      alt="Poster of Outbreak Company">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/5c617cdb-59eb-61ab-cbbf-c0a25c29c614" title="Outbreak Company">Outbreak
                      Company</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 12 Episodes (Finished Airing)<br>
                  <a href="/anime/season/fall-2013" title="Fall 2013">Fall 2013</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/5d949360-011c-f910-b2da-4fa4f80e3315"
                    title="Dungeon ni Deai wo Motomeru no wa Machigatteiru Darou ka">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/bfaef83b98d6daeb890572144654d6b52e8eb1ba8ba0557f2510fa3da5cc370a.th.jpg"
                      alt="Poster of Dungeon ni Deai wo Motomeru no wa Machigatteiru Darou ka">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/5d949360-011c-f910-b2da-4fa4f80e3315"
                      title="Dungeon ni Deai wo Motomeru no wa Machigatteiru Darou ka">Dungeon ni Deai wo Motomeru no wa
                      Machigatteiru Darou ka</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 13 Episodes (Finished Airing)<br>
                  <a href="/anime/season/spring-2015" title="Spring 2015">Spring 2015</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/04382f39-c202-110a-a24c-e9454e0eac4a" title="Kami nomi zo Shiru Sekai">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/d3738e6a91f6f67ba1cfceee2f29307340f8855f3a01a018b3b2a6ff654d8af3.th.jpg"
                      alt="Poster of Kami nomi zo Shiru Sekai">
                  </a>

  </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/04382f39-c202-110a-a24c-e9454e0eac4a" title="Kami nomi zo Shiru Sekai">Kami nomi
                      zo Shiru Sekai</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 12 Episodes (Finished Airing)<br>
                  <a href="/anime/season/fall-2010" title="Fall 2010">Fall 2010</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/e25239ba-7f08-ed11-d86e-8d1cb53a15cb" title="Re:Zero kara Hajimeru Isekai Seikatsu">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/f9ff218ce2824546173032e4cf045312457276e11b9ad3cc4e43d0348e7a4c8e.th.jpg"
                      alt="Poster of Re:Zero kara Hajimeru Isekai Seikatsu">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/e25239ba-7f08-ed11-d86e-8d1cb53a15cb"
                      title="Re:Zero kara Hajimeru Isekai Seikatsu">Re:Zero kara Hajimeru Isekai Seikatsu</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 25 Episodes (Finished Airing)<br>
                  <a href="/anime/season/spring-2016" title="Spring 2016">Spring 2016</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/6bbf8c75-fa87-1d98-76c5-080f074ef682" title="Amagi Brilliant Park">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/f997b56aab65ddf0490c3dad745ccb7aec7e85b0eeaf3becb66ec65739511dfa.th.jpg"
                      alt="Poster of Amagi Brilliant Park">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/6bbf8c75-fa87-1d98-76c5-080f074ef682" title="Amagi Brilliant Park">Amagi Brilliant
                      Park</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 13 Episodes (Finished Airing)<br>
                  <a href="/anime/season/fall-2014" title="Fall 2014">Fall 2014</a>
                </div>
              </div>
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <div class="row mx-n1">
                <div class="col-2 px-1">
                  <a href="/anime/ec1657ed-4084-b192-2595-149587b390e4"
                    title="Youkoso Jitsuryoku Shijou Shugi no Kyoushitsu e">
                    <img class="img-fluid rounded lazyload"
                      data-src="https://i.animepahe.ru/posters/ec13a6ead81684e5105536f66ac0b205ca840e20e7ed7b17a003b7e58bde6251.th.jpg"
                      alt="Poster of Youkoso Jitsuryoku Shijou Shugi no Kyoushitsu e">
                  </a>
                </div>
                <div class="col-9 px-1">
                  <h5><a href="/anime/ec1657ed-4084-b192-2595-149587b390e4"
                      title="Youkoso Jitsuryoku Shijou Shugi no Kyoushitsu e">Youkoso Jitsuryoku Shijou Shugi no
                      Kyoushitsu e</a></h5>
                  <strong><a href="/anime/type/tv" title="TV">TV</a></strong> - 12 Episodes (Finished Airing)<br>
                  <a href="/anime/season/summer-2017" title="Summer 2017">Summer 2017</a>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="episode-bar form-group row">
          <div class="col-6 col-form-label" style="padding-bottom:.375rem">
            <div class="episode-count">Episodes (12)</div>
          </div>
          <div class="col-6 bar">
            <div class="btn-group btn-group-toggle" data-toggle="buttons">
              <label class="btn btn-dark btn-sm active">
                <input type="radio" name="options" class="options-sort" id="episode_asc" data-sort="episode_asc"
                  checked=""> asc
              </label>
              <label class="btn btn-dark btn-sm">
                <input type="radio" name="options" class="options-sort" id="episode_desc" data-sort="episode_desc"> desc
              </label>
            </div>
          </div>
        </div>
        <div class="episode-list-wrapper">
          <div class="episode-list row">
            <div class="episode-wrap col-12 col-sm-4">
              <div class="episode">
                <div class="episode-snapshot"><img
                    src="https://i.animepahe.ru/snapshots/446d9b619a22432eed0ea4f22edb4c21217406167be267864a23fdfbc723eabb.jpg"
                    data-src="https://i.animepahe.ru/snapshots/446d9b619a22432eed0ea4f22edb4c21217406167be267864a23fdfbc723eabb.jpg"
                    class=" lazyloaded" alt=""><svg class="play-button" viewBox="0 0 150 150" alt="Play Video">
                    <polygon points="20, 20, 20, 140, 120, 80" fill="#fff"></polygon>
                  </svg><span class="episode-disc BD">BD</span><a
                    href="/play/c41840d1-7921-ec75-e5d1-925a6217664d/edbc866f3d95cb6921a27c776036929081acb39a98e481d0902a62e1b8590aa1"
                    class="play">Watch - 1 Online</a></div>
                <div class="episode-label-wrap">
                  <div class="episode-label">
                    <div class="episode-title-wrap"><span class="episode-duration">00:24:02</span></div>
                    <div class="episode-number-wrap">
                      <div class="episode-number"><span class="text-hide"> Episode </span>1 </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="episode-wrap col-12 col-sm-4">
              <div class="episode">
                <div class="episode-snapshot"><img
                    src="https://i.animepahe.ru/snapshots/d5c211ce55cb68635a50701325017778bd56f9b856ebc2884351068237008044.jpg"
                    data-src="https://i.animepahe.ru/snapshots/d5c211ce55cb68635a50701325017778bd56f9b856ebc2884351068237008044.jpg"
                    class=" lazyloaded" alt=""><svg class="play-button" viewBox="0 0 150 150" alt="Play Video">
                    <polygon points="20, 20, 20, 140, 120, 80" fill="#fff"></polygon>
                  </svg><span class="episode-disc BD">BD</span><a
                    href="/play/c41840d1-7921-ec75-e5d1-925a6217664d/6135232391334852e97d79bdc17b629031f40a706ea959731ca9561875288e27"
                    class="play">Watch - 2 Online</a></div>
                <div class="episode-label-wrap">
                  <div class="episode-label">
                    <div class="episode-title-wrap"><span class="episode-duration">00:24:02</span></div>
                    <div class="episode-number-wrap">
                      <div class="episode-number"><span class="text-hide"> Episode </span>2 </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="episode-wrap col-12 col-sm-4">
              <div class="episode">
                <div class="episode-snapshot"><img
                    src="https://i.animepahe.ru/snapshots/c49c1385abe417e5b44831fb5665410f1371e13c8a3129e0363265bbe7d4a4a2.jpg"
                    data-src="https://i.animepahe.ru/snapshots/c49c1385abe417e5b44831fb5665410f1371e13c8a3129e0363265bbe7d4a4a2.jpg"
                    class=" lazyloaded" alt=""><svg class="play-button" viewBox="0 0 150 150" alt="Play Video">
                    <polygon points="20, 20, 20, 140, 120, 80" fill="#fff"></polygon>
                  </svg><span class="episode-disc BD">BD</span><a
                    href="/play/c41840d1-7921-ec75-e5d1-925a6217664d/aacf0891fa2a30ae3407e0cf17deb94009b73ef26b6fa394d1dfacdc1d44644c"
                    class="play">Watch - 3 Online</a></div>
                <div class="episode-label-wrap">
                  <div class="episode-label">
                    <div class="episode-title-wrap"><span class="episode-duration">00:24:02</span></div>
                    <div class="episode-number-wrap">
                      <div class="episode-number"><span class="text-hide"> Episode </span>3 </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="episode-wrap col-12 col-sm-4">
              <div class="episode">
                <div class="episode-snapshot"><img
                    src="https://i.animepahe.ru/snapshots/cc3351cd1479a104c051ffcd5421352b9ce27b96fdb73daf489cd8f814287c22.jpg"
                    data-src="https://i.animepahe.ru/snapshots/cc3351cd1479a104c051ffcd5421352b9ce27b96fdb73daf489cd8f814287c22.jpg"
                    class=" lazyloaded" alt=""><svg class="play-button" viewBox="0 0 150 150" alt="Play Video">
                    <polygon points="20, 20, 20, 140, 120, 80" fill="#fff"></polygon>
                  </svg><span class="episode-disc BD">BD</span><a
                    href="/play/c41840d1-7921-ec75-e5d1-925a6217664d/94286a1cc945442dff04380a4d1d0e18d77e3fcbf16bda1316ba35c5de685652"
                    class="play">Watch - 4 Online</a></div>
                <div class="episode-label-wrap">
                  <div class="episode-label">
                    <div class="episode-title-wrap"><span class="episode-duration">00:24:02</span></div>
                    <div class="episode-number-wrap">
                      <div class="episode-number"><span class="text-hide"> Episode </span>4 </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="episode-wrap col-12 col-sm-4">
              <div class="episode">
                <div class="episode-snapshot"><img
                    src="https://i.animepahe.ru/snapshots/8c50a365e82d9ee3a66a9759926c0d25c33af8c0017903a07cf7e0aa8f20656c.jpg"
                    data-src="https://i.animepahe.ru/snapshots/8c50a365e82d9ee3a66a9759926c0d25c33af8c0017903a07cf7e0aa8f20656c.jpg"
                    class=" lazyloaded" alt=""><svg class="play-button" viewBox="0 0 150 150" alt="Play Video">
                    <polygon points="20, 20, 20, 140, 120, 80" fill="#fff"></polygon>
                  </svg><span class="episode-disc BD">BD</span><a
                    href="/play/c41840d1-7921-ec75-e5d1-925a6217664d/d8487a31215176523299456514834abdc8f2869f43d4c8576a05030adf4481d9"
                    class="play">Watch - 5 Online</a></div>
                <div class="episode-label-wrap">
                  <div class="episode-label">
                    <div class="episode-title-wrap"><span class="episode-duration">00:24:02</span></div>
                    <div class="episode-number-wrap">
                      <div class="episode-number"><span class="text-hide"> Episode </span>5 </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="episode-wrap col-12 col-sm-4">
              <div class="episode">
                <div class="episode-snapshot"><img
                    src="https://i.animepahe.ru/snapshots/fc691d7577f7925b63a90f26feb32bc62125ee29f3964532011d5afdfd5046cf.jpg"
                    data-src="https://i.animepahe.ru/snapshots/fc691d7577f7925b63a90f26feb32bc62125ee29f3964532011d5afdfd5046cf.jpg"
                    class=" lazyloaded" alt=""><svg class="play-button" viewBox="0 0 150 150" alt="Play Video">
                    <polygon points="20, 20, 20, 140, 120, 80" fill="#fff"></polygon>
                  </svg><span class="episode-disc BD">BD</span><a
                    href="/play/c41840d1-7921-ec75-e5d1-925a6217664d/dca667ed8317387d0827fe0e65229321e7f9c45b7da494f15e54894069f1a9cc"
                    class="play">Watch - 6 Online</a></div>
                <div class="episode-label-wrap">
                  <div class="episode-label">
                    <div class="episode-title-wrap"><span class="episode-duration">00:24:02</span></div>
                    <div class="episode-number-wrap">
                      <div class="episode-number"><span class="text-hide"> Episode </span>6 </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="episode-wrap col-12 col-sm-4">
              <div class="episode">
                <div class="episode-snapshot"><img
                    src="https://i.animepahe.ru/snapshots/df3ec9a30cc188d05b2122c9d2308fa70213bd735a7846077a840e6081ed166c.jpg"
                    data-src="https://i.animepahe.ru/snapshots/df3ec9a30cc188d05b2122c9d2308fa70213bd735a7846077a840e6081ed166c.jpg"
                    class=" lazyloaded" alt=""><svg class="play-button" viewBox="0 0 150 150" alt="Play Video">
                    <polygon points="20, 20, 20, 140, 120, 80" fill="#fff"></polygon>
                  </svg><span class="episode-disc BD">BD</span><a
                    href="/play/c41840d1-7921-ec75-e5d1-925a6217664d/47999b46c4da85f4be5d91f48f4f61c0e2c15b30ee2ac05988568ea234e08307"
                    class="play">Watch - 7 Online</a></div>
                <div class="episode-label-wrap">
                  <div class="episode-label">
                    <div class="episode-title-wrap"><span class="episode-duration">00:24:06</span></div>
                    <div class="episode-number-wrap">
                      <div class="episode-number"><span class="text-hide"> Episode </span>7 </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="episode-wrap col-12 col-sm-4">
              <div class="episode">
                <div class="episode-snapshot"><img
                    src="https://i.animepahe.ru/snapshots/08b3a7fc16f5b4f1331b3474ad514b5972adff65d16bc91558efd68464b1ff61.jpg"
                    data-src="https://i.animepahe.ru/snapshots/08b3a7fc16f5b4f1331b3474ad514b5972adff65d16bc91558efd68464b1ff61.jpg"
                    class=" lazyloaded" alt=""><svg class="play-button" viewBox="0 0 150 150" alt="Play Video">
                    <polygon points="20, 20, 20, 140, 120, 80" fill="#fff"></polygon>
                  </svg><span class="episode-disc BD">BD</span><a
                    href="/play/c41840d1-7921-ec75-e5d1-925a6217664d/4ce7cc676f8099d2676c1bad3e6b4e1de9d6326894a16ad3d216a63570556217"
                    class="play">Watch - 8 Online</a></div>
                <div class="episode-label-wrap">
                  <div class="episode-label">
                    <div class="episode-title-wrap"><span class="episode-duration">00:24:02</span></div>
                    <div class="episode-number-wrap">
                      <div class="episode-number"><span class="text-hide"> Episode </span>8 </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="episode-wrap col-12 col-sm-4">
              <div class="episode">
                <div class="episode-snapshot"><img
                    src="https://i.animepahe.ru/snapshots/1a6c5feef466504b47f19f42d55ae5c75369056d2e0be2df22f7fcb90c7cb871.jpg"
                    data-src="https://i.animepahe.ru/snapshots/1a6c5feef466504b47f19f42d55ae5c75369056d2e0be2df22f7fcb90c7cb871.jpg"
                    class=" lazyloaded" alt=""><svg class="play-button" viewBox="0 0 150 150" alt="Play Video">
                    <polygon points="20, 20, 20, 140, 120, 80" fill="#fff"></polygon>
                  </svg><span class="episode-disc BD">BD</span><a
                    href="/play/c41840d1-7921-ec75-e5d1-925a6217664d/ed5c5197e90c1d07b94519a1f9e9db66da9c72a6b493147943c708d2be5d4ca9"
                    class="play">Watch - 9 Online</a></div>
                <div class="episode-label-wrap">
                  <div class="episode-label">
                    <div class="episode-title-wrap"><span class="episode-duration">00:24:02</span></div>
                    <div class="episode-number-wrap">
                      <div class="episode-number"><span class="text-hide"> Episode </span>9 </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="episode-wrap col-12 col-sm-4">
              <div class="episode">
                <div class="episode-snapshot"><img
                    src="https://i.animepahe.ru/snapshots/2c17ed3cca61b68c41aeb9451df14edcd49c9f664af974a0edd210d8ba4cc105.jpg"
                    data-src="https://i.animepahe.ru/snapshots/2c17ed3cca61b68c41aeb9451df14edcd49c9f664af974a0edd210d8ba4cc105.jpg"
                    class=" lazyloaded" alt=""><svg class="play-button" viewBox="0 0 150 150" alt="Play Video">
                    <polygon points="20, 20, 20, 140, 120, 80" fill="#fff"></polygon>
                  </svg><span class="episode-disc BD">BD</span><a
                    href="/play/c41840d1-7921-ec75-e5d1-925a6217664d/872bab48dc7863c4015bb51b91f15d76f30bfbb90b7bcb19c094788c12b053e1"
                    class="play">Watch - 10 Online</a></div>
                <div class="episode-label-wrap">
                  <div class="episode-label">
                    <div class="episode-title-wrap"><span class="episode-duration">00:24:02</span></div>
                    <div class="episode-number-wrap">
                      <div class="episode-number"><span class="text-hide"> Episode </span>10 </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="episode-wrap col-12 col-sm-4">
              <div class="episode">
                <div class="episode-snapshot"><img
                    src="https://i.animepahe.ru/snapshots/2c59c23e912a7ea85b0c81452f19358ab67d1ab1a497cb901985e55343998b2c.jpg"
                    data-src="https://i.animepahe.ru/snapshots/2c59c23e912a7ea85b0c81452f19358ab67d1ab1a497cb901985e55343998b2c.jpg"
                    class=" lazyloaded" alt=""><svg class="play-button" viewBox="0 0 150 150" alt="Play Video">
                    <polygon points="20, 20, 20, 140, 120, 80" fill="#fff"></polygon>
                  </svg><span class="episode-disc BD">BD</span><a
                    href="/play/c41840d1-7921-ec75-e5d1-925a6217664d/4014d02d96c4d7250fc984c6fc95fd9c643ab3fdf86e077e9af791f2c4d04cbb"
                    class="play">Watch - 11 Online</a></div>
                <div class="episode-label-wrap">
                  <div class="episode-label">
                    <div class="episode-title-wrap"><span class="episode-duration">00:24:02</span></div>
                    <div class="episode-number-wrap">
                      <div class="episode-number"><span class="text-hide"> Episode </span>11 </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="episode-wrap col-12 col-sm-4">
              <div class="episode">
                <div class="episode-snapshot"><img
                    src="https://i.animepahe.ru/snapshots/f0aa93fbf98a92a49817bd4997b52797beb3854ec2ee1546a856b595293af425.jpg"
                    data-src="https://i.animepahe.ru/snapshots/f0aa93fbf98a92a49817bd4997b52797beb3854ec2ee1546a856b595293af425.jpg"
                    class=" lazyloaded" alt=""><svg class="play-button" viewBox="0 0 150 150" alt="Play Video">
                    <polygon points="20, 20, 20, 140, 120, 80" fill="#fff"></polygon>
                  </svg><span class="episode-disc BD">BD</span><a
                    href="/play/c41840d1-7921-ec75-e5d1-925a6217664d/183f25486246d68fbd23010c61315b134b66e89752035ff59f65757cf4e6b85b"
                    class="play">Watch - 12 Online</a></div>
                <div class="episode-label-wrap">
                  <div class="episode-label">
                    <div class="episode-title-wrap"><span class="episode-duration">00:24:02</span></div>
                    <div class="episode-number-wrap">
                      <div class="episode-number"><span class="text-hide"> Episode </span>12 </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </article>
  </section>
  <footer class="text-center">
  </footer>
  <script src="/app/js/vendor/bootstrap.bundle.min.js"></script>
  <script src="/app/js/core.js"></script>
  <div class="modal fade" id="modalBookmark" tabindex="-1" role="dialog" aria-labelledby="modalBookmarkTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="modalBookmarkTitle">Add this link to bookmark</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">×</span>
          </button>
        </div>
        <div class="modal-body" style="text-align:center">
          <div class="form-group">
            <input type="text" class="form-control" style="text-align:center" value="https://animepahe.com/a/176"
              onclick="this.setSelectionRange(0, this.value.length)">
          </div>
          <p>- or -</p>
          <div class="form-group">
            <a href="/a/176" style="color:#d5015b" title="No Game No Life">No Game No Life</a>
          </div>
          <p class="mb-0"><small class="text-muted font-italic"><strong>Tip:</strong> You can also bookmark the chain
              icon to save you a click!</small></p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary btn-block" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>
  <script src="/app/js/detail.js"></script>
  <script defer=""
    src="https://static.cloudflareinsights.com/beacon.min.js/v8b253dfea2ab4077af8c6f58422dfbfd1689876627854"
    integrity="sha512-bjgnUKX4azu3dLTVtie9u6TKqgx29RBwfj3QXYt5EKfWM/9hPSAI/4qcV5NACjwAo8UtTeWefx6Zq5PHcMm7Tg=="
    data-cf-beacon="{&quot;rayId&quot;:&quot;810c49c3fd5c888f&quot;,&quot;version&quot;:&quot;2023.8.0&quot;,&quot;r&quot;:1,&quot;token&quot;:&quot;d1ad5cc3135545d2bbf467676530cd94&quot;,&quot;si&quot;:100}"
    crossorigin="anonymous"></script>


</body>

</html>