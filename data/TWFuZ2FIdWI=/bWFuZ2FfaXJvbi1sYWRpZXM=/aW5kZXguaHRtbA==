<html class="no-js" lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <title>Read Iron Ladies Manga Online for Free</title>
  <meta name="description"
    content="Iron Ladies Manga: University graduate Mu Siyun sent his resume to the star fleet on a whim and somehow became the Fleet Admiral! Ths is the story about an admiral with a harem of 3000 female soldiers conquering the universe…">
  <meta name="keywords"
    content="Iron Ladies, Iron Ladies Manga, Iron Ladies Manga Online, Iron Ladies Manga Series, Iron Ladies manga chapters, Read Iron Ladies online, Read Iron Ladies online for free, mangastream, mangahere, kissmanga, mangareader, mangafox, onemanga, mangakakalot, mangafreak, readmanga today, mangatown">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta property="og:type" content="website">
  <meta property="og:title" content="Read Iron Ladies Manga Online for Free">
  <meta property="og:description"
    content="Iron Ladies Manga: University graduate Mu Siyun sent his resume to the star fleet on a whim and somehow became the Fleet Admiral! Ths is the story about an admiral with a harem of 3000 female soldiers conquering the universe…">
  <meta property="og:image" content="https://thumb.mghubcdn.com/mh/iron-ladies.jpg">
  <meta property="og:url" content="https://mangahub.io/manga/iron-ladies">
  <meta property="fb:app_id" content="114098972554909">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:site" content="@MangaHubIO">
  <meta property="twitter:title" content="Read Iron Ladies Manga Online for Free">
  <meta property="twitter:description"
    content="Iron Ladies Manga: University graduate Mu Siyun sent his resume to the star fleet on a whim and somehow became the Fleet Admiral! Ths is the story about an admiral with a harem of 3000 female soldiers conquering the universe…">
  <meta property="twitter:image" content="https://thumb.mghubcdn.com/mh/iron-ladies.jpg">
  <meta property="google-signin-client_id"
    content="1069056542259-3flhsi54cv3h9bc9oca3jde50605vb5n.apps.googleusercontent.com">
  <link rel="search" type="application/opensearchdescription+xml" href="https://mangahub.io/opensearch.xml"
    title="Search Manga">
  <link rel="canonical" href="https://mangahub.io/manga/iron-ladies">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="manifest" href="/manifest.json">
  <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#f05759">
  <meta name="msapplication-TileColor" content="#f05759">
  <meta name="theme-color" content="#ffffff">
  <link href="https://fonts.googleapis.com/css?family=Roboto:400,400i,500,700" rel="stylesheet">
  <link rel="stylesheet" href="/css/bootstrap.css?v=200927">
  <link rel="preload" href="/assets/vendors.28952f5c.chunk.js" as="script">
  <link rel="preload" href="/assets/client.27e42f24.js" as="script">
  <link rel="preload"
    href="/assets/vendors~chapter~contact~directory~home~login~manga~membership~move-to-bmac~not-found~privacy~terms~u~95b0952e.884393af.chunk.js"
    as="script">
  <link rel="preload" href="/assets/vendors~chapter~manga~user.81299c44.chunk.js" as="script">
  <link rel="preload" href="/assets/vendors~chapter~manga.80fee629.chunk.js" as="script">
  <link rel="preload"
    href="/assets/contact~directory~home~login~manga~membership~move-to-bmac~not-found~privacy~terms~user.2033d5b3.chunk.js"
    as="script">
  <link rel="preload" href="/assets/manga.b799cdfc.chunk.js" as="script">
  <script src="https://connect.facebook.net/en_US/sdk.js?hash=31e6ebb09a70c61629b0bd8e622fb163" async=""
    crossorigin="anonymous"></script>
  <script charset="utf-8"
    src="/assets/vendors~chapter~contact~directory~home~login~manga~membership~move-to-bmac~not-found~privacy~terms~u~95b0952e.884393af.chunk.js"></script>
  <script charset="utf-8" src="/assets/vendors~chapter~manga~user.81299c44.chunk.js"></script>
  <script charset="utf-8" src="/assets/vendors~chapter~manga.80fee629.chunk.js"></script>
  <script charset="utf-8"
    src="/assets/contact~directory~home~login~manga~membership~move-to-bmac~not-found~privacy~terms~user.2033d5b3.chunk.js"></script>
  <script charset="utf-8" src="/assets/manga.b799cdfc.chunk.js"></script>
  <style id="googleidentityservice_button_styles">
    .qJTHM {
      -webkit-user-select: none;
      color: #202124;
      direction: ltr;
      -webkit-touch-callout: none;
      font-family: "Roboto-Regular", arial, sans-serif;
      -webkit-font-smoothing: antialiased;
      font-weight: 400;
      margin: 0;
      overflow: hidden;
      -webkit-text-size-adjust: 100%
    }

    .ynRLnc {
      left: -9999px;
      position: absolute;
      top: -9999px
    }

    .L6cTce {
      display: none
    }

    .bltWBb {
      word-break: break-all
    }

    .hSRGPd {
      color: #1a73e8;
      cursor: pointer;
      font-weight: 500;
      text-decoration: none
    }

    .Bz112c-W3lGp {
      height: 16px;
      width: 16px
    }

    .Bz112c-E3DyYd {
      height: 20px;
      width: 20px
    }

    .Bz112c-r9oPif {
      height: 24px;
      width: 24px
    }

    .Bz112c-uaxL4e {
      -webkit-border-radius: 10px;
      border-radius: 10px
    }

    .LgbsSe-Bz112c {
      display: block
    }

    .S9gUrf-YoZ4jf,
    .S9gUrf-YoZ4jf * {
      border: none;
      margin: 0;
      padding: 0
    }

    .fFW7wc-ibnC6b>.aZ2wEe>div {
      border-color: #4285f4
    }

    .P1ekSe-ZMv3u>div:nth-child(1) {
      background-color: #1a73e8 !important
    }

    .P1ekSe-ZMv3u>div:nth-child(2),
    .P1ekSe-ZMv3u>div:nth-child(3) {
      background-image: linear-gradient(to right, rgba(255, 255, 255, .7), rgba(255, 255, 255, .7)), linear-gradient(to right, #1a73e8, #1a73e8) !important
    }

    .haAclf {
      display: inline-block
    }

    .nsm7Bb-HzV7m-LgbsSe {
      -webkit-border-radius: 4px;
      border-radius: 4px;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      -webkit-transition: background-color .218s, border-color .218s;
      transition: background-color .218s, border-color .218s;
      -webkit-user-select: none;
      -webkit-appearance: none;
      background-color: #fff;
      background-image: none;
      border: 1px solid #dadce0;
      color: #3c4043;
      cursor: pointer;
      font-family: "Google Sans", arial, sans-serif;
      font-size: 14px;
      height: 40px;
      letter-spacing: 0.25px;
      outline: none;
      overflow: hidden;
      padding: 0 12px;
      position: relative;
      text-align: center;
      vertical-align: middle;
      white-space: nowrap;
      width: auto
    }

    @media screen and (-ms-high-contrast:active) {
      .nsm7Bb-HzV7m-LgbsSe {
        border: 2px solid windowText;
        color: windowText
      }
    }

    .nsm7Bb-HzV7m-LgbsSe.pSzOP-SxQuSe {
      font-size: 14px;
      height: 32px;
      letter-spacing: 0.25px;
      padding: 0 10px
    }

    .nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe {
      font-size: 11px;
      height: 20px;
      letter-spacing: 0.3px;
      padding: 0 8px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe {
      padding: 0;
      width: 40px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe.pSzOP-SxQuSe {
      width: 32px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe.purZT-SxQuSe {
      width: 20px
    }

    .nsm7Bb-HzV7m-LgbsSe.JGcpL-RbRzK {
      -webkit-border-radius: 20px;
      border-radius: 20px
    }

    .nsm7Bb-HzV7m-LgbsSe.JGcpL-RbRzK.pSzOP-SxQuSe {
      -webkit-border-radius: 16px;
      border-radius: 16px
    }

    .nsm7Bb-HzV7m-LgbsSe.JGcpL-RbRzK.purZT-SxQuSe {
      -webkit-border-radius: 10px;
      border-radius: 10px
    }

    .nsm7Bb-HzV7m-LgbsSe.MFS4be-Ia7Qfc {
      border: none;
      color: #fff
    }

    .nsm7Bb-HzV7m-LgbsSe.MFS4be-v3pZbf-Ia7Qfc {
      background-color: #1a73e8
    }

    .nsm7Bb-HzV7m-LgbsSe.MFS4be-JaPV2b-Ia7Qfc {
      background-color: #202124;
      color: #e8eaed
    }

    .nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      height: 18px;
      margin-right: 8px;
      min-width: 18px;
      width: 18px
    }

    .nsm7Bb-HzV7m-LgbsSe.pSzOP-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      height: 14px;
      min-width: 14px;
      width: 14px
    }

    .nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      height: 10px;
      min-width: 10px;
      width: 10px
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      margin-left: 8px;
      margin-right: -4px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      margin: 0;
      padding: 10px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe.pSzOP-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      padding: 8px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe.purZT-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      padding: 4px
    }

    .nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-top-left-radius: 3px;
      border-top-left-radius: 3px;
      -webkit-border-bottom-left-radius: 3px;
      border-bottom-left-radius: 3px;
      display: -webkit-box;
      display: -webkit-flex;
      display: flex;
      justify-content: center;
      -webkit-align-items: center;
      align-items: center;
      background-color: #fff;
      height: 36px;
      margin-left: -10px;
      margin-right: 12px;
      min-width: 36px;
      width: 36px
    }

    .nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf .nsm7Bb-HzV7m-LgbsSe-Bz112c,
    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      margin: 0;
      padding: 0
    }

    .nsm7Bb-HzV7m-LgbsSe.pSzOP-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      height: 28px;
      margin-left: -8px;
      margin-right: 10px;
      min-width: 28px;
      width: 28px
    }

    .nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      height: 16px;
      margin-left: -6px;
      margin-right: 8px;
      min-width: 16px;
      width: 16px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-radius: 3px;
      border-radius: 3px;
      margin-left: 2px;
      margin-right: 0;
      padding: 0
    }

    .nsm7Bb-HzV7m-LgbsSe.JGcpL-RbRzK .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-radius: 18px;
      border-radius: 18px
    }

    .nsm7Bb-HzV7m-LgbsSe.pSzOP-SxQuSe.JGcpL-RbRzK .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-radius: 14px;
      border-radius: 14px
    }

    .nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe.JGcpL-RbRzK .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-radius: 8px;
      border-radius: 8px
    }

    .nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-bN97Pc-sM5MNb {
      display: -webkit-box;
      display: -webkit-flex;
      display: flex;
      -webkit-align-items: center;
      align-items: center;
      -webkit-flex-direction: row;
      flex-direction: row;
      justify-content: space-between;
      -webkit-flex-wrap: nowrap;
      flex-wrap: nowrap;
      height: 100%;
      position: relative;
      width: 100%
    }

    .nsm7Bb-HzV7m-LgbsSe .oXtfBe-l4eHX {
      justify-content: center
    }

    .nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-BPrWId {
      -webkit-flex-grow: 1;
      flex-grow: 1;
      font-family: "Google Sans", arial, sans-serif;
      font-weight: 500;
      overflow: hidden;
      text-overflow: ellipsis;
      vertical-align: top
    }

    .nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe .nsm7Bb-HzV7m-LgbsSe-BPrWId {
      font-weight: 300
    }

    .nsm7Bb-HzV7m-LgbsSe .oXtfBe-l4eHX .nsm7Bb-HzV7m-LgbsSe-BPrWId {
      -webkit-flex-grow: 0;
      flex-grow: 0
    }

    .nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-MJoBVe {
      -webkit-transition: background-color .218s;
      transition: background-color .218s;
      bottom: 0;
      left: 0;
      position: absolute;
      right: 0;
      top: 0
    }

    .nsm7Bb-HzV7m-LgbsSe:hover,
    .nsm7Bb-HzV7m-LgbsSe:focus {
      -webkit-box-shadow: none;
      box-shadow: none;
      border-color: #d2e3fc;
      outline: none
    }

    .nsm7Bb-HzV7m-LgbsSe:hover .nsm7Bb-HzV7m-LgbsSe-MJoBVe,
    .nsm7Bb-HzV7m-LgbsSe:focus .nsm7Bb-HzV7m-LgbsSe-MJoBVe {
      background: rgba(66, 133, 244, .04)
    }

    .nsm7Bb-HzV7m-LgbsSe:active .nsm7Bb-HzV7m-LgbsSe-MJoBVe {
      background: rgba(66, 133, 244, .1)
    }

    .nsm7Bb-HzV7m-LgbsSe.MFS4be-Ia7Qfc:hover .nsm7Bb-HzV7m-LgbsSe-MJoBVe,
    .nsm7Bb-HzV7m-LgbsSe.MFS4be-Ia7Qfc:focus .nsm7Bb-HzV7m-LgbsSe-MJoBVe {
      background: rgba(255, 255, 255, .24)
    }

    .nsm7Bb-HzV7m-LgbsSe.MFS4be-Ia7Qfc:active .nsm7Bb-HzV7m-LgbsSe-MJoBVe {
      background: rgba(255, 255, 255, .32)
    }

    .nsm7Bb-HzV7m-LgbsSe .n1UuX-DkfjY {
      -webkit-border-radius: 50%;
      border-radius: 50%;
      display: -webkit-box;
      display: -webkit-flex;
      display: flex;
      height: 20px;
      margin-left: -4px;
      margin-right: 8px;
      min-width: 20px;
      width: 20px
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId {
      font-family: "Roboto";
      font-size: 12px;
      text-align: left
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId .ssJRIf,
    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId .K4efff .fmcmS {
      overflow: hidden;
      text-overflow: ellipsis
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId .K4efff {
      display: -webkit-box;
      display: -webkit-flex;
      display: flex;
      -webkit-align-items: center;
      align-items: center;
      color: #5f6368;
      fill: #5f6368;
      font-size: 11px;
      font-weight: 400
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe.MFS4be-Ia7Qfc .nsm7Bb-HzV7m-LgbsSe-BPrWId .K4efff {
      color: #e8eaed;
      fill: #e8eaed
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId .K4efff .Bz112c {
      height: 18px;
      margin: -3px -3px -3px 2px;
      min-width: 18px;
      width: 18px
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-top-left-radius: 0;
      border-top-left-radius: 0;
      -webkit-border-bottom-left-radius: 0;
      border-bottom-left-radius: 0;
      -webkit-border-top-right-radius: 3px;
      border-top-right-radius: 3px;
      -webkit-border-bottom-right-radius: 3px;
      border-bottom-right-radius: 3px;
      margin-left: 12px;
      margin-right: -10px
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe.JGcpL-RbRzK .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-radius: 18px;
      border-radius: 18px
    }

    .L5Fo6c-sM5MNb {
      border: 0;
      display: block;
      left: 0;
      position: relative;
      top: 0
    }

    .L5Fo6c-bF1uUb {
      -webkit-border-radius: 4px;
      border-radius: 4px;
      bottom: 0;
      cursor: pointer;
      left: 0;
      position: absolute;
      right: 0;
      top: 0
    }

    .L5Fo6c-bF1uUb:focus {
      border: none;
      outline: none
    }

    sentinel {}
  </style>
  <meta http-equiv="origin-trial"
    content="A+N5HpM5gDAUeupaWw3J2yuMrpgH0IC7KtFHAqtmHkW8Vr+dPpJWuOpMNIRh3ybxyoIUKlvDQs7+VGPfYdQ/qQUAAABxeyJvcmlnaW4iOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb206NDQzIiwiZmVhdHVyZSI6IkZlZENtQXV0b1JlYXV0aG4iLCJleHBpcnkiOjE2OTE1MzkxOTksImlzVGhpcmRQYXJ0eSI6dHJ1ZX0=">
  <style type="text/css"
    data-fbcssmodules="css:fb.css.base css:fb.css.dialog css:fb.css.iframewidget css:fb.css.customer_chat_plugin_iframe">
    .fb_hidden {
      position: absolute;
      top: -10000px;
      z-index: 10001
    }

    .fb_reposition {
      overflow: hidden;
      position: relative
    }

    .fb_invisible {
      display: none
    }

    .fb_reset {
      background: none;
      border: 0;
      border-spacing: 0;
      color: #000;
      cursor: auto;
      direction: ltr;
      font-family: 'lucida grande', tahoma, verdana, arial, sans-serif;
      font-size: 11px;
      font-style: normal;
      font-variant: normal;
      font-weight: normal;
      letter-spacing: normal;
      line-height: 1;
      margin: 0;
      overflow: visible;
      padding: 0;
      text-align: left;
      text-decoration: none;
      text-indent: 0;
      text-shadow: none;
      text-transform: none;
      visibility: visible;
      white-space: normal;
      word-spacing: normal
    }

    .fb_reset>div {
      overflow: hidden
    }

    @keyframes fb_transform {
      from {
        opacity: 0;
        transform: scale(.95)
      }

      to {
        opacity: 1;
        transform: scale(1)
      }
    }

    .fb_animate {
      animation: fb_transform .3s forwards
    }

    .fb_hidden {
      position: absolute;
      top: -10000px;
      z-index: 10001
    }

    .fb_reposition {
      overflow: hidden;
      position: relative
    }

    .fb_invisible {
      display: none
    }

    .fb_reset {
      background: none;
      border: 0;
      border-spacing: 0;
      color: #000;
      cursor: auto;
      direction: ltr;
      font-family: 'lucida grande', tahoma, verdana, arial, sans-serif;
      font-size: 11px;
      font-style: normal;
      font-variant: normal;
      font-weight: normal;
      letter-spacing: normal;
      line-height: 1;
      margin: 0;
      overflow: visible;
      padding: 0;
      text-align: left;
      text-decoration: none;
      text-indent: 0;
      text-shadow: none;
      text-transform: none;
      visibility: visible;
      white-space: normal;
      word-spacing: normal
    }

    .fb_reset>div {
      overflow: hidden
    }

    @keyframes fb_transform {
      from {
        opacity: 0;
        transform: scale(.95)
      }

      to {
        opacity: 1;
        transform: scale(1)
      }
    }

    .fb_animate {
      animation: fb_transform .3s forwards
    }

    .fb_dialog {
      background: rgba(82, 82, 82, .7);
      position: absolute;
      top: -10000px;
      z-index: 10001
    }

    .fb_dialog_advanced {
      border-radius: 8px;
      padding: 10px
    }

    .fb_dialog_content {
      background: #fff;
      color: #373737
    }

    .fb_dialog_close_icon {
      background: url(https://connect.facebook.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;
      cursor: pointer;
      display: block;
      height: 15px;
      position: absolute;
      right: 18px;
      top: 17px;
      width: 15px
    }

    .fb_dialog_mobile .fb_dialog_close_icon {
      left: 5px;
      right: auto;
      top: 5px
    }

    .fb_dialog_padding {
      background-color: transparent;
      position: absolute;
      width: 1px;
      z-index: -1
    }

    .fb_dialog_close_icon:hover {
      background: url(https://connect.facebook.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent
    }

    .fb_dialog_close_icon:active {
      background: url(https://connect.facebook.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent
    }

    .fb_dialog_iframe {
      line-height: 0
    }

    .fb_dialog_content .dialog_title {
      background: #6d84b4;
      border: 1px solid #365899;
      color: #fff;
      font-size: 14px;
      font-weight: bold;
      margin: 0
    }

    .fb_dialog_content .dialog_title>span {
      background: url(https://connect.facebook.net/rsrc.php/v3/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;
      float: left;
      padding: 5px 0 7px 26px
    }

    body.fb_hidden {
      height: 100%;
      left: 0;
      margin: 0;
      overflow: visible;
      position: absolute;
      top: -10000px;
      transform: none;
      width: 100%
    }

    .fb_dialog.fb_dialog_mobile.loading {
      background: url(https://connect.facebook.net/rsrc.php/v3/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;
      min-height: 100%;
      min-width: 100%;
      overflow: hidden;
      position: absolute;
      top: 0;
      z-index: 10001
    }

    .fb_dialog.fb_dialog_mobile.loading.centered {
      background: none;
      height: auto;
      min-height: initial;
      min-width: initial;
      width: auto
    }

    .fb_dialog.fb_dialog_mobile.loading.centered #fb_dialog_loader_spinner {
      width: 100%
    }

    .fb_dialog.fb_dialog_mobile.loading.centered .fb_dialog_content {
      background: none
    }

    .loading.centered #fb_dialog_loader_close {
      clear: both;
      color: #fff;
      display: block;
      font-size: 18px;
      padding-top: 20px
    }

    #fb-root #fb_dialog_ipad_overlay {
      background: rgba(0, 0, 0, .4);
      bottom: 0;
      left: 0;
      min-height: 100%;
      position: absolute;
      right: 0;
      top: 0;
      width: 100%;
      z-index: 10000
    }

    #fb-root #fb_dialog_ipad_overlay.hidden {
      display: none
    }

    .fb_dialog.fb_dialog_mobile.loading iframe {
      visibility: hidden
    }

    .fb_dialog_mobile .fb_dialog_iframe {
      position: sticky;
      top: 0
    }

    .fb_dialog_content .dialog_header {
      background: linear-gradient(from(#738aba), to(#2c4987));
      border-bottom: 1px solid;
      border-color: #043b87;
      box-shadow: white 0 1px 1px -1px inset;
      color: #fff;
      font: bold 14px Helvetica, sans-serif;
      text-overflow: ellipsis;
      text-shadow: rgba(0, 30, 84, .296875) 0 -1px 0;
      vertical-align: middle;
      white-space: nowrap
    }

    .fb_dialog_content .dialog_header table {
      height: 43px;
      width: 100%
    }

    .fb_dialog_content .dialog_header td.header_left {
      font-size: 12px;
      padding-left: 5px;
      vertical-align: middle;
      width: 60px
    }

    .fb_dialog_content .dialog_header td.header_right {
      font-size: 12px;
      padding-right: 5px;
      vertical-align: middle;
      width: 60px
    }

    .fb_dialog_content .touchable_button {
      background: linear-gradient(from(#4267B2), to(#2a4887));
      background-clip: padding-box;
      border: 1px solid #29487d;
      border-radius: 3px;
      display: inline-block;
      line-height: 18px;
      margin-top: 3px;
      max-width: 85px;
      padding: 4px 12px;
      position: relative
    }

    .fb_dialog_content .dialog_header .touchable_button input {
      background: none;
      border: none;
      color: #fff;
      font: bold 12px Helvetica, sans-serif;
      margin: 2px -12px;
      padding: 2px 6px 3px 6px;
      text-shadow: rgba(0, 30, 84, .296875) 0 -1px 0
    }

    .fb_dialog_content .dialog_header .header_center {
      color: #fff;
      font-size: 16px;
      font-weight: bold;
      line-height: 18px;
      text-align: center;
      vertical-align: middle
    }

    .fb_dialog_content .dialog_content {
      background: url(https://connect.facebook.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;
      border: 1px solid #4a4a4a;
      border-bottom: 0;
      border-top: 0;
      height: 150px
    }

    .fb_dialog_content .dialog_footer {
      background: #f5f6f7;
      border: 1px solid #4a4a4a;
      border-top-color: #ccc;
      height: 40px
    }

    #fb_dialog_loader_close {
      float: left
    }

    .fb_dialog.fb_dialog_mobile .fb_dialog_close_icon {
      visibility: hidden
    }

    #fb_dialog_loader_spinner {
      animation: rotateSpinner 1.2s linear infinite;
      background-color: transparent;
      background-image: url(https://connect.facebook.net/rsrc.php/v3/yD/r/t-wz8gw1xG1.png);
      background-position: 50% 50%;
      background-repeat: no-repeat;
      height: 24px;
      width: 24px
    }

    @keyframes rotateSpinner {
      0% {
        transform: rotate(0deg)
      }

      100% {
        transform: rotate(360deg)
      }
    }

    .fb_iframe_widget {
      display: inline-block;
      position: relative
    }

    .fb_iframe_widget span {
      display: inline-block;
      position: relative;
      text-align: justify
    }

    .fb_iframe_widget iframe {
      position: absolute
    }

    .fb_iframe_widget_fluid_desktop,
    .fb_iframe_widget_fluid_desktop span,
    .fb_iframe_widget_fluid_desktop iframe {
      max-width: 100%
    }

    .fb_iframe_widget_fluid_desktop iframe {
      min-width: 220px;
      position: relative
    }

    .fb_iframe_widget_lift {
      z-index: 1
    }

    .fb_iframe_widget_fluid {
      display: inline
    }

    .fb_iframe_widget_fluid span {
      width: 100%
    }

    .fb_mpn_mobile_landing_page_slide_out {
      animation-duration: 200ms;
      animation-name: fb_mpn_landing_page_slide_out;
      transition-timing-function: ease-in
    }

    .fb_mpn_mobile_landing_page_slide_out_from_left {
      animation-duration: 200ms;
      animation-name: fb_mpn_landing_page_slide_out_from_left;
      transition-timing-function: ease-in
    }

    .fb_mpn_mobile_landing_page_slide_up {
      animation-duration: 500ms;
      animation-name: fb_mpn_landing_page_slide_up;
      transition-timing-function: ease-in
    }

    .fb_mpn_mobile_bounce_in {
      animation-duration: 300ms;
      animation-name: fb_mpn_bounce_in;
      transition-timing-function: ease-in
    }

    .fb_mpn_mobile_bounce_out {
      animation-duration: 300ms;
      animation-name: fb_mpn_bounce_out;
      transition-timing-function: ease-in
    }

    .fb_mpn_mobile_bounce_out_v2 {
      animation-duration: 300ms;
      animation-name: fb_mpn_fade_out;
      transition-timing-function: ease-in
    }

    .fb_customer_chat_bounce_in_v2 {
      animation-duration: 300ms;
      animation-name: fb_bounce_in_v2;
      transition-timing-function: ease-in
    }

    .fb_customer_chat_bounce_in_from_left {
      animation-duration: 300ms;
      animation-name: fb_bounce_in_from_left;
      transition-timing-function: ease-in
    }

    .fb_customer_chat_bounce_out_v2 {
      animation-duration: 300ms;
      animation-name: fb_bounce_out_v2;
      transition-timing-function: ease-in
    }

    .fb_customer_chat_bounce_out_from_left {
      animation-duration: 300ms;
      animation-name: fb_bounce_out_from_left;
      transition-timing-function: ease-in
    }

    .fb_invisible_flow {
      display: inherit;
      height: 0;
      overflow-x: hidden;
      width: 0
    }

    @keyframes fb_mpn_landing_page_slide_out {
      0% {
        margin: 0 12px;
        width: 100% - 24px
      }

      60% {
        border-radius: 18px
      }

      100% {
        border-radius: 50%;
        margin: 0 24px;
        width: 60px
      }
    }

    @keyframes fb_mpn_landing_page_slide_out_from_left {
      0% {
        left: 12px;
        width: 100% - 24px
      }

      60% {
        border-radius: 18px
      }

      100% {
        border-radius: 50%;
        left: 12px;
        width: 60px
      }
    }

    @keyframes fb_mpn_landing_page_slide_up {
      0% {
        bottom: 0;
        opacity: 0
      }

      100% {
        bottom: 24px;
        opacity: 1
      }
    }

    @keyframes fb_mpn_bounce_in {
      0% {
        opacity: .5;
        top: 100%
      }

      100% {
        opacity: 1;
        top: 0
      }
    }

    @keyframes fb_mpn_fade_out {
      0% {
        bottom: 30px;
        opacity: 1
      }

      100% {
        bottom: 0;
        opacity: 0
      }
    }

    @keyframes fb_mpn_bounce_out {
      0% {
        opacity: 1;
        top: 0
      }

      100% {
        opacity: .5;
        top: 100%
      }
    }

    @keyframes fb_bounce_in_v2 {
      0% {
        opacity: 0;
        transform: scale(0, 0);
        transform-origin: bottom right
      }

      50% {
        transform: scale(1.03, 1.03);
        transform-origin: bottom right
      }

      100% {
        opacity: 1;
        transform: scale(1, 1);
        transform-origin: bottom right
      }
    }

    @keyframes fb_bounce_in_from_left {
      0% {
        opacity: 0;
        transform: scale(0, 0);
        transform-origin: bottom left
      }

      50% {
        transform: scale(1.03, 1.03);
        transform-origin: bottom left
      }

      100% {
        opacity: 1;
        transform: scale(1, 1);
        transform-origin: bottom left
      }
    }

    @keyframes fb_bounce_out_v2 {
      0% {
        opacity: 1;
        transform: scale(1, 1);
        transform-origin: bottom right
      }

      100% {
        opacity: 0;
        transform: scale(0, 0);
        transform-origin: bottom right
      }
    }

    @keyframes fb_bounce_out_from_left {
      0% {
        opacity: 1;
        transform: scale(1, 1);
        transform-origin: bottom left
      }

      100% {
        opacity: 0;
        transform: scale(0, 0);
        transform-origin: bottom left
      }
    }

    @keyframes slideInFromBottom {
      0% {
        opacity: .1;
        transform: translateY(100%)
      }

      100% {
        opacity: 1;
        transform: translateY(0)
      }
    }

    @keyframes slideInFromBottomDelay {
      0% {
        opacity: 0;
        transform: translateY(100%)
      }

      97% {
        opacity: 0;
        transform: translateY(100%)
      }

      100% {
        opacity: 1;
        transform: translateY(0)
      }
    }
  </style>
  <style type="text/css" id="s640-0">
    ::-moz-selection {
      background: #b3d4fc;
      text-shadow: none
    }

    ::selection {
      background: #b3d4fc;
      text-shadow: none
    }

    .browserupgrade {
      margin: .2em 0;
      background: #ccc;
      color: #000;
      padding: .2em 0
    }

    ._1xZGk {
      text-align: center
    }

    ._3Ehi9 {
      text-decoration: underline
    }
  </style>
  <style type="text/css" id="s638-0">
    ._15aUW {
      padding-top: 0;
      padding-bottom: 0
    }

    ._3vZVG {
      font-size: 18px
    }

    ._3vZVG a {
      cursor: default
    }

    ._3vZVG span {
      color: hsla(0, 0%, 100%, .3)
    }

    ._3sTDf span {
      display: inline-block;
      margin-left: 10px;
      margin-right: 10px;
      padding-top: 11px !important;
      padding-bottom: 6px !important
    }

    .Rig-A {
      margin-left: 6px;
      font-size: 18px
    }

    @media (max-width:767px) {
      ._3vZVG {
        height: 1px;
        border-top: 1px solid hsla(0, 0%, 100%, .3);
        margin: 10px
      }

      ._3vZVG span {
        display: none
      }
    }
  </style>
  <style type="text/css" id="s636-0">
    :root {
      --text-color: #222;
      --text-inverse-color: #eee;
      --gray-darker: #222;
      --gray-dark: #555;
      --gray: #777;
      --gray-light: #a0a0a0;
      --gray-lighter: #eee;
      --body-bg: #f9f9f9;
      --body-inverse-bg: #2d2d2d;
      --section-inverse-bg: #18191a;
      --border-radius-base: 4px;
      --gutter-width: 30px;
      --gutter-half-width: 15px
    }

    ._2F93d {
      width: 67px
    }
  </style>
  <style type="text/css" id="s648-0">
    .Fr9Ly {
      position: fixed;
      top: 40%;
      left: 50%;
      -webkit-transform: translate(-50%, -40%);
      -ms-transform: translate(-50%, -40%);
      transform: translate(-50%, -40%);
      text-align: center;
      z-index: 9999;
      background: transparent;
      width: 800px;
      height: 600px;
      max-width: 100%;
      max-height: 95%;
      padding: 15px
    }

    .Fr9Ly h1,
    .Fr9Ly h3 {
      color: #fff
    }

    ._3pyz2 {
      position: fixed;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      z-index: 9998;
      background: rgba(0, 0, 0, .9)
    }

    ._25mn2 {
      font-size: 36px;
      position: fixed;
      top: -5px;
      right: 0
    }
  </style>
  <style type="text/css" id="s859-0">
    :root {
      --text-color: #222;
      --text-inverse-color: #eee;
      --gray-darker: #222;
      --gray-dark: #555;
      --gray: #777;
      --gray-light: #a0a0a0;
      --gray-lighter: #eee;
      --body-bg: #f9f9f9;
      --body-inverse-bg: #2d2d2d;
      --section-inverse-bg: #18191a;
      --border-radius-base: 4px;
      --gutter-width: 30px;
      --gutter-half-width: 15px
    }

    ._2fecr {
      position: relative;
      background-size: cover
    }

    ._2jTQ0 {
      display: none;
      width: 100%;
      height: 100%;
      background: transparent
    }

    ._4RcEi img {
      max-height: 350px
    }

    ._3xnDj {
      font-size: 30px;
      margin-top: 0
    }

    ._3SlhO {
      font-weight: 700;
      line-height: 2;
      margin-right: 10px;
      min-width: 55px;
      display: inline-block
    }

    ._3SlhO:after {
      content: ":"
    }

    ._3Czbn {
      margin-top: 5px
    }

    ._3Czbn>a {
      margin: 5px 5px 0 0;
      font-size: 90%
    }

    ._2WWGu {
      margin-top: 20px;
      min-width: 210px
    }

    ._2WWGu>div {
      float: left;
      margin-right: 10px
    }

    ._2WWGu>div:last-child {
      margin-right: 0
    }

    ._2WWGu>div:hover {
      cursor: pointer
    }

    ._1w9AY a {
      margin: 10px 10px 0 0
    }

    @media (max-width:991px) {
      ._1w9AY a {
        padding: 6px 8px
      }
    }

    ._1w9AY a:last-child {
      margin-right: 0
    }

    @media (max-width:767px) {
      ._1w9AY {
        float: left
      }

      ._1w9AY a {
        margin-right: 8px
      }
    }

    ._1P0LI {
      position: absolute;
      bottom: 15px;
      right: 15px
    }

    .ZyMp7 {
      white-space: pre-line;
      margin-top: 15px
    }

    ._287KE {
      width: 25%;
      float: left;
      border-radius: 0 !important;
      border: none;
      border-right: 1px solid #f5f5f5;
      border-bottom: 1px solid #f5f5f5;
      margin: 0;
      padding: 0
    }

    ._287KE:first-child,
    ._287KE:nth-child(2),
    ._287KE:nth-child(3),
    ._287KE:nth-child(4) {
      border-top: 1px solid #f5f5f5
    }

    ._287KE:nth-child(4n+1) {
      border-left: 1px solid #f5f5f5
    }

    ._3pfyN {
      display: block;
      padding: 10px 15px;
      color: #333
    }

    ._3pfyN:hover {
      color: #333;
      text-decoration: none;
      background: #f5f5f5
    }

    ._2U6DJ {
      visibility: hidden;
      display: none;
      opacity: 0
    }

    .UovLc {
      color: #c4c4c4
    }

    body.dark ._287KE {
      background: #18191a;
      background: var(--section-inverse-bg)
    }

    body.dark ._3pfyN {
      color: #eee;
      color: var(--text-inverse-color)
    }

    body.dark ._3pfyN:hover {
      background: #2d2d2d;
      background: var(--body-inverse-bg)
    }

    @media (max-width:991px) {
      .MWqeC {
        display: table;
        width: 100%
      }

      ._287KE {
        display: table-cell;
        width: auto;
        min-width: 60px;
        border: none !important;
        margin: 15px 15px 0 0;
        line-height: 1
      }

      .UovLc {
        display: none
      }

      ._3pfyN {
        padding: 10px;
        border: 1px solid #eee;
        border-radius: 4px;
        display: inline-block;
        min-width: 55px;
        text-align: center
      }
    }

    @media (min-width:480px) {
      ._2fecr {
        background-image: none !important
      }
    }

    @media (max-width:479px) {
      ._2jTQ0 {
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        background: rgba(0, 0, 0, .65)
      }

      ._4RcEi {
        display: none
      }

      ._3owCZ {
        width: 100%;
        color: #fff
      }

      ._3Czbn>a {
        color: #fff;
        border-color: #fff
      }

      ._879j3 {
        margin: 0 auto
      }

      ._2wcqV>ul>li>a {
        padding: 10px
      }

      ._287KE {
        margin: 15px 9px 0 0
      }
    }
  </style>
  <style type="text/css" id="s662-0">
    :root {
      --text-color: #222;
      --text-inverse-color: #eee;
      --gray-darker: #222;
      --gray-dark: #555;
      --gray: #777;
      --gray-light: #a0a0a0;
      --gray-lighter: #eee;
      --body-bg: #f9f9f9;
      --body-inverse-bg: #2d2d2d;
      --section-inverse-bg: #18191a;
      --border-radius-base: 4px;
      --gutter-width: 30px;
      --gutter-half-width: 15px
    }

    ._8Qtbo {
      display: block;
      white-space: nowrap;
      overflow: hidden;
      -o-text-overflow: ellipsis;
      text-overflow: ellipsis;
      color: #222;
      color: var(--text-color)
    }

    @media (max-width:991px) {
      .rkQM- ._2IG5P {
        display: none
      }

      .rkQM- ._3D1SJ {
        color: #222;
        color: var(--text-color)
      }
    }

    body.dark ._8Qtbo {
      color: #eee;
      color: var(--text-inverse-color)
    }

    @media (max-width:991px) {
      body.dark .rkQM- ._3D1SJ {
        color: #eee;
        color: var(--text-inverse-color)
      }
    }
  </style>
  <style type="text/css" id="s644-0">
    ._1G78a {
      text-align: center
    }

    ._1cXol {
      padding: 10px 10px 0
    }
  </style>
  <style type="text/css" id="s631-0">
    :root {
      --text-color: #222;
      --text-inverse-color: #eee;
      --gray-darker: #222;
      --gray-dark: #555;
      --gray: #777;
      --gray-light: #a0a0a0;
      --gray-lighter: #eee;
      --body-bg: #f9f9f9;
      --body-inverse-bg: #2d2d2d;
      --section-inverse-bg: #18191a;
      --border-radius-base: 4px;
      --gutter-width: 30px;
      --gutter-half-width: 15px
    }

    ._1UUMy {
      background: #555;
      background: var(--gray-dark);
      margin-top: 30px;
      margin-top: var(--gutter-width)
    }

    ._1jkXi,
    ._39kfm {
      border-top: 1px solid #777;
      border-top: 1px solid var(--gray)
    }

    ._1jkXi,
    ._2bBFy,
    ._2Kurz,
    ._39kfm {
      padding: 10px 0;
      text-align: center
    }

    ._1jkXi {
      padding-top: 30px;
      padding-top: var(--gutter-width)
    }

    ._2bBFy {
      padding-bottom: 30px;
      padding-bottom: var(--gutter-width)
    }

    .bF0OS {
      color: #ddd;
      padding: 10px;
      font-size: 1.2em
    }

    ._3ReUN {
      color: #a0a0a0;
      color: var(--gray-light)
    }

    ._3ReUN:hover {
      color: #eee;
      color: var(--gray-lighter)
    }

    ._297xE {
      color: hsla(0, 0%, 100%, .5);
      font-weight: 700
    }

    ._3qHjF,
    ._3ReUN {
      padding: 10px;
      font-size: 1em
    }

    ._3qHjF,
    ._3qHjF:active,
    ._3qHjF:visited {
      color: #eee;
      color: var(--gray-lighter);
      text-decoration: none
    }

    ._3qHjF:hover,
    .bF0OS:hover {
      color: #fff
    }

    @media (max-width:479px) {
      ._39kfm {
        display: none
      }
    }
  </style>
  <link id="googleidentityservice" type="text/css" media="all" rel="stylesheet"
    href="https://accounts.google.com/gsi/style">
  <script src="https://c.disquscdn.com/next/embed/alfie_v4.63f1ab6d6b9d5807dc0c94ef3fe0b851.js" async=""
    charset="UTF-8"></script>
</head>

<body class="">
  <div id="app">
    <div class="">
      <div class="alert alert-warning _1xZGk"><a href="/membership">More than 300 users have joined our VIP
          membership.&nbsp;<span class="_3Ehi9">Click here to support us</span></a></div>
      <header>
        <nav class="navbar navbar-inverse">
          <div class="container">
            <div class="navbar-header"><button type="button" class="navbar-toggle collapsed"><span
                  class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span
                  class="icon-bar"></span><span class="icon-bar"></span></button><a href="https://mangahub.io/"
                class="_15aUW navbar-brand"><img class="logo" src="/logo.png" srcset="/logo@2x.png 2x" width="220"
                  height="50" alt="MangaHub.io"><img class="mobile-logo" src="/logo-small.png" width="40" height="40"
                  alt="MangaHub.io"><span class="sr-only">MangaHub.io</span></a><a href="https://mangahub.io/login"
                class="navbar-search navbar-user-item"><i class="icon-user navbar-user-icon"></i></a></div>
            <div class="navbar-collapse collapse">
              <ul class="nav navbar-nav navbar-right">
                <li role="presentation" class=""><a href="https://mangahub.io/search">Directory</a></li>
                <li role="presentation" class=""><a href="https://mangahub.io/popular">Popular</a></li>
                <li role="presentation" class=""><a href="https://mangahub.io/updates">Updates</a></li>
                <li role="presentation" class=""><a href="https://mangahub.io/new">New</a></li>
                <li role="presentation" class=""><a href="https://mangahub.io/membership">Support Us</a></li>
                <li role="presentation" class="_3vZVG"><a href="#"><span> | </span></a></li>
                <li role="presentation" class="_3sTDf"><span>
                    <div class="_2F93d dark-mode-container"><input type="checkbox" id="time"><label
                        for="time">Night</label></div>
                  </span></li>
                <li role="presentation" class="hidden-xs navbar-user-item"><a href="https://mangahub.io/login"><i
                      class="icon-user navbar-user-icon"></i></a></li>
                <li role="presentation" class=""><a href="https://mangahub.io/search"><i class="icon-search"></i> <span
                      class="Rig-A visible-xs-inline"> <!-- -->Search</span></a></li>
              </ul>
            </div><span class="hidden"></span><a href="https://mangahub.io/search" class="reader-search"><i
                class="icon-search"></i></a>
          </div>
        </nav>
      </header>
      <div id="mangadetail" class="container">
        <section class="_2fecr" style="background-image:url(&quot;https://thumb.mghubcdn.com/mh/iron-ladies.jpg&quot;)">
          <div class="_2jTQ0"></div>
          <div class="container-fluid">
            <div class="row">
              <div class="_4RcEi col-md-3 col-sm-4 col-xs-6"><img src="https://thumb.mghubcdn.com/mh/iron-ladies.jpg"
                  class="img-responsive manga-thumb" alt="Iron Ladies thumbnail"></div>
              <div class="_3owCZ col-md-9 col-sm-8 col-xs-6">
                <h1 class="_3xnDj">Iron Ladies<a href="https://mangahub.io/popular"
                    class="label label-hot manga-label">Hot</a><small></small></h1>
                <div>
                  <div><span class="_3SlhO">Author</span><span>铁鳞社</span></div>
                  <div><span class="_3SlhO">Artist</span><span>铁鳞社</span></div>
                  <div><span class="_3SlhO">Status</span><span>Ongoing</span></div>
                  <div><span class="_3SlhO">Latest</span><span><a
                        href="https://mangahub.io/chapter/iron-ladies/chapter-517">Chapter <!-- -->517</a></span></div>
                  <div>
                    <p class="_3Czbn"><a href="https://mangahub.io/genre/action" class="label genre-label">Action</a><a
                        href="https://mangahub.io/genre/comedy" class="label genre-label">Comedy</a><a
                        href="https://mangahub.io/genre/seinen" class="label genre-label">Seinen</a><a
                        href="https://mangahub.io/genre/sci-fi" class="label genre-label">Sci-fi</a><a
                        href="https://mangahub.io/genre/ecchi" class="label genre-label">Ecchi</a><a
                        href="https://mangahub.io/genre/harem" class="label genre-label">Harem</a></p>
                  </div>
                </div>
                <div class="row">
                  <div class="_2WWGu col-sm-5 col-xs-12">
                    <div class="bookmark-wrap">
                      <div><button class="share-btn bookmark-btn"><i
                            class="icon-not-love"></i></button><span></span><span class="hidden"></span></div>
                    </div>
                    <div role="button" tabindex="0" class="SocialMediaShareButton SocialMediaShareButton--facebook">
                      <span class="share-btn facebook-share"><i class="icon-facebook"></i></span></div>
                    <div role="button" tabindex="0" class="SocialMediaShareButton SocialMediaShareButton--twitter"><span
                        class="share-btn twitter-share"><i class="icon-twitter"></i></span></div>
                    <div role="button" tabindex="0" class="SocialMediaShareButton SocialMediaShareButton--pinterest">
                      <span class="share-btn pinterest-share"><i class="icon-pinterest"></i></span></div>
                  </div>
                  <div class="_1w9AY col-sm-12 col-xs-12"><a href="https://mangahub.io/chapter/iron-ladies/chapter-168"
                      class="btn btn-secondary">Continue #168</a><a
                      href="https://mangahub.io/chapter/iron-ladies/chapter-1" class="btn btn-primary">Start Reading</a>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="_1P0LI"><button class="btn btn-warning"><i class="icon-bug"
                style="margin-right:5px"></i>Report</button><span class="hidden"></span></div>
        </section>
        <div class="ads-container ad-topBanner container _879j3">
          <div class="adsbygalaksion"><iframe title="Manga Ads"
              src="https://mangahub.io/iframe/ga?scriptUrl=allicinarenig.com/t609OAeNgAac0a/44458&amp;auuid=1696433724387&amp;ifaid=1696433724387.949"
              width="1542" height="250" frameborder="0" scrolling="no" class="ga-ifr" b46y71rbj=""
              style="max-width: 100%;"></iframe></div>
        </div>
        <section>
          <div class="container-fluid">
            <div class="row">
              <div class="col-xs-12">
                <div id="chapters-tab" class="_2wcqV">
                  <ul role="tablist" class="nav nav-pills">
                    <li role="presentation" class="active"><a id="chapters-tab-tab-1" role="tab"
                        aria-controls="chapters-tab-pane-1" aria-selected="true" href="#">517 - 501</a></li>
                    <li role="presentation" class=""><a id="chapters-tab-tab-2" role="tab"
                        aria-controls="chapters-tab-pane-2" tabindex="-1" aria-selected="false" href="#">500 - 401</a>
                    </li>
                    <li role="presentation" class=""><a id="chapters-tab-tab-3" role="tab"
                        aria-controls="chapters-tab-pane-3" tabindex="-1" aria-selected="false" href="#">400 - 301</a>
                    </li>
                    <li role="presentation" class=""><a id="chapters-tab-tab-4" role="tab"
                        aria-controls="chapters-tab-pane-4" tabindex="-1" aria-selected="false" href="#">300 - 201</a>
                    </li>
                    <li role="presentation" class=""><a id="chapters-tab-tab-5" role="tab"
                        aria-controls="chapters-tab-pane-5" tabindex="-1" aria-selected="false" href="#">200 - 101</a>
                    </li>
                    <li role="presentation" class=""><a id="chapters-tab-tab-6" role="tab"
                        aria-controls="chapters-tab-pane-6" tabindex="-1" aria-selected="false" href="#">100 - 1</a>
                    </li>
                    <li role="presentation" class=""><a id="chapters-tab-tab-999" role="tab"
                        aria-controls="chapters-tab-pane-999" tabindex="-1" aria-selected="false" href="#">Summary</a>
                    </li>
                  </ul>
                  <div class="tab-content">
                    <div id="chapters-tab-pane-1" aria-labelledby="chapters-tab-tab-1" role="tabpanel"
                      aria-hidden="false" class="tab-pane active">
                      <ul class="MWqeC list-group">
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-517"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->517</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Chapter 517</span></span><small class="UovLc">08-20-2023</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-516"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->516</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Chapter 516</span></span><small class="UovLc">08-18-2023</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-515"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->515</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Chapter 515</span></span><small class="UovLc">06-03-2023</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-514"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->514</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Chapter 514</span></span><small class="UovLc">04-27-2023</small></a></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1434653" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->513</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 513</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-513" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->513</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 513</span></span><small class="UovLc">04-20-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1434635" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->512</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 512</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-512" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->512</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 512</span></span><small class="UovLc">04-20-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1420674" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->511</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 511</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-511" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->511</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 511</span></span><small class="UovLc">04-03-2023</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1420674" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->511</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 511</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1420527" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->510</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 510</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-510" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->510</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 510</span></span><small class="UovLc">04-03-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1410317" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->509</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 509</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-509" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->509</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 509</span></span><small class="UovLc">03-26-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1406841" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->508</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 508</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-508" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->508</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 508</span></span><small class="UovLc">03-22-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1404713" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->507</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 507</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-507" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->507</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 507</span></span><small class="UovLc">03-20-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1404505" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->506</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 506</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-506" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->506</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 506</span></span><small class="UovLc">03-20-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1404070" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->505</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 505</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-505" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->505</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 505</span></span><small class="UovLc">03-19-2023</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1404070" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->505</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 505</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1403526" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->504</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 504</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-504" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->504</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 504</span></span><small class="UovLc">03-18-2023</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1403526" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->504</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 504</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1403413" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->503</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 503</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-503" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->503</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 503</span></span><small class="UovLc">03-18-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1389545" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->502</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 502</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-502" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->502</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 502</span></span><small class="UovLc">03-01-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1388875" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->501</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 501</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-501" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->501</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 501</span></span><small class="UovLc">02-28-2023</small></a></span>
                        </li>
                      </ul>
                    </div>
                    <div id="chapters-tab-pane-2" aria-labelledby="chapters-tab-tab-2" role="tabpanel"
                      aria-hidden="true" class="tab-pane">
                      <ul class="MWqeC list-group">
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-500"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->500</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Chapter 500</span></span><small class="UovLc">02-27-2023</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-499"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->499</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Chapter 499</span></span><small class="UovLc">02-27-2023</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-498"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->498</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Chapter 498</span></span><small class="UovLc">02-24-2023</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-497"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->497</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Chapter 497</span></span><small class="UovLc">02-24-2023</small></a></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1378483" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->496</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 496</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-496" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->496</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 496</span></span><small class="UovLc">02-17-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1376891" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->495</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 495</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-495" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->495</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 495</span></span><small class="UovLc">02-15-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1373312" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->494</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 494</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-494" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->494</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 494</span></span><small class="UovLc">02-11-2023</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1373312" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->494</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 494</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1372413" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->493</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 493</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-493" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->493</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 493</span></span><small class="UovLc">02-10-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1371566" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->492</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 492</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-492" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->492</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 492</span></span><small class="UovLc">02-09-2023</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1371566" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->492</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 492</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1370047" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->491</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 491</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-491" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->491</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 491</span></span><small class="UovLc">02-07-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1370046" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->490</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 490</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-490" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->490</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 490</span></span><small class="UovLc">02-07-2023</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1370046" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->490</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 490</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1367939" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->489</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 489</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-489" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->489</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 489</span></span><small class="UovLc">02-05-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1363120" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->488</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 488</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-488" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->488</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 488</span></span><small class="UovLc">01-31-2023</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1363120" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->488</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 488</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1360628" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->487</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 487</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-487" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->487</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 487</span></span><small class="UovLc">01-29-2023</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1360628" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->487</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 487</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1359011" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->486</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 486</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-486" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->486</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 486</span></span><small class="UovLc">01-27-2023</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1358106" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->485</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 485</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-485" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->485</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 485</span></span><small class="UovLc">01-26-2023</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1358106" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->485</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 485</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1334237" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->484</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 484</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-484" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->484</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 484</span></span><small class="UovLc">12-27-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1334100" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->483</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 483</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-483" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->483</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 483</span></span><small class="UovLc">12-27-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1334100" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->483</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 483</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1333515" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->482</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 482</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-482" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->482</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 482</span></span><small class="UovLc">12-26-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1333500" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->481</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 481</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-481" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->481</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 481</span></span><small class="UovLc">12-26-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1333500" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->481</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 481</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1333461" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->480</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 480</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-480" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->480</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 480</span></span><small class="UovLc">12-26-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1333446" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->479</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 479</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-479" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->479</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 479</span></span><small class="UovLc">12-26-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1333446" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->479</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 479</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1332821" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->478</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 478</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-478" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->478</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 478</span></span><small class="UovLc">12-25-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1332735" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->477</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 477</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-477" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->477</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 477</span></span><small class="UovLc">12-25-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1332713" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->476</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 476</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-476" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->476</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 476</span></span><small class="UovLc">12-25-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1332097" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->475</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 475</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-475" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->475</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 475</span></span><small class="UovLc">12-24-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1332059" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->474</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 474</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-474" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->474</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 474</span></span><small class="UovLc">12-24-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1331578" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->473</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 473</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-473" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->473</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 473</span></span><small class="UovLc">12-24-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1331578" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->473</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 473</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1331496" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->472</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 472</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-472" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->472</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 472</span></span><small class="UovLc">12-24-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1331496" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->472</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 472</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1331387" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->471</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 471</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-471" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->471</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 471</span></span><small class="UovLc">12-24-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1331063" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->470</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 470</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-470" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->470</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 470</span></span><small class="UovLc">12-23-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1331062" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->469</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 469</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-469" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->469</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 469</span></span><small class="UovLc">12-23-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1331062" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->469</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 469</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1331061" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->468</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 468</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-468" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->468</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 468</span></span><small class="UovLc">12-23-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1331057" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->467</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 467</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-467" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->467</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 467</span></span><small class="UovLc">12-23-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1330379" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->466</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 466</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-466" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->466</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 466</span></span><small class="UovLc">12-22-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1329987" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->465</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 465</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-465" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->465</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 465</span></span><small class="UovLc">12-22-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1318358" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->464.5</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 464.5</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-464.5" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->464.5</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 464.5</span></span><small class="UovLc">12-09-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1318358" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->464.5</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 464.5</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1317352" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->464</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 464</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-464" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->464</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 464</span></span><small class="UovLc">12-08-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1317352" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->464</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 464</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1317351" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->463</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 463</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-463" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->463</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 463</span></span><small class="UovLc">12-08-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309725" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->462</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 462</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->462</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 462</span></span><small class="UovLc">11-29-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309508" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->461.5</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 461.5</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-461.5" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->461.5</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 461.5</span></span><small class="UovLc">11-29-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309508" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->461.5</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 461.5</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309509" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->461</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 461</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-461" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->461</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 461</span></span><small class="UovLc">11-29-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309510" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->460</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 460</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-460" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->460</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 460</span></span><small class="UovLc">11-29-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309510" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->460</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 460</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309726" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->459</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 459</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->459</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 459</span></span><small class="UovLc">11-29-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309726" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->459</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 459</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309511" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->458</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 458</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-458" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->458</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 458</span></span><small class="UovLc">11-29-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309512" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->457</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 457</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-457" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->457</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 457</span></span><small class="UovLc">11-29-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309512" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->457</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 457</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309514" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->456</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 456</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-456" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->456</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 456</span></span><small class="UovLc">11-29-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309514" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->456</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 456</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309513" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->455</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 455</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-455" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->455</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 455</span></span><small class="UovLc">11-29-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309506" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->454</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 454</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-454" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->454</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 454</span></span><small class="UovLc">11-29-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309506" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->454</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 454</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1309507" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->453</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 453</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-453" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->453</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 453</span></span><small class="UovLc">11-29-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1300072" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->452</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 452</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-452" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->452</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 452</span></span><small class="UovLc">11-15-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1300072" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->452</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 452</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1300071" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->451</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 451</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-451" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->451</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 451</span></span><small class="UovLc">11-15-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1300070" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->450</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 450</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-450" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->450</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 450</span></span><small class="UovLc">11-15-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1300070" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->450</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 450</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1300069" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->449</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 449</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-449" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->449</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 449</span></span><small class="UovLc">11-15-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1300068" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->448</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 448</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-448" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->448</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 448</span></span><small class="UovLc">11-15-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1300068" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->448</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 448</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1285865" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->447</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 447</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-447" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->447</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 447</span></span><small class="UovLc">10-20-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1283548" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->446</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 446</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-446" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->446</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 446</span></span><small class="UovLc">10-17-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1283548" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->446</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 446</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262294" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->445</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 445</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-445" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->445</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 445</span></span><small class="UovLc">09-20-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262294" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->445</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 445</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262290" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->444</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 444</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-444" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->444</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 444</span></span><small class="UovLc">09-20-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262290" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->444</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 444</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262291" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->443</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 443</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-443" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->443</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 443</span></span><small class="UovLc">09-20-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262297" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->442</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 442</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-442" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->442</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 442</span></span><small class="UovLc">09-20-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262288" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->441</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 441</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-441" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->441</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 441</span></span><small class="UovLc">09-20-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262288" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->441</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 441</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262289" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->440</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 440</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-440" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->440</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 440</span></span><small class="UovLc">09-20-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262172" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->439</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 439</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-439" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->439</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 439</span></span><small class="UovLc">09-20-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262172" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->439</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 439</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262164" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->438</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 438</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-438" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->438</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 438</span></span><small class="UovLc">09-20-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262164" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->438</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 438</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262162" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->437</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 437</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-437" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->437</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 437</span></span><small class="UovLc">09-20-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1262162" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->437</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 437</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1242261" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->436</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 436</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-436" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->436</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 436</span></span><small class="UovLc">08-26-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1231328" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->435</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 435</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-435" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->435</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 435</span></span><small class="UovLc">08-14-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1231328" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->435</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 435</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1231329" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->434</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 434</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->434</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 434</span></span><small class="UovLc">08-14-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1231330" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->433</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 433</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-433" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->433</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 433</span></span><small class="UovLc">08-14-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1231330" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->433</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 433</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1231326" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->432</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 432</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->432</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 432</span></span><small class="UovLc">08-14-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1231326" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->432</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 432</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1231325" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->431</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 431</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-431" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->431</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 431</span></span><small class="UovLc">08-14-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230155" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->430</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 430</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-430" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->430</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 430</span></span><small class="UovLc">08-13-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230154" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->429</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 429</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-429" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->429</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 429</span></span><small class="UovLc">08-13-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230154" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->429</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 429</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230156" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->428</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 428</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->428</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 428</span></span><small class="UovLc">08-13-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230156" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->428</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 428</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230157" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->427</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 427</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-427" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->427</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 427</span></span><small class="UovLc">08-13-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230159" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->426</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 426</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-426" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->426</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 426</span></span><small class="UovLc">08-13-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230161" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->425</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 425</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-425" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->425</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 425</span></span><small class="UovLc">08-13-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230162" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->424</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 424</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->424</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 424</span></span><small class="UovLc">08-13-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230162" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->424</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 424</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230163" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->423</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 423</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-423" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->423</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 423</span></span><small class="UovLc">08-13-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230176" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->422</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 422</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-422" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->422</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 422</span></span><small class="UovLc">08-13-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230176" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->422</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 422</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230175" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->421</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 421</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-421" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->421</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 421</span></span><small class="UovLc">08-13-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230165" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->420</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 420</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-420" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->420</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 420</span></span><small class="UovLc">08-13-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230166" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->419</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 419</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->419</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 419</span></span><small class="UovLc">08-13-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230166" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->419</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 419</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230152" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->418</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 418</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->418</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 418</span></span><small class="UovLc">08-13-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230152" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->418</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 418</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230153" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->417</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 417</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-417" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->417</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 417</span></span><small class="UovLc">08-13-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230128" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->416</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 416</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->416</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 416</span></span><small class="UovLc">08-13-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230128" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->416</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 416</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1230129" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->415</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 415</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-415" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->415</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 415</span></span><small class="UovLc">08-13-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1220859" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->414</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Lockage Divine Array</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->414</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Lockage Divine Array</span></span><small
                                class="UovLc">08-03-2022</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1219590" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->413</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 413</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-413" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->413</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 413</span></span><small class="UovLc">08-01-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1219590" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->413</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 413</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1218502" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->412</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 412</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->412</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 412</span></span><small class="UovLc">07-31-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1218502" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->412</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 412</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217750" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->411</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 411</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->411</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 411</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217750" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->411</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 411</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217583" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->410</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 410</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-410" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->410</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 410</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217584" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->409</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 409</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-409" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->409</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 409</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217584" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->409</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 409</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217570" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->408</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 408</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-408" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->408</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 408</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217570" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->408</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 408</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217571" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->407</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 407</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-407" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->407</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 407</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217586" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->406</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 406</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-406" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->406</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 406</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217586" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->406</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 406</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217591" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->405</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 405</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-405" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->405</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 405</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217580" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->404</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 404</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-404" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->404</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 404</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217580" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->404</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 404</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217581" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->403</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 403</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-403" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->403</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 403</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217567" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->402</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 402</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-402" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->402</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 402</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217566" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->401</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 401</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-401" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->401</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 401</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217566" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->401</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 401</span></span></a></span></li>
                      </ul>
                    </div>
                    <div id="chapters-tab-pane-3" aria-labelledby="chapters-tab-tab-3" role="tabpanel"
                      aria-hidden="true" class="tab-pane">
                      <ul class="MWqeC list-group">
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-400"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->400</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Chapter 400</span></span><small class="UovLc">07-30-2022</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-399"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->399</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Chapter 399</span></span><small class="UovLc">07-30-2022</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-398"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->398</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Chapter 398</span></span><small class="UovLc">07-30-2022</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-397"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->397</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Chapter 397</span></span><small class="UovLc">07-30-2022</small></a></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217557" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->396</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 396</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-396" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->396</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 396</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217560" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->395</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 395</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-395" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->395</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 395</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217560" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->395</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 395</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217559" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->394</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 394</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-394" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->394</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 394</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217561" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->393</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 393</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-393" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->393</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 393</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217540" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->392</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 392</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-392" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->392</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 392</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217540" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->392</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 392</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217538" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->391</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 391</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-391" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->391</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 391</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217538" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->391</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 391</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217542" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->390</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 390</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-390" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->390</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 390</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217542" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->390</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 390</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217543" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->389</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 389</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-389" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->389</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 389</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217544" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->388</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 388</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-388" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->388</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 388</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217544" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->388</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 388</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217545" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->387</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 387</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-387" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->387</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 387</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217547" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->385</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 385</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-385" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->385</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 385</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217548" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->384</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 384</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-384" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->384</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 384</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217548" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->384</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 384</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217550" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->383</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 383</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-383" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->383</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 383</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217550" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->383</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 383</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217549" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->382</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 382</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-382" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->382</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 382</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217536" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->381</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 381</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-381" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->381</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 381</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217536" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->381</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 381</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217534" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->380</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 380</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-380" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->380</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 380</span></span><small class="UovLc">07-30-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217534" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->380</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 380</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1217515" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->378</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 378</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-378" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->378</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 378</span></span><small class="UovLc">07-30-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1195068" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->377</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 377</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-377" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->377</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 377</span></span><small class="UovLc">07-08-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1195068" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->377</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 377</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1147283" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->376</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 376</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-376" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->376</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 376</span></span><small class="UovLc">05-25-2022</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1078827" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->375</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Civilized Evil Dragon</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-375" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->375</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Civilized Evil Dragon</span></span><small
                                class="UovLc">03-20-2022</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1072064" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->374</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The New Is Constantly Replacing The Old</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-374" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->374</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The New Is Constantly Replacing The Old</span></span><small
                                class="UovLc">03-11-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1072064" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->374</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The New Is Constantly Replacing The Old</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1064128" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->373</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->God-Father Resigns And Smiles</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-373" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->373</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->God-Father Resigns And Smiles</span></span><small
                                class="UovLc">03-02-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1064128" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->373</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->God-Father Resigns And Smiles</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1054303" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->372</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Am Fine</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-372" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->372</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Am Fine</span></span><small class="UovLc">02-20-2022</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1053401" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->371</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->God Is Dead But I'm Alive</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-371" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->371</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->God Is Dead But I'm Alive</span></span><small
                                class="UovLc">02-19-2022</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1049085" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->370</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Goldren Crow Fire Plume</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-370" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->370</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Goldren Crow Fire Plume</span></span><small
                                class="UovLc">02-15-2022</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1036624" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->369</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The East Wind Blow A Thousand Flowers At Night</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-369" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->369</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The East Wind Blow A Thousand Flowers At Night</span></span><small
                                class="UovLc">02-01-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1036624" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->369</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The East Wind Blow A Thousand Flowers At Night</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1035924" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->368</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Kunlun Mainship</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-368" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->368</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Kunlun Mainship</span></span><small class="UovLc">01-31-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1035924" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->368</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Kunlun Mainship</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1028560" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->367</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Baiyue Has A Great Array</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-367" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->367</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Baiyue Has A Great Array</span></span><small
                                class="UovLc">01-23-2022</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1028560" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->367</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Baiyue Has A Great Array</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1022063" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->366</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Great Encirclement Dragon Sparrow</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-366" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->366</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Great Encirclement Dragon Sparrow</span></span><small
                                class="UovLc">01-18-2022</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1003509" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->365</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Arrival Of The True God</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-365" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->365</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Arrival Of The True God</span></span><small
                                class="UovLc">01-07-2022</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-989360" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->364</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Bright Red Sun Illuminating The Night Sky</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-364" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->364</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Bright Red Sun Illuminating The Night Sky</span></span><small
                                class="UovLc">12-28-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-989360" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->364</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Bright Red Sun Illuminating The Night Sky</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-982877" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->363</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Bloodshed In A Just Cause To Sharpen The Green Grass</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-363" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->363</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Bloodshed In A Just Cause To Sharpen The Green Grass</span></span><small
                                class="UovLc">12-19-2021</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-978493" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->362</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 362</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-362" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->362</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 362</span></span><small class="UovLc">12-12-2021</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-978311" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->361</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 361</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-361" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->361</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 361</span></span><small class="UovLc">12-12-2021</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-941527" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->360</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Daxia Fleets</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-360" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->360</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Daxia Fleets</span></span><small class="UovLc">10-15-2021</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-909764" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->359</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 359</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-359" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->359</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 359</span></span><small class="UovLc">08-22-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-909764" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->359</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 359</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-905693" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->358</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 358</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-358" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->358</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 358</span></span><small class="UovLc">08-16-2021</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-904440" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->357</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 357</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-357" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->357</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 357</span></span><small class="UovLc">08-14-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-904440" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->357</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 357</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-900805" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->356</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 356</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-356" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->356</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 356</span></span><small class="UovLc">08-08-2021</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-898824" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->355</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 355</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-355" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->355</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 355</span></span><small class="UovLc">08-06-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-898824" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->355</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 355</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-898062" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->354</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 354</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-354" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->354</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 354</span></span><small class="UovLc">08-04-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-898062" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->354</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 354</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-896081" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->353</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Exchange for people</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-353" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->353</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Exchange for people</span></span><small
                                class="UovLc">08-01-2021</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-895578" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->352</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 352</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-352" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->352</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 352</span></span><small class="UovLc">07-31-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-895578" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->352</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 352</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-895078" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->351</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Declaring war on Beiyang!</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-351" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->351</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Declaring war on Beiyang!</span></span><small
                                class="UovLc">07-31-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-895078" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->351</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Declaring war on Beiyang!</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-892395" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->350</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 350</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-350" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->350</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 350</span></span><small class="UovLc">07-29-2021</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-891521" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->349</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You are not qualified!</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-349" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->349</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You are not qualified!</span></span><small
                                class="UovLc">07-27-2021</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-890748" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->348</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 348</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-348" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->348</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 348</span></span><small class="UovLc">07-26-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-890748" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->348</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 348</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-890749" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->347</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 347</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-347" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->347</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 347</span></span><small class="UovLc">07-26-2021</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-890751" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->346</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 346</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-346" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->346</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 346</span></span><small class="UovLc">07-26-2021</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-890750" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->345</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 345</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-345" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->345</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 345</span></span><small class="UovLc">07-26-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-890750" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->345</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 345</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-890747" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->344</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 344</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-344" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->344</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 344</span></span><small class="UovLc">07-26-2021</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-890746" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->343</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 343</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-343" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->343</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 343</span></span><small class="UovLc">07-26-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-890746" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->343</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 343</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-787906" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->342</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 342</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-342" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->342</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 342</span></span><small class="UovLc">03-02-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-787906" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->342</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 342</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-779929" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->341</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 341</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-341" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->341</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 341</span></span><small
                                class="UovLc">02-19-2021</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-769140" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->340</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 340</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-340" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->340</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 340</span></span><small class="UovLc">02-05-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-769140" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->340</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 340</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-758164" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->339</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 339</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-339" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->339</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 339</span></span><small class="UovLc">01-22-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-758164" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->339</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 339</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-751398" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->338</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 338</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-338" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->338</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 338</span></span><small class="UovLc">01-14-2021</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-751398" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->338</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 338</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-743163" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->337</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 337</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-337" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->337</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 337</span></span><small
                                class="UovLc">01-02-2021</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-738003" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->336</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Country Still Stands</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-336" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->336</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Country Still Stands</span></span><small
                                class="UovLc">12-25-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-736783" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->335</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Escaping?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-335" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->335</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Escaping?</span></span><small class="UovLc">12-23-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-736564" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->334</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 334</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-334" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->334</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 334</span></span><small class="UovLc">12-23-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-736564" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->334</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 334</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-721037" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->333</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Sports Competition</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-333" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->333</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Sports Competition</span></span><small
                                class="UovLc">11-23-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-719963" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->332</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 332</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-332" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->332</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 332</span></span><small
                                class="UovLc">11-21-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-710474" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->331</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 331</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-331" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->331</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 331</span></span><small class="UovLc">11-01-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-710474" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->331</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 331</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-695552" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->330</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Alliance Combat Competition</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-330" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->330</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Alliance Combat Competition</span></span><small
                                class="UovLc">10-04-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-695552" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->330</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Alliance Combat Competition</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-653147" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->329</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fused Divine Beast</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-329" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->329</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fused Divine Beast</span></span><small
                                class="UovLc">07-25-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-653150" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->328</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Using Flesh to defend against Iron</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-328" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->328</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Using Flesh to defend against Iron</span></span><small
                                class="UovLc">07-25-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-653150" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->328</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Using Flesh to defend against Iron</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-653151" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->327</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ksitigarbha's Flesh Body</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-327" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->327</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ksitigarbha's Flesh Body</span></span><small
                                class="UovLc">07-25-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-653152" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->326</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Killing is about to Start</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-326" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->326</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Killing is about to Start</span></span><small
                                class="UovLc">07-25-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-653152" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->326</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Killing is about to Start</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-653133" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->325</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Liquid Iron Execution</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-325" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->325</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Liquid Iron Execution</span></span><small
                                class="UovLc">07-25-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-653134" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->324</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->A Righteous Death</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-324" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->324</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->A Righteous Death</span></span><small class="UovLc">07-25-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-653134" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->324</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->A Righteous Death</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-645988" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->323</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Everyone Will Die One Day</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-323" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->323</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Everyone Will Die One Day</span></span><small
                                class="UovLc">07-11-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-645988" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->323</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Everyone Will Die One Day</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-641403" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->322</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Disaster Rescue, Not Scum Rescue</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-322" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->322</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Disaster Rescue, Not Scum Rescue</span></span><small
                                class="UovLc">07-01-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-637783" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->321</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->To Intervene or not to Intervene</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-321" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->321</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->To Intervene or not to Intervene</span></span><small
                                class="UovLc">06-24-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-637614" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->320</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foreign forces invade the Homeland</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-320" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->320</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foreign forces invade the Homeland</span></span><small
                                class="UovLc">06-23-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-637614" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->320</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foreign forces invade the Homeland</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-637370" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->319</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->How Strong is Sister Hamster's Potential?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-319" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->319</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->How Strong is Sister Hamster's Potential?</span></span><small
                                class="UovLc">06-23-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-637370" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->319</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->How Strong is Sister Hamster's Potential?</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-633965" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->318</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Gentle and Tranquil</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-318" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->318</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Gentle and Tranquil</span></span><small
                                class="UovLc">06-16-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-630102" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->317</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Communication Stations Bite Back</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-317" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->317</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Communication Stations Bite Back</span></span><small
                                class="UovLc">06-08-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-630102" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->317</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Communication Stations Bite Back</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-624013" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->316</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Be a Man</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-316" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->316</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Be a Man</span></span><small class="UovLc">05-27-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-622482" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->315</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Interstellar Cyber Warfare</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-315" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->315</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Interstellar Cyber Warfare</span></span><small
                                class="UovLc">05-24-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-622482" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->315</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Interstellar Cyber Warfare</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-617924" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->314</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Purgatory Mode</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-314" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->314</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Purgatory Mode</span></span><small class="UovLc">05-14-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-617924" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->314</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Purgatory Mode</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-616104" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->313</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Shaolin Cook</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-313" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->313</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Shaolin Cook</span></span><small class="UovLc">05-11-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-616104" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->313</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Shaolin Cook</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-616086" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->312</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Four Armed Mecha</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-312" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->312</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Four Armed Mecha</span></span><small class="UovLc">05-10-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-616086" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->312</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Four Armed Mecha</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-610138" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->311</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->National Day Special: First Generation Angel</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-311" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->311</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->National Day Special: First Generation Angel</span></span><small
                                class="UovLc">04-27-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-610138" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->311</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->National Day Special: First Generation Angel</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-610072" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->310</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Be Compassionate</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-310" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->310</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Be Compassionate</span></span><small class="UovLc">04-27-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-610072" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->310</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Be Compassionate</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-609605" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->309</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->An Iron Soldier Walks to the End of the World</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-309" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->309</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->An Iron Soldier Walks to the End of the World</span></span><small
                                class="UovLc">04-26-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-599096" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->308</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Sister Hamster is Average</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-308" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->308</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Sister Hamster is Average</span></span><small
                                class="UovLc">04-10-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-599096" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->308</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Sister Hamster is Average</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-597072" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->307</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Inspirational Speech</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-307" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->307</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Inspirational Speech</span></span><small
                                class="UovLc">03-28-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-597072" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->307</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Inspirational Speech</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-591749" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->306</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->New Family Head</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-306" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->306</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->New Family Head</span></span><small
                                class="UovLc">03-17-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-590003" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->305</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Upgraded Iron Ladies</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-305" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->305</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Upgraded Iron Ladies</span></span><small
                                class="UovLc">03-14-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-586203" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->304</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Peerless Mother</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-304" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->304</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Peerless Mother</span></span><small
                                class="UovLc">03-06-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-583067" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->303</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Criminal Wife</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-303" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->303</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Criminal Wife</span></span><small class="UovLc">02-26-2020</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-579217" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->302</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 302</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-302" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->302</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 302</span></span><small class="UovLc">02-18-2020</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-578393" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->301</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Family Head's Widow</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-301" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->301</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Family Head's Widow</span></span><small
                                class="UovLc">02-15-2020</small></a></span></li>
                      </ul>
                    </div>
                    <div id="chapters-tab-pane-4" aria-labelledby="chapters-tab-tab-4" role="tabpanel"
                      aria-hidden="true" class="tab-pane">
                      <ul class="MWqeC list-group">
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-300"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->300</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Do You Have Goals?</span></span><small class="UovLc">02-11-2020</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-299"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->299</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->New Beiyang Main Cannon</span></span><small class="UovLc">02-10-2020</small></a>
                        </li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-298"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->298</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->The Queen Of Roasted Goose Rice</span></span><small
                              class="UovLc">01-30-2020</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-297"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->297</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Is Godmother Actually Retarded?</span></span><small
                              class="UovLc">01-30-2020</small></a></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-571469" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->296</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Fires Of Heaven On Iron Pagoda</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-296" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->296</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Fires Of Heaven On Iron Pagoda</span></span><small
                                class="UovLc">01-29-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-568401" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->295</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Mad Golden Battle Form</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-295" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->295</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Mad Golden Battle Form</span></span><small
                                class="UovLc">01-21-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-567971" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->294</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Godmother's English</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-294" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->294</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Godmother's English</span></span><small
                                class="UovLc">01-20-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-567620" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->293</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->We Are All The Same</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-293" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->293</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->We Are All The Same</span></span><small class="UovLc">01-19-2020</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-567620" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->293</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->We Are All The Same</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-499269" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->292</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Pagoda Imperial City</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-292" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->292</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Pagoda Imperial City</span></span><small
                                class="UovLc">09-05-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-491251" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->291</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Sister's Seal Has Been Lifted</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-291" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->291</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Sister's Seal Has Been Lifted</span></span><small
                                class="UovLc">08-07-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-490391" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->290</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Household Division</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-290" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->290</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Household Division</span></span><small
                                class="UovLc">08-04-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-489334" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->289</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Lying Down To Get Shot</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-289" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->289</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Lying Down To Get Shot</span></span><small
                                class="UovLc">08-02-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-489334" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->289</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Lying Down To Get Shot</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-487951" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->288</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Does Foster Father Mu Have a Heart?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-288" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->288</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Does Foster Father Mu Have a Heart?</span></span><small
                                class="UovLc">07-29-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-487076" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->287</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Close Combat Mage</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-287" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->287</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Close Combat Mage</span></span><small class="UovLc">07-25-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-487076" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->287</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Close Combat Mage</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-485582" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->286</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Pieces of the Sign of Anger</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-286" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->286</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Pieces of the Sign of Anger</span></span><small
                                class="UovLc">07-21-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-485582" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->286</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Pieces of the Sign of Anger</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-484392" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->285</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I'm not against you~</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-285" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->285</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I'm not against you~</span></span><small
                                class="UovLc">07-18-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-484392" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->285</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I'm not against you~</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-483315" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->284</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Chase You</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-284" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->284</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Chase You</span></span><small class="UovLc">07-15-2019</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-482274" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->283</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Second True God Soul Soldier</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-283" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->283</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Second True God Soul Soldier</span></span><small
                                class="UovLc">07-11-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-482274" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->283</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Second True God Soul Soldier</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-481965" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->282</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Diamond Defeating Demons</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-282" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->282</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Diamond Defeating Demons</span></span><small
                                class="UovLc">07-10-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-480816" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->281</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->If I Become A Buddha</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-281" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->281</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->If I Become A Buddha</span></span><small
                                class="UovLc">07-08-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-480816" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->281</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->If I Become A Buddha</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-479976" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->280</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dual Embodiment</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-280" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->280</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dual Embodiment</span></span><small class="UovLc">07-05-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-479976" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->280</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dual Embodiment</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-479376" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->279</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Calabash Brothers Don't Even Have More Than Me</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-279" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->279</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Calabash Brothers Don't Even Have More Than Me</span></span><small
                                class="UovLc">07-02-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-479376" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->279</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Calabash Brothers Don't Even Have More Than Me</span></span></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-478795" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->278</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->God vs God</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-278" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->278</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->God vs God</span></span><small class="UovLc">07-01-2019</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-478744" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->277</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Society's God</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-277" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->277</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Society's God</span></span><small class="UovLc">06-30-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-478744" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->277</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Society's God</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-477912" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->276</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Who Agrees, Who Opposes</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-276" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->276</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Who Agrees, Who Opposes</span></span><small
                                class="UovLc">06-28-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-477912" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->276</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Who Agrees, Who Opposes</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-477729" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->275</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Rolling Thunder</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-275" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->275</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Rolling Thunder</span></span><small
                                class="UovLc">06-27-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-476727" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->274</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Triggered the Old Man, Now He Even Dares to Beat God up</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-274" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->274</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Triggered the Old Man, Now He Even Dares to Beat God up</span></span><small
                                class="UovLc">06-23-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-476133" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->273</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Why do I love Ding Yuan?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-273" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->273</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Why do I love Ding Yuan?</span></span><small
                                class="UovLc">06-20-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-475038" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->272</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Poetry</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-272" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->272</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Poetry</span></span><small class="UovLc">06-17-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-475038" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->272</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Poetry</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-474848" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->271</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->My Body became a Buddhist Relic</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-271" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->271</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->My Body became a Buddhist Relic</span></span><small
                                class="UovLc">06-16-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-474848" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->271</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->My Body became a Buddhist Relic</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-474368" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->270</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Becoming a Buddhist and becoming Evil?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-270" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->270</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Becoming a Buddhist and becoming Evil?</span></span><small
                                class="UovLc">06-14-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-474368" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->270</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Becoming a Buddhist and becoming Evil?</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-473772" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->269</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Sinning Buddha's Warrior</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-269" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->269</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Sinning Buddha's Warrior</span></span><small
                                class="UovLc">06-12-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-473772" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->269</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Sinning Buddha's Warrior</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-473252" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->268</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 268</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-268" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->268</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 268</span></span><small class="UovLc">06-09-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-473252" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->268</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 268</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-472711" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->267</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Evil Dragon is Dead, I am the Strongest</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-267" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->267</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Evil Dragon is Dead, I am the Strongest</span></span><small
                                class="UovLc">06-08-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-471586" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->266</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 266</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-266" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->266</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 266</span></span><small class="UovLc">06-03-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-471586" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->266</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 266</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-471095" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->265</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Change For The Better With Love</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-265" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->265</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Change For The Better With Love</span></span><small
                                class="UovLc">06-02-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-470988" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->264</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Dragon King isn't Evil Enough</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-264" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->264</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Dragon King isn't Evil Enough</span></span><small
                                class="UovLc">06-01-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-470988" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->264</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Dragon King isn't Evil Enough</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-469282" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->263</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 263</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-263" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->263</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 263</span></span><small class="UovLc">05-26-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-469282" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->263</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 263</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-466111" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->262.5</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 262.5</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-262.5" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->262.5</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 262.5</span></span><small
                                class="UovLc">05-13-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-465818" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->262</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Weapons Master</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-262" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->262</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Weapons Master</span></span><small class="UovLc">05-12-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-465818" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->262</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Weapons Master</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-464931" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->261</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Monster Lady</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-261" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->261</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Monster Lady</span></span><small class="UovLc">05-08-2019</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-464205" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->260</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Damn Gramps Are Kind as Hell</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-260" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->260</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Damn Gramps Are Kind as Hell</span></span><small
                                class="UovLc">05-05-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-464175" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->259</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->No Good Soldiers Under Evil Dragon</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-259" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->259</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->No Good Soldiers Under Evil Dragon</span></span><small
                                class="UovLc">05-05-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-464152" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->258</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Seeking Your Own Death</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-258" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->258</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Seeking Your Own Death</span></span><small
                                class="UovLc">05-05-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-464152" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->258</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Seeking Your Own Death</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-463916" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->257</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Think Being a Fleet Admiral is Fun?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-257" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->257</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Think Being a Fleet Admiral is Fun?</span></span><small
                                class="UovLc">05-04-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-463916" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->257</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Think Being a Fleet Admiral is Fun?</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462836" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->256</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Space Real Body</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-256" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->256</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Space Real Body</span></span><small class="UovLc">04-30-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462836" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->256</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Space Real Body</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462674" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->255</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 255</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-255" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->255</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 255</span></span><small class="UovLc">04-29-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462674" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->255</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 255</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462666" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->254</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Holy Corpses Battle Form</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-254" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->254</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Holy Corpses Battle Form</span></span><small
                                class="UovLc">04-29-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462666" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->254</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Holy Corpses Battle Form</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462492" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->253</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Is It Over For Evil Dragon For Real This Time?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-253" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->253</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Is It Over For Evil Dragon For Real This Time?</span></span><small
                                class="UovLc">04-29-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462492" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->253</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Is It Over For Evil Dragon For Real This Time?</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462465" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->252</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->It Would Be Great If You Weren’t My Student</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-252" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->252</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->It Would Be Great If You Weren’t My Student</span></span><small
                                class="UovLc">04-29-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462456" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->251</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Talent in War</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-251" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->251</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Talent in War</span></span><small class="UovLc">04-29-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462456" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->251</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Talent in War</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462372" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->250</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 250</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-250" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->250</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 250</span></span><small class="UovLc">04-28-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-462372" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->250</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 250</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-461721" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->249</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Miss, Come with Me to the Fleet</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-249" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->249</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Miss, Come with Me to the Fleet</span></span><small
                                class="UovLc">04-26-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-460466" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->248</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 248</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-248" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->248</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 248</span></span><small class="UovLc">04-22-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-460466" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->248</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 248</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-460461" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->247</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Mu Kills</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-247" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->247</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Mu Kills</span></span><small class="UovLc">04-22-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-460438" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->246</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Jukun Wants to Eat Evil Dragon</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-246" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->246</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Jukun Wants to Eat Evil Dragon</span></span><small
                                class="UovLc">04-22-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-460438" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->246</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Jukun Wants to Eat Evil Dragon</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-460174" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->245</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Teacher and Student</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-245" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->245</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Teacher and Student</span></span><small class="UovLc">04-21-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-460174" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->245</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Teacher and Student</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459957" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->244</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fleet Admiral Mu, Student Mu</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-244" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->244</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fleet Admiral Mu, Student Mu</span></span><small
                                class="UovLc">04-20-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459863" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->243</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Is Foster Father Mu a Good Person?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-243" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->243</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Is Foster Father Mu a Good Person?</span></span><small
                                class="UovLc">04-20-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459440" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->242</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Black Peppered Steak Flavor</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-242" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->242</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Black Peppered Steak Flavor</span></span><small
                                class="UovLc">04-18-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459440" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->242</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Black Peppered Steak Flavor</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459362" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->241</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Extremely Friendly Greeting</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-241" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->241</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Extremely Friendly Greeting</span></span><small
                                class="UovLc">04-18-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459362" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->241</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Extremely Friendly Greeting</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459324" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->240</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Scarily Laughing Like Ding Yuan</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-240" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->240</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Scarily Laughing Like Ding Yuan</span></span><small
                                class="UovLc">04-18-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459324" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->240</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Scarily Laughing Like Ding Yuan</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459170" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->239</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Crispy</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-239" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->239</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Crispy</span></span><small class="UovLc">04-17-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459170" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->239</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Crispy</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459148" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->238</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->What Animal Dares to Eat Kun?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-238" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->238</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->What Animal Dares to Eat Kun?</span></span><small
                                class="UovLc">04-17-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459148" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->238</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->What Animal Dares to Eat Kun?</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-459097" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->237</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->My Jukun Army Of A Million Soldiers</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-237" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->237</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->My Jukun Army Of A Million Soldiers</span></span><small
                                class="UovLc">04-17-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-456650" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->236</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Poison to Others, Energy to Pao</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-236" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->236</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Poison to Others, Energy to Pao</span></span><small
                                class="UovLc">04-12-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-456650" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->236</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Poison to Others, Energy to Pao</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-456490" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->235</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 235</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-235" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->235</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 235</span></span><small class="UovLc">04-11-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-456490" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->235</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 235</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-456198" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->234</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Can Slay Angels</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-234" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->234</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Can Slay Angels</span></span><small class="UovLc">04-10-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-456198" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->234</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Can Slay Angels</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-456054" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->233</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Mistress, You Really Do Care About Me</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-233" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->233</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Mistress, You Really Do Care About Me</span></span><small
                                class="UovLc">04-10-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-456054" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->233</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Mistress, You Really Do Care About Me</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-455703" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->232</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Losing the Golden Feathers, Worse Than a Chicken</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-232" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->232</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Losing the Golden Feathers, Worse Than a Chicken</span></span><small
                                class="UovLc">04-09-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-455574" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->231</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 231</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-231" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->231</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 231</span></span><small class="UovLc">04-08-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-455574" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->231</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 231</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-455047" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->230</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Mistress is Mine, Evil Dragon is Dead</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-230" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->230</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Mistress is Mine, Evil Dragon is Dead</span></span><small
                                class="UovLc">04-07-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-455033" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->229</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Jukun Fleet</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-229" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->229</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Jukun Fleet</span></span><small class="UovLc">04-06-2019</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-454661" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->228</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Gentle Iron Fist</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-228" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->228</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Gentle Iron Fist</span></span><small
                                class="UovLc">04-06-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-453733" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->227</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I’m Not Arrogant</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-227" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->227</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I’m Not Arrogant</span></span><small
                                class="UovLc">04-02-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-453527" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->226</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Solo God, Shit Team Player</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-226" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->226</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Solo God, Shit Team Player</span></span><small
                                class="UovLc">04-01-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-453104" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->225</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Die On The Spot</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-225" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->225</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Die On The Spot</span></span><small class="UovLc">03-30-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-453104" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->225</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Die On The Spot</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-452875" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->224</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Rap Battle</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-224" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->224</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Rap Battle</span></span><small class="UovLc">03-29-2019</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-452607" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->223</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Lay Down One's Arms</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-223" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->223</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Lay Down One's Arms</span></span><small
                                class="UovLc">03-28-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-451802" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->222</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Am Kind</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-222" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->222</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Am Kind</span></span><small class="UovLc">03-25-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-451802" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->222</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Am Kind</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-451787" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->221</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Half Body Monster</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-221" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->221</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Half Body Monster</span></span><small
                                class="UovLc">03-25-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-451614" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->220</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Two-Legged Yayu</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-220" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->220</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Two-Legged Yayu</span></span><small class="UovLc">03-24-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-451614" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->220</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Two-Legged Yayu</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-451019" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->219</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->My APM is Too High</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-219" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->219</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->My APM is Too High</span></span><small
                                class="UovLc">03-22-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-450794" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->218</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Sword of State</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-218" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->218</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Sword of State</span></span><small class="UovLc">03-21-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-450794" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->218</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Sword of State</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-450371" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->217</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Every Man for Himself</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-217" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->217</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Every Man for Himself</span></span><small
                                class="UovLc">03-21-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-450133" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->216</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Beiyang’s Traitor</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-216" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->216</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Beiyang’s Traitor</span></span><small
                                class="UovLc">03-20-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-449888" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->215</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ch.215</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-215" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->215</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ch.215</span></span><small class="UovLc">03-19-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-449888" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->215</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ch.215</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-449870" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->214</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Warriors Are Easy to Get, But Not Strategists</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-214" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->214</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Warriors Are Easy to Get, But Not Strategists</span></span><small
                                class="UovLc">03-19-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-449870" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->214</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Warriors Are Easy to Get, But Not Strategists</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-449601" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->213</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ch.213</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-213" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->213</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ch.213</span></span><small class="UovLc">03-18-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-449519" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->212</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 212</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-212" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->212</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 212</span></span><small
                                class="UovLc">03-17-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-449402" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->211</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Gun Smoke</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-211" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->211</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Gun Smoke</span></span><small class="UovLc">03-17-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-449402" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->211</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Gun Smoke</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-449385" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->210</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->This Old Woman Doesn’t Kill</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-210" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->210</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->This Old Woman Doesn’t Kill</span></span><small
                                class="UovLc">03-17-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-449373" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->209</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Next Stop, Megrez Dynasty</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-209" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->209</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Next Stop, Megrez Dynasty</span></span><small
                                class="UovLc">03-17-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-449309" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->208</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fleet Admiral Secretly Observes Talented Person</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-208" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->208</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fleet Admiral Secretly Observes Talented Person</span></span><small
                                class="UovLc">03-16-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-448935" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->207</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Beiyang’s Uneducated Villager</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-207" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->207</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Beiyang’s Uneducated Villager</span></span><small
                                class="UovLc">03-16-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-448602" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->206</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->King of Solitary</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-206" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->206</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->King of Solitary</span></span><small class="UovLc">03-14-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-448602" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->206</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->King of Solitary</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-448539" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->205</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Evil Dragon and His Sinister Plot</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-205" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->205</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Evil Dragon and His Sinister Plot</span></span><small
                                class="UovLc">03-14-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-448345" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->204</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Honing Acting Skills</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-204" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->204</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Honing Acting Skills</span></span><small
                                class="UovLc">03-13-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-447756" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->203</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Friendly Greetings</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-203" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->203</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Friendly Greetings</span></span><small class="UovLc">03-13-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-447756" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->203</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Friendly Greetings</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-447053" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->202</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I’m Sorry, It’s My Fault</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-202" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->202</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I’m Sorry, It’s My Fault</span></span><small
                                class="UovLc">03-11-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-446697" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->201</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->He Reduced the Powerful Enemy Ships to Dust</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-201" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->201</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->He Reduced the Powerful Enemy Ships to Dust</span></span><small
                                class="UovLc">03-09-2019</small></a></span></li>
                      </ul>
                    </div>
                    <div id="chapters-tab-pane-5" aria-labelledby="chapters-tab-tab-5" role="tabpanel"
                      aria-hidden="true" class="tab-pane">
                      <ul class="MWqeC list-group">
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-200"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->200</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Battle Puppet Reveals Its True Form</span></span><small
                              class="UovLc">03-05-2019</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-199"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->199</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->The Sound of a Laugh Throughout the Universe</span></span><small
                              class="UovLc">03-05-2019</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-198"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->198</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Everyone Is Responsible</span></span><small class="UovLc">03-05-2019</small></a>
                        </li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-197"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->197</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Wouldn’t It Be Nice If You Surrender Reasonably?</span></span><small
                              class="UovLc">03-03-2019</small></a></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-444941" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->196</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Yanyu Jiangnan</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-196" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->196</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Yanyu Jiangnan</span></span><small class="UovLc">03-03-2019</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-444509" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->195</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Crow Rams Into Main Ship</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-195" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->195</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Crow Rams Into Main Ship</span></span><small
                                class="UovLc">03-02-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-444193" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->194</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Tasty Snake Soup</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-194" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->194</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Tasty Snake Soup</span></span><small
                                class="UovLc">03-01-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-444086" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->193</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->A Priceless Ring</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-193" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->193</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->A Priceless Ring</span></span><small class="UovLc">02-28-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-444086" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->193</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->A Priceless Ring</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-443512" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->192</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ten Thousand Swords Piercing Planet</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-192" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->192</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ten Thousand Swords Piercing Planet</span></span><small
                                class="UovLc">02-27-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-443512" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->192</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ten Thousand Swords Piercing Planet</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-443369" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->191</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Draw Sword?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-191" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->191</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Draw Sword?</span></span><small class="UovLc">02-26-2019</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-442657" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->190</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Unknown Model Battle Puppet</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-190" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->190</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Unknown Model Battle Puppet</span></span><small
                                class="UovLc">02-25-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-442351" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->189</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Want to Slay the Dragon</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-189" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->189</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Want to Slay the Dragon</span></span><small
                                class="UovLc">02-25-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-440965" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->188</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Wings of Blood Crossing the Galaxy</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-188" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->188</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Wings of Blood Crossing the Galaxy</span></span><small
                                class="UovLc">02-23-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-437861" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->187</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Having A Clear Conscience</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-187" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->187</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Having A Clear Conscience</span></span><small
                                class="UovLc">02-15-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-437698" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->186</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Grilled Snake With Cumin</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-186" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->186</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Grilled Snake With Cumin</span></span><small
                                class="UovLc">02-15-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-437698" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->186</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Grilled Snake With Cumin</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-437452" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->185</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dragon Queen Studies and Not Fight</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-185" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->185</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dragon Queen Studies and Not Fight</span></span><small
                                class="UovLc">02-14-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-437452" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->185</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dragon Queen Studies and Not Fight</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-437331" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->184</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Burning All Her Holy Blood</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-184" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->184</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Burning All Her Holy Blood</span></span><small
                                class="UovLc">02-13-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-437293" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->183</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Nothing Ventured, Nothing Gained</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-183" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->183</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Nothing Ventured, Nothing Gained</span></span><small
                                class="UovLc">02-13-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-437275" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->182</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Victory?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-182" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->182</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Victory?</span></span><small class="UovLc">02-13-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-437240" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->181</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I, Himiko, Would Rather Starve to Death Than…</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-181" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->181</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I, Himiko, Would Rather Starve to Death Than…</span></span><small
                                class="UovLc">02-13-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-437240" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->181</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I, Himiko, Would Rather Starve to Death Than…</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-437223" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->180</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Three Thousand Strands of Blue Hair For A Moment of
                                  Arrogance</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-180" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->180</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Three Thousand Strands of Blue Hair For A Moment of
                                  Arrogance</span></span><small class="UovLc">02-13-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434692" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->179</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Watching the Show</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-179" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->179</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Watching the Show</span></span><small class="UovLc">02-12-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434692" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->179</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Watching the Show</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434518" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->178</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Start the Game and We’ll Give You the Snake Style Blade For
                                  Free</span></span></a><a href="https://mangahub.io/chapter/iron-ladies/chapter-178"
                              class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->178</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Start the Game and We’ll Give You the Snake Style Blade For
                                  Free</span></span><small class="UovLc">02-11-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434518" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->178</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Start the Game and We’ll Give You the Snake Style Blade For
                                  Free</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434408" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->177</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fresh, Angry, and Bold Teenager</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-177" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->177</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fresh, Angry, and Bold Teenager</span></span><small
                                class="UovLc">02-11-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434408" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->177</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fresh, Angry, and Bold Teenager</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434127" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->176</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Hungry Beast Planet</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-176" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->176</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Hungry Beast Planet</span></span><small
                                class="UovLc">02-10-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434096" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->175</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->One High Explosives Arrow…</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-175" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->175</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->One High Explosives Arrow…</span></span><small
                                class="UovLc">02-10-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434096" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->175</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->One High Explosives Arrow…</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434082" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->174</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Assassins Forced to be Heavy Tanks</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-174" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->174</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Assassins Forced to be Heavy Tanks</span></span><small
                                class="UovLc">02-10-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434082" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->174</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Assassins Forced to be Heavy Tanks</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434081" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->173</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Seeking to Follow the Thousand Mile Horse on Foot</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-173" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->173</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Seeking to Follow the Thousand Mile Horse on Foot</span></span><small
                                class="UovLc">02-10-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434062" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->172</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Thick Clouds Above the Blue Sea Cover the Snowy Mountain</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-172" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->172</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Thick Clouds Above the Blue Sea Cover the Snowy Mountain</span></span><small
                                class="UovLc">02-10-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-434062" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->172</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Thick Clouds Above the Blue Sea Cover the Snowy
                                  Mountain</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-433956" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->171</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fighting Through Tens of Thousands of Miles, Going Over Obstacles Like
                                  Mountains</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-171" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->171</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fighting Through Tens of Thousands of Miles, Going Over Obstacles Like
                                  Mountains</span></span><small class="UovLc">02-09-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-433956" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->171</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fighting Through Tens of Thousands of Miles, Going Over Obstacles Like
                                  Mountains</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-433901" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->170</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->There’s No Way We’ll Retire</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-170" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->170</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->There’s No Way We’ll Retire</span></span><small
                                class="UovLc">02-09-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-433897" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->169</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Man of Character</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-169" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->169</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Man of Character</span></span><small
                                class="UovLc">02-09-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-433725" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->168</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->To Work Like a Slave</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-168" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->168</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->To Work Like a Slave</span></span><small
                                class="UovLc">02-08-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-433715" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->167</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Special Agent Immortal Godmother</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-167" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->167</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Special Agent Immortal Godmother</span></span><small
                                class="UovLc">02-08-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-433609" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->166</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Three Kingdoms at the End of the Han Dynasty ♪</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-166" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->166</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Three Kingdoms at the End of the Han Dynasty ♪</span></span><small
                                class="UovLc">02-08-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432726" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->165</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Sis’s Roasted Pork and Chicken Rice!</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-165" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->165</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Sis’s Roasted Pork and Chicken Rice!</span></span><small
                                class="UovLc">02-04-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432726" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->165</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Sis’s Roasted Pork and Chicken Rice!</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432622" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->164</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->So What If I Kill You?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-164" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->164</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->So What If I Kill You?</span></span><small
                                class="UovLc">02-03-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432622" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->164</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->So What If I Kill You?</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432598" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->163</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Moon of Qin Shines Yet Over the Passes of Han.</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-163" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->163</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Moon of Qin Shines Yet Over the Passes of Han.</span></span><small
                                class="UovLc">02-03-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432598" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->163</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Moon of Qin Shines Yet Over the Passes of Han.</span></span></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432591" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->162</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Heavenly King Covers Earth Tiger</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-162" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->162</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Heavenly King Covers Earth Tiger</span></span><small
                                class="UovLc">02-03-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432561" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->161</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Sis Faces Death Head On with a Smile</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-161" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->161</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Sis Faces Death Head On with a Smile</span></span><small
                                class="UovLc">02-03-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432560" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->160</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Can Fight Ten at Once?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-160" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->160</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Can Fight Ten at Once?</span></span><small
                                class="UovLc">02-03-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432560" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->160</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Can Fight Ten at Once?</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432535" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->159</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Click and We’ll Give You Iron Pagoda Berserker Version For
                                  Free</span></span></a><a href="https://mangahub.io/chapter/iron-ladies/chapter-159"
                              class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->159</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Click and We’ll Give You Iron Pagoda Berserker Version For
                                  Free</span></span><small class="UovLc">02-03-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432531" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->158</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Emperor Personally Leads the Battle</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-158" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->158</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Emperor Personally Leads the Battle</span></span><small
                                class="UovLc">02-03-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432086" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->157</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Rank Two Puppet</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-157" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->157</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Rank Two Puppet</span></span><small class="UovLc">02-01-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432086" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->157</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Rank Two Puppet</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-432053" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->156</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Invincible Waist Power</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-156" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->156</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Invincible Waist Power</span></span><small
                                class="UovLc">02-01-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-431751" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->155</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Did You Forget How Scary Big Sis Is?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-155" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->155</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Did You Forget How Scary Big Sis Is?</span></span><small
                                class="UovLc">01-31-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-431752" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->154</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Think I Wouldn’t Get Mad? You Think Foster Mother is a Sick
                                  Kitten?</span></span></a><a href="https://mangahub.io/chapter/iron-ladies/chapter-154"
                              class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->154</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Think I Wouldn’t Get Mad? You Think Foster Mother is a Sick
                                  Kitten?</span></span><small class="UovLc">01-31-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-431752" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->154</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Think I Wouldn’t Get Mad? You Think Foster Mother is a Sick
                                  Kitten?</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-431491" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->153</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 153</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-153" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->153</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 153</span></span><small
                                class="UovLc">01-30-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-431349" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->152</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Tell Foster Mother Who Dared to Hit You</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-152" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->152</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Tell Foster Mother Who Dared to Hit You</span></span><small
                                class="UovLc">01-29-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-431345" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->151</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Unarmed, Honest People</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-151" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->151</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Unarmed, Honest People</span></span><small
                                class="UovLc">01-29-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-431338" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->150</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Bad (Xiong) Kids Don’t Cause Trouble</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-150" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->150</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Bad (Xiong) Kids Don’t Cause Trouble</span></span><small
                                class="UovLc">01-29-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-431338" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->150</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Bad (Xiong) Kids Don’t Cause Trouble</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-431321" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->149</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 149</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-149" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->149</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 149</span></span><small
                                class="UovLc">01-29-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-431104" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->148</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 148</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-148" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->148</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 148</span></span><small class="UovLc">01-28-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-431104" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->148</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 148</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-430793" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->147</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Please Accept Me</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-147" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->147</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Please Accept Me</span></span><small
                                class="UovLc">01-27-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-430731" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->146</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Am Serious</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-146" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->146</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Am Serious</span></span><small class="UovLc">01-27-2019</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-430520" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->145</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fleet Admirals are Civil Servants</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-145" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->145</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fleet Admirals are Civil Servants</span></span><small
                                class="UovLc">01-26-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-430520" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->145</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fleet Admirals are Civil Servants</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-430289" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->144</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 144</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-144" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->144</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 144</span></span><small
                                class="UovLc">01-25-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-429543" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->143</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Travel Across the Universe with Me</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-143" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->143</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Travel Across the Universe with Me</span></span><small
                                class="UovLc">01-23-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428950" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->142</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Click and We’ll Give You Immortal Godmother For Free</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-142" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->142</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Click and We’ll Give You Immortal Godmother For Free</span></span><small
                                class="UovLc">01-22-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428950" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->142</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Click and We’ll Give You Immortal Godmother For Free</span></span></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428901" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->141</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->How Can One Be a Prince Charming When One Isn’t Handsome?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-141" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->141</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->How Can One Be a Prince Charming When One Isn’t Handsome?</span></span><small
                                class="UovLc">01-22-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428902" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->140</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Thought Foster Father is a Good Person?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-140" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->140</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Thought Foster Father is a Good Person?</span></span><small
                                class="UovLc">01-22-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428902" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->140</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Thought Foster Father is a Good Person?</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428394" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->139</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 139</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-139" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->139</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 139</span></span><small class="UovLc">01-20-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428394" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->139</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 139</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428396" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->138</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 138</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-138" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->138</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 138</span></span><small class="UovLc">01-20-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428396" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->138</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 138</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428395" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->137</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 137</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-137" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->137</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 137</span></span><small
                                class="UovLc">01-20-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428151" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->136</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 136</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-136" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->136</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 136</span></span><small
                                class="UovLc">01-19-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428064" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->135</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Persuasion Through Reasoning</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-135" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->135</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Persuasion Through Reasoning</span></span><small
                                class="UovLc">01-19-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-428064" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->135</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Persuasion Through Reasoning</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-427514" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->134</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Girls Are Here to Destroy Things</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-134" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->134</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Girls Are Here to Destroy Things</span></span><small
                                class="UovLc">01-17-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-427514" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->134</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Girls Are Here to Destroy Things</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-427098" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->133</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Do Whatever I Want</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-133" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->133</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Do Whatever I Want</span></span><small
                                class="UovLc">01-16-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-427098" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->133</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Do Whatever I Want</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-427095" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->132</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dark Clouds Covers the City Waiting to Bring it Down</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-132" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->132</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dark Clouds Covers the City Waiting to Bring it Down</span></span><small
                                class="UovLc">01-16-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-427021" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->131</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Return of the Evil Dragon</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-131" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->131</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Return of the Evil Dragon</span></span><small
                                class="UovLc">01-16-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-426731" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->130</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Rank One Puppet Substitution</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-130" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->130</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Rank One Puppet Substitution</span></span><small
                                class="UovLc">01-15-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-426267" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->129</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Out of the Way, I’m Starting…</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-129" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->129</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Out of the Way, I’m Starting…</span></span><small
                                class="UovLc">01-14-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-426140" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->128</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Drink Coffee, Eat Mousse Cake</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-128" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->128</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Drink Coffee, Eat Mousse Cake</span></span><small
                                class="UovLc">01-13-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-426140" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->128</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Drink Coffee, Eat Mousse Cake</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-426115" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->127</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->It’s Over for the Evil Dragon?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-127" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->127</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->It’s Over for the Evil Dragon?</span></span><small
                                class="UovLc">01-13-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-425837" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->126</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 126</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-126" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->126</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 126</span></span><small
                                class="UovLc">01-12-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-425834" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->125</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 125</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-125" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->125</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 125</span></span><small class="UovLc">01-12-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-425834" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->125</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 125</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-425772" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->124</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ants Biting an Elephant to Death, Humans Crippling Gods</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-124" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->124</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ants Biting an Elephant to Death, Humans Crippling Gods</span></span><small
                                class="UovLc">01-12-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-425772" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->124</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ants Biting an Elephant to Death, Humans Crippling
                                  Gods</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-425687" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->123</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 123</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-123" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->123</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 123</span></span><small
                                class="UovLc">01-12-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-425389" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->122</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 122</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-122" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->122</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 122</span></span><small
                                class="UovLc">01-10-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-425293" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->121</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Will Take Responsibility</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-121" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->121</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Will Take Responsibility</span></span><small
                                class="UovLc">01-10-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424983" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->120</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 120</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-120" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->120</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 120</span></span><small
                                class="UovLc">01-09-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424589" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->119</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Are Shuras People?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-119" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->119</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Are Shuras People?</span></span><small
                                class="UovLc">01-09-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424510" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->118</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 118</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-118" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->118</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 118</span></span><small class="UovLc">01-08-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424510" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->118</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 118</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424502" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->117</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 117</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-117" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->117</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 117</span></span><small class="UovLc">01-08-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424502" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->117</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 117</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424426" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->116</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 116</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-116" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->116</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 116</span></span><small class="UovLc">01-08-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424426" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->116</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 116</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424406" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->115</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 115</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-115" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->115</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 115</span></span><small class="UovLc">01-08-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424406" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->115</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 115</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424393" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->114</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Villains Indicted First</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-114" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->114</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Villains Indicted First</span></span><small
                                class="UovLc">01-08-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424134" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->113</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Smiles a Little</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-113" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->113</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Smiles a Little</span></span><small
                                class="UovLc">01-07-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424134" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->113</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Smiles a Little</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-424095" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->112</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Yihuo Planet Lord Provokes Evil Dragon</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-112" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->112</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Yihuo Planet Lord Provokes Evil Dragon</span></span><small
                                class="UovLc">01-07-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-423797" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->111</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Feel Free to Shoot My Head Off If You Disagree.</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-111" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->111</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Feel Free to Shoot My Head Off If You Disagree.</span></span><small
                                class="UovLc">01-06-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-423713" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->110</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 110</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-110" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->110</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 110</span></span><small
                                class="UovLc">01-05-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-423115" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->109</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 109</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-109" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->109</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 109</span></span><small
                                class="UovLc">01-03-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-423114" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->108</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 108</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-108" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->108</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 108</span></span><small class="UovLc">01-03-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-423114" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->108</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 108</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-423083" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->107</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Demon Mu of Melody</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-107" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->107</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Demon Mu of Melody</span></span><small
                                class="UovLc">01-03-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-423082" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->106</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Evil Dragon Protects the Shura</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-106" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->106</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Evil Dragon Protects the Shura</span></span><small
                                class="UovLc">01-03-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-423082" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->106</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Evil Dragon Protects the Shura</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-423061" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->105</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 105</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-105" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->105</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 105</span></span><small
                                class="UovLc">01-03-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-422975" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->104</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 104</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-104" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->104</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 104</span></span><small
                                class="UovLc">01-03-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-422962" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->103</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 103</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-103" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->103</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 103</span></span><small class="UovLc">01-03-2019</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-422962" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->103</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 103</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-422379" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->102</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 102</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-102" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->102</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 102</span></span><small
                                class="UovLc">01-01-2019</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-422251" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->101</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Inextinguishable Warrior Spirit</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-101" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->101</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Inextinguishable Warrior Spirit</span></span><small
                                class="UovLc">01-01-2019</small></a></span></li>
                      </ul>
                    </div>
                    <div id="chapters-tab-pane-6" aria-labelledby="chapters-tab-tab-6" role="tabpanel"
                      aria-hidden="true" class="tab-pane">
                      <ul class="MWqeC list-group">
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-100"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->100</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Wild Beasts Don’t Need Techniques</span></span><small
                              class="UovLc">01-01-2019</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-99"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->99</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Tearing Steel Plates Apart with Bare Hands</span></span><small
                              class="UovLc">01-01-2019</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-98"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->98</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Gentle Girls Don’t Hit People</span></span><small
                              class="UovLc">01-01-2019</small></a></li>
                        <li class="_287KE list-group-item"><a href="https://mangahub.io/chapter/iron-ladies/chapter-97"
                            class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                class="text-secondary _3D1SJ">#<!-- -->97</span><span class="_2IG5P"> <!-- -->-
                                <!-- -->Zhen Yuan is Obedient and Doesn’t Cause Trouble</span></span><small
                              class="UovLc">01-01-2019</small></a></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-422052" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->96</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Afraid That You Aren’t Brave Enough</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-96" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->96</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Afraid That You Aren’t Brave Enough</span></span><small
                                class="UovLc">12-31-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-422052" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->96</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Afraid That You Aren’t Brave Enough</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-422002" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->95</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 95</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-95" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->95</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 95</span></span><small class="UovLc">12-31-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-422002" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->95</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 95</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-421887" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->94</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->A Powerful Bodyguard</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-94" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->94</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->A Powerful Bodyguard</span></span><small
                                class="UovLc">12-30-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-421888" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->93</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Please Let Me be the Foster Mother</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-93" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->93</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Please Let Me be the Foster Mother</span></span><small
                                class="UovLc">12-30-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-421888" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->93</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Please Let Me be the Foster Mother</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-421841" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->92</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 92</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-92" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->92</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 92</span></span><small class="UovLc">12-30-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-421839" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->91</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father of the Whole Universe</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-91" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->91</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father of the Whole Universe</span></span><small
                                class="UovLc">12-30-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-421521" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->90</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dragon King’s Real Body</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-90" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->90</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dragon King’s Real Body</span></span><small
                                class="UovLc">12-29-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-421369" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->89</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Puts Out a Long Line to Catch a Big Fish</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-89" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->89</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Puts Out a Long Line to Catch a Big Fish</span></span><small
                                class="UovLc">12-28-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-421042" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->88</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 88</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-88" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->88</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 88</span></span><small class="UovLc">12-27-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-421042" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->88</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 88</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-421018" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->87</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Crispy Chicken Flavor</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-87" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->87</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Crispy Chicken Flavor</span></span><small
                                class="UovLc">12-27-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-421018" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->87</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Crispy Chicken Flavor</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-420710" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->86</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Evil Dragon Traps People</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-86" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->86</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Evil Dragon Traps People</span></span><small
                                class="UovLc">12-26-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-420710" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->86</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Evil Dragon Traps People</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-420625" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->85</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->What Should I Do If Soul Tier Goddess Steals Dan Dan Away!</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-85" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->85</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->What Should I Do If Soul Tier Goddess Steals Dan Dan Away!</span></span><small
                                class="UovLc">12-26-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-420461" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->84</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 84</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-84" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->84</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 84</span></span><small class="UovLc">12-25-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-420454" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->83</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 83</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-83" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->83</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 83</span></span><small class="UovLc">12-25-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-420454" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->83</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 83</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-420439" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->82</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 82</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-82" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->82</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 82</span></span><small class="UovLc">12-25-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-420022" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->81</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 81 - Furious Big Sis</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-81" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->81</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 81 - Furious Big Sis</span></span><small
                                class="UovLc">12-24-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-420022" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->81</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 81 - Furious Big Sis</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419922" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->80</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 80</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-80" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->80</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 80</span></span><small class="UovLc">12-24-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419922" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->80</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 80</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419865" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->79</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 79</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-79" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->79</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 79</span></span><small class="UovLc">12-23-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419853" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->78</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 78</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-78" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->78</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 78</span></span><small class="UovLc">12-23-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419781" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->77</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Evil Dragon Bites</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-77" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->77</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->The Evil Dragon Bites</span></span><small
                                class="UovLc">12-23-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419644" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->76</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 76</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-76" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->76</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 76</span></span><small class="UovLc">12-22-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419644" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->76</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 76</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419637" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->75</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 75</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-75" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->75</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 75</span></span><small class="UovLc">12-22-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419551" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->74</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Refuses to be Convinced Until One is Faced with Grim
                                  Reality</span></span></a><a href="https://mangahub.io/chapter/iron-ladies/chapter-74"
                              class="_3pfyN"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->74</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Refuses to be Convinced Until One is Faced with Grim
                                  Reality</span></span><small class="UovLc">12-22-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419099" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->73</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 73</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-73" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->73</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 73</span></span><small class="UovLc">12-21-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419006" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->72</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->A Sophisticated Warlord is Scary</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-72" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->72</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->A Sophisticated Warlord is Scary</span></span><small
                                class="UovLc">12-21-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-419006" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->72</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->A Sophisticated Warlord is Scary</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418522" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->71</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Seventh Prince Calls Out the Dragon King</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-71" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->71</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Seventh Prince Calls Out the Dragon King</span></span><small
                                class="UovLc">12-20-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418522" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->71</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Seventh Prince Calls Out the Dragon King</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418367" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->70</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Mu Takes on Talents from All Over</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-70" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->70</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Mu Takes on Talents from All Over</span></span><small
                                class="UovLc">12-20-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418167" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->69</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 69</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-69" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->69</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 69</span></span><small class="UovLc">12-19-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418170" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->68</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 68</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-68" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->68</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 68</span></span><small class="UovLc">12-19-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418170" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->68</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 68</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418168" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->67</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 67</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-67" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->67</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 67</span></span><small class="UovLc">12-19-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418168" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->67</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 67</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418171" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->66</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 66</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-66" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->66</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 66</span></span><small class="UovLc">12-19-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418169" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->65</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 65</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-65" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->65</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 65</span></span><small class="UovLc">12-19-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418164" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->64</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 64</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-64" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->64</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 64</span></span><small class="UovLc">12-19-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418164" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->64</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 64</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418166" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->63</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 63</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-63" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->63</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 63</span></span><small class="UovLc">12-19-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418166" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->63</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 63</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418163" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->62</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 62</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-62" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->62</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 62</span></span><small class="UovLc">12-19-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418165" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->61</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 61</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-61" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->61</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 61</span></span><small class="UovLc">12-19-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418148" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->60</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fallen Into Holy Blood Lake</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-60" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->60</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fallen Into Holy Blood Lake</span></span><small
                                class="UovLc">12-19-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-418148" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->60</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Fallen Into Holy Blood Lake</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-417543" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->59</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 59</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-59" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->59</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 59</span></span><small class="UovLc">12-18-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-417324" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->58</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 58</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-58" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->58</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 58</span></span><small class="UovLc">12-18-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-417324" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->58</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 58</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-417236" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->57</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 57</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-57" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->57</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 57</span></span><small class="UovLc">12-17-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-417236" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->57</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 57</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416928" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->56</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Seek Power</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-56" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->56</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Seek Power</span></span><small class="UovLc">12-16-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416928" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->56</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Seek Power</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416930" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->55</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Surrounded by Three Thousand Iron Ladies</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-55" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->55</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Surrounded by Three Thousand Iron Ladies</span></span><small
                                class="UovLc">12-16-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416930" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->55</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Surrounded by Three Thousand Iron Ladies</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416819" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->54</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 54</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-54" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->54</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 54</span></span><small class="UovLc">12-15-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416483" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->53</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 53</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-53" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->53</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 53</span></span><small class="UovLc">12-14-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416484" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->52</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 52</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-52" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->52</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 52</span></span><small class="UovLc">12-14-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416484" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->52</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 52</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416485" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->51</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 51</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-51" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->51</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 51</span></span><small class="UovLc">12-14-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416474" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->50</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Straight into the Monster’s Den</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-50" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->50</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Straight into the Monster’s Den</span></span><small
                                class="UovLc">12-14-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416474" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->50</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Straight into the Monster’s Den</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416443" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->49</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->It Must Rain</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-49" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->49</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->It Must Rain</span></span><small class="UovLc">12-14-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-416441" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->48</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ding Yuan, Let’s Go</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-48" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->48</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Ding Yuan, Let’s Go</span></span><small
                                class="UovLc">12-14-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-415442" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->47</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 47</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-47" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->47</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 47</span></span><small class="UovLc">12-11-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-415442" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->47</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 47</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-415134" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->46</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Battle Between Heaven and Earth</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-46" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->46</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Battle Between Heaven and Earth</span></span><small
                                class="UovLc">12-11-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-415134" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->46</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Battle Between Heaven and Earth</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-415057" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->45</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 45</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-45" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->45</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 45</span></span><small class="UovLc">12-11-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414965" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->44</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 44</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-44" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->44</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Ladies 44</span></span><small class="UovLc">12-10-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414759" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->43</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Mu’s Dark Cuisine</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-43" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->43</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Mu’s Dark Cuisine</span></span><small
                                class="UovLc">12-09-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414662" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->42</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Mu Went Undercover</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-42" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->42</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Mu Went Undercover</span></span><small
                                class="UovLc">12-09-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414662" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->42</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Mu Went Undercover</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414509" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->41</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Mu’s Plan</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-41" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->41</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Foster Father Mu’s Plan</span></span><small
                                class="UovLc">12-08-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414500" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->40</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Goddess Resents the Professor</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-40" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->40</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Goddess Resents the Professor</span></span><small
                                class="UovLc">12-08-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414500" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->40</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Goddess Resents the Professor</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414463" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->39</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Professor Resents the Fleet Admiral</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-39" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->39</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Professor Resents the Fleet Admiral</span></span><small
                                class="UovLc">12-08-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414390" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->38</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Really Think You’re Mu Siyun?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-38" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->38</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Really Think You’re Mu Siyun?</span></span><small
                                class="UovLc">12-07-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414390" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->38</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Really Think You’re Mu Siyun?</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414359" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->37</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Creating a Soul Soldier</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-37" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->37</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Creating a Soul Soldier</span></span><small
                                class="UovLc">12-07-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-414039" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->36</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Beiyang’s New Goddess</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-36" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->36</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Beiyang’s New Goddess</span></span><small
                                class="UovLc">12-06-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-599293" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->35.5</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Great Warlord Mu Siyun (Original Sexual Version)</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-35.5" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->35.5</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Great Warlord Mu Siyun (Original Sexual Version)</span></span><small
                                class="UovLc">04-02-2020</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-413869" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->35</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Great Warlord Mu Siyun</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-35" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->35</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Great Warlord Mu Siyun</span></span><small
                                class="UovLc">12-05-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-413519" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->34</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I am Beiyang’s Fleet Admiral</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-34" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->34</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I am Beiyang’s Fleet Admiral</span></span><small
                                class="UovLc">12-04-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-413485" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->33</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 33</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-33" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->33</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chapter 33</span></span><small class="UovLc">12-04-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-413254" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->32</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Exhale and You Kneel</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-32" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->32</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Exhale and You Kneel</span></span><small
                                class="UovLc">12-03-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-413254" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->32</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Exhale and You Kneel</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-413238" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->31</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Punched the Admiral Flying</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-31" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->31</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Punched the Admiral Flying</span></span><small
                                class="UovLc">12-03-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-413238" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->31</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Punched the Admiral Flying</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-413237" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->30</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Fish Has Taken the Bait</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-30" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->30</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Fish Has Taken the Bait</span></span><small
                                class="UovLc">12-03-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-413158" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->29</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->On the Main Ship’s Deck</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-29" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->29</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->On the Main Ship’s Deck</span></span><small
                                class="UovLc">12-03-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-413158" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->29</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->On the Main Ship’s Deck</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412742" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->28</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Death-Seeking Squad Disobeys the Dragon</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-28" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->28</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Death-Seeking Squad Disobeys the Dragon</span></span><small
                                class="UovLc">12-02-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412742" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->28</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Death-Seeking Squad Disobeys the Dragon</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412743" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->27</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Sis Isn’t Crying, Big Sis’s Heart Isn’t Aching</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-27" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->27</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Sis Isn’t Crying, Big Sis’s Heart Isn’t Aching</span></span><small
                                class="UovLc">12-02-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412737" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->26</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Zhen Yuan the Lightning Tribulation</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-26" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->26</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Zhen Yuan the Lightning Tribulation</span></span><small
                                class="UovLc">12-02-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412739" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->25</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Carrying Away a Goddess</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-25" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->25</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Carrying Away a Goddess</span></span><small
                                class="UovLc">12-02-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412738" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->24</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Monstrous Dragon Cry</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-24" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->24</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Monstrous Dragon Cry</span></span><small
                                class="UovLc">12-02-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412738" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->24</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Monstrous Dragon Cry</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412689" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->23</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I’m Poor, I Don’t Have a Sports Car</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-23" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->23</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I’m Poor, I Don’t Have a Sports Car</span></span><small
                                class="UovLc">12-02-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412670" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->22</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Cloud-Piercing Laughter</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-22" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->22</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Cloud-Piercing Laughter</span></span><small
                                class="UovLc">12-02-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412670" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->22</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Cloud-Piercing Laughter</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412572" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->21</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Blades and Scale Swords</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-21" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->21</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Blades and Scale Swords</span></span><small
                                class="UovLc">12-01-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412572" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->21</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Blades and Scale Swords</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412571" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->20</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Like a God</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-20" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->20</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Like a God</span></span><small class="UovLc">12-01-2018</small></a></span>
                        </li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412570" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->19</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Self-Destruction via Holy Blood</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-19" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->19</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Self-Destruction via Holy Blood</span></span><small
                                class="UovLc">12-01-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412570" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->19</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Self-Destruction via Holy Blood</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412548" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->18</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Sis is Heading Out First</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-18" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->18</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Sis is Heading Out First</span></span><small
                                class="UovLc">12-01-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412548" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->18</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Big Sis is Heading Out First</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412409" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->17</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Surrounded by Insects</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-17" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->17</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Surrounded by Insects</span></span><small
                                class="UovLc">11-30-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412284" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->16</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Off to Insect Queen Planet</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-16" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->16</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Off to Insect Queen Planet</span></span><small
                                class="UovLc">11-30-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412284" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->16</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Off to Insect Queen Planet</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412319" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->15</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Prelude of the Battle</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-15" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->15</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Prelude of the Battle</span></span><small
                                class="UovLc">11-30-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412406" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->14</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dragon Empress, Devourer of Worlds</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-14" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->14</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dragon Empress, Devourer of Worlds</span></span><small
                                class="UovLc">11-30-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412406" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->14</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Dragon Empress, Devourer of Worlds</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-412405" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->13</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Rather Die Than Yield</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-13" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->13</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Rather Die Than Yield</span></span><small
                                class="UovLc">11-30-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411718" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->12</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->We’ll Be Sisters Again in Our Next Lives</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-12" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->12</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->We’ll Be Sisters Again in Our Next Lives</span></span><small
                                class="UovLc">11-28-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411718" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->12</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->We’ll Be Sisters Again in Our Next Lives</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411443" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->11</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->How Angels Are Made</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-11" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->11</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->How Angels Are Made</span></span><small
                                class="UovLc">11-28-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411728" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->10</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Not Knowing She’s the Goddess</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-10" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->10</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Not Knowing She’s the Goddess</span></span><small
                                class="UovLc">11-28-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411728" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->10</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Not Knowing She’s the Goddess</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411056" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->9</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Really Think I Won’t Touch You?</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-9" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->9</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Really Think I Won’t Touch You?</span></span><small
                                class="UovLc">11-27-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411056" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->9</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->You Really Think I Won’t Touch You?</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411055" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->8</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Still Need to Go Home and Cook</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-8" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->8</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->I Still Need to Go Home and Cook</span></span><small
                                class="UovLc">11-27-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411725" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->7</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chinese Medicine Sisters</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-7" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->7</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Chinese Medicine Sisters</span></span><small
                                class="UovLc">11-28-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411729" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->6</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->New Recruits' Training</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-6" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->6</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->New Recruits' Training</span></span><small
                                class="UovLc">11-28-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-410853" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->5</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Loser in a Ship</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-5" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->5</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Loser in a Ship</span></span><small
                                class="UovLc">11-26-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411726" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->4</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Paying a Female Steamer with His Own Life</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-4" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->4</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Paying a Female Steamer with His Own Life</span></span><small
                                class="UovLc">11-28-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411726" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->4</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Paying a Female Steamer with His Own Life</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-411727" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->3</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Choosing Life or Death</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-3" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->3</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Choosing Life or Death</span></span><small
                                class="UovLc">11-28-2018</small></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-410852" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->2</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Eight-Headed Serpent</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-2" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->2</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Eight-Headed Serpent</span></span><small
                                class="UovLc">11-26-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-410852" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->2</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Eight-Headed Serpent</span></span></a></span></li>
                        <li class="_287KE list-group-item"><span><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-410854" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->1</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Buddha</span></span></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-1" class="_3pfyN"><span
                                class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->1</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Buddha</span></span><small class="UovLc">11-26-2018</small></a><a
                              href="https://mangahub.io/chapter/iron-ladies/chapter-410854" rel="nofollow noreferrer"
                              class="_2U6DJ" title="Chapter"><span class="_8Qtbo text-secondary rkQM-"><span
                                  class="text-secondary _3D1SJ">#<!-- -->1</span><span class="_2IG5P"> <!-- -->-
                                  <!-- -->Iron Buddha</span></span></a></span></li>
                      </ul>
                    </div>
                    <div id="chapters-tab-pane-999" aria-labelledby="chapters-tab-tab-999" role="tabpanel"
                      aria-hidden="true" class="tab-pane">
                      <div>
                        <p class="ZyMp7">University graduate Mu Siyun sent his resume to the star fleet on a whim and
                          somehow became the Fleet Admiral! Ths is the story about an admiral with a harem of 3000
                          female soldiers conquering the universe…</p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
        <section id="comments">
          <div class="container-fluid">
            <div class="row">
              <div class="col-xs-12">
                <div class="_1G78a" style="background-color:#eee">
                  <div id="comments-tab">
                    <ul role="tablist" class="nav nav-pills">
                      <li role="presentation" class="active"><a id="comments-tab-tab-1" role="tab"
                          aria-controls="comments-tab-pane-1" aria-selected="true" href="#">Disqus</a></li>
                      <li role="presentation" class=""><a id="comments-tab-tab-2" role="tab"
                          aria-controls="comments-tab-pane-2" tabindex="-1" aria-selected="false" href="#">Old FB
                          Comment</a></li>
                    </ul>
                    <div class="tab-content">
                      <div id="comments-tab-pane-1" aria-labelledby="comments-tab-tab-1" role="tabpanel"
                        aria-hidden="false" class="_1cXol tab-pane active">
                        <div id="disqus_thread"><iframe id="dsq-app9037" name="dsq-app9037" allowtransparency="true"
                            frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%"
                            src="https://disqus.com/embed/comments/?base=default&amp;f=mangahub&amp;t_i=iron-ladies-23021&amp;t_u=https%3A%2F%2Fmangahub.io%2Fmanga%2Firon-ladies&amp;t_e=Iron%20Ladies&amp;t_d=Read%20Iron%20Ladies%20Manga%20Online%20for%20Free&amp;t_t=Iron%20Ladies&amp;s_o=default#version=4699de2a86f3c790aa59c8d1312129e4"
                            style="width: 1px !important; min-width: 100% !important; border: none !important; overflow: hidden !important; height: 1248px !important;"
                            horizontalscrolling="no" verticalscrolling="no"></iframe></div>
                      </div>
                      <div id="comments-tab-pane-2" aria-labelledby="comments-tab-tab-2" role="tabpanel"
                        aria-hidden="true" class="tab-pane">
                        <div class="fb-comments fb_iframe_widget fb_iframe_widget_fluid_desktop"
                          data-href="https://mangahub.io/manga/iron-ladies" data-width="880" data-numposts="10"
                          data-order-by="reverse_time" data-colorscheme="light" fb-xfbml-state="rendered"
                          fb-iframe-plugin-query="app_id=114098972554909&amp;color_scheme=light&amp;container_width=0&amp;height=100&amp;href=https%3A%2F%2Fmangahub.io%2Fmanga%2Firon-ladies&amp;locale=en_US&amp;numposts=10&amp;order_by=reverse_time&amp;sdk=joey&amp;version=v17.0&amp;width=880">
                          <span style="vertical-align: top; width: 0px; height: 0px; overflow: hidden;"><iframe
                              name="f2b07366f78ec1c" width="880px" height="100px"
                              data-testid="fb:comments Facebook Social Plugin"
                              title="fb:comments Facebook Social Plugin" frameborder="0" allowtransparency="true"
                              allowfullscreen="true" scrolling="no" allow="encrypted-media"
                              src="https://www.facebook.com/v17.0/plugins/comments.php?app_id=114098972554909&amp;channel=https%3A%2F%2Fstaticxx.facebook.com%2Fx%2Fconnect%2Fxd_arbiter%2F%3Fversion%3D46%23cb%3Df3afb6640001e14%26domain%3Dmangahub.io%26is_canvas%3Dfalse%26origin%3Dhttps%253A%252F%252Fmangahub.io%252Ff16111c340cc3cc%26relation%3Dparent.parent&amp;color_scheme=light&amp;container_width=0&amp;height=100&amp;href=https%3A%2F%2Fmangahub.io%2Fmanga%2Firon-ladies&amp;locale=en_US&amp;numposts=10&amp;order_by=reverse_time&amp;sdk=joey&amp;version=v17.0&amp;width=880"
                              style="border: none; visibility: visible; width: 0px; height: 0px;"></iframe></span></div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
      <div class="container">
        <div class="title-header h2-header">
          <h2>Popular Manga Updates<a href="https://mangahub.io/popular" class="more-link">ALL<i
                class="icon-arrow-right"></i></a></h2>
        </div>
        <div class="slick-slider manga-slider slick-initialized" dir="ltr"><button type="button" data-role="none"
            class="slick-arrow slick-prev" style="display: block;"> Previous</button>
          <div class="slick-list">
            <div class="slick-track" style="width: 6864px; opacity: 1; transform: translate3d(-1430px, 0px, 0px);">
              <div data-index="-8" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/md/omniscient-reader-s-viewpoint.png&quot;);">
                    </div><a href="https://mangahub.io/manga/omniscient-reader-s-viewpoint" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a
                          href="https://mangahub.io/manga/omniscient-reader-s-viewpoint"
                          class="m-slide-title">Omniscient Reader's Viewpoint</a></strong><em><a
                          href="https://mangahub.io/chapter/omniscient-reader-s-viewpoint/chapter-178">#178</a></em>
                    </div>
                  </div>
                </div>
              </div>
              <div data-index="-7" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/rm/the-last-human.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/the-last-human" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/the-last-human"
                          class="m-slide-title">The Last Human</a></strong><em><a
                          href="https://mangahub.io/chapter/the-last-human/chapter-547.1">#547.1</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="-6" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mro/i-m-the-great-immortal.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/i-m-the-great-immortal" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/i-m-the-great-immortal"
                          class="m-slide-title">I'm The Great Immortal</a></strong><em><a
                          href="https://mangahub.io/chapter/i-m-the-great-immortal/chapter-563">#563</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="-5" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mf/peerless-battle-spirit.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/peerless-battle-spirit" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/peerless-battle-spirit"
                          class="m-slide-title">Peerless Battle Spirit</a></strong><em><a
                          href="https://mangahub.io/chapter/peerless-battle-spirit/chapter-607">#607</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="-4" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/god-of-martial-arts.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/god-of-martial-arts" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/god-of-martial-arts"
                          class="m-slide-title">God of Martial Arts</a></strong><em><a
                          href="https://mangahub.io/chapter/god-of-martial-arts/chapter-628">#628</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="-3" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mn/the-gamer.jpg&quot;);"></div><a
                      href="https://mangahub.io/manga/the-gamer_102" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/the-gamer_102"
                          class="m-slide-title">The Gamer</a></strong><em><a
                          href="https://mangahub.io/chapter/the-gamer_102/chapter-479">#479</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="-2" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/douluo-dalu-ii-jueshi-tangmen.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/douluo-dalu-ii-jueshi-tangmen" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a
                          href="https://mangahub.io/manga/douluo-dalu-ii-jueshi-tangmen" class="m-slide-title">Douluo
                          Dalu ii - Jueshi Tangmen</a></strong><em><a
                          href="https://mangahub.io/chapter/douluo-dalu-ii-jueshi-tangmen/chapter-501">#501</a></em>
                    </div>
                  </div>
                </div>
              </div>
              <div data-index="-1" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mro/heaven-defying-sword.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/heaven-defying-sword" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/heaven-defying-sword"
                          class="m-slide-title">Heaven Defying Sword</a></strong><em><a
                          href="https://mangahub.io/chapter/heaven-defying-sword/chapter-454">#454</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="0" class="slick-slide" tabindex="-1" aria-hidden="true"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/md/nano-machine.jpeg&quot;);"></div>
                    <a href="https://mangahub.io/manga/nano-machine" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/nano-machine"
                          class="m-slide-title">Nano Machine</a></strong><em><a
                          href="https://mangahub.io/chapter/nano-machine/chapter-174">#174</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="1" class="slick-slide" tabindex="-1" aria-hidden="true"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mt/versatile-mage.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/versatile-mage" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/versatile-mage"
                          class="m-slide-title">Versatile Mage</a></strong><em><a
                          href="https://mangahub.io/chapter/versatile-mage/chapter-1097">#1097</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="2" class="slick-slide slick-active slick-current" tabindex="-1" aria-hidden="false"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/apotheosis.jpg&quot;);"></div><a
                      href="https://mangahub.io/manga/apotheosis" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/apotheosis"
                          class="m-slide-title">Apotheosis</a></strong><em><a
                          href="https://mangahub.io/chapter/apotheosis/chapter-1124">#1124</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="3" class="slick-slide slick-active" tabindex="-1" aria-hidden="false"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mn/star-martial-god-technique.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/star-martial-god-technique" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/star-martial-god-technique"
                          class="m-slide-title">Star Martial God Technique</a></strong><em><a
                          href="https://mangahub.io/chapter/star-martial-god-technique/chapter-685">#685</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="4" class="slick-slide slick-active" tabindex="-1" aria-hidden="false"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mn/komi-san-wa-komyushou-desu.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/komi-san-wa-komyushou-desu" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/komi-san-wa-komyushou-desu"
                          class="m-slide-title">Komi-san wa Komyushou Desu</a></strong><em><a
                          href="https://mangahub.io/chapter/komi-san-wa-komyushou-desu/chapter-425">#425</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="5" class="slick-slide slick-active" tabindex="-1" aria-hidden="false"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/md/the-great-mage-returns-after-4000-years.jpeg&quot;);">
                    </div><a href="https://mangahub.io/manga/the-great-mage-returns-after-4000-years"
                      class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a
                          href="https://mangahub.io/manga/the-great-mage-returns-after-4000-years"
                          class="m-slide-title">The Great Mage Returns After 4000 Years</a></strong><em><a
                          href="https://mangahub.io/chapter/the-great-mage-returns-after-4000-years/chapter-189.5">#189.5</a></em>
                    </div>
                  </div>
                </div>
              </div>
              <div data-index="6" class="slick-slide slick-active" tabindex="-1" aria-hidden="false"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mn/hajime-no-ippo.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/hajime-no-ippo" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/hajime-no-ippo"
                          class="m-slide-title">Hajime no Ippo</a></strong><em><a
                          href="https://mangahub.io/chapter/hajime-no-ippo/chapter-1435">#1435</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="7" class="slick-slide slick-active" tabindex="-1" aria-hidden="false"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mf/overgeared-team-argo.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/overgeared-team-argo" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/overgeared-team-argo"
                          class="m-slide-title">Overgeared (Team Argo)</a></strong><em><a
                          href="https://mangahub.io/chapter/overgeared-team-argo/chapter-200">#200</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="8" class="slick-slide slick-active" tabindex="-1" aria-hidden="false"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/rm/martial-peak.jpg&quot;);"></div>
                    <a href="https://mangahub.io/manga/martial-peak" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/martial-peak"
                          class="m-slide-title">Martial Peak</a></strong><em><a
                          href="https://mangahub.io/chapter/martial-peak/chapter-3572">#3572</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="9" class="slick-slide slick-active" tabindex="-1" aria-hidden="false"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/tales-of-demons-and-gods.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/tales-of-demons-and-gods" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/tales-of-demons-and-gods"
                          class="m-slide-title">Tales of Demons and Gods</a></strong><em><a
                          href="https://mangahub.io/chapter/tales-of-demons-and-gods/chapter-448.6">#448.6</a></em>
                    </div>
                  </div>
                </div>
              </div>
              <div data-index="10" class="slick-slide" tabindex="-1" aria-hidden="true"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/yuan-zun.jpg&quot;);"></div><a
                      href="https://mangahub.io/manga/yuan-zun" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/yuan-zun"
                          class="m-slide-title">Yuan Zun</a></strong><em><a
                          href="https://mangahub.io/chapter/yuan-zun/chapter-535">#535</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="11" class="slick-slide" tabindex="-1" aria-hidden="true"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/eleceed.jpg&quot;);"></div><a
                      href="https://mangahub.io/manga/eleceed" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/eleceed"
                          class="m-slide-title">Eleceed</a></strong><em><a
                          href="https://mangahub.io/chapter/eleceed/chapter-266">#266</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="12" class="slick-slide" tabindex="-1" aria-hidden="true"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/md/omniscient-reader-s-viewpoint.png&quot;);">
                    </div><a href="https://mangahub.io/manga/omniscient-reader-s-viewpoint" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a
                          href="https://mangahub.io/manga/omniscient-reader-s-viewpoint"
                          class="m-slide-title">Omniscient Reader's Viewpoint</a></strong><em><a
                          href="https://mangahub.io/chapter/omniscient-reader-s-viewpoint/chapter-178">#178</a></em>
                    </div>
                  </div>
                </div>
              </div>
              <div data-index="13" class="slick-slide" tabindex="-1" aria-hidden="true"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/rm/the-last-human.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/the-last-human" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/the-last-human"
                          class="m-slide-title">The Last Human</a></strong><em><a
                          href="https://mangahub.io/chapter/the-last-human/chapter-547.1">#547.1</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="14" class="slick-slide" tabindex="-1" aria-hidden="true"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mro/i-m-the-great-immortal.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/i-m-the-great-immortal" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/i-m-the-great-immortal"
                          class="m-slide-title">I'm The Great Immortal</a></strong><em><a
                          href="https://mangahub.io/chapter/i-m-the-great-immortal/chapter-563">#563</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="15" class="slick-slide" tabindex="-1" aria-hidden="true"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mf/peerless-battle-spirit.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/peerless-battle-spirit" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/peerless-battle-spirit"
                          class="m-slide-title">Peerless Battle Spirit</a></strong><em><a
                          href="https://mangahub.io/chapter/peerless-battle-spirit/chapter-607">#607</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="16" class="slick-slide" tabindex="-1" aria-hidden="true"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/god-of-martial-arts.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/god-of-martial-arts" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/god-of-martial-arts"
                          class="m-slide-title">God of Martial Arts</a></strong><em><a
                          href="https://mangahub.io/chapter/god-of-martial-arts/chapter-628">#628</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="17" class="slick-slide" tabindex="-1" aria-hidden="true"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mn/the-gamer.jpg&quot;);"></div><a
                      href="https://mangahub.io/manga/the-gamer_102" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/the-gamer_102"
                          class="m-slide-title">The Gamer</a></strong><em><a
                          href="https://mangahub.io/chapter/the-gamer_102/chapter-479">#479</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="18" class="slick-slide" tabindex="-1" aria-hidden="true"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/douluo-dalu-ii-jueshi-tangmen.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/douluo-dalu-ii-jueshi-tangmen" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a
                          href="https://mangahub.io/manga/douluo-dalu-ii-jueshi-tangmen" class="m-slide-title">Douluo
                          Dalu ii - Jueshi Tangmen</a></strong><em><a
                          href="https://mangahub.io/chapter/douluo-dalu-ii-jueshi-tangmen/chapter-501">#501</a></em>
                    </div>
                  </div>
                </div>
              </div>
              <div data-index="19" class="slick-slide" tabindex="-1" aria-hidden="true"
                style="outline: none; width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mro/heaven-defying-sword.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/heaven-defying-sword" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/heaven-defying-sword"
                          class="m-slide-title">Heaven Defying Sword</a></strong><em><a
                          href="https://mangahub.io/chapter/heaven-defying-sword/chapter-454">#454</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="20" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/md/nano-machine.jpeg&quot;);"></div>
                    <a href="https://mangahub.io/manga/nano-machine" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/nano-machine"
                          class="m-slide-title">Nano Machine</a></strong><em><a
                          href="https://mangahub.io/chapter/nano-machine/chapter-174">#174</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="21" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mt/versatile-mage.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/versatile-mage" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/versatile-mage"
                          class="m-slide-title">Versatile Mage</a></strong><em><a
                          href="https://mangahub.io/chapter/versatile-mage/chapter-1097">#1097</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="22" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/apotheosis.jpg&quot;);"></div><a
                      href="https://mangahub.io/manga/apotheosis" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/apotheosis"
                          class="m-slide-title">Apotheosis</a></strong><em><a
                          href="https://mangahub.io/chapter/apotheosis/chapter-1124">#1124</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="23" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mn/star-martial-god-technique.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/star-martial-god-technique" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/star-martial-god-technique"
                          class="m-slide-title">Star Martial God Technique</a></strong><em><a
                          href="https://mangahub.io/chapter/star-martial-god-technique/chapter-685">#685</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="24" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mn/komi-san-wa-komyushou-desu.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/komi-san-wa-komyushou-desu" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/komi-san-wa-komyushou-desu"
                          class="m-slide-title">Komi-san wa Komyushou Desu</a></strong><em><a
                          href="https://mangahub.io/chapter/komi-san-wa-komyushou-desu/chapter-425">#425</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="25" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/md/the-great-mage-returns-after-4000-years.jpeg&quot;);">
                    </div><a href="https://mangahub.io/manga/the-great-mage-returns-after-4000-years"
                      class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a
                          href="https://mangahub.io/manga/the-great-mage-returns-after-4000-years"
                          class="m-slide-title">The Great Mage Returns After 4000 Years</a></strong><em><a
                          href="https://mangahub.io/chapter/the-great-mage-returns-after-4000-years/chapter-189.5">#189.5</a></em>
                    </div>
                  </div>
                </div>
              </div>
              <div data-index="26" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mn/hajime-no-ippo.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/hajime-no-ippo" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/hajime-no-ippo"
                          class="m-slide-title">Hajime no Ippo</a></strong><em><a
                          href="https://mangahub.io/chapter/hajime-no-ippo/chapter-1435">#1435</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="27" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mf/overgeared-team-argo.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/overgeared-team-argo" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/overgeared-team-argo"
                          class="m-slide-title">Overgeared (Team Argo)</a></strong><em><a
                          href="https://mangahub.io/chapter/overgeared-team-argo/chapter-200">#200</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="28" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/rm/martial-peak.jpg&quot;);"></div>
                    <a href="https://mangahub.io/manga/martial-peak" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/martial-peak"
                          class="m-slide-title">Martial Peak</a></strong><em><a
                          href="https://mangahub.io/chapter/martial-peak/chapter-3572">#3572</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="29" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/tales-of-demons-and-gods.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/tales-of-demons-and-gods" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/tales-of-demons-and-gods"
                          class="m-slide-title">Tales of Demons and Gods</a></strong><em><a
                          href="https://mangahub.io/chapter/tales-of-demons-and-gods/chapter-448.6">#448.6</a></em>
                    </div>
                  </div>
                </div>
              </div>
              <div data-index="30" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/yuan-zun.jpg&quot;);"></div><a
                      href="https://mangahub.io/manga/yuan-zun" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/yuan-zun"
                          class="m-slide-title">Yuan Zun</a></strong><em><a
                          href="https://mangahub.io/chapter/yuan-zun/chapter-535">#535</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="31" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/eleceed.jpg&quot;);"></div><a
                      href="https://mangahub.io/manga/eleceed" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/eleceed"
                          class="m-slide-title">Eleceed</a></strong><em><a
                          href="https://mangahub.io/chapter/eleceed/chapter-266">#266</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="32" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/md/omniscient-reader-s-viewpoint.png&quot;);">
                    </div><a href="https://mangahub.io/manga/omniscient-reader-s-viewpoint" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a
                          href="https://mangahub.io/manga/omniscient-reader-s-viewpoint"
                          class="m-slide-title">Omniscient Reader's Viewpoint</a></strong><em><a
                          href="https://mangahub.io/chapter/omniscient-reader-s-viewpoint/chapter-178">#178</a></em>
                    </div>
                  </div>
                </div>
              </div>
              <div data-index="33" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/rm/the-last-human.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/the-last-human" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/the-last-human"
                          class="m-slide-title">The Last Human</a></strong><em><a
                          href="https://mangahub.io/chapter/the-last-human/chapter-547.1">#547.1</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="34" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mro/i-m-the-great-immortal.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/i-m-the-great-immortal" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/i-m-the-great-immortal"
                          class="m-slide-title">I'm The Great Immortal</a></strong><em><a
                          href="https://mangahub.io/chapter/i-m-the-great-immortal/chapter-563">#563</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="35" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mf/peerless-battle-spirit.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/peerless-battle-spirit" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/peerless-battle-spirit"
                          class="m-slide-title">Peerless Battle Spirit</a></strong><em><a
                          href="https://mangahub.io/chapter/peerless-battle-spirit/chapter-607">#607</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="36" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/god-of-martial-arts.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/god-of-martial-arts" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/god-of-martial-arts"
                          class="m-slide-title">God of Martial Arts</a></strong><em><a
                          href="https://mangahub.io/chapter/god-of-martial-arts/chapter-628">#628</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="37" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mn/the-gamer.jpg&quot;);"></div><a
                      href="https://mangahub.io/manga/the-gamer_102" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/the-gamer_102"
                          class="m-slide-title">The Gamer</a></strong><em><a
                          href="https://mangahub.io/chapter/the-gamer_102/chapter-479">#479</a></em></div>
                  </div>
                </div>
              </div>
              <div data-index="38" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mh/douluo-dalu-ii-jueshi-tangmen.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/douluo-dalu-ii-jueshi-tangmen" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a
                          href="https://mangahub.io/manga/douluo-dalu-ii-jueshi-tangmen" class="m-slide-title">Douluo
                          Dalu ii - Jueshi Tangmen</a></strong><em><a
                          href="https://mangahub.io/chapter/douluo-dalu-ii-jueshi-tangmen/chapter-501">#501</a></em>
                    </div>
                  </div>
                </div>
              </div>
              <div data-index="39" tabindex="-1" class="slick-slide slick-cloned" aria-hidden="true"
                style="width: 143px;">
                <div>
                  <div class="manga-slide" tabindex="-1" style="width: 100%; display: inline-block;">
                    <div class="m-slide-background"
                      style="background-image: url(&quot;https://thumb.mghubcdn.com/mro/heaven-defying-sword.jpg&quot;);">
                    </div><a href="https://mangahub.io/manga/heaven-defying-sword" class="m-link-overlay"></a>
                    <div class="m-slide-caption"><strong><a href="https://mangahub.io/manga/heaven-defying-sword"
                          class="m-slide-title">Heaven Defying Sword</a></strong><em><a
                          href="https://mangahub.io/chapter/heaven-defying-sword/chapter-454">#454</a></em></div>
                  </div>
                </div>
              </div>
            </div>
          </div><button type="button" data-role="none" class="slick-arrow slick-next" style="display: block;">
            Next</button>
        </div>
      </div>
      <div class="ads-container ad-bottomBanner container"><span class="hidden"></span></div>
      <footer class="_1UUMy">
        <div class="_39kfm">
          <div class="container">
            <ol role="navigation" aria-label="breadcrumbs" class="breadcrumb">
              <li class=""><a href="https://mangahub.io/">MangaHub.io</a></li>
              <li class=""><a href="https://mangahub.io/search">Manga</a></li>
              <li class="active"><span>Iron Ladies</span></li>
            </ol>
          </div>
        </div>
        <div class="_1jkXi container-fluid"><a class="bF0OS" href="https://www.facebook.com/388091891588214/"
            target="_blank" rel="noopener noreferrer"><i class="icon-facebook"></i></a><a class="bF0OS"
            href="https://www.instagram.com/mangahub.io/" target="_blank" rel="noopener noreferrer"><i
              class="icon-instagram"></i></a><a class="bF0OS" href="https://twitter.com/MangaHubIO" target="_blank"
            rel="noopener noreferrer"><i class="icon-twitter"></i></a><a class="bF0OS"
            href="https://www.pinterest.com/mangahub" target="_blank" rel="noopener noreferrer"><i
              class="icon-pinterest"></i></a></div>
        <div class="_2Kurz container-fluid"><a href="https://mangahub.io/" class="_3qHjF">Home</a><span
            class="_297xE">·</span><a href="https://mangahub.io/contact" class="_3qHjF">Contact</a><span
            class="_297xE">·</span><a href="https://mangahub.io/membership" class="_3qHjF">Support Us</a><span
            class="_297xE">·</span><a href="https://mangahub.io/terms" class="_3qHjF">Terms</a><span
            class="_297xE">·</span><a href="https://mangahub.io/privacy" class="_3qHjF">Privacy</a></div>
        <div class="_2bBFy container-fluid"><a href="https://mangahub.io" class="_3ReUN"><span>©mangahub.io
              group</span></a></div>
      </footer>
      <div class="recent-manga"><a href="" title="Recently viewed" id="rDrawer" class="r-drawer"><span
            class="r-drawer-text">Recently viewed</span><span class="r-drawer-icon icon-angle-left"></span></a><a
          href="https://mangahub.io/user/history" class="r-history-link icon-arrow-right"><strong>Full List</strong></a>
        <div class="r-content">
          <h4 class="r-content-title" style="color:#222">Recently viewed</h4><span class="r-content-bar"></span>
          <ul class="r-content-list">
            <li><a href="https://mangahub.io/chapter/iron-ladies/chapter-167" title="Iron Ladies"
                class="r-chapter"><span class="r-manga-thumb"><img src="https://thumb.mghubcdn.com/mh/iron-ladies.jpg"
                    width="80" alt="Iron Ladies"></span><span><strong class="r-manga-title">Iron Ladies<small
                      class="r-chapter-number">#167</small></strong></span></a></li>
          </ul>
        </div>
      </div><button title="Back to top" class="scroll-top"><span class="icon-angle-up"></span></button><span
        class="hidden"></span><span class="hidden"></span><span class="hidden"></span>
    </div>
    <div class="notification-container notification-container-empty">
      <div></div>
    </div>
  </div>
  <script>window.App = { "apiUrl": "https:\u002F\u002Fapi.mghubcdn.com" }</script>
  <script src="/assets/vendors.28952f5c.chunk.js"></script>
  <script src="/assets/client.27e42f24.js"></script>
  <script
    src="/assets/vendors~chapter~contact~directory~home~login~manga~membership~move-to-bmac~not-found~privacy~terms~u~95b0952e.884393af.chunk.js"></script>
  <script src="/assets/vendors~chapter~manga~user.81299c44.chunk.js"></script>
  <script src="/assets/vendors~chapter~manga.80fee629.chunk.js"></script>
  <script
    src="/assets/contact~directory~home~login~manga~membership~move-to-bmac~not-found~privacy~terms~user.2033d5b3.chunk.js"></script>
  <script src="/assets/manga.b799cdfc.chunk.js"></script>
  <div id="fb-root" class=" fb_reset">
    <div style="position: absolute; top: -10000px; width: 0px; height: 0px;">
      <div></div>
    </div>
  </div>
  <script async="" defer="" crossorigin="anonymous"
    src="https://connect.facebook.net/en_US/sdk.js#xfbml=0&amp;version=v17.0&amp;appId=114098972554909&amp;autoLogAppEvents=1"></script>
  <script src="https://apis.google.com/js/platform.js" async="" defer="" gapi_processed="true"></script>
  <script src="https://accounts.google.com/gsi/client" async="" defer=""></script>
  <script>window.ga = function () { ga.q.push(arguments) }; ga.q = []; ga.l = +new Date; ga('create', 'UA-99990911-1', 'auto'); ga('send', 'pageview')</script>
  <script src="https://www.google-analytics.com/analytics.js" async="" defer=""></script>
  <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-1Y25V33KY1"></script>
  <script>window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-1Y25V33KY1');</script>
  <script src="https://cdn.onesignal.com/sdks/OneSignalSDK.js" async=""></script>
  <script>var OneSignal = window.OneSignal || []; OneSignal.push(["init", { appId: "c141d5dd-cfd9-4c92-9623-675b6e4ed768", autoResubscribe: true, autoRegister: false, promptOptions: { actionMessage: "Do you want to show notifications for the new releases of your favorite series?", siteName: "MangaHub.io", acceptButtonText: "YES, SURE", cancelButtonText: "NOT NOW", slidedown: { enabled: true, autoPrompt: true, timeDelay: 30, pageViews: 1 } }, welcomeNotification: { "title": "Thanks for subscribing!", "message": "Login to finish setup", "url": "https://mangahub.io/login" }, notifyButton: { enable: false } }]);</script>
  <link rel="stylesheet" href="/css/notifications.css">
  <link rel="stylesheet" href="/css/nprogress.css">
  <script src="/js/nprogress.js?v=181001"></script>
  <script data-cfasync="false" async="" type="text/javascript" src="//agrufescarry.space/rQPQE4vigWT/45855"></script>
  <script async="" src="https://mangahub.disqus.com/embed.js" id="dsq-embed-scr"></script><iframe
    style="display: none;"></iframe>
  <div data-lastpass-root=""
    style="position: absolute !important; top: 0px !important; left: 0px !important; height: 0px !important; width: 0px !important;">
    <div data-lastpass-infield="true" style="position: absolute !important; top: 0px !important; left: 0px !important;">
    </div>
  </div>
</body>

</html>
