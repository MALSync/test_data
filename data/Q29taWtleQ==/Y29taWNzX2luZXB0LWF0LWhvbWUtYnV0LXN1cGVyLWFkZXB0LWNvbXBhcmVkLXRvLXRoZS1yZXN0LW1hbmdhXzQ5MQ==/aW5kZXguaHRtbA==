<!DOCTYPE html><html prefix="og: http://ogp.me/ns#" lang="en"><head><meta http-equiv="origin-trial" content="A7vZI3v+Gz7JfuRolKNM4Aff6zaGuT7X0mf3wtoZTnKv6497cVMnhy03KDqX7kBz/q/iidW7srW31oQbBt4VhgoAAACUeyJvcmlnaW4iOiJodHRwczovL3d3dy5nb29nbGUuY29tOjQ0MyIsImZlYXR1cmUiOiJEaXNhYmxlVGhpcmRQYXJ0eVN0b3JhZ2VQYXJ0aXRpb25pbmczIiwiZXhwaXJ5IjoxNzU3OTgwODAwLCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlfQ==">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="max-image-preview:large">
    <title>I Was Called Inept at Home, but Turns Out I’m Super Adept Compared to the Rest of the World (Manga) - Comikey</title>
    <!-- OpenGraph -->
    <meta property="og:site_name" content="Comikey">
    <meta property="og:locale" content="en">
    <meta property="og:url" content="https://comikey.com/comics/inept-at-home-but-super-adept-compared-to-the-rest-manga/491/">
    <meta name="twitter:site" content="@comikeymedia">
    <meta property="fb:app_id" content="342354503893468">
    <!-- Feeds -->
    <link rel="alternate" type="application/rss+xml" title="Comikey News" href="/news/feeds/rss.xml">
    <link rel="alternate" type="application/atom+xml" title="Comikey News" href="/news/feeds/atom.xml">
    <link rel="search" type="application/opensearchdescription+xml" title="Comikey" href="/opensearch.xml">
    
    <meta property="og:title" content="I Was Called Inept at Home, but Turns Out I’m Super Adept Compared to the Rest of the World (Manga) | Read Free Chapters">
    <meta property="og:image" content="https://media.comikey.com/gazo/600/jpg/comics/nDqqpD/e434c349aee0.png">
    <meta property="og:image:alt" content="Banner for I Was Called Inept at Home, but Turns Out I’m Super Adept Compared to the Rest of the World">
    <meta name="twitter:card" content="summary_large_image">
    <meta property="og:description" content="Here unfolds the story of an OP unparalleled Rookie!!">
    <meta name="description" content="Noah was raised by his exceptionally capable older sisters. He leaves his home to the nearby city to become an adventurer, but every time he performs he shocks those who witness him with wonder... “Wait? Am I actually strong...?” He really shouldn’t be surprised by his abilities when all five of his older sisters that raised him are the worlds greatest in their respective fields! He has unbelievable potential! Here begins Noah’s shining new life getting the acknowledgment he deserves, but his older sisters are chasing after him...? He who was supposed to be inept is actually a super rookie! Noah’s life as an adventurer begins!!">
    <meta property="og:type" content="book">
    <meta property="book:author" content="/comics/?person=834">
    <meta property="book:tag" content="Comedy"><meta property="book:tag" content="Action">

    <!--Feeds-->
    <link rel="alternate" type="application/rss+xml" title="RSS Feed for 「I Was Called Inept at Home, but Turns Out I’m Super Adept Compared to the Rest of the World」" href="/sapi/comics/491/feed.rss">
    
    <script type="text/javascript" async="" charset="utf-8" src="https://www.gstatic.com/recaptcha/releases/XrIDux0s7SoNe6_IHkjGC92W/recaptcha__de.js" crossorigin="anonymous" integrity="sha384-FQn6nW2NE7iN8V1P6ZoinyBIsWkSHw79AIQE/pMyCUl1Z2WRE/FIv2Hcd62P/3EL" nonce="0d+Uy89IAUopLIyBH+SGwA=="></script><script type="text/javascript" async="" src="https://analytics.tiktok.com/i18n/pixel/events.js?sdkid=CQ8GITRC77U4U9H1488G&amp;lib=ttq"></script><script type="text/javascript" async="" src="https://analytics.tiktok.com/i18n/pixel/events.js?sdkid=CO986BJC77U7F073C4R0&amp;lib=ttq"></script><script type="text/javascript" async="" src="https://www.clarity.ms/tag/5uty2dnv1p?ref=gtm" nonce="0d+Uy89IAUopLIyBH+SGwA=="></script><script type="text/javascript" async="" src="/comics/ghost-in-shell-manga/132/?id=G-QZHCLR9JG6&amp;cx=c&amp;gtm=4e59n2" nonce="0d+Uy89IAUopLIyBH+SGwA=="></script><script async="" src="/comics/ghost-in-shell-manga/132/?id="></script><script async="" src="https://connect.facebook.net/en_US/fbevents.js"></script><script type="application/ld+json">{"@context": "http://schema.org", "@type": "WebPage", "potentialAction": [{"@type": "SearchAction", "target": "https://comikey.com/comics/?q={search_term_string}", "query-input": "required name=search_term_string"}], "breadcrumb": {"@type": "BreadcrumbList", "itemListElement": [{"@type": "ListItem", "position": 1, "name": "Comikey", "item": "https://comikey.com/"}, {"@type": "ListItem", "position": 2, "item": "https://comikey.com/comics/", "name": "Comics"}, {"@type": "ListItem", "position": 3, "item": "https://comikey.com/comics/inept-at-home-but-super-adept-compared-to-the-rest-manga/491/", "name": "I Was Called Inept at Home, but Turns Out I\u2019m Super Adept Compared to the Rest of the World"}]}, "provider": "Comikey CMS v1.0.0", "mainEntity": {"@type": "ComicSeries", "identifier": "e4p:series:SER-0DXlvD", "url": "https://comikey.com/comics/inept-at-home-but-super-adept-compared-to-the-rest-manga/491/", "name": "I Was Called Inept at Home, but Turns Out I\u2019m Super Adept Compared to the Rest of the World", "alternateName": "\u5bb6\u3067\u7121\u80fd\u3068\u8a00\u308f\u308c\u7d9a\u3051\u305f\u4ffa\u3067\u3059\u304c\u3001\u4e16\u754c\u7684\u306b\u306f\u8d85\u6709\u80fd\u3060\u3063\u305f\u3088\u3046\u3067\u3059", "abstract": "Here unfolds the story of an OP unparalleled Rookie!!", "description": "Noah was raised by his exceptionally capable older sisters. He leaves his home to the nearby city to become an adventurer, but every time he performs he shocks those who witness him with wonder... \u201cWait? Am I actually strong...?\u201d He really shouldn\u2019t be surprised by his abilities when all five of his older sisters that raised him are the worlds greatest in their respective fields! He has unbelievable potential! Here begins Noah\u2019s shining new life getting the acknowledgment he deserves, but his older sisters are chasing after him...? He who was supposed to be inept is actually a super rookie! Noah\u2019s life as an adventurer begins!!", "author": [{"@type": "Person", "name": "kimimaro, Masashi Suzuki, Mokyu"}], "dateModified": "2025-09-25T15:00:00+00:00", "keywords": "Ie de Munou to Iware Tsuzuketa Ore desu ga, Sekai-teki ni wa Chou Yuunou datta you desu", "genre": ["Comedy", "Action"], "publisher": {"@type": "Organization", "name": "SQUARE ENIX", "url": "https://www.square-enix.com/", "logo": "https://comikey.com/media/publishers/9/logo_395d9311d913.png"}, "image": "https://comikey.com/media/comics/nDqqpD/31d8c3eafe52.png", "thumbnailUrl": "https://i0.wp.com/comikey.com/media/comics/nDqqpD/31d8c3eafe52.png?fit=250%2C250"}}</script>
    <meta name="turbolinks-cache-control" content="no-preview">

    <meta name="generator" content="Comikey CMS v1.0.0">
    
    <link rel="manifest" href="/manifest.webmanifest">
    <meta name="apple-itunes-app" content="app-id=1601348237">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="theme-color" content="#212121">
    <meta name="format-detection" content="telephone=no, email=no">
    <meta name="apple-mobile-web-app-title" content="Comikey">
    <link rel="apple-touch-icon" href="/static/images/favicons/favicon.b6e9a28323d2.png">
    <link rel="icon" href="/static/images/favicons/favicon.7f2c9f50c0d7.ico" sizes="any">
    <meta name="google" content="notranslate">
    <script nonce="0d+Uy89IAUopLIyBH+SGwA==">
    window.__FINIT__ = {
        SITE: 1,
        BRAND: {
            name: "Comikey",
            logo: "/static/images/favicons/favicon-256.dbd31257ccca.png",
        },
        E4P: {
            publisher: "COMIKEY",
            client: "dylMNK5a32of",
            relay: "https://relay-eu.epub.rocks"
        },
        GUNDAM: {
            api: "https://gundam.comikey.net",
            token: null
        },
        DEBUG: false
    };
</script>
    <!-- Facebook Pixel Code -->
    <script>
        !function(f,b,e,v,n,t,s)
        {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
        n.callMethod.apply(n,arguments):n.queue.push(arguments)};
        if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
        n.queue=[];t=b.createElement(e);t.async=!0;
        t.src=v;s=b.getElementsByTagName(e)[0];
        s.parentNode.insertBefore(t,s)}(window, document,'script',
        'https://connect.facebook.net/en_US/fbevents.js');
        fbq('init', '5840354959316408');
        fbq('track', 'PageView');
    </script>
    <noscript>
        <img height="1" width="1" style="display:none" 
            src="https://www.facebook.com/tr?id=5840354959316408&ev=PageView&noscript=1"/>
    </noscript>
    <!-- End Facebook Pixel Code -->
     
    <!-- Google Tag Manager -->
    <script nonce="0d+Uy89IAUopLIyBH+SGwA==">
        window.dataLayer = window.dataLayer || [];
        
        (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        '/comics/ghost-in-shell-manga/132/?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','');
    </script>
    <!-- End Google Tag Manager -->
    
    <link rel="dns-prefetch" href="https://relay-eu.epub.rocks">
    <link rel="dns-prefetch" href="https://gundam.comikey.net">
    <link rel="dns-prefetch" href="https://gate.epub.rocks">
    <link rel="dns-prefetch" href="https://content-firebaseappcheck.googleapis.com">
    <link rel="dns-prefetch" href="https://www.google.com">
    <link rel="dns-prefetch" href="https://www.gstatic.com">
    

    <!-- CSS -->
    <link rel="stylesheet" type="text/css" href="/static/css/owl.carousel.v2.006e214bc525.css">
    <link rel="stylesheet" type="text/css" href="/static/css/slick.f38b2db10e01.css">
    <link rel="stylesheet" type="text/css" href="/static/css/search-language.cf95721e8e83.css">
    <link href="/static/bundles/comikey-1e20bb95938a5ef40187.css" rel="stylesheet">

    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css2?family=Hind:wght@300;400;500;600;700&amp;family=Ropa+Sans&amp;display=swap" rel="stylesheet">
    
    <script type="text/javascript" src="/i18n.js" async=""></script>
    <script src="/static/bundles/comikey-68691b3513457d4e1bfd.js" async="" defer=""></script>
    

    
    <style nonce="0d+Uy89IAUopLIyBH+SGwA==" id="comic-specific-style">
        :root { --comic-color: #188EC3; }
    </style>
    <link href="/static/bundles/comic-8a1eea602f19a339ff35.css" rel="stylesheet">

<script src="https://www.google.com/recaptcha/api.js"></script><style>.\[\&_\.gdprAdTransparencyCogWheelButton\]\:\!pjra-z-\[5\],
AD-SLOT,
DFP-AD,
[class^="adDisplay-module"],
[class^="amp-ad-"],
[data-ad-cls],
[data-adbridg-ad-class],
[data-adshim],
[data-asg-ins],
[data-block-type="ad"],
[data-cl-spot-id],
[data-css-class="dfp-inarticle"],
[data-d-ad-id],
[data-desktop-ad-id],
[data-dynamic-ads],
[data-ez-name],
[data-freestar-ad][id],
[data-id^="div-gpt-ad"],
[data-identity="adhesive-ad"],
[data-m-ad-id],
[data-mobile-ad-id],
[data-rc-widget],
[data-role="tile-ads-module"],
[data-template-type="nativead"],
[data-testid="adBanner-wrapper"],
[data-testid="ad_testID"],
[data-testid="prism-ad-wrapper"],
[data-testid^="section-AdRowBillboard"],
[data-type="ad-vertical"],
[data-wpas-zoneid],
[href$="/sexdating.php"],
[id^="ad-wrap-"],
[id^="ad_sky"],
[id^="ad_slider"],
[id^="section-ad-banner"],
[onclick^="location.href='https://1337x.vpnonly.site/"],
a-ad,
a[data-href^="http://ads.trafficjunky.net/"],
a[data-url^="https://vulpix.bet/?ref="],
a[onclick^="window.location.replace('https://random-affiliate.atimaze.com/"],
a[style="width:100%;height:100%;z-index:10000000000000000;position:absolute;top:0;left:0;"],
ad-shield-ads,
ad-slot,
app-ad,
app-advertisement,
app-large-ad,
aside[id^="adrotate_widgets-"],
atf-ad-slot,
bottomadblock,
display-ad-component,
display-ads,
div[class$="-adlabel"],
div[class^="Adstyled__AdWrapper-"],
div[data-ad-placeholder],
div[data-ad-region],
div[data-ad-wrapper],
div[data-adname],
div[data-adunit-path],
div[data-adunit],
div[data-adzone],
div[data-alias="300x250 Ad 1"],
div[data-alias="300x250 Ad 2"],
div[data-contentexchange-widget],
div[data-dfp-id],
div[data-id-advertdfpconf],
div[id^="ad-div-"],
div[id^="ad-position-"],
div[id^="adngin-"],
div[id^="adrotate_widgets-"],
div[id^="adspot-"],
div[id^="crt-"][style],
div[id^="div-ads-"],
div[id^="google_dfp_"],
div[id^="gpt_ad_"],
div[id^="lazyad-"],
div[id^="optidigital-adslot"],
div[id^="rc-widget-"],
div[id^="st"][style^="z-index: 999999999;"],
div[id^="sticky_ad_"],
div[id^="vuukle-ad-"],
div[ow-ad-unit-wrapper],
gpt-ad,
guj-ad,
hl-adsense,
img[src^="https://images.purevpnaffiliates.com"],
img[src^="https://s-img.adskeeper.com/"],
ps-connatix-module,
span[data-ez-ph-id],
span[id^="ezoic-pub-ad-placeholder-"],
topadblock,
zeus-ad,
broadstreet-zone-container,
iframe[scrolling="no"][sandbox*="allow-popups allow-modals"][style^="width: 100%; height: 100%; border: none;"],
[class^="tile-picker__CitrusBannerContainer-sc-"],
citrus-ad-wrapper,
div[id*="MarketGid"],
[onclick*="content.ad/"],
AMP-AD,
amp-ad,
amp-ad-custom,
amp-connatix-player,
amp-fx-flying-carpet,
a[data-oburl^="https://paid.outbrain.com/network/redir?"],
a[data-redirect^="https://paid.outbrain.com/network/redir?"],
a[onmousedown^="this.href='https://paid.outbrain.com/network/redir?"] + .ob_source,
[data-taboola-options],
[data-testid="commercial-label-taboola"],
[data-testid^="taboola-"],
div[id^="taboola-stream-"],
div[id^="zergnet-widget"],
html[lang] > body.ishome > div.adult + main.main,
html[lang] > body:not([class]):not([id]):not([style]) > div.background-container > div.container > div.captcha-box,
html[lang] > body.startnew > div#sections > section#section_uname,
html[lang] > body:not([style]) > div.captchaBody,
html[lang] > body#body > * > div.cv-xwrapper > div.cvc > div.cv-inner,
html[lang] > body#body > * > div.cvh.BlockClicksActivityBusy,
html#html[sti][vic][lang] > body#allbody,
html > body > div.container.m-p > #checkbox-window.checkbox-window,
html[lang] > body:not([class]):not([id]):not([style]) > div.container > div.recaptcha-box,
body > .security-container[style="opacity: 1; transform: translateY(0px);"],
html > body.hold-transition.theme-primary.bg-img[style^="background-image"][style*="wallpaperaccess.com"][style*="background-repeat"][style*="background-size"],
html > body > div.container > form#unsubscribe-form[onsubmit="submitUnsubscribeForm(event)"],
html > body > div.content > dl > dd.dd1 > div.min_sider > form#form1[action="unsubscribe.php"],
html > body.body > div.container > div.content > form > table.optoutForm,
div[id][style^="position: fixed; inset: 0px; z-index: 2147483647; background: black"][style*="opacity: 0.01"],
div[class$="player-promo-col"],
div#spot-holder.spot-holder[style="display: block;"],
a[dontfo=""][style$="position: absolute; z-index: 2147483647;"],
[data-ad-module]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-ad-width]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-adblockkey]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(html):not(.adsbygoogle),
[data-advadstrackid]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-ad-manager-id]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
div[style^="z-index: 999999; background-image: url(\"data:image/gif;base64,"][style$="position: absolute;"],
a[onclick="openAuc();"],
div[style="position: fixed; display: block; width: 100%; height: 100%; inset: 0px; background-color: rgba(0, 0, 0, 0); z-index: 300000;"],
div[style^="position:fixed;inset:0px;z-index:2147483647;background:black;opacity:0.01"],
div[style^="position: fixed; inset: 0px; z-index: 2147483647; background: black; opacity: 0.01"],
iframe.lazyloaded[data-src^="https://rcm-fe.amazon-adsystem.com/"],
#player div[style$="cursor: pointer; position: absolute; width: 100%; height: 100%; padding: 1rem; z-index: 2147483647;"],
html[lang][style^="--main-bg-color"] > body:not([class]):not([id]) > div#container[style="visibility: visible;"] > div#banner[style="opacity:0"] ~ main:not([class]):not([id]) > div#message,
[onclick*="postlnk.com"],
[data-lnguri*="vipbox"],
[class^="div-gpt-ad"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]) { display: none !important; }

[data-ad-name],
[data-revive-zoneid],
[name^="google_ads_iframe"],
div[aria-label="Ads"],
div[data-ad-targeting],
div[id^="ad_position_"],
div[id^="dfp-ad-"],
div[id^="ezoic-pub-ad-"],
ins.adsbygoogle[data-ad-client],
ins.adsbygoogle[data-ad-slot],
[class^="s2nPlayer"],
div[id*="ScriptRoot"],
a[onmousedown^="this.href='https://paid.outbrain.com/network/redir?"],
amp-embed[type="taboola"],
div[id^="div-gpt-"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]):not([style="pointer-events: none; height: 1px; width: 0px; opacity: 0; visibility: hidden; position: fixed; bottom: 0px;"]),
[id^="div-gpt-ad"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]):not([style="pointer-events: none; height: 1px; width: 0px; opacity: 0; visibility: hidden; position: fixed; bottom: 0px;"]),
div[style^="height:    250px; width:    300px;"],
div[style^="width:    160px; height:    600px; margin: 0px auto; min-width: 160px; min-height: 600px;"],
div[style^="width:    300px; height:    250px;"],
html[class^="img_"][amp4ads=""][i-amphtml-layout=""][i-amphtml-no-boilerplate=""][amp-version="2502032353000"],
html[class^="img_"][amp4ads=""][i-amphtml-layout=""][i-amphtml-no-boilerplate=""][amp-version="2507172035000"],
html[class^="img_"][amp4ads=""][i-amphtml-layout=""][i-amphtml-no-boilerplate=""][amp-version="2509031727000"],
img[height="   250"][width="   300"],
img[height="   90"][width="   728"],
ins[style$="height:    90px; width:    728px;"],
*:not(body) > a[href^="https://content-loader.com/"],
*:not(body) > a[href^="https://html-load.com/"],
*:not(body) > a[href^="https://07c225f3.online/"] { display: none !important; }</style><style>[href*="uselnk.com/"],
[href*="postlnk.com"],
[href*="passtechusa.com"] { display: none !important; }</style></head>


<body class=" lite">
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KLJH5QM"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->



    <!-- MAIN NAVBAR -->
    
    <div class="nav-filter"></div>
    <nav id="main-nav">
        <div class="container">
            <div id="main-menu" class="left">
                <div class="dropdown">
                    <button type="button" aria-label="Main Menu" class="dropdown-toggle" data-toggle="dropdown">
                        <i class="icon icon-burguer icon-white"></i>
                        <i class="icon icon-burguer icon-white"></i>
                        <i class="icon icon-burguer icon-white"></i>
                    </button>
                    <ul class="dropdown-menu">
                        <li>
                            <a href="/">Home</a>
                        </li>
                        <li>
                            <a href="/comics/">Comics</a>
                        </li>
                        <li>
                            <a href="/genres/">Genres</a>
                        </li>
                        <li>
                            <a href="/news/">News</a>
                        </li>
                        
                        <li class="dark-background" data-controller="msearch">
                            <span class="msearch control-search-bar" data-action="msearch#toggleSearchbar">
                                Search
                                <i class="icon-search icon-white"></i>
                            </span>
                        </li>
                        
                    </ul>
                </div>
            </div>
            <div class="middle">
                    <div class="main-logo">
                        <a href="/" title="Go Home">
                            <img class="icon-logo" aria-label="Comikey's Logo" src="/static/images/svgs/ck-logo-grad-new.4a5d6c8b3536.svg">
                        </a>
                    </div>
            </div>
            <div class="series-logo show">
        <img class="" referrerpolicy="no-referrer" src="https://media.comikey.com/gazo/120/webp/comics/nDqqpD/7106e783554e.png" srcset="https://media.comikey.com/gazo/120/webp/comics/nDqqpD/7106e783554e.png, https://media.comikey.com/gazo/240/webp/comics/nDqqpD/7106e783554e.png 2x" loading="lazy" decoding="async" alt="Logo for I Was Called Inept at Home, but Turns Out I’m Super Adept Compared to the Rest of the World">
    </div>

            <div id="user-menu" class="right" data-controller="muser">
                
            <button type="button" title="Search for Series" class="search-but" data-toggle="dropdown" data-action="muser#toggleSearchbar">
                <i class="icon icon-search icon-white"></i>
            </button>

                <div class="dropdown">
                    <button type="button" aria-label="User Menu" style="--user-menu-text: 'Log In';" class="dropdown-toggle" data-toggle="dropdown">
                        <i class="icon-lock icon-white"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-right">
                        
                        <li class="mode">
    <button class="mode-toggle dark" data-action="muser#darkTheme">
        <span>
            <input type="checkbox" data-muser-target="darkToggle">
            <label for="toggle"></label>
        </span>
    </button>
    <button class="mode-toggle lite" data-action="muser#liteMode">
        <span>
            <input type="checkbox" data-muser-target="liteToggle">
            <label for="toggle"></label>
        </span>
    </button>
</li> 
                        <li>
                            <a href="/auth/login/">
                                <span class="data text-color1"></span>
                                <span class="text">
                                    Login
                                </span>
                            </a>
                        </li>
                        <li class="dark-background">
                            <a href="/auth/signup/">
                                <span class="data text-color2">
                                    <span class="key-wrap"><i class="icon-key icon-color2"></i></span>
                                </span>
                                <span class="text">
                                    Register
                                </span>
                            </a>
                        </li>
                        
                    </ul>
                </div>
            </div>
        </div>
    
    
        <!-- HEADER MENU -->
        <div id="header-nav">
            <div class="item"><a href="/comics/">Comics</a></div>
            <div class="item"><a href="/genres/">Genres</a></div>
            <div class="item"><a href="/news/">News</a></div>
        </div> <!-- END HEADER MENU -->
        
        
<!-- SEARCH BAR -->
<section id="search-bar" class="m-search" data-controller="hsearch" data-hsearch-endpoint="/comics/suggestions.json" data-hsearch-target="searchbar">
    <div class="search-content">
        <div class="container">
            <form action="/comics/" autocomplete="off">
                <div class="search-input-container">
                    <input type="text" data-hsearch-target="field" data-action="hsearch#suggest keydown-&gt;hsearch#arrow" spellcheck="false" class="form-control" name="q" placeholder="Search series...">
                    <div class="language-filters">
                        <label class="language-option" title="PT-BR">
                            <input type="checkbox" data-hsearch-target="langPtBr" data-action="hsearch#updateLanguageFilter">
                            <img src="/static/images/svgs/flag-pt-br.b5011ae30f9c.svg" alt="PT-BR">
                        </label>
                        <label class="language-option" title="English">
                            <input type="checkbox" data-hsearch-target="langEng" data-action="hsearch#updateLanguageFilter" checked="">
                            <img src="/static/images/svgs/flag-en.b05066761c64.svg" alt="ENG">
                        </label>
                    </div>
                </div>
            </form>
            <ul class="list-group list-group-flush" data-hsearch-target="suggestions"></ul>
        </div>
    </div>
    <div class="main-container">
        <div class="container">
            <button type="button" class="search-close" id="hsearch-bar-button" data-action="hsearch#toggleSearch">
                <i class="icon icon-search icon-white"></i>
            </button>
        </div>
    </div>

</section> <!-- END SEARCH BAR -->

    </nav> <!-- END MAIN NAVBAR -->

    
    
    
    <!-- MAIN -->
    <main data-controller="comic" data-comic-redeem-endpoint="/sapi/comics/491/redeem" data-comic-favorite-endpoint="/sapi/comics/491/favorite" data-comic-favorited="false" data-comic-blocked="" data-comic-removed="false" data-comic-owned="false" data-comic-tenant-id="vzE6OdDp0">
         

<script id="comic" type="application/json">{"id": 491, "link": "/comics/inept-at-home-but-super-adept-compared-to-the-rest-manga/491/", "name": "I Was Called Inept at Home, but Turns Out I\u2019m Super Adept Compared to the Rest of the World", "e4pid": "SER-0DXlvD", "uslug": "inept-at-home-but-super-adept-compared-to-the-rest-manga", "alt": "\u5bb6\u3067\u7121\u80fd\u3068\u8a00\u308f\u308c\u7d9a\u3051\u305f\u4ffa\u3067\u3059\u304c\u3001\u4e16\u754c\u7684\u306b\u306f\u8d85\u6709\u80fd\u3060\u3063\u305f\u3088\u3046\u3067\u3059", "author": [{"id": 834, "name": "kimimaro, Masashi Suzuki, Mokyu", "alt": ""}], "artist": [], "adult": false, "tags": [{"name": "Comedy", "description": "To laugh out loud!", "slug": "comedy", "color": "#9E8E4F", "is_primary": true}, {"name": "Action", "description": "Ready... Set... Go!!!", "slug": "action", "color": "#4F589E", "is_primary": true}], "keywords": "['Ie de Munou to Iware Tsuzuketa Ore desu ga', 'Sekai-teki ni wa Chou Yuunou datta you desu']", "description": "Noah was raised by his exceptionally capable older sisters. He leaves his home to the nearby city to become an adventurer, but every time he performs he shocks those who witness him with wonder... \u201cWait? Am I actually strong...?\u201d He really shouldn\u2019t be surprised by his abilities when all five of his older sisters that raised him are the worlds greatest in their respective fields! He has unbelievable potential! Here begins Noah\u2019s shining new life getting the acknowledgment he deserves, but his older sisters are chasing after him...? He who was supposed to be inept is actually a super rookie! Noah\u2019s life as an adventurer begins!!", "excerpt": "Here unfolds the story of an OP unparalleled Rookie!!", "modified_at": "2025-09-27T06:30:13.293853-07:00", "publisher": {"id": 9, "name": "SQUARE ENIX", "language": "ja", "homepage": "https://www.square-enix.com/", "logo": "/media/publishers/9/logo_395d9311d913.png", "geoblocks": "[]"}, "color": "#188EC3", "in_exclusive": false, "in_hype": false, "all_free": false, "availability_strategy": {"starting_count": 3, "latest_only_free": false, "latest_double": false, "catchup_count": 0, "simulpub": false, "fpf_becomes_paid": "00:00:00", "fpf_becomes_free": "00:00:00", "fpf_becomes_backlog": "00:00:01", "backlog_becomes_backlog": "00:00:00"}, "campaigns": [], "last_updated": "2025-09-25T08:00:00-07:00", "chapter_count": 81, "update_status": 12, "update_text": "", "format": 1, "cover": "/media/comics/nDqqpD/31d8c3eafe52.png", "full_cover": "/media/comics/nDqqpD/35db9210040e.png", "zoom_cover": "/media/comics/0DXlvD/6f6424e0d1bd.png", "logo": "/media/comics/nDqqpD/7106e783554e.png", "banner": "/media/comics/nDqqpD/e88d573fed5d.png", "showcase": null, "preview": null, "thumbnail": "/media/comics/nDqqpD/a8c8b370e12b.png", "wallpaper": "/media/comics/nDqqpD/e434c349aee0.png", "chapter_title": "", "geoblocks": "['JP']", "removed": false, "additional_copyright": "\u00a9kimimaro/SB Creative Corp.\u003Cbr\u003EOriginal Character Designs:\u00a9Mokyu/SB Creative Corp.\u003Cbr\u003E\u00a9Masashi Suzuki/SQUARE ENIX", "additional_copyright_cover": "", "chapter_copyright": ""}</script>
<script id="user" type="application/json">{"id": null, "username": "", "is_staff": false, "groups": []}</script>
    <!-- SERIES HEADER -->
    <div class="series-data2 data-hide">
        <div class="sub-data">
            <span class="title">I Was Called Inept at Home, but Turns Out I’m Super Adept Compared to the Rest of the World</span>
            <span class="subtitle">
by <a href="/comics/?person=834" title="kimimaro, Masashi Suzuki, Mokyu">kimimaro, Masashi Suzuki, Mokyu</a></span>
            <span class="chapters">
                
<span>81</span> chapters
                <a href="/comics/?filter=manga" class="format">Manga</a>
            </span>
        </div>
    </div>
    <section id="series-header" class="series-header header-cover">
        <div class="series-container">
            <div class="container">
                <div class="series-info">
                    <span class="title">I Was Called Inept at Home, but Turns Out I’m Super Adept Compared to the Rest of the World</span>
                    <span class="subtitle">
by <a href="/comics/?person=834" title="kimimaro, Masashi Suzuki, Mokyu">kimimaro, Masashi Suzuki, Mokyu</a></span>
                    <a class="btn btn-outline-transparent-center-white" data-comic-target="starter" data-turbolinks="false" title="Read the first chapter for free!" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/o63mBk/chapter-1-1/">Start <strong>Free</strong> Reading</a>
                </div>

                <div class="series-data w-data">
                    <div class="category-list">
                        <ul class="category-listing">
    
    
    <style nonce="0d+Uy89IAUopLIyBH+SGwA==">.inline-tag-comedy { background-color: #9E8E4F; }</style>
<li><a href="/genres/comedy/" data-touch-force="true" class="category-button inline-tag-comedy" title="To laugh out loud!">Comedy</a></li>
    
    <style nonce="0d+Uy89IAUopLIyBH+SGwA==">.inline-tag-action { background-color: #4F589E; }</style>
<li><a href="/genres/action/" data-touch-force="true" class="category-button inline-tag-action" title="Ready... Set... Go!!!">Action</a></li>
    
</ul>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div class="clearfix"></div>
            </div>
        </div>
        <picture class="header-banner">
                    <source class="avif" srcset="https://media.comikey.com/gazo/600/avif/comics/nDqqpD/e88d573fed5d.png, https://media.comikey.com/gazo/840/avif/comics/nDqqpD/e88d573fed5d.png 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/600/webp/comics/nDqqpD/e88d573fed5d.png, https://media.comikey.com/gazo/840/webp/comics/nDqqpD/e88d573fed5d.png 2x" type="image/webp">
                    <img fetchpriority="high" src="https://media.comikey.com/gazo/600/jpg/comics/nDqqpD/e88d573fed5d.png" alt="Banner for I Was Called Inept at Home, but Turns Out I’m Super Adept Compared to the Rest of the World">
                </picture>
        <picture class="header-wallpaper">
                    <source class="avif" srcset="https://media.comikey.com/gazo/360/avif/comics/nDqqpD/e434c349aee0.png, https://media.comikey.com/gazo/480/avif/comics/nDqqpD/e434c349aee0.png 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/360/webp/comics/nDqqpD/e434c349aee0.png, https://media.comikey.com/gazo/480/webp/comics/nDqqpD/e434c349aee0.png 2x" type="image/webp">
                    <img fetchpriority="high" src="https://media.comikey.com/gazo/360/jpg/comics/nDqqpD/e434c349aee0.png" alt="Wallpaper for I Was Called Inept at Home, but Turns Out I’m Super Adept Compared to the Rest of the World">
                </picture>
    </section> <!-- END SERIES HEADER -->

    <!-- SINGLE SERIES CONTENT -->
    <section id="single-series-content">
        <!-- CONTAINER -->

        <div class="series-data2">
            <div class="sub-data">
                <span class="title">I Was Called Inept at Home, but Turns Out I’m Super Adept Compared to the Rest of the World</span>
                <span class="subtitle">
by <a href="/comics/?person=834" title="kimimaro, Masashi Suzuki, Mokyu">kimimaro, Masashi Suzuki, Mokyu</a></span>
                <span class="chapters mob-hide">
                    
<span>81</span> chapters
                    <a href="/comics/?filter=manga" class="format">Manga</a>
                    <a data-comic-target="starter" data-turbolinks="false" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/o63mBk/chapter-1-1/">READ NOW!</a>
                </span>
                <div class="mob-tags">
                    <div class="category-list">
                        <ul class="category-listing">
    
    
    <style nonce="0d+Uy89IAUopLIyBH+SGwA==">.inline-tag-comedy { background-color: #9E8E4F; }</style>
<li><a href="/genres/comedy/" data-touch-force="true" class="category-button inline-tag-comedy" title="To laugh out loud!">Comedy</a></li>
    
    <style nonce="0d+Uy89IAUopLIyBH+SGwA==">.inline-tag-action { background-color: #4F589E; }</style>
<li><a href="/genres/action/" data-touch-force="true" class="category-button inline-tag-action" title="Ready... Set... Go!!!">Action</a></li>
    
</ul>
                    </div>
                    <div class="mob-format">
                        <a href="/comics/?filter=manga" class="format">Manga</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="container">
            <div class="mob-start-reading">
                <a data-comic-target="starter" data-turbolinks="false" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/o63mBk/chapter-1-1/">START READING NOW »</a>
            </div>
            <div class="logo2 w-logo">
                
                <img class="" referrerpolicy="no-referrer" src="https://media.comikey.com/gazo/120/webp/comics/nDqqpD/7106e783554e.png" srcset="https://media.comikey.com/gazo/120/webp/comics/nDqqpD/7106e783554e.png, https://media.comikey.com/gazo/240/webp/comics/nDqqpD/7106e783554e.png 2x" loading="lazy" decoding="async" alt="Logo for I Was Called Inept at Home, but Turns Out I’m Super Adept Compared to the Rest of the World">
                
            </div>

            <!-- LEFT COLUMN -->
            <div class="left w-left">
                <div class="series-listing single with-preview w-hide">
                    <ul>
                        <li class="item item-preview" data-controller="preview">
                            <a data-comic-target="starter" data-turbolinks="false" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/o63mBk/chapter-1-1/">
                                <div class="image-wrap">
                                    <div class="image main-image" data-preview-target="mainImage">
                                        <div class="image-reel">
                                            <picture class="">
                    <source class="avif" srcset="https://media.comikey.com/gazo/480/avif/comics/nDqqpD/35db9210040e.png, https://media.comikey.com/gazo/960/avif/comics/nDqqpD/35db9210040e.png 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/480/webp/comics/nDqqpD/35db9210040e.png, https://media.comikey.com/gazo/960/webp/comics/nDqqpD/35db9210040e.png 2x" type="image/webp">
                    <img decoding="async" loading="lazy" src="https://media.comikey.com/gazo/480/jpg/comics/nDqqpD/35db9210040e.png" alt="Cover for I Was Called Inept at Home, but Turns Out I’m Super Adept Compared to the Rest of the World">
                </picture>
                                            
                                        </div>
                                    </div>
                                </div>
                            </a>
                            
                        </li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <!-- CREDITS -->
                <div class="original-credits w-hide">
                    <a href="/comics/?publisher=9" title="List all SQUARE ENIX series">家で無能と言われ続けた俺ですが、世界的には超有能だったようです ©kimimaro/SB Creative Corp.<br>Original Character Designs:©Mokyu/SB Creative Corp.<br>©Masashi Suzuki/SQUARE ENIX</a>
                </div>
                
                

<div class="similar-series">
    <h2>Related Series</h2>
    <style>
    .cover-container {
        position: relative;
        display: inline-block;
    }
    
    .country-flag {
        border-radius: 24px 0 0 24px;
        position: absolute;
        top: 5px;
        right: 0;
        width: 50px;
        height: 23px;
        z-index: 2;
        background-color: rgba(0,0,0,0.5);
        text-align: right;
    }
    
    .country-flag::before {
        content: '';
        background-size: 20px;
        background-position: left;
        background-repeat: no-repeat;
        position: relative;
        width: 46px;
        height: 21px;
        left: 1px;
        top: 1px;
        color: #FFF;
        font-weight: bold;
        font-size: 10px;
        line-height: 23px;
        text-align: right;
        display: block;
    }
    
    .flag-br::before {
        background-image: url('/static/images/svgs/flag-pt-br.svg');
        content: 'PTBR';
    }
    
    .flag-us::before {
        background-image: url('/static/images/svgs/flag-en.svg');
        content: 'ENG';
    }
    </style>
    <ul>
        
        <li>
            
                <a href="/comics/second-rate-warrior-overpowered-mage-manga/212/" title="That Second-Rate Warrior Is Now an Overpowered Mage!">
            
                <div class="cover-container">
                    <picture class="">
                    <source class="avif" srcset="https://media.comikey.com/gazo/240/avif/comics/rDyLPk/9a7a8dfb47d0.png, https://media.comikey.com/gazo/480/avif/comics/rDyLPk/9a7a8dfb47d0.png 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/240/webp/comics/rDyLPk/9a7a8dfb47d0.png, https://media.comikey.com/gazo/480/webp/comics/rDyLPk/9a7a8dfb47d0.png 2x" type="image/webp">
                    <img decoding="async" loading="lazy" src="https://media.comikey.com/gazo/240/jpg/comics/rDyLPk/9a7a8dfb47d0.png" alt="Cover for That Second-Rate Warrior Is Now an Overpowered Mage!">
                </picture>
                    
                        <div class="country-flag flag-us" title="English"></div>
                    
                    
                </div>
            </a>
        </li>
    </ul>
    <div class="clearfix"></div>
</div>

                
<!--SIMILAR COMICS-->
<div class="similar-series">
    <h2>Similar Comics</h2>
    <ul>
        
        <li>
            <a href="/comics/the-warrior-demigods-champions-of-sparta-manga/189/" title="The Warrior Demigods, Champions of Sparta">
                <picture class="">
                    <source class="avif" srcset="https://media.comikey.com/gazo/240/avif/comics/6eZ30o/e5b498c5c4dd.jpg, https://media.comikey.com/gazo/480/avif/comics/6eZ30o/e5b498c5c4dd.jpg 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/240/webp/comics/6eZ30o/e5b498c5c4dd.jpg, https://media.comikey.com/gazo/480/webp/comics/6eZ30o/e5b498c5c4dd.jpg 2x" type="image/webp">
                    <img decoding="async" loading="lazy" src="https://media.comikey.com/gazo/240/jpg/comics/6eZ30o/e5b498c5c4dd.jpg" alt="Cover for The Warrior Demigods, Champions of Sparta">
                </picture>
                
            </a>
        </li>
        <li>
            <a href="/comics/immortal-regis-manga/671/" title="Immortal Regis">
                <picture class="">
                    <source class="avif" srcset="https://media.comikey.com/gazo/240/avif/comics/jDvY9k/cbf4eb606c59.png, https://media.comikey.com/gazo/480/avif/comics/jDvY9k/cbf4eb606c59.png 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/240/webp/comics/jDvY9k/cbf4eb606c59.png, https://media.comikey.com/gazo/480/webp/comics/jDvY9k/cbf4eb606c59.png 2x" type="image/webp">
                    <img decoding="async" loading="lazy" src="https://media.comikey.com/gazo/240/jpg/comics/jDvY9k/cbf4eb606c59.png" alt="Cover for Immortal Regis">
                </picture>
                
            </a>
        </li>
        <li>
            <a href="/comics/the-pinnacle-webtoon/388/" title="The Pinnacle">
                <picture class="">
                    <source class="avif" srcset="https://media.comikey.com/gazo/240/avif/comics/AkaMlk/5c6ae992aadc.png, https://media.comikey.com/gazo/480/avif/comics/AkaMlk/5c6ae992aadc.png 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/240/webp/comics/AkaMlk/5c6ae992aadc.png, https://media.comikey.com/gazo/480/webp/comics/AkaMlk/5c6ae992aadc.png 2x" type="image/webp">
                    <img decoding="async" loading="lazy" src="https://media.comikey.com/gazo/240/jpg/comics/AkaMlk/5c6ae992aadc.png" alt="Cover for The Pinnacle">
                </picture>
                
            </a>
        </li>
        <li>
            <a href="/comics/guardy-girls-webcomic/186/" title="Guardy Girls">
                <picture class="">
                    <source class="avif" srcset="https://media.comikey.com/gazo/240/avif/comics/rodd9o/72c7729b6476.jpg, https://media.comikey.com/gazo/480/avif/comics/rodd9o/72c7729b6476.jpg 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/240/webp/comics/rodd9o/72c7729b6476.jpg, https://media.comikey.com/gazo/480/webp/comics/rodd9o/72c7729b6476.jpg 2x" type="image/webp">
                    <img decoding="async" loading="lazy" src="https://media.comikey.com/gazo/240/jpg/comics/rodd9o/72c7729b6476.jpg" alt="Cover for Guardy Girls">
                </picture>
                
            </a>
        </li>
    </ul>
    <div class="clearfix"></div>
</div>
<!--END SIMILAR COMICS-->
                
                <div class="clearfix"></div>
            </div><!-- END LEFT COLUMN -->

            <!-- RIGHT COLUMN -->
            <div class="right w-right">
                
                <div class="header">
                    <div class="buttons">
                        <button type="button" title="You must be signed in to favorite a comic!" data-comic-target="favoriteToggler" data-action="comic#login_redirect" class="btn with-filled-icon">
                            
                            <div>Add to <strong>Favorites</strong></div>
                            <span class="filled-icon">
                                <i class="icon icon-star icon-white"></i>
                            </span>
                            
                        </button>
                    </div>                
                    
                    <div class="updates">
                        <div class="update-date">
                            <strong>Thursdays</strong>
                            <a href="/sapi/comics/491/feed.rss"><img src="/static/images/svgs/rss.209e9ca0a5c6.svg" alt="RSS Feed"><span class="last-updated">Last Updated: <b id="episode_last_published_date"><time datetime="2025-09-25T15:00:00.000Z">2025/09/25</time></b></span>
                            </a>
                        </div>
                    </div>

                    <div class="clearfix"></div>
                </div>

                <div class="content">                
                    
                    <div class="excerpt">
                        <p>"Here unfolds the story of an OP unparalleled Rookie!!"</p>
                    </div>
                    
                    <div class="description-container" data-comic-target="descriptionContainer">
                        <div class="description" id="selection">
                            <p>Noah was raised by his exceptionally capable older sisters. He leaves his home to the nearby city to become an adventurer, but every time he performs he shocks those who witness him with wonder... “Wait? Am I actually strong...?” He really shouldn’t be surprised by his abilities when all five of his older sisters that raised him are the worlds greatest in their respective fields! He has unbelievable potential! Here begins Noah’s shining new life getting the acknowledgment he deserves, but his older sisters are chasing after him...? He who was supposed to be inept is actually a super rookie! Noah’s life as an adventurer begins!!</p>
                            <div class="secondary-tags">
                                <ul>
                                    
                                        
                                    
                                        
                                    
                                </ul>
                            </div>
                        </div>
                        
                        <!-- CREDITS -->
                        <div class="original-credits w-credits">
                            <a href="/comics/?publisher=9" title="List all SQUARE ENIX series">家で無能と言われ続けた俺ですが、世界的には超有能だったようです ©kimimaro/SB Creative Corp.<br>Original Character Designs:©Mokyu/SB Creative Corp.<br>©Masashi Suzuki/SQUARE ENIX</a>
                        </div>
                        
                    </div>
                    
                    <div class="show-description">
                        <button data-comic-target="descriptionToggler" data-action="comic#toggleDescription">More info</button>
                    </div>
                    
                    <div class="languages-wrapper">
                        <div id="languages" data-comic-target="languages" style="display: none;">
                            <a id="language-en" href="#languages" title="Switch to chapters in English" class="en active" data-comic-target="language" style="display: none;">English</a>
                            <a id="language-fr" href="#language-fr" title="Switch to chapters in Français" class="fr" data-comic-target="language" style="display: none;">Français</a>
                            <a id="language-es" href="#language-es" title="Switch to chapters in Español" class="es" data-comic-target="language" style="display: none;">Español</a>
                            <a id="language-id" href="#language-id" title="Switch to chapters in Bahasa" class="id" data-comic-target="language" style="display: none;">Bahasa</a>
                            <a id="language-pt-br" href="#language-pt-br" title="Switch to chapters in Português (BR)" class="pt-br" data-comic-target="language" style="display: none;">Português (BR)</a>
                        </div>
                        
                        <div id="languages-dynamic" data-comic-target="languages">
                            
                          </div>
                    </div>
                    
                    <div class="mobile-containers">
                        
                        
                    </div>

                    <!-- CHAPTERS LISTING -->
                    <div class="heading sorting-heading">
                    <div class="styling">
                        <ul>
                            <li class="invert">
                                <button type="button" title="Invert sorting order" data-action="comic#invert" class="btnInvertOrdering">
                                    <i class="icon-order icon-color1"></i><span>Sort</span>
                                </button>
                            </li>
                            <li>
                                <span class="chapters">
<span>81</span> chapters</span>
                            </li>
                            
                        </ul>
                    </div>
                    </div>
                    <div class="chapters-listing" id="chapters" data-comic-target="content"><ul>
                        <li class="free">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/o63mBk/chapter-1-1/" data-turbolinks="false" alt="Read Chapter 1.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">1.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 1.1</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-o63mBk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/o63mBk/chapter-1-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label text-color1 border-solid-1 border-color1">FREE</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-o63mBk_web/thumb_lo.webp?token=lkJMn_Sv79oOHa70K4g00WdPBLxznx-LHWxesTiSeeM&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-o63mBk_web/thumb_hi.webp?token=ApbOZTPMAFQlAAD43IvJlWzOxImZnecP_m2RkMfVhjA&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 1.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-o63mBk_web/thumb_lo.webp?token=lkJMn_Sv79oOHa70K4g00WdPBLxznx-LHWxesTiSeeM&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="free">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/eg72Ye/chapter-1-2/" data-turbolinks="false" alt="Read Chapter 1.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">1.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 1.2</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-eg72Ye" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/eg72Ye/chapter-1-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label text-color1 border-solid-1 border-color1">FREE</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-eg72Ye_web/thumb_lo.webp?token=PdrgPyeESfnKiTmTtrSMYcM4dYoT1k7Rnb92mvoaexs&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-eg72Ye_web/thumb_hi.webp?token=dKLgiPZvNEzk1DKU1R7aYvKuL6r1mSPH4jyO_CzuA2k&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 1.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-eg72Ye_web/thumb_lo.webp?token=PdrgPyeESfnKiTmTtrSMYcM4dYoT1k7Rnb92mvoaexs&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="free">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/kaJqwD/chapter-2/" data-turbolinks="false" alt="Read Chapter 2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 2</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-kaJqwD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/kaJqwD/chapter-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label text-color1 border-solid-1 border-color1">FREE</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-kaJqwD_web/thumb_lo.webp?token=u6TByCOyYN7B4Xqv5CeNlipzJtl50N7klHQd4QT2CDI&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-kaJqwD_web/thumb_hi.webp?token=39tewdHs7SmIzwAUlHdl7KxEXRqP-n1SRtRHVL8yFZ8&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-kaJqwD_web/thumb_lo.webp?token=u6TByCOyYN7B4Xqv5CeNlipzJtl50N7klHQd4QT2CDI&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k135de">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k135de/chapter-3-1/" data-turbolinks="false" alt="Log in to read Chapter 3.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">3.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 3.1</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k135de" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k135de/chapter-3-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k135de_web/thumb_lo.webp?token=4iP7LKZXSNpQN0Vr3dq1wZKtNJK8mL51EyT9J_FgStU&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k135de_web/thumb_hi.webp?token=gBBmuxiaEtehMG7Ma-0gVV_TeUZg4zeXZLhoa_zUi6c&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 3.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k135de_web/thumb_lo.webp?token=4iP7LKZXSNpQN0Vr3dq1wZKtNJK8mL51EyT9J_FgStU&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-kGEZde">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/kGEZde/chapter-3-2/" data-turbolinks="false" alt="Log in to read Chapter 3.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">3.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 3.2</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-kGEZde" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/kGEZde/chapter-3-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-kGEZde_web/thumb_lo.webp?token=lZfFkJfeCnKtp2k9J7ieGBPF36vDbyyU0r935ZjDaIE&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-kGEZde_web/thumb_hi.webp?token=rnaN0gwHmACXtWBACRY35YYFc296w2_ETmOgQfYYiDU&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 3.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-kGEZde_web/thumb_lo.webp?token=lZfFkJfeCnKtp2k9J7ieGBPF36vDbyyU0r935ZjDaIE&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-ebM2rD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ebM2rD/chapter-3-3/" data-turbolinks="false" alt="Log in to read Chapter 3.3">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">3.3</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 3.3</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-ebM2rD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ebM2rD/chapter-3-3/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-ebM2rD_web/thumb_lo.webp?token=4L4fkpTN_2Q_OxoNZOiSLhq8TGIbHx10d9GO6ipG9wk&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-ebM2rD_web/thumb_hi.webp?token=Te0EfU5yfPdMZE5WS8EWxIbyTkEev7J6ipAvc3kQZXQ&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 3.3" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-ebM2rD_web/thumb_lo.webp?token=4L4fkpTN_2Q_OxoNZOiSLhq8TGIbHx10d9GO6ipG9wk&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DvXPLo">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DvXPLo/chapter-3-4/" data-turbolinks="false" alt="Log in to read Chapter 3.4">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">3.4</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 3.4</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DvXPLo" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DvXPLo/chapter-3-4/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DvXPLo_web/thumb_lo.webp?token=EMvWT6hq4DaBBFCWoBgM7Zscnsne8_H1FTBa3aMlGKA&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DvXPLo_web/thumb_hi.webp?token=zBiN8ECIavTdt7UXiwKh_M8jhvlHzoEVoy2tPJEpr48&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 3.4" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DvXPLo_web/thumb_lo.webp?token=EMvWT6hq4DaBBFCWoBgM7Zscnsne8_H1FTBa3aMlGKA&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-oBNVEo">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/oBNVEo/chapter-4-1/" data-turbolinks="false" alt="Log in to read Chapter 4.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">4.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 4.1</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-oBNVEo" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/oBNVEo/chapter-4-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-oBNVEo_web/thumb_lo.webp?token=bJf6U4M6xVUrgklfe9_zeDvL8dR33GNs5FUCdgA1qR4&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-oBNVEo_web/thumb_hi.webp?token=oCuZWBgFvicgR5Jwr1FyIjUcZB4RjDPgfk5eX4xVra8&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 4.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-oBNVEo_web/thumb_lo.webp?token=bJf6U4M6xVUrgklfe9_zeDvL8dR33GNs5FUCdgA1qR4&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DWxPbe">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DWxPbe/chapter-4-2/" data-turbolinks="false" alt="Log in to read Chapter 4.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">4.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 4.2</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DWxPbe" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DWxPbe/chapter-4-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DWxPbe_web/thumb_lo.webp?token=WCDV3QQyV7g9IBuyLCpwhIPtYcraAPz116stUQ8X6C8&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DWxPbe_web/thumb_hi.webp?token=ClPZMCsNZS69SrdpZtNk1gwBuVuMYraujQtueL5cseQ&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 4.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DWxPbe_web/thumb_lo.webp?token=WCDV3QQyV7g9IBuyLCpwhIPtYcraAPz116stUQ8X6C8&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DMxVLk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DMxVLk/chapter-4-3/" data-turbolinks="false" alt="Log in to read Chapter 4.3">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">4.3</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 4.3</span>
                                        <time title="2 years ago" datetime="2023-07-20T15:00:00.000Z">Jul 20, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DMxVLk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DMxVLk/chapter-4-3/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DMxVLk_web/thumb_lo.webp?token=DkTSa6vUIk9uKHtVBKUxYsZat-wTRXG9iA_CGcPEUm4&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DMxVLk_web/thumb_hi.webp?token=BFXZIjt4d-60zNj70Vma143HRpd-QQSr4bswEInJV7g&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 4.3" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DMxVLk_web/thumb_lo.webp?token=DkTSa6vUIk9uKHtVBKUxYsZat-wTRXG9iA_CGcPEUm4&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-ePx6qe">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ePx6qe/chapter-5-1/" data-turbolinks="false" alt="Log in to read Chapter 5.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">5.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 5.1</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-ePx6qe" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ePx6qe/chapter-5-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-ePx6qe_web/thumb_lo.webp?token=ztTbB_NzVt-y9RXPVQQWvXluUCZrFcA9GdSWNQPlcd0&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-ePx6qe_web/thumb_hi.webp?token=GtFEpVrqKnZ2xbEkvoIOhxMfRF7IxOBU_GqBRlgqen8&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 5.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-ePx6qe_web/thumb_lo.webp?token=ztTbB_NzVt-y9RXPVQQWvXluUCZrFcA9GdSWNQPlcd0&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-eZxB6k">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/eZxB6k/chapter-5-2/" data-turbolinks="false" alt="Log in to read Chapter 5.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">5.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 5.2</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-eZxB6k" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/eZxB6k/chapter-5-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-eZxB6k_web/thumb_lo.webp?token=fMaQ84zG5fWz-90wvD4i8wteI9tXnN0bKt45DOiDuG4&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-eZxB6k_web/thumb_hi.webp?token=qCtkqF45r7NHlepm-kQEWpHaLPkrpSuiu98TNrwLj5k&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 5.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-eZxB6k_web/thumb_lo.webp?token=fMaQ84zG5fWz-90wvD4i8wteI9tXnN0bKt45DOiDuG4&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-kN26pk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/kN26pk/chapter-5-3/" data-turbolinks="false" alt="Log in to read Chapter 5.3">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">5.3</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 5.3</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-kN26pk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/kN26pk/chapter-5-3/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-kN26pk_web/thumb_lo.webp?token=hLz36WvWCEYVVg7FqJsZFOOWMmMeWVM-cep9qQdXqw8&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-kN26pk_web/thumb_hi.webp?token=LbnLVgOuF4eE553ve29ZWOy0OJR7GmfEMvsbSlDvfK4&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 5.3" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-kN26pk_web/thumb_lo.webp?token=hLz36WvWCEYVVg7FqJsZFOOWMmMeWVM-cep9qQdXqw8&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DXxayD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DXxayD/chapter-6-1/" data-turbolinks="false" alt="Log in to read Chapter 6.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">6.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 6.1</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DXxayD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DXxayD/chapter-6-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DXxayD_web/thumb_lo.webp?token=G_2QL4cDAsHYzc7imZiwTtyLgsYNqxwtR9Nori_X4Nw&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DXxayD_web/thumb_hi.webp?token=_U-KKg4SmajVwofSMZWs2iAKR9di9CoZDGKaJZUT3_U&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 6.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DXxayD_web/thumb_lo.webp?token=G_2QL4cDAsHYzc7imZiwTtyLgsYNqxwtR9Nori_X4Nw&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-eZx8Ok">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/eZx8Ok/chapter-6-2/" data-turbolinks="false" alt="Log in to read Chapter 6.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">6.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 6.2</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-eZx8Ok" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/eZx8Ok/chapter-6-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-eZx8Ok_web/thumb_lo.webp?token=dGDes-mtDtthy-21KpdXVKEHRCHFsQQ1gPzGlrMkQVg&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-eZx8Ok_web/thumb_hi.webp?token=BF5EcQi0gu1yP7vi4C1ey_iwtR2CzES-55cDEeqqmqM&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 6.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-eZx8Ok_web/thumb_lo.webp?token=dGDes-mtDtthy-21KpdXVKEHRCHFsQQ1gPzGlrMkQVg&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-odPx8o">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/odPx8o/chapter-7-1/" data-turbolinks="false" alt="Log in to read Chapter 7.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">7.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 7.1</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-odPx8o" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/odPx8o/chapter-7-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-odPx8o_web/thumb_lo.webp?token=XFI1a7oFon9Euy1j7D8sk1fYFXksmNooMDkX1725IRg&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-odPx8o_web/thumb_hi.webp?token=nwBsr6uwtXKIHe4L8xDSOb1q-bLSchyPurSjErveSag&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 7.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-odPx8o_web/thumb_lo.webp?token=XFI1a7oFon9Euy1j7D8sk1fYFXksmNooMDkX1725IRg&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-D03Qxk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/D03Qxk/chapter-7-2/" data-turbolinks="false" alt="Log in to read Chapter 7.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">7.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 7.2</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-D03Qxk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/D03Qxk/chapter-7-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-D03Qxk_web/thumb_lo.webp?token=7tnrhipz6BkoQFACr4qUKn_uofqkL5Y2hE5j20wa0Po&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-D03Qxk_web/thumb_hi.webp?token=j38OlaCCLiGSUvhjFwynoqz6y6gQhlddBsXm2AHAb50&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 7.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-D03Qxk_web/thumb_lo.webp?token=7tnrhipz6BkoQFACr4qUKn_uofqkL5Y2hE5j20wa0Po&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-owP8nk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/owP8nk/chapter-7-3/" data-turbolinks="false" alt="Log in to read Chapter 7.3">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">7.3</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 7.3</span>
                                        <time title="2 years ago" datetime="2023-05-27T15:00:00.000Z">May 27, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-owP8nk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/owP8nk/chapter-7-3/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-owP8nk_web/thumb_lo.webp?token=4XuupBiduFee-Hv2ENqioZQJDiDXy6ZtmDJ7AuRJnuQ&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-owP8nk_web/thumb_hi.webp?token=oRIpOz5wa1uDz8cvWMnVcfdqTBIX_POBs3fYJXuGwIc&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 7.3" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-owP8nk_web/thumb_lo.webp?token=4XuupBiduFee-Hv2ENqioZQJDiDXy6ZtmDJ7AuRJnuQ&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-o63wrk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/o63wrk/chapter-8-1/" data-turbolinks="false" alt="Log in to read Chapter 8.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">8.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 8.1</span>
                                        <time title="3 years ago" datetime="2023-03-02T15:00:00.000Z">Mar 2, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-o63wrk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/o63wrk/chapter-8-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-o63wrk_web/thumb_lo.webp?token=WPkBq5hVxUlKYq0vgO9-pw_lMsxSaEiEKyLIM8M47XI&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-o63wrk_web/thumb_hi.webp?token=KndZLC2fg323ud6P66c0LYc83kUyMxkIIaJ-ka3Z3-Y&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 8.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-o63wrk_web/thumb_lo.webp?token=WPkBq5hVxUlKYq0vgO9-pw_lMsxSaEiEKyLIM8M47XI&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-kjRg9k">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/kjRg9k/chapter-8-2/" data-turbolinks="false" alt="Log in to read Chapter 8.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">8.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 8.2</span>
                                        <time title="3 years ago" datetime="2023-03-02T15:00:00.000Z">Mar 2, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-kjRg9k" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/kjRg9k/chapter-8-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-kjRg9k_web/thumb_lo.webp?token=dLRecClW0AlcuApNFv_JLE6-LrGfi4-7UYs5b4AxKFk&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-kjRg9k_web/thumb_hi.webp?token=tgfuPm84hHDr2xqRnCws_yFeBGw-UjM_HMAp1WEfUT4&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 8.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-kjRg9k_web/thumb_lo.webp?token=dLRecClW0AlcuApNFv_JLE6-LrGfi4-7UYs5b4AxKFk&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k53EVe">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k53EVe/chapter-8-3/" data-turbolinks="false" alt="Log in to read Chapter 8.3">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">8.3</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 8.3</span>
                                        <time title="3 years ago" datetime="2023-03-02T15:00:00.000Z">Mar 2, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k53EVe" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k53EVe/chapter-8-3/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k53EVe_web/thumb_lo.webp?token=iolE0xfDmDo1CchNJSwDrXoDNy_ECuFYUQo6EOmjPiw&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k53EVe_web/thumb_hi.webp?token=YbrbTTiAOtGj-3g0hDY2N4XLSGtHGdfU-ZqB4B5cqaA&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 8.3" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k53EVe_web/thumb_lo.webp?token=iolE0xfDmDo1CchNJSwDrXoDNy_ECuFYUQo6EOmjPiw&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DyZl8e">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DyZl8e/chapter-9-1/" data-turbolinks="false" alt="Log in to read Chapter 9.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">9.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 9.1</span>
                                        <time title="3 years ago" datetime="2023-03-02T15:00:00.000Z">Mar 2, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DyZl8e" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DyZl8e/chapter-9-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DyZl8e_web/thumb_lo.webp?token=yNxQCNu_1f5T5hshvUCxY-pZrrFTAK4MIt2Mx3Y4eNY&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DyZl8e_web/thumb_hi.webp?token=CajoZ_bDlAK8Zet32_UDYtNCG4Q7Q36eZ7STNYKHOks&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 9.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DyZl8e_web/thumb_lo.webp?token=yNxQCNu_1f5T5hshvUCxY-pZrrFTAK4MIt2Mx3Y4eNY&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-onwx6k">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/onwx6k/chapter-9-2/" data-turbolinks="false" alt="Log in to read Chapter 9.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">9.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 9.2</span>
                                        <time title="3 years ago" datetime="2023-03-02T15:00:00.000Z">Mar 2, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-onwx6k" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/onwx6k/chapter-9-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-onwx6k_web/thumb_lo.webp?token=NN9NYDXOZ3ptUpOIF2vjiOyFAMufyZGRWGiksDoZue0&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-onwx6k_web/thumb_hi.webp?token=jzplbIiJZKKeKN72_LOAYh91fjSIHm9oW5yfKje8Kig&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 9.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-onwx6k_web/thumb_lo.webp?token=NN9NYDXOZ3ptUpOIF2vjiOyFAMufyZGRWGiksDoZue0&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-e43rXD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/e43rXD/chapter-9-3/" data-turbolinks="false" alt="Log in to read Chapter 9.3">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">9.3</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 9.3</span>
                                        <time title="3 years ago" datetime="2023-03-02T15:00:00.000Z">Mar 2, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-e43rXD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/e43rXD/chapter-9-3/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-e43rXD_web/thumb_lo.webp?token=5KG4qiONWhDh85h70C1NnpmNIeZHr9eHw8AA5-Hh1qI&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-e43rXD_web/thumb_hi.webp?token=3FkC0u0sDz0kr3fHbs3NzaP_p0NeHCKekXTXxkbkNLI&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 9.3" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-e43rXD_web/thumb_lo.webp?token=5KG4qiONWhDh85h70C1NnpmNIeZHr9eHw8AA5-Hh1qI&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DqmqwD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DqmqwD/chapter-10-1/" data-turbolinks="false" alt="Log in to read Chapter 10.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">10.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 10.1</span>
                                        <time title="3 years ago" datetime="2023-03-23T15:00:00.000Z">Mar 23, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DqmqwD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DqmqwD/chapter-10-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DqmqwD_web/thumb_lo.webp?token=dvMvsk9Y9DapjOJ7Xozz1UmofT3k7CveKJ7Adb0v6AI&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DqmqwD_web/thumb_hi.webp?token=Ym4M0Q0ikvcblBbz_CXbVSHPA2zzcsXZdpImR7RrsyA&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 10.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DqmqwD_web/thumb_lo.webp?token=dvMvsk9Y9DapjOJ7Xozz1UmofT3k7CveKJ7Adb0v6AI&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-ebMrJD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ebMrJD/chapter-10-2/" data-turbolinks="false" alt="Log in to read Chapter 10.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">10.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 10.2</span>
                                        <time title="3 years ago" datetime="2023-03-23T15:00:00.000Z">Mar 23, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-ebMrJD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ebMrJD/chapter-10-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-ebMrJD_web/thumb_lo.webp?token=9XNz0C5YjbPABYM17ca6IwuBtr9y7IKQUO9F4sPbAsU&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-ebMrJD_web/thumb_hi.webp?token=skKeI3lGfG1HMIidsP6oFVtB9spDQAtsy6YWHNrgaUQ&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 10.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-ebMrJD_web/thumb_lo.webp?token=9XNz0C5YjbPABYM17ca6IwuBtr9y7IKQUO9F4sPbAsU&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DmEqmD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DmEqmD/chapter-10-3/" data-turbolinks="false" alt="Log in to read Chapter 10.3">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">10.3</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 10.3</span>
                                        <time title="3 years ago" datetime="2023-03-23T15:00:00.000Z">Mar 23, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DmEqmD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DmEqmD/chapter-10-3/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DmEqmD_web/thumb_lo.webp?token=xFiUcrDjqTovVyK-iTYfdQON5RGZqthRorPWHkaLI-Y&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DmEqmD_web/thumb_hi.webp?token=EE3v-wgXXf6LGO8hChO_aDzLjrLJZEXdpfmwLIoZiB0&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 10.3" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DmEqmD_web/thumb_lo.webp?token=xFiUcrDjqTovVyK-iTYfdQON5RGZqthRorPWHkaLI-Y&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DWxVne">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DWxVne/chapter-10-4/" data-turbolinks="false" alt="Log in to read Chapter 10.4">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">10.4</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 10.4</span>
                                        <time title="3 years ago" datetime="2023-03-23T15:00:00.000Z">Mar 23, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DWxVne" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DWxVne/chapter-10-4/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DWxVne_web/thumb_lo.webp?token=w8ntUPPd7YTTPbxQTwwjkPKJwwgszjT3DYMnh7LiO0U&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DWxVne_web/thumb_hi.webp?token=WWHl-JKSKcP9roqCdryxz11GZWrJb6kEm69OodntCAU&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 10.4" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DWxVne_web/thumb_lo.webp?token=w8ntUPPd7YTTPbxQTwwjkPKJwwgszjT3DYMnh7LiO0U&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DVM6xk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DVM6xk/chapter-11-1/" data-turbolinks="false" alt="Log in to read Chapter 11.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">11.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 11.1</span>
                                        <time title="2 years ago" datetime="2023-06-01T15:00:00.000Z">Jun 1, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DVM6xk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DVM6xk/chapter-11-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DVM6xk_web/thumb_lo.webp?token=4pirCsiq_vACx8g_hy6x9-Zcn7bpA3Hl7Ofl4ov79oE&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DVM6xk_web/thumb_hi.webp?token=puhCKbbRbhUfnr-8VE_rwOJbLM6U0V1sx1-4mveVzs0&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 11.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DVM6xk_web/thumb_lo.webp?token=4pirCsiq_vACx8g_hy6x9-Zcn7bpA3Hl7Ofl4ov79oE&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-orGb9k">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/orGb9k/chapter-11-2/" data-turbolinks="false" alt="Log in to read Chapter 11.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">11.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 11.2</span>
                                        <time title="2 years ago" datetime="2023-06-01T15:00:00.000Z">Jun 1, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-orGb9k" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/orGb9k/chapter-11-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-orGb9k_web/thumb_lo.webp?token=-wabcKKYL75oPc8PdgIKcyyM3uS96Z2RSbMWkOtmXTI&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-orGb9k_web/thumb_hi.webp?token=XL1iHulfTLuuhzex139aF2mg3LX20eDWb-0C73Yf6yk&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 11.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-orGb9k_web/thumb_lo.webp?token=-wabcKKYL75oPc8PdgIKcyyM3uS96Z2RSbMWkOtmXTI&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-egnbnD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/egnbnD/chapter-11-3/" data-turbolinks="false" alt="Log in to read Chapter 11.3">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">11.3</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 11.3</span>
                                        <time title="2 years ago" datetime="2023-06-01T15:00:00.000Z">Jun 1, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-egnbnD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/egnbnD/chapter-11-3/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-egnbnD_web/thumb_lo.webp?token=N_IXKa9oO7TjZglioDCMLQONUcZdufVakc1TWfHdNMM&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-egnbnD_web/thumb_hi.webp?token=MlyFY6QvJ-tFM9Gk7JQ9VUyqe6j3GDMeQrfobb86WM0&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 11.3" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-egnbnD_web/thumb_lo.webp?token=N_IXKa9oO7TjZglioDCMLQONUcZdufVakc1TWfHdNMM&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DpGbMk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DpGbMk/chapter-12-1/" data-turbolinks="false" alt="Log in to read Chapter 12.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">12.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 12.1</span>
                                        <time title="2 years ago" datetime="2023-06-01T15:00:00.000Z">Jun 1, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DpGbMk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DpGbMk/chapter-12-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DpGbMk_web/thumb_lo.webp?token=SUXFwKIAqI1A1HUbwIVa9Czf6xZRQIwRTrxV8VR4tgM&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DpGbMk_web/thumb_hi.webp?token=ECZqIAprdAXkEc1tdhkTDW8iklnhHTuxXGwBAxkgFBk&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 12.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DpGbMk_web/thumb_lo.webp?token=SUXFwKIAqI1A1HUbwIVa9Czf6xZRQIwRTrxV8VR4tgM&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-e9njLo">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/e9njLo/chapter-12-2/" data-turbolinks="false" alt="Log in to read Chapter 12.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">12.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 12.2</span>
                                        <time title="2 years ago" datetime="2023-06-01T15:00:00.000Z">Jun 1, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-e9njLo" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/e9njLo/chapter-12-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-e9njLo_web/thumb_lo.webp?token=plpQvOV9ItwHb-kMThLOSVsaqISDim2WgGHhEzjO5eM&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-e9njLo_web/thumb_hi.webp?token=9Zi9uCrxxmSlGwWs-uVRfADCocEahXW8oiY6M8QcJQQ&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 12.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-e9njLo_web/thumb_lo.webp?token=plpQvOV9ItwHb-kMThLOSVsaqISDim2WgGHhEzjO5eM&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-oYzyyk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/oYzyyk/chapter-13-1/" data-turbolinks="false" alt="Log in to read Chapter 13.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">13.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 13.1</span>
                                        <time title="2 years ago" datetime="2023-07-20T15:00:00.000Z">Jul 20, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-oYzyyk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/oYzyyk/chapter-13-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-oYzyyk_web/thumb_lo.webp?token=TibV8OfBtp1YWJvFjrlSsciySFCkpPqhsxEWyM7cVWQ&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-oYzyyk_web/thumb_hi.webp?token=omERIBIC4-4EHvaZCLmgLhl0ZJA9dvkVmdSfhVoP0aI&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 13.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-oYzyyk_web/thumb_lo.webp?token=TibV8OfBtp1YWJvFjrlSsciySFCkpPqhsxEWyM7cVWQ&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k10Nqo">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k10Nqo/chapter-13-2/" data-turbolinks="false" alt="Log in to read Chapter 13.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">13.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 13.2</span>
                                        <time title="2 years ago" datetime="2023-06-22T15:00:00.000Z">Jun 22, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k10Nqo" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k10Nqo/chapter-13-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k10Nqo_web/thumb_lo.webp?token=w8NwZ2JFDlhSH8qivVJcCpOqPmIM8ZZhCtqqSZbBJrs&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k10Nqo_web/thumb_hi.webp?token=sphS16332qZ7w9LJ1Mtl-GU9MK5dzf5Ot7_uU_sidyo&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 13.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k10Nqo_web/thumb_lo.webp?token=w8NwZ2JFDlhSH8qivVJcCpOqPmIM8ZZhCtqqSZbBJrs&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-kGbWjo">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/kGbWjo/chapter-14-1/" data-turbolinks="false" alt="Log in to read Chapter 14.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">14.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 14.1</span>
                                        <time title="2 years ago" datetime="2023-07-20T15:00:00.000Z">Jul 20, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-kGbWjo" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/kGbWjo/chapter-14-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-kGbWjo_web/thumb_lo.webp?token=fn4IjbC_YZoT_1_3f4DoT-BqV_6IFvfqCM86wyA6RGI&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-kGbWjo_web/thumb_hi.webp?token=9HbV2EWACU6dIiYHIkB7Dmy3j68-sXgx66DSX9PZzwc&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 14.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-kGbWjo_web/thumb_lo.webp?token=fn4IjbC_YZoT_1_3f4DoT-BqV_6IFvfqCM86wyA6RGI&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-oLbz7D">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/oLbz7D/chapter-14-2/" data-turbolinks="false" alt="Log in to read Chapter 14.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">14.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 14.2</span>
                                        <time title="2 years ago" datetime="2023-07-20T15:00:00.000Z">Jul 20, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-oLbz7D" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/oLbz7D/chapter-14-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-oLbz7D_web/thumb_lo.webp?token=3aAbWIq7rSS0zLuaxhGER2W8eeLoRtM0VvX3kwb218g&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-oLbz7D_web/thumb_hi.webp?token=Q3u6-2KvV5e92Q-WVu7rmIhY4MwRcfadRNvK_-QV6J0&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 14.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-oLbz7D_web/thumb_lo.webp?token=3aAbWIq7rSS0zLuaxhGER2W8eeLoRtM0VvX3kwb218g&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DvvPwD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DvvPwD/chapter-15-1/" data-turbolinks="false" alt="Log in to read Chapter 15.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">15.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 15.1</span>
                                        <time title="2 years ago" datetime="2023-09-21T15:00:00.000Z">Sep 21, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DvvPwD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DvvPwD/chapter-15-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DvvPwD_web/thumb_lo.webp?token=CwP1gbk4msRqAIVCdzVY5jVDxunDdgJ8nKOjISjhOU8&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DvvPwD_web/thumb_hi.webp?token=IQML7pNW4ek6OKY7Sdlc-GpiUFe9QWZnQhLie6o3xn0&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 15.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DvvPwD_web/thumb_lo.webp?token=CwP1gbk4msRqAIVCdzVY5jVDxunDdgJ8nKOjISjhOU8&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DmRnve">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DmRnve/chapter-15-2/" data-turbolinks="false" alt="Log in to read Chapter 15.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">15.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 15.2</span>
                                        <time title="2 years ago" datetime="2023-09-21T15:00:00.000Z">Sep 21, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DmRnve" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DmRnve/chapter-15-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DmRnve_web/thumb_lo.webp?token=xOvI66kOGyFNY3ImXjptR-iwEN5aF5RBoNnscQ-msgY&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DmRnve_web/thumb_hi.webp?token=Jh6E7UlEj9ibPLnSHv6M0y0SwWbeLN-V5MiEU5a1BYM&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 15.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DmRnve_web/thumb_lo.webp?token=xOvI66kOGyFNY3ImXjptR-iwEN5aF5RBoNnscQ-msgY&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k597Vk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k597Vk/chapter-16-1/" data-turbolinks="false" alt="Log in to read Chapter 16.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">16.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 16.1</span>
                                        <time title="2 years ago" datetime="2023-09-21T15:00:00.000Z">Sep 21, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k597Vk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k597Vk/chapter-16-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k597Vk_web/thumb_lo.webp?token=gCFo71EUPZWFAsVFChNEzISGnG_Z2KWFiImUZteGijY&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k597Vk_web/thumb_hi.webp?token=sJGAqVX-fNs3flmjX7pmAZsVBkWKSdV3SBlwYr1fqxI&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 16.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k597Vk_web/thumb_lo.webp?token=gCFo71EUPZWFAsVFChNEzISGnG_Z2KWFiImUZteGijY&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DyAj8D">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DyAj8D/chapter-16-2/" data-turbolinks="false" alt="Log in to read Chapter 16.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">16.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 16.2</span>
                                        <time title="2 years ago" datetime="2023-09-21T15:00:00.000Z">Sep 21, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DyAj8D" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DyAj8D/chapter-16-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DyAj8D_web/thumb_lo.webp?token=th99XvC0Zx_Zz0lMsz1uxIDxkLTdxxcbPgj0fb32BUg&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DyAj8D_web/thumb_hi.webp?token=yI863n0mToDUn-RW3fNpwdXilPhG87D_S4pllD6W25U&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 16.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DyAj8D_web/thumb_lo.webp?token=th99XvC0Zx_Zz0lMsz1uxIDxkLTdxxcbPgj0fb32BUg&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-onJm6o">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/onJm6o/chapter-17-1/" data-turbolinks="false" alt="Log in to read Chapter 17.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">17.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 17.1</span>
                                        <time title="2 years ago" datetime="2023-12-07T15:00:00.000Z">Dec 7, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-onJm6o" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/onJm6o/chapter-17-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-onJm6o_web/thumb_lo.webp?token=X3wEcRXog_fUaEXeCxpuFLD79hCUK4msL7XlXfQ7ebA&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-onJm6o_web/thumb_hi.webp?token=XuZ1prJRdAlaidQrnVScgmfFfe6-yOarkIsswh52zIg&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 17.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-onJm6o_web/thumb_lo.webp?token=X3wEcRXog_fUaEXeCxpuFLD79hCUK4msL7XlXfQ7ebA&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-e4xZXe">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/e4xZXe/chapter-17-2/" data-turbolinks="false" alt="Log in to read Chapter 17.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">17.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 17.2</span>
                                        <time title="2 years ago" datetime="2023-12-07T15:00:00.000Z">Dec 7, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-e4xZXe" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/e4xZXe/chapter-17-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-e4xZXe_web/thumb_lo.webp?token=slc_XkSKrTgCZ7iCdVG2K2voRpD1a3oX-nwMDJESHgc&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-e4xZXe_web/thumb_hi.webp?token=5isadEZDd_UHZY-DO0pFJ4uGCqMDvRi_lfdtHIAVZac&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 17.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-e4xZXe_web/thumb_lo.webp?token=slc_XkSKrTgCZ7iCdVG2K2voRpD1a3oX-nwMDJESHgc&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-D0L9gD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/D0L9gD/chapter-18-1/" data-turbolinks="false" alt="Log in to read Chapter 18.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">18.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 18.1</span>
                                        <time title="2 years ago" datetime="2023-12-07T15:00:00.000Z">Dec 7, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-D0L9gD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/D0L9gD/chapter-18-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-D0L9gD_web/thumb_lo.webp?token=3uUJb6CchFtgaRxrXZ89dm8x74a_Ov2vxzMQfsrss1c&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-D0L9gD_web/thumb_hi.webp?token=LWNeA8k9WuebULslTbMFvRj5JlzI6yD9jNCySv8vVS4&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 18.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-D0L9gD_web/thumb_lo.webp?token=3uUJb6CchFtgaRxrXZ89dm8x74a_Ov2vxzMQfsrss1c&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k5L8jo">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k5L8jo/chapter-18-2/" data-turbolinks="false" alt="Log in to read Chapter 18.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">18.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 18.2</span>
                                        <time title="2 years ago" datetime="2023-12-07T15:00:00.000Z">Dec 7, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k5L8jo" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k5L8jo/chapter-18-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k5L8jo_web/thumb_lo.webp?token=1erXt4bedespGz1vjh9g05hBiDdZhhOZ79XfzBrYiu0&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k5L8jo_web/thumb_hi.webp?token=zNXK-iI0dLuilkPxAlqPA-npySIqwDjMBnM6Ce05zSo&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 18.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k5L8jo_web/thumb_lo.webp?token=1erXt4bedespGz1vjh9g05hBiDdZhhOZ79XfzBrYiu0&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DQPNak">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DQPNak/chapter-19-1/" data-turbolinks="false" alt="Log in to read Chapter 19.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">19.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 19.1</span>
                                        <time title="2 years ago" datetime="2023-12-07T15:00:00.000Z">Dec 7, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DQPNak" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DQPNak/chapter-19-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DQPNak_web/thumb_lo.webp?token=5T6pVqGFWyZxqRCU9w8GCoGKzzJmBnwggrGYbiCwcSA&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DQPNak_web/thumb_hi.webp?token=-wHGpLZAEVo_NU-hWz3A5VuDGPZR1_ZUjm2lUJ_5V2A&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 19.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DQPNak_web/thumb_lo.webp?token=5T6pVqGFWyZxqRCU9w8GCoGKzzJmBnwggrGYbiCwcSA&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-kavN6D">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/kavN6D/chapter-19-2/" data-turbolinks="false" alt="Log in to read Chapter 19.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">19.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 19.2</span>
                                        <time title="2 years ago" datetime="2023-12-07T15:00:00.000Z">Dec 7, 2023</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-kavN6D" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/kavN6D/chapter-19-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-kavN6D_web/thumb_lo.webp?token=ZlOGW97J66NVxlqGnw9SzGz8-IB5yZTT5XbuEzt2RhU&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-kavN6D_web/thumb_hi.webp?token=HHYUVjXXuC7RTCrJFeogiuCBjE6FPiEL9Q6lypDS72w&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 19.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-kavN6D_web/thumb_lo.webp?token=ZlOGW97J66NVxlqGnw9SzGz8-IB5yZTT5XbuEzt2RhU&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k1L8qo">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k1L8qo/chapter-20-1/" data-turbolinks="false" alt="Log in to read Chapter 20.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">20.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 20.1</span>
                                        <time title="2 years ago" datetime="2024-02-01T15:00:00.000Z">Feb 1, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k1L8qo" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k1L8qo/chapter-20-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k1L8qo_web/thumb_lo.webp?token=DSEZjKCN3fXkY0CSpTkyOMr8NsVf-Xdlg4XyzJgM_rQ&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k1L8qo_web/thumb_hi.webp?token=IjPMaKOkOnMbOlX1Tkidrc324jDJXCvxR782V0QiYHI&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 20.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k1L8qo_web/thumb_lo.webp?token=DSEZjKCN3fXkY0CSpTkyOMr8NsVf-Xdlg4XyzJgM_rQ&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-ebVd8e">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ebVd8e/chapter-20-2/" data-turbolinks="false" alt="Log in to read Chapter 20.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">20.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 20.2</span>
                                        <time title="2 years ago" datetime="2024-02-01T15:00:00.000Z">Feb 1, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-ebVd8e" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ebVd8e/chapter-20-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-ebVd8e_web/thumb_lo.webp?token=z-GqOvT8EVGU7NSjkUDaem4PMok9rqAgnyRomImiOXc&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-ebVd8e_web/thumb_hi.webp?token=0L6wYXKx7AmlTWdLN2iLmCUh1C8gmVjYaG8Cg2S6YXQ&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 20.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-ebVd8e_web/thumb_lo.webp?token=z-GqOvT8EVGU7NSjkUDaem4PMok9rqAgnyRomImiOXc&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k2d79e">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k2d79e/chapter-21-1/" data-turbolinks="false" alt="Log in to read Chapter 21.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">21.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 21.1</span>
                                        <time title="2 years ago" datetime="2024-01-04T15:00:00.000Z">Jan 4, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k2d79e" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k2d79e/chapter-21-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k2d79e_web/thumb_lo.webp?token=fV2VwPjcL1tNXNrsX4SfKBToPWwYmYbJidq9G0an5MA&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k2d79e_web/thumb_hi.webp?token=XtltnjIU7FhryrrXYbHCjjuTxAj3Pa5nihQF6_bvQDw&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 21.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k2d79e_web/thumb_lo.webp?token=fV2VwPjcL1tNXNrsX4SfKBToPWwYmYbJidq9G0an5MA&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-e40w0e">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/e40w0e/chapter-21-2/" data-turbolinks="false" alt="Log in to read Chapter 21.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">21.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 21.2</span>
                                        <time title="2 years ago" datetime="2024-01-18T15:00:00.000Z">Jan 18, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-e40w0e" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/e40w0e/chapter-21-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-e40w0e_web/thumb_lo.webp?token=gU_-FjHxqwOy7rHWALWb3P6SoI1kauKxMCjBhZq8Op8&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-e40w0e_web/thumb_hi.webp?token=Wxq1loqTHOBz-KMexstQz6_WgIbZxljX4QzqSlnLx0c&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 21.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-e40w0e_web/thumb_lo.webp?token=gU_-FjHxqwOy7rHWALWb3P6SoI1kauKxMCjBhZq8Op8&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-Dv4j4o">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dv4j4o/chapter-22-1/" data-turbolinks="false" alt="Log in to read Chapter 22.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">22.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 22.1</span>
                                        <time title="a year ago" datetime="2024-03-28T15:00:00.000Z">Mar 28, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-Dv4j4o" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dv4j4o/chapter-22-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dv4j4o_web/thumb_lo.webp?token=YxZURphVsfpaUL3U6PKAJYWH461Kb9UoOqOTSu775ac&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-Dv4j4o_web/thumb_hi.webp?token=5JW5SnP8whFLuw0v6KxLXM4H6aJzwhkT-h2C62Hq0zs&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 22.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dv4j4o_web/thumb_lo.webp?token=YxZURphVsfpaUL3U6PKAJYWH461Kb9UoOqOTSu775ac&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-Dm07mk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dm07mk/chapter-22-2/" data-turbolinks="false" alt="Log in to read Chapter 22.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">22.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 22.2</span>
                                        <time title="a year ago" datetime="2024-03-28T15:00:00.000Z">Mar 28, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-Dm07mk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dm07mk/chapter-22-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dm07mk_web/thumb_lo.webp?token=zil6mqlh0fUhCCKffx_THjdegWkIXUpoAwLDisEMrdo&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-Dm07mk_web/thumb_hi.webp?token=JtPeSeZLcLIVdfzaL-LIMvm9OEs-eCKyRE1FwSux_Wo&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 22.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dm07mk_web/thumb_lo.webp?token=zil6mqlh0fUhCCKffx_THjdegWkIXUpoAwLDisEMrdo&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-oKNpve">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/oKNpve/chapter-23-1/" data-turbolinks="false" alt="Log in to read Chapter 23.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">23.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 23.1</span>
                                        <time title="a year ago" datetime="2024-04-04T15:00:00.000Z">Apr 4, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-oKNpve" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/oKNpve/chapter-23-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-oKNpve_web/thumb_lo.webp?token=TrkJNKaHFQ1KHHm8_Z3atX8CGMWl0xC88ypeciqMMUY&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-oKNpve_web/thumb_hi.webp?token=NrJwtWpFr90VqT1ogKFYDdqKr8Su-mlY1hYr3gejPCg&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 23.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-oKNpve_web/thumb_lo.webp?token=TrkJNKaHFQ1KHHm8_Z3atX8CGMWl0xC88ypeciqMMUY&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k3PJOD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k3PJOD/chapter-23-2/" data-turbolinks="false" alt="Log in to read Chapter 23.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">23.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 23.2</span>
                                        <time title="a year ago" datetime="2024-05-30T15:00:00.000Z">May 30, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k3PJOD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k3PJOD/chapter-23-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k3PJOD_web/thumb_lo.webp?token=JMAvhOsHdcLK2NQ8RQEhvFvGRsZuuRz6I4_fP1FntV0&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k3PJOD_web/thumb_hi.webp?token=I6FunTPadAA1c1FeeF_gVdABDMwHLfOzjOZU69KsaLY&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 23.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k3PJOD_web/thumb_lo.webp?token=JMAvhOsHdcLK2NQ8RQEhvFvGRsZuuRz6I4_fP1FntV0&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DQMdMD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DQMdMD/chapter-24-1/" data-turbolinks="false" alt="Log in to read Chapter 24.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">24.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 24.1</span>
                                        <time title="a year ago" datetime="2024-06-20T15:00:00.000Z">Jun 20, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DQMdMD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DQMdMD/chapter-24-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DQMdMD_web/thumb_lo.webp?token=eswDLk19rHclNbP2RlhO5eFjfRpBokgwb0-CiqEjNRU&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DQMdMD_web/thumb_hi.webp?token=uxFejv0jXDpT3D8snUuDdhQmAD2qxZ4RVtW4cvJcjxc&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 24.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DQMdMD_web/thumb_lo.webp?token=eswDLk19rHclNbP2RlhO5eFjfRpBokgwb0-CiqEjNRU&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-orXZ8D">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/orXZ8D/chapter-24-2/" data-turbolinks="false" alt="Log in to read Chapter 24.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">24.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 24.2</span>
                                        <time title="a year ago" datetime="2024-06-27T15:00:00.000Z">Jun 27, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-orXZ8D" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/orXZ8D/chapter-24-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-orXZ8D_web/thumb_lo.webp?token=oIOBcHG02a6yjmmqnRkiy3dG0tLFqWekvvmvSsnVwxY&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-orXZ8D_web/thumb_hi.webp?token=-MDdvHa14kkG2xLeox3q-wjaJWrCTWU2_Lt7ksRJ0-w&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 24.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-orXZ8D_web/thumb_lo.webp?token=oIOBcHG02a6yjmmqnRkiy3dG0tLFqWekvvmvSsnVwxY&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-onQ2xe">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/onQ2xe/chapter-25-1/" data-turbolinks="false" alt="Log in to read Chapter 25.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">25.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 25.1</span>
                                        <time title="a year ago" datetime="2024-07-18T15:00:00.000Z">Jul 18, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-onQ2xe" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/onQ2xe/chapter-25-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-onQ2xe_web/thumb_lo.webp?token=KRMr-O5S_zMEfUMfhGuaqHHQqZmVbXnL6bo6LdN0N8c&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-onQ2xe_web/thumb_hi.webp?token=ZALBfklmCyIJVCRlFZKIttRw09Bhlj9hL-LE9b87w6U&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 25.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-onQ2xe_web/thumb_lo.webp?token=KRMr-O5S_zMEfUMfhGuaqHHQqZmVbXnL6bo6LdN0N8c&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-e4KGdD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/e4KGdD/chapter-25-2/" data-turbolinks="false" alt="Log in to read Chapter 25.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">25.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 25.2</span>
                                        <time title="a year ago" datetime="2024-07-25T15:00:00.000Z">Jul 25, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-e4KGdD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/e4KGdD/chapter-25-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-e4KGdD_web/thumb_lo.webp?token=-vO1RPyxL6Nq8VThhr0HSzKd8v6Esyl6xyjyMRrv_6Q&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-e4KGdD_web/thumb_hi.webp?token=k9mtisdvAkUBwVqqAwDcg6_eGY6oL2BMPRsSB5Vb46M&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 25.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-e4KGdD_web/thumb_lo.webp?token=-vO1RPyxL6Nq8VThhr0HSzKd8v6Esyl6xyjyMRrv_6Q&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-Dz3rve">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dz3rve/chapter-26-1/" data-turbolinks="false" alt="Log in to read Chapter 26.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">26.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 26.1</span>
                                        <time title="a year ago" datetime="2024-08-01T15:00:00.000Z">Aug 1, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-Dz3rve" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dz3rve/chapter-26-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dz3rve_web/thumb_lo.webp?token=qYacLf_TMD_RyTjHQcpeGfm3Xi8oBs9psV-s-3zpIEw&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-Dz3rve_web/thumb_hi.webp?token=ZDmA7qL6EpzEKT12gAhAG7SsqVuX2-GvZCY8jgN1iec&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 26.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dz3rve_web/thumb_lo.webp?token=qYacLf_TMD_RyTjHQcpeGfm3Xi8oBs9psV-s-3zpIEw&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-eZM98D">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/eZM98D/chapter-26-2/" data-turbolinks="false" alt="Log in to read Chapter 26.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">26.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 26.2</span>
                                        <time title="a year ago" datetime="2024-08-08T15:00:00.000Z">Aug 8, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-eZM98D" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/eZM98D/chapter-26-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-eZM98D_web/thumb_lo.webp?token=OW3pJAXjWFdo8w-USnDkxr-2U1NJDGoc_8-hnwMsvYc&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-eZM98D_web/thumb_hi.webp?token=wkxXJDxNB0LZ4ihMxR0MkiJ5VWu5Wo8OL0T2p4InptE&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 26.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-eZM98D_web/thumb_lo.webp?token=OW3pJAXjWFdo8w-USnDkxr-2U1NJDGoc_8-hnwMsvYc&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-ebRO8e">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ebRO8e/chapter-27-1/" data-turbolinks="false" alt="Log in to read Chapter 27.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">27.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 27.1</span>
                                        <time title="a year ago" datetime="2024-08-22T15:00:00.000Z">Aug 22, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-ebRO8e" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ebRO8e/chapter-27-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-ebRO8e_web/thumb_lo.webp?token=FZYUAXXrSVOqFeoM5a5GLH5Yjo9ZbjZGPmSKULX6GeU&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-ebRO8e_web/thumb_hi.webp?token=Oac0Il2HIGB6W8r9M48e82SApfXSJWqMouixjYkGkcY&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 27.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-ebRO8e_web/thumb_lo.webp?token=FZYUAXXrSVOqFeoM5a5GLH5Yjo9ZbjZGPmSKULX6GeU&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k3aKye">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k3aKye/chapter-27-2/" data-turbolinks="false" alt="Log in to read Chapter 27.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">27.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 27.2</span>
                                        <time title="a year ago" datetime="2024-08-29T15:00:00.000Z">Aug 29, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k3aKye" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k3aKye/chapter-27-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k3aKye_web/thumb_lo.webp?token=lq0qNvpaFc00OHROI2XSZqbLDzkk45f3BkgwE5amNVc&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k3aKye_web/thumb_hi.webp?token=nrtVysMn8XRF3NCqxxEnXqV0H7yEUuV63-WFyRDjKds&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 27.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k3aKye_web/thumb_lo.webp?token=lq0qNvpaFc00OHROI2XSZqbLDzkk45f3BkgwE5amNVc&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-odmAjk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/odmAjk/chapter-28-1/" data-turbolinks="false" alt="Log in to read Chapter 28.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">28.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 28.1</span>
                                        <time title="a year ago" datetime="2024-10-17T15:00:00.000Z">Oct 17, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-odmAjk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/odmAjk/chapter-28-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-odmAjk_web/thumb_lo.webp?token=UlvOjyP43ni0GuAv7m7OFuJQ4mPM6L5yVintx0XYqMo&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-odmAjk_web/thumb_hi.webp?token=zE8QwoxY0zOEiiRL4yurV1eTGbcDGcXw8YNrCy__TbQ&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 28.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-odmAjk_web/thumb_lo.webp?token=UlvOjyP43ni0GuAv7m7OFuJQ4mPM6L5yVintx0XYqMo&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-Dm7VRo">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dm7VRo/chapter-28-2/" data-turbolinks="false" alt="Log in to read Chapter 28.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">28.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 28.2</span>
                                        <time title="a year ago" datetime="2024-10-24T15:00:00.000Z">Oct 24, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-Dm7VRo" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dm7VRo/chapter-28-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dm7VRo_web/thumb_lo.webp?token=VA_bDvk3wmwurlXc9z7bjB8dOJPl5bYkdLnKnsfTF14&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-Dm7VRo_web/thumb_hi.webp?token=Cat5lsQBMU_t4wJQTSLBz4Lz0hctrN6vG8fEhY0TxLk&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 28.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dm7VRo_web/thumb_lo.webp?token=VA_bDvk3wmwurlXc9z7bjB8dOJPl5bYkdLnKnsfTF14&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k5nNVD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k5nNVD/chapter-29-1/" data-turbolinks="false" alt="Log in to read Chapter 29.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">29.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 29.1</span>
                                        <time title="10 months ago" datetime="2024-11-21T15:00:00.000Z">Nov 21, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k5nNVD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k5nNVD/chapter-29-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k5nNVD_web/thumb_lo.webp?token=_xRXB9URIOsSgMVt5nLyPcDjdsMS-pKTFecmro4SbDk&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k5nNVD_web/thumb_hi.webp?token=knM136WyXW6jSSiE6HCSQT1qQOS0vsGZ_slky__A9v0&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 29.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k5nNVD_web/thumb_lo.webp?token=_xRXB9URIOsSgMVt5nLyPcDjdsMS-pKTFecmro4SbDk&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-Dy588D">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dy588D/chapter-29-2/" data-turbolinks="false" alt="Log in to read Chapter 29.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">29.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 29.2</span>
                                        <time title="10 months ago" datetime="2024-11-28T15:00:00.000Z">Nov 28, 2024</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-Dy588D" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dy588D/chapter-29-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dy588D_web/thumb_lo.webp?token=OowJB4wJA8X0hEGX-T8n2AnR8Riac4DxtqUhYw2_rH8&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-Dy588D_web/thumb_hi.webp?token=vOmMq6WeRPJmMV3nQMd-Ozh7nlPgyKBkB0oIE6IIOfI&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 29.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dy588D_web/thumb_lo.webp?token=OowJB4wJA8X0hEGX-T8n2AnR8Riac4DxtqUhYw2_rH8&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-ebaWdD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ebaWdD/chapter-30-1/" data-turbolinks="false" alt="Log in to read Chapter 30.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">30.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 30.1</span>
                                        <time title="9 months ago" datetime="2025-01-02T15:00:00.000Z">Jan 2, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-ebaWdD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ebaWdD/chapter-30-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-ebaWdD_web/thumb_lo.webp?token=Byf4vUNqu69778Yg-Hs9LicDwMVOZRBj2pRsKq45Bik&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-ebaWdD_web/thumb_hi.webp?token=PDTrygdkKzDzFo-kPW6Fw34jcY0gg3KZ_huvKcYyD3c&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 30.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-ebaWdD_web/thumb_lo.webp?token=Byf4vUNqu69778Yg-Hs9LicDwMVOZRBj2pRsKq45Bik&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k35qme">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k35qme/chapter-30-2/" data-turbolinks="false" alt="Log in to read Chapter 30.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">30.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 30.2</span>
                                        <time title="9 months ago" datetime="2025-01-09T15:00:00.000Z">Jan 9, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k35qme" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k35qme/chapter-30-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k35qme_web/thumb_lo.webp?token=ZQvD4x4w3f0OYtCZIKgXnoIqwUsXgwQ5XkFPGYq7UgA&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k35qme_web/thumb_hi.webp?token=nhuEHxwle3Z8-oISkS_wJHdhppxSD8fSOa1IOLTdfyE&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 30.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k35qme_web/thumb_lo.webp?token=ZQvD4x4w3f0OYtCZIKgXnoIqwUsXgwQ5XkFPGYq7UgA&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-ePR56k">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ePR56k/chapter-31-1/" data-turbolinks="false" alt="Log in to read Chapter 31.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">31.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 31.1</span>
                                        <time title="5 months ago" datetime="2025-04-17T15:00:00.000Z">Apr 17, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-ePR56k" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ePR56k/chapter-31-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-ePR56k_web/thumb_lo.webp?token=lyDKHFiaXNOaIRfwt9NShuV7fDp_UTQVw2RM4wZcs_Q&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-ePR56k_web/thumb_hi.webp?token=tgYS5DZ2kxUtRT18I_bEwIUiS8sZoELlpwc6pZbfJgY&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 31.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-ePR56k_web/thumb_lo.webp?token=lyDKHFiaXNOaIRfwt9NShuV7fDp_UTQVw2RM4wZcs_Q&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-Dz6YzD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dz6YzD/chapter-31-2/" data-turbolinks="false" alt="Log in to read Chapter 31.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">31.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 31.2</span>
                                        <time title="5 months ago" datetime="2025-05-01T15:00:00.000Z">May 1, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-Dz6YzD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dz6YzD/chapter-31-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dz6YzD_web/thumb_lo.webp?token=t6I1se3U1dCazj4FR3Eh8vuUZw-5sLkI66WB46SWWlY&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-Dz6YzD_web/thumb_hi.webp?token=dzixTWlGDy6F8oeY09GW9X8hRANGNknI8M4752fToCg&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 31.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dz6YzD_web/thumb_lo.webp?token=t6I1se3U1dCazj4FR3Eh8vuUZw-5sLkI66WB46SWWlY&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k7vEao">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k7vEao/chapter-32-1/" data-turbolinks="false" alt="Log in to read Chapter 32.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">32.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 32.1</span>
                                        <time title="4 months ago" datetime="2025-05-15T15:00:00.000Z">May 15, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k7vEao" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k7vEao/chapter-32-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k7vEao_web/thumb_lo.webp?token=BiBL9MWZfmkzPUIUg3qASHai7k8mImVpDWDpzhNvDgc&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k7vEao_web/thumb_hi.webp?token=jbmfVcPmFStuEKvPrU-DU5m7-dKz02V1hHMe8viNyDA&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 32.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k7vEao_web/thumb_lo.webp?token=BiBL9MWZfmkzPUIUg3qASHai7k8mImVpDWDpzhNvDgc&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-eZ4WYk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/eZ4WYk/chapter-32-2/" data-turbolinks="false" alt="Log in to read Chapter 32.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">32.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 32.2</span>
                                        <time title="4 months ago" datetime="2025-05-29T15:00:00.000Z">May 29, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-eZ4WYk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/eZ4WYk/chapter-32-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-eZ4WYk_web/thumb_lo.webp?token=MotF9wzO_PWT6-v9gLmAZWAyB8I2mwLS4ZI6MJEWL74&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-eZ4WYk_web/thumb_hi.webp?token=5BIKdJcaV868psT-PfDjd3Vu2C-xMzRrPlFI3F5Jccs&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 32.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-eZ4WYk_web/thumb_lo.webp?token=MotF9wzO_PWT6-v9gLmAZWAyB8I2mwLS4ZI6MJEWL74&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DXyPKe">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DXyPKe/chapter-33-1/" data-turbolinks="false" alt="Log in to read Chapter 33.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">33.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 33.1</span>
                                        <time title="3 months ago" datetime="2025-06-12T15:00:00.000Z">Jun 12, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DXyPKe" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DXyPKe/chapter-33-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DXyPKe_web/thumb_lo.webp?token=QF1MMV4NHZ4vndGCQVKpQKVr066PTzK0h4JNr7zmYc0&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DXyPKe_web/thumb_hi.webp?token=mKViMmf-vJLq8loUAHkluNbqSqeRtRFfZK928nEDm8s&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 33.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DXyPKe_web/thumb_lo.webp?token=QF1MMV4NHZ4vndGCQVKpQKVr066PTzK0h4JNr7zmYc0&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-ePRbwk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ePRbwk/chapter-33-2/" data-turbolinks="false" alt="Log in to read Chapter 33.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">33.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 33.2</span>
                                        <time title="3 months ago" datetime="2025-06-26T15:00:00.000Z">Jun 26, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-ePRbwk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/ePRbwk/chapter-33-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-ePRbwk_web/thumb_lo.webp?token=u5RPCWsjo20o3spP7s03fBZtiMwNlR5LXY0fMjwJ1sw&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-ePRbwk_web/thumb_hi.webp?token=y9W2VRxufvKsNu8iH_Y9Ak6FS20VMra77BFpxtQZQho&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 33.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-ePRbwk_web/thumb_lo.webp?token=u5RPCWsjo20o3spP7s03fBZtiMwNlR5LXY0fMjwJ1sw&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-eg1rBk">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/eg1rBk/chapter-34-1/" data-turbolinks="false" alt="Log in to read Chapter 34.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">34.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 34.1</span>
                                        <time title="3 months ago" datetime="2025-07-10T15:00:00.000Z">Jul 10, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-eg1rBk" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/eg1rBk/chapter-34-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-eg1rBk_web/thumb_lo.webp?token=-jqNMM2zDk1-2a9PCC4MdGn6nN4rhFyzSjDSwHpEx3Y&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-eg1rBk_web/thumb_hi.webp?token=9J5ExSIhm5hioexDfisAZFpft7nczdhzxUqzbReWwLo&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 34.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-eg1rBk_web/thumb_lo.webp?token=-jqNMM2zDk1-2a9PCC4MdGn6nN4rhFyzSjDSwHpEx3Y&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k8r54e">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k8r54e/chapter-34-2/" data-turbolinks="false" alt="Log in to read Chapter 34.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">34.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 34.2</span>
                                        <time title="2 months ago" datetime="2025-07-24T15:00:00.000Z">Jul 24, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k8r54e" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k8r54e/chapter-34-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k8r54e_web/thumb_lo.webp?token=EqCNcSkpeTy1aoj0sE490mCRmpwCo8v0V4H-1jyaS7g&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k8r54e_web/thumb_hi.webp?token=rpqPPc_7QBZSiIS_qosY-A5KWQKvAJFxLEMKMZX1XCk&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 34.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k8r54e_web/thumb_lo.webp?token=EqCNcSkpeTy1aoj0sE490mCRmpwCo8v0V4H-1jyaS7g&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-k8MKvD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k8MKvD/chapter-35-1/" data-turbolinks="false" alt="Log in to read Chapter 35.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">35.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 35.1</span>
                                        <time title="2 months ago" datetime="2025-08-07T15:00:00.000Z">Aug 7, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-k8MKvD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/k8MKvD/chapter-35-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-k8MKvD_web/thumb_lo.webp?token=ZEEZyLuwAhhY_ibO1I_iTXRclgdJiPrCevuhxRvcLOw&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-k8MKvD_web/thumb_hi.webp?token=DqbzZ_T-L7o_5mZaLU9ax3ZsB0SFoEDUJ5V46TOCILs&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 35.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-k8MKvD_web/thumb_lo.webp?token=ZEEZyLuwAhhY_ibO1I_iTXRclgdJiPrCevuhxRvcLOw&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-Dp4VMD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dp4VMD/chapter-35-2/" data-turbolinks="false" alt="Log in to read Chapter 35.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">35.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 35.2</span>
                                        <time title="a month ago" datetime="2025-08-14T15:00:00.000Z">Aug 14, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-Dp4VMD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/Dp4VMD/chapter-35-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dp4VMD_web/thumb_lo.webp?token=g3peYRRFh_VtTD3VE2xIy5u83TMJXoSZ8ZrYnpcKr4A&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-Dp4VMD_web/thumb_hi.webp?token=o2U9YewTug1M6ysNzXtSmcFYG_mCD_w1XkW5PA7-dEc&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 35.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-Dp4VMD_web/thumb_lo.webp?token=g3peYRRFh_VtTD3VE2xIy5u83TMJXoSZ8ZrYnpcKr4A&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="3" data-e4pid="EPI-DyqERD">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DyqERD/chapter-36-1/" data-turbolinks="false" alt="Log in to read Chapter 36.1">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">36.1</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 36.1</span>
                                        <time title="9 days ago" datetime="2025-09-18T15:00:00.000Z">Sep 18, 2025</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-DyqERD" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/DyqERD/chapter-36-1/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">3 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-DyqERD_web/thumb_lo.webp?token=6EJm4eIg2aa1FxFceUfT4lek2FR09iVKeEWRaD0c_4k&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-DyqERD_web/thumb_hi.webp?token=IoWeJfSTSaAhxaQv_eFSqhSNwILE9PegrcrdBC98d80&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 36.1" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-DyqERD_web/thumb_lo.webp?token=6EJm4eIg2aa1FxFceUfT4lek2FR09iVKeEWRaD0c_4k&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    
                        <li class="paid multi-unlockable" data-action="5" data-e4pid="EPI-onrMQo">
                            <a class="chrow" href="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/onrMQo/chapter-36-2/" data-turbolinks="false" alt="Log in to read Chapter 36.2">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number">36.2</div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name">Chapter 36.2</span>
                                        <time title="2 days ago" datetime="2025-09-25T15:00:00.000Z">2 days ago</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="icon-wrap"><button class="icon icon-comments" data-comic-target="comments" data-action="comic#show_comments" data-e4pid="EPI-onrMQo" data-link="/read/inept-at-home-but-super-adept-compared-to-the-rest-manga/onrMQo/chapter-36-2/"></button></div><div class="label-wrap salestatus">
                                            <span class="label background-color2 text-white">5 Keys</span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="https://gate.epub.rocks/delivery/COMIKEY-EPI-onrMQo_web/thumb_lo.webp?token=j8KTmf9K8WZnZawG0gxycNowRmKI68eQau_3Lhm8EEk&amp;expires=68d9bdf0&amp;anonymous, https://gate.epub.rocks/delivery/COMIKEY-EPI-onrMQo_web/thumb_hi.webp?token=QH5_tVojbIGRYBGlTuHTiY6h5zfB4x-IiLWku5JXZHI&amp;expires=68d9bdf0&amp;anonymous 2x" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="Thumbnail for Chapter 36.2" src="https://gate.epub.rocks/delivery/COMIKEY-EPI-onrMQo_web/thumb_lo.webp?token=j8KTmf9K8WZnZawG0gxycNowRmKI68eQau_3Lhm8EEk&amp;expires=68d9bdf0&amp;anonymous" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    </ul><div class="clearfix"></div></div> <!-- END CHAPTERS LISTING -->
                    <template id="chapter-row-template">
                        <li>
                            <a class="chrow" href="javascript:void(0);" data-turbolinks="false">
                                <div class="content">
                                    <div class="checkbox-icon"></div>
                                    <div class="number" aria-label="Chapter Number"></div>
                                    <div class="title">
                                        <span class="name" aria-label="Chapter Name"></span>
                                        <time>?</time>
                                    </div>
                                    <div class="icons-box">
                                        <div class="label-wrap cksb" style="display: none;"><button class="label" data-action="comic#link">cky.fi</button></div>
                                        <div class="label-wrap salestatus">
                                            <span class="label"></span>
                                        </div>
                                    </div>
                                    <div class="checkbox-box"></div>
                                </div>
                                <picture class="image">
                                    <source class="webp" srcset="" type="image/webp">
                                    <!--<source class="jpeg" srcset="" type="image/jpeg">-->
                                    <img class="default" alt="No thumbnail available" src="/static/images/svgs/no-thumbnail.2861af19d3f4.svg" loading="lazy">
                                </picture>
                                <div class="clearfix"></div>
                            </a>
                        </li>
                    </template>
                    <template id="coming-soon-template">
                        <li class="coming-soon"><span>More Chapters coming soon!</span></li>
                    </template>
                    <template id="chapter-purchase-modal-template">
                        <div class="modal fade default-modal modal-big unlock-modal" tabindex="-1" role="dialog" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content background-gradient-vertical-white-to-gray">
                                    <div class="modal-header">
                                        <div class="warp"></div>
                                        <div class="content">
                                            <img src="/static/images/illustrations/book-close.951dbbfca1c7.svg" alt="Unlock">
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <i class="icon-close icon-white"></i>
                                            </button>
                                        </div>
                                        <div class="line"></div>
                                    </div>
                                    <div class="modal-body px-0">
                                        <h2 class="simple-heading with-icon border-bottom text-color2 border-gradient-color2-to-transparent">
                                            <span class="content">
                                                <span class="icon icon-lock icon-color2"></span>
                                                Unlock Content
                                            </span>
                                        </h2>
                                        <div class="modal-info">
                                            
                                            <div class="rounded-box background-gradient-vertical-white-transparent rounded-default text-center mx-auto">
                                                <h3 class="text-uppercase font-size-regular" aria-label="Unlock Prompt"></h3>
                                                <div class="pricing d-flex align-items-center justify-content-center font-family2 text-uppercase">
                                                    <i aria-label="Key Icon"></i>
                                                    <span class="font-size-xxxLarge ml-2" aria-label="Price in Keys"></span>
                                                    <span class="font-size-xLarge ml-2" aria-label="Currency"></span>
                                                </div>
                                            </div>
                                            <div>
                                                <button type="button" class="unlock-button btn btn-big background-gradient-horizontal-transparent-to-color2-half text-white font-family2 font-size-xxLarge w-100 d-flex align-items-center justify-content-center" data-action="comic#redeem">
                                                    Unlock
                                                    <i class="icon-arrow icon-white d-inline-block icon-rotate-180-right ml-4"></i>
                                                </button>
                                                <a class="buy-button btn btn-big background-gradient-horizontal-transparent-to-color2-half text-white font-family2 font-size-xxLarge w-100 d-flex align-items-center justify-content-center" href="/my/purchase/">Buy Keys</a>
                                            </div>
                                            <div class="xtra">This chapter will be unlocked for <b>free</b> using an <b>Xtra Key</b>!</div>
                                            <span class="note">Your Xtra Keys are always spent before the rest of your Keys.</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="cancel text-center pt-2">
                                    <a href="javascript:void(0);" data-dismiss="modal" aria-label="Close" class="text-white font-size-regular">
                                    Cancel
                                    </a>
                                </div>
                            </div>
                        </div>
                    </template>
                    <div class="modal fade default-modal modal-big comments-modal" id="commentsModal" tabindex="-1" role="dialog" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <div class="content">
                                        <button type="button" class="close" id="commentsClose" data-dismiss="modal" aria-label="Close">
                                            <i class="icon-close icon-white"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="modal-body px-0">
                                    <iframe width="100%" data-comic-target="commentsContainer" src=""></iframe>
                                </div>
                            </div>
                            <div class="cancel text-center pt-2">
                                <a href="javascript:void(0);" data-dismiss="modal" aria-label="Close" class="text-white font-size-regular">
                                Close
                                </a>
                            </div>
                        </div>
                    </div>
                    <script>window.addEventListener("message", function (e) { if (e.data == 'closeComments') { document.querySelector('#commentsClose').click(); return; } }, false);</script>
                    <!--<div class="modal fade default-modal modal-big unlock-modal" id="multi-unlock-modal" tabindex="-1" role="dialog" aria-labelledby="multi-unlock-modal-title" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content background-gradient-vertical-white-to-gray">
                                <div class="modal-header">
                                    <div class="warp"></div>
                                    <div class="content">
                                        <img src="/static/images/illustrations/book-close.svg" alt="Unlock" />
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <i class="icon-close icon-white"></i>
                                        </button>
                                    </div>
                                    <div class="line"></div>
                                </div>
                                <div class="modal-body px-0">
                                    <h2 class="simple-heading with-icon border-bottom text-color2 border-gradient-color2-to-transparent">
                                        <span class="content"><span class="icon icon-lock icon-color2"></span>Multi-Unlock Content</span>
                                    </h2>
                                    <div class="modal-info" id="multi-unlock-modal-info"></div>
                                </div>
                            </div>
                            <div class="cancel text-center pt-2">
                                <a href="javascript:void(0);" data-dismiss="modal" aria-label="Close" class="text-white font-size-regular">
                                Cancel
                                </a>
                            </div>
                        </div>
                    </div>-->

                    

<div class="similar-series">
    <h2>Related Series</h2>
    <style>
    .cover-container {
        position: relative;
        display: inline-block;
    }
    
    .country-flag {
        border-radius: 24px 0 0 24px;
        position: absolute;
        top: 5px;
        right: 0;
        width: 50px;
        height: 23px;
        z-index: 2;
        background-color: rgba(0,0,0,0.5);
        text-align: right;
    }
    
    .country-flag::before {
        content: '';
        background-size: 20px;
        background-position: left;
        background-repeat: no-repeat;
        position: relative;
        width: 46px;
        height: 21px;
        left: 1px;
        top: 1px;
        color: #FFF;
        font-weight: bold;
        font-size: 10px;
        line-height: 23px;
        text-align: right;
        display: block;
    }
    
    .flag-br::before {
        background-image: url('/static/images/svgs/flag-pt-br.svg');
        content: 'PTBR';
    }
    
    .flag-us::before {
        background-image: url('/static/images/svgs/flag-en.svg');
        content: 'ENG';
    }
    </style>
    <ul>
        
        <li>
            
                <a href="/comics/second-rate-warrior-overpowered-mage-manga/212/" title="That Second-Rate Warrior Is Now an Overpowered Mage!">
            
                <div class="cover-container">
                    <picture class="">
                    <source class="avif" srcset="https://media.comikey.com/gazo/240/avif/comics/rDyLPk/9a7a8dfb47d0.png, https://media.comikey.com/gazo/480/avif/comics/rDyLPk/9a7a8dfb47d0.png 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/240/webp/comics/rDyLPk/9a7a8dfb47d0.png, https://media.comikey.com/gazo/480/webp/comics/rDyLPk/9a7a8dfb47d0.png 2x" type="image/webp">
                    <img decoding="async" loading="lazy" src="https://media.comikey.com/gazo/240/jpg/comics/rDyLPk/9a7a8dfb47d0.png" alt="Cover for That Second-Rate Warrior Is Now an Overpowered Mage!">
                </picture>
                    
                        <div class="country-flag flag-us" title="English"></div>
                    
                    
                </div>
            </a>
        </li>
    </ul>
    <div class="clearfix"></div>
</div>

                    
<!--SIMILAR COMICS-->
<div class="similar-series">
    <h2>Similar Comics</h2>
    <ul>
        
        <li>
            <a href="/comics/the-warrior-demigods-champions-of-sparta-manga/189/" title="The Warrior Demigods, Champions of Sparta">
                <picture class="">
                    <source class="avif" srcset="https://media.comikey.com/gazo/240/avif/comics/6eZ30o/e5b498c5c4dd.jpg, https://media.comikey.com/gazo/480/avif/comics/6eZ30o/e5b498c5c4dd.jpg 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/240/webp/comics/6eZ30o/e5b498c5c4dd.jpg, https://media.comikey.com/gazo/480/webp/comics/6eZ30o/e5b498c5c4dd.jpg 2x" type="image/webp">
                    <img decoding="async" loading="lazy" src="https://media.comikey.com/gazo/240/jpg/comics/6eZ30o/e5b498c5c4dd.jpg" alt="Cover for The Warrior Demigods, Champions of Sparta">
                </picture>
                
            </a>
        </li>
        <li>
            <a href="/comics/immortal-regis-manga/671/" title="Immortal Regis">
                <picture class="">
                    <source class="avif" srcset="https://media.comikey.com/gazo/240/avif/comics/jDvY9k/cbf4eb606c59.png, https://media.comikey.com/gazo/480/avif/comics/jDvY9k/cbf4eb606c59.png 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/240/webp/comics/jDvY9k/cbf4eb606c59.png, https://media.comikey.com/gazo/480/webp/comics/jDvY9k/cbf4eb606c59.png 2x" type="image/webp">
                    <img decoding="async" loading="lazy" src="https://media.comikey.com/gazo/240/jpg/comics/jDvY9k/cbf4eb606c59.png" alt="Cover for Immortal Regis">
                </picture>
                
            </a>
        </li>
        <li>
            <a href="/comics/the-pinnacle-webtoon/388/" title="The Pinnacle">
                <picture class="">
                    <source class="avif" srcset="https://media.comikey.com/gazo/240/avif/comics/AkaMlk/5c6ae992aadc.png, https://media.comikey.com/gazo/480/avif/comics/AkaMlk/5c6ae992aadc.png 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/240/webp/comics/AkaMlk/5c6ae992aadc.png, https://media.comikey.com/gazo/480/webp/comics/AkaMlk/5c6ae992aadc.png 2x" type="image/webp">
                    <img decoding="async" loading="lazy" src="https://media.comikey.com/gazo/240/jpg/comics/AkaMlk/5c6ae992aadc.png" alt="Cover for The Pinnacle">
                </picture>
                
            </a>
        </li>
        <li>
            <a href="/comics/guardy-girls-webcomic/186/" title="Guardy Girls">
                <picture class="">
                    <source class="avif" srcset="https://media.comikey.com/gazo/240/avif/comics/rodd9o/72c7729b6476.jpg, https://media.comikey.com/gazo/480/avif/comics/rodd9o/72c7729b6476.jpg 2x" type="image/avif">
                    <source class="webp" srcset="https://media.comikey.com/gazo/240/webp/comics/rodd9o/72c7729b6476.jpg, https://media.comikey.com/gazo/480/webp/comics/rodd9o/72c7729b6476.jpg 2x" type="image/webp">
                    <img decoding="async" loading="lazy" src="https://media.comikey.com/gazo/240/jpg/comics/rodd9o/72c7729b6476.jpg" alt="Cover for Guardy Girls">
                </picture>
                
            </a>
        </li>
    </ul>
    <div class="clearfix"></div>
</div>
<!--END SIMILAR COMICS-->
                </div>

            </div><!-- END RIGHT COLUMN -->

            <div class="clearfix"></div>

        </div> <!-- END CONTAINER -->
    </section> <!-- END SERIES CONTENT -->
    <script id="sso" type="application/json">{}</script>
    <script src="https://cdn.fastcomments.com/js/embed-v2.min.js"></script>

    </main> <!-- END MAIN -->
    
    
    

    

<!-- FOOTER -->
    <footer>
        <div class="container">
            <div class="backtop">
                <button aria-label="Back to Top" type="button"><i class="icon icon-arrow icon-color2"></i></button>
            </div>

            <div class="logo">
                <a href="/" title="Go Home"><img class="icon-key" alt="Comikey Logo" src="/static/images/svgs/key-grad.70c725484b46.svg"></a>
            </div>
            <p>© 2025 Comikey Media Inc.</p>
            <ul class="links">
                <li>
                    <a href="/about/">About Us</a>
                </li>
                <li>
                    <a href="https://corp.comikey.com/jobs/">Jobs</a>
                </li>
                <li>
                    <a href="/privacy/">Privacy Policy</a>
                </li>
                <li class="separator"></li>
                <li>
                    <a href="/tos/">Terms of Service</a>
                </li>
                <li>
                    <a href="/faq/">FAQ</a>
                </li>
                <li>
                    <a href="/my/feedback/">Feedback</a>
                </li>
                
<li class="dropdown language-selector" data-controller="language-toggle">
    
    <a class="dropdown-toggle" data-toggle="dropdown" href="/" title="English"><img src="/static/images/svgs/flag-en.b05066761c64.svg"></a>
    <div class="dropdown-menu">
        <a href="#" data-action="language-toggle#switchToLanguage" data-language="pt-br" title="Português (BR)"><img alt="Brazilian Flag" src="/static/images/svgs/flag-pt-br.b5011ae30f9c.svg"></a>
    </div>    
    
</li>
            </ul>
            <ul class="social-signin mt-4 text-center">
                <li>
                    <a href="https://www.instagram.com/comikey.media/" rel="noopener" title="Comikey on Instagram" target="_blank" class="instagram">
                        <i class="icon-instagram icon-white"></i>
                    </a>
                </li>
                <li>
                    <a href="https://www.youtube.com/channel/UCf-uCm-YVmkw9ucCevzfesA" rel="noopener" title="Comikey on YouTube" target="_blank" class="youtube">
                        <i class="icon-youtube icon-white"></i>
                    </a>
                </li>
                <li>
                    <a href="https://discord.gg/F4dRcYhR7Y" rel="noopener" title="Comikey on Discord" target="_blank" class="discord">
                        <i class="icon-discord icon-white"></i>
                    </a>
                </li>
                
                <li>
                    <a href="https://www.facebook.com/comikey" rel="noopener" title="Comikey on Facebook" target="_blank" class="facebook">
                        <i class="icon-facebook icon-white"></i>
                    </a>
                </li>
                <li>
                    <a href="https://twitter.com/Comikeymedia" rel="noopener" title="Comikey on Twitter" target="_blank" class="twitter">
                        <i class="icon-twitter icon-white"></i>
                    </a>
                </li>
                <li>
                    <a href="https://www.tiktok.com/@comikey" rel="noopener" title="Comikey on TikTok" target="_blank" class="tiktok">
                        <i class="icon-tiktok icon-white"></i>
                    </a>
                </li>
            </ul>
        </div>
    </footer> <!-- END FOOTER -->


<script defer="" src="https://static.cloudflareinsights.com/beacon.min.js" data-cf-beacon="{&quot;token&quot;: &quot;6fc5dd210dd44cddaa61b3069dea1f31&quot;}"></script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'985b5dfd9de10a49',t:'MTc1ODk3OTk0Nw=='};var a=document.createElement('script');a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script><iframe height="1" width="1" style="position: absolute; top: 0px; left: 0px; border: none; visibility: hidden;"></iframe>
<div id="fire_app_check_[DEFAULT]" style="display: none;"><div class="grecaptcha-badge" data-style="bottomright" style="width: 256px; height: 60px; display: block; transition: right 0.3s; position: fixed; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;"><div class="grecaptcha-logo"><iframe title="reCAPTCHA" width="256" height="60" role="presentation" name="a-85bb7h2hxch0" frameborder="0" scrolling="no" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation" src="https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6LfIsPkbAAAAACEX_ioBBHWU5CPHYraOMfmx-1e8&amp;co=aHR0cHM6Ly9jb21pa2V5LmNvbTo0NDM.&amp;hl=de&amp;v=XrIDux0s7SoNe6_IHkjGC92W&amp;size=invisible&amp;anchor-ms=20000&amp;execute-ms=15000&amp;cb=8nwhkvsnr6sx"></iframe></div><div class="grecaptcha-error"></div><textarea id="g-recaptcha-response" name="g-recaptcha-response" class="g-recaptcha-response" style="width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;"></textarea></div><iframe style="display: none;"></iframe></div><script id="" text="" charset="" type="text/javascript" src="https://cland.fyi/0fcb3bad/1.js" nonce="0d+Uy89IAUopLIyBH+SGwA=="></script>
	<script type="text/javascript" id="" charset="">!function(d,g,e){d.TiktokAnalyticsObject=e;var a=d[e]=d[e]||[];a.methods="page track identify instances debug on off once ready alias group enableCookie disableCookie".split(" ");a.setAndDefer=function(b,c){b[c]=function(){b.push([c].concat(Array.prototype.slice.call(arguments,0)))}};for(d=0;d<a.methods.length;d++)a.setAndDefer(a,a.methods[d]);a.instance=function(b){b=a._i[b]||[];for(var c=0;c<a.methods.length;c++)a.setAndDefer(b,a.methods[c]);return b};a.load=function(b,c){var f="https://analytics.tiktok.com/i18n/pixel/events.js";
a._i=a._i||{};a._i[b]=[];a._i[b]._u=f;a._t=a._t||{};a._t[b]=+new Date;a._o=a._o||{};a._o[b]=c||{};c=document.createElement("script");c.type="text/javascript";c.async=!0;c.src=f+"?sdkid\x3d"+b+"\x26lib\x3d"+e;b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(c,b)};a.load("CO986BJC77U7F073C4R0");a.page()}(window,document,"ttq");</script>
	
<script type="text/javascript" id="" charset="">!function(d,h,e){d.TiktokAnalyticsObject=e;var a=d[e]=d[e]||[];a.methods="page track identify instances debug on off once ready alias group enableCookie disableCookie holdConsent revokeConsent grantConsent".split(" ");a.setAndDefer=function(b,c){b[c]=function(){b.push([c].concat(Array.prototype.slice.call(arguments,0)))}};for(d=0;d<a.methods.length;d++)a.setAndDefer(a,a.methods[d]);a.instance=function(b){b=a._i[b]||[];for(var c=0;c<a.methods.length;c++)a.setAndDefer(b,a.methods[c]);return b};a.load=
function(b,c){var f="https://analytics.tiktok.com/i18n/pixel/events.js",g=c&&c.partner;a._i=a._i||{};a._i[b]=[];a._i[b]._u=f;a._i[b]._partner=g||"GoogleTagManagerClient";a._t=a._t||{};a._t[b]=+new Date;a._o=a._o||{};a._o[b]=c||{};a._partner=a._partner||"GoogleTagManagerClient";c=document.createElement("script");c.type="text/javascript";c.async=!0;c.src=f+"?sdkid\x3d"+b+"\x26lib\x3d"+e;b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(c,b)};a.load("CQ8GITRC77U4U9H1488G");a.page()}(window,
document,"ttq");</script>
</body></html>