
    
<!DOCTYPE html>
<html dir="ltr" lang="pt-BR" prefix="og: https://ogp.me/ns#">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="profile" href="https://gmpg.org/xfn/11">
    <link rel="pingback" href="https://kakuseiproject.com/xmlrpc.php">
	<title>Yamada-kun to Lv999 no Koi wo Suru - Kakusei Project</title>
	<style>img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }</style>
	
		<!-- All in One SEO 4.8.7 - aioseo.com -->
	<meta name="description" content="O namorado dela foi roubado através de um jogo online! Durante esse desgosto, ela entrou no jogo e conheceu …!?" />
	<meta name="robots" content="max-image-preview:large" />
	<meta name="author" content="Law"/>
	<link rel="canonical" href="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/" />
	<meta name="generator" content="All in One SEO (AIOSEO) 4.8.7" />
		<meta property="og:locale" content="pt_BR" />
		<meta property="og:site_name" content="Kakusei Project - Site de mangás" />
		<meta property="og:type" content="article" />
		<meta property="og:title" content="Yamada-kun to Lv999 no Koi wo Suru - Kakusei Project" />
		<meta property="og:description" content="O namorado dela foi roubado através de um jogo online! Durante esse desgosto, ela entrou no jogo e conheceu …!?" />
		<meta property="og:url" content="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/" />
		<meta property="article:published_time" content="2024-03-25T23:13:44+00:00" />
		<meta property="article:modified_time" content="2025-05-26T23:29:01+00:00" />
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:title" content="Yamada-kun to Lv999 no Koi wo Suru - Kakusei Project" />
		<meta name="twitter:description" content="O namorado dela foi roubado através de um jogo online! Durante esse desgosto, ela entrou no jogo e conheceu …!?" />
		<script type="application/ld+json" class="aioseo-schema">
			{"@context":"https:\/\/schema.org","@graph":[{"@type":"BreadcrumbList","@id":"https:\/\/kakuseiproject.com\/manga\/yamada-kun-to-lv999-no-koi-wo-suru\/#breadcrumblist","itemListElement":[{"@type":"ListItem","@id":"https:\/\/kakuseiproject.com#listItem","position":1,"name":"Home","item":"https:\/\/kakuseiproject.com","nextItem":{"@type":"ListItem","@id":"https:\/\/kakuseiproject.com\/manga\/#listItem","name":"Manga"}},{"@type":"ListItem","@id":"https:\/\/kakuseiproject.com\/manga\/#listItem","position":2,"name":"Manga","item":"https:\/\/kakuseiproject.com\/manga\/","nextItem":{"@type":"ListItem","@id":"https:\/\/kakuseiproject.com\/manga-release\/2018\/#listItem","name":"2018"},"previousItem":{"@type":"ListItem","@id":"https:\/\/kakuseiproject.com#listItem","name":"Home"}},{"@type":"ListItem","@id":"https:\/\/kakuseiproject.com\/manga-release\/2018\/#listItem","position":3,"name":"2018","item":"https:\/\/kakuseiproject.com\/manga-release\/2018\/","nextItem":{"@type":"ListItem","@id":"https:\/\/kakuseiproject.com\/manga\/yamada-kun-to-lv999-no-koi-wo-suru\/#listItem","name":"Yamada-kun to Lv999 no Koi wo Suru"},"previousItem":{"@type":"ListItem","@id":"https:\/\/kakuseiproject.com\/manga\/#listItem","name":"Manga"}},{"@type":"ListItem","@id":"https:\/\/kakuseiproject.com\/manga\/yamada-kun-to-lv999-no-koi-wo-suru\/#listItem","position":4,"name":"Yamada-kun to Lv999 no Koi wo Suru","previousItem":{"@type":"ListItem","@id":"https:\/\/kakuseiproject.com\/manga-release\/2018\/#listItem","name":"2018"}}]},{"@type":"Organization","@id":"https:\/\/kakuseiproject.com\/#organization","name":"Kakusei Project","description":"Site de mang\u00e1s","url":"https:\/\/kakuseiproject.com\/"},{"@type":"Person","@id":"https:\/\/kakuseiproject.com\/author\/law\/#author","url":"https:\/\/kakuseiproject.com\/author\/law\/","name":"Law","image":{"@type":"ImageObject","@id":"https:\/\/kakuseiproject.com\/manga\/yamada-kun-to-lv999-no-koi-wo-suru\/#authorImage","url":"https:\/\/secure.gravatar.com\/avatar\/4de2459ff69eb37b57abc61712c21b9321a3df212aa1249300a908d59c1b7b08?s=96&d=mm&r=g","width":96,"height":96,"caption":"Law"}},{"@type":"WebPage","@id":"https:\/\/kakuseiproject.com\/manga\/yamada-kun-to-lv999-no-koi-wo-suru\/#webpage","url":"https:\/\/kakuseiproject.com\/manga\/yamada-kun-to-lv999-no-koi-wo-suru\/","name":"Yamada-kun to Lv999 no Koi wo Suru - Kakusei Project","description":"O namorado dela foi roubado atrav\u00e9s de um jogo online! Durante esse desgosto, ela entrou no jogo e conheceu \u2026!?","inLanguage":"pt-BR","isPartOf":{"@id":"https:\/\/kakuseiproject.com\/#website"},"breadcrumb":{"@id":"https:\/\/kakuseiproject.com\/manga\/yamada-kun-to-lv999-no-koi-wo-suru\/#breadcrumblist"},"author":{"@id":"https:\/\/kakuseiproject.com\/author\/law\/#author"},"creator":{"@id":"https:\/\/kakuseiproject.com\/author\/law\/#author"},"image":{"@type":"ImageObject","url":"https:\/\/kakuseiproject.com\/wp-content\/uploads\/2024\/03\/capa-yamada.jpg","@id":"https:\/\/kakuseiproject.com\/manga\/yamada-kun-to-lv999-no-koi-wo-suru\/#mainImage","width":1000,"height":1422},"primaryImageOfPage":{"@id":"https:\/\/kakuseiproject.com\/manga\/yamada-kun-to-lv999-no-koi-wo-suru\/#mainImage"},"datePublished":"2024-03-25T23:13:44+00:00","dateModified":"2025-05-26T23:29:01+00:00"},{"@type":"WebSite","@id":"https:\/\/kakuseiproject.com\/#website","url":"https:\/\/kakuseiproject.com\/","name":"Kakusei Project","description":"Site de mang\u00e1s","inLanguage":"pt-BR","publisher":{"@id":"https:\/\/kakuseiproject.com\/#organization"}}]}
		</script>
		<!-- All in One SEO -->

<link rel='dns-prefetch' href='//www.googletagmanager.com' />
<link rel="alternate" type="application/rss+xml" title="Feed para Kakusei Project &raquo;" href="https://kakuseiproject.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Feed de comentários para Kakusei Project &raquo;" href="https://kakuseiproject.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Feed de comentários para Kakusei Project &raquo; Yamada-kun to Lv999 no Koi wo Suru" href="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/16.0.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/16.0.1\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/kakuseiproject.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.8.2"}};
/*! This file is auto-generated */
!function(s,n){var o,i,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),a=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===a[t]})}function u(e,t){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);for(var n=e.getImageData(16,16,1,1),a=0;a<n.data.length;a++)if(0!==n.data[a])return!1;return!0}function f(e,t,n,a){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\udde8\ud83c\uddf6","\ud83c\udde8\u200b\ud83c\uddf6")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!a(e,"\ud83e\udedf")}return!1}function g(e,t,n,a){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):s.createElement("canvas"),o=r.getContext("2d",{willReadFrequently:!0}),i=(o.textBaseline="top",o.font="600 32px Arial",{});return e.forEach(function(e){i[e]=t(o,e,n,a)}),i}function t(e){var t=s.createElement("script");t.src=e,t.defer=!0,s.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",i=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){s.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+g.toString()+"("+[JSON.stringify(i),f.toString(),p.toString(),u.toString()].join(",")+"));",a=new Blob([e],{type:"text/javascript"}),r=new Worker(URL.createObjectURL(a),{name:"wpTestEmojiSupports"});return void(r.onmessage=function(e){c(n=e.data),r.terminate(),t(n)})}catch(e){}c(n=g(i,f,p,u))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>

<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://kakuseiproject.com/wp-includes/css/dist/block-library/style.min.css?ver=6.8.2' type='text/css' media='all' />
<style id='wp-block-library-theme-inline-css' type='text/css'>
.wp-block-audio :where(figcaption){color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-audio :where(figcaption){color:#ffffffa6}.wp-block-audio{margin:0 0 1em}.wp-block-code{border:1px solid #ccc;border-radius:4px;font-family:Menlo,Consolas,monaco,monospace;padding:.8em 1em}.wp-block-embed :where(figcaption){color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-embed :where(figcaption){color:#ffffffa6}.wp-block-embed{margin:0 0 1em}.blocks-gallery-caption{color:#555;font-size:13px;text-align:center}.is-dark-theme .blocks-gallery-caption{color:#ffffffa6}:root :where(.wp-block-image figcaption){color:#555;font-size:13px;text-align:center}.is-dark-theme :root :where(.wp-block-image figcaption){color:#ffffffa6}.wp-block-image{margin:0 0 1em}.wp-block-pullquote{border-bottom:4px solid;border-top:4px solid;color:currentColor;margin-bottom:1.75em}.wp-block-pullquote cite,.wp-block-pullquote footer,.wp-block-pullquote__citation{color:currentColor;font-size:.8125em;font-style:normal;text-transform:uppercase}.wp-block-quote{border-left:.25em solid;margin:0 0 1.75em;padding-left:1em}.wp-block-quote cite,.wp-block-quote footer{color:currentColor;font-size:.8125em;font-style:normal;position:relative}.wp-block-quote:where(.has-text-align-right){border-left:none;border-right:.25em solid;padding-left:0;padding-right:1em}.wp-block-quote:where(.has-text-align-center){border:none;padding-left:0}.wp-block-quote.is-large,.wp-block-quote.is-style-large,.wp-block-quote:where(.is-style-plain){border:none}.wp-block-search .wp-block-search__label{font-weight:700}.wp-block-search__button{border:1px solid #ccc;padding:.375em .625em}:where(.wp-block-group.has-background){padding:1.25em 2.375em}.wp-block-separator.has-css-opacity{opacity:.4}.wp-block-separator{border:none;border-bottom:2px solid;margin-left:auto;margin-right:auto}.wp-block-separator.has-alpha-channel-opacity{opacity:1}.wp-block-separator:not(.is-style-wide):not(.is-style-dots){width:100px}.wp-block-separator.has-background:not(.is-style-dots){border-bottom:none;height:1px}.wp-block-separator.has-background:not(.is-style-wide):not(.is-style-dots){height:2px}.wp-block-table{margin:0 0 1em}.wp-block-table td,.wp-block-table th{word-break:normal}.wp-block-table :where(figcaption){color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-table :where(figcaption){color:#ffffffa6}.wp-block-video :where(figcaption){color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-video :where(figcaption){color:#ffffffa6}.wp-block-video{margin:0 0 1em}:root :where(.wp-block-template-part.has-background){margin-bottom:0;margin-top:0;padding:1.25em 2.375em}
</style>
<style id='classic-theme-styles-inline-css' type='text/css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='global-styles-inline-css' type='text/css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='ct-shortcode-css' href='https://kakuseiproject.com/wp-content/plugins/madara-shortcodes/shortcodes/css/shortcodes.css?ver=6.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='fontawesome-css' href='https://kakuseiproject.com/wp-content/themes/madara/app/lib/fontawesome/web-fonts-with-css/css/all.min.css?ver=5.15.3' type='text/css' media='all' />
<link rel='stylesheet' id='ionicons-css' href='https://kakuseiproject.com/wp-content/themes/madara/css/fonts/ionicons/css/ionicons.min.css?ver=4.5.10' type='text/css' media='all' />
<link rel='stylesheet' id='madara-icons-css' href='https://kakuseiproject.com/wp-content/themes/madara/css/fonts/ct-icon/ct-icon.css?ver=6.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='bootstrap-css' href='https://kakuseiproject.com/wp-content/themes/madara/css/bootstrap.min.css?ver=4.3.1' type='text/css' media='all' />
<link rel='stylesheet' id='slick-css' href='https://kakuseiproject.com/wp-content/themes/madara/js/slick/slick.css?ver=1.9.0' type='text/css' media='all' />
<link rel='stylesheet' id='slick-theme-css' href='https://kakuseiproject.com/wp-content/themes/madara/js/slick/slick-theme.css?ver=6.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='loaders-css' href='https://kakuseiproject.com/wp-content/themes/madara/css/loaders.min.css?ver=6.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='madara-css-css' href='https://kakuseiproject.com/wp-content/themes/madara/style.css?ver=2.2.3' type='text/css' media='all' />
<style id='madara-css-inline-css' type='text/css'>
:root{ --madara-main-color: #000000}:root{ --primary-color: #000000}:root{ --secondary-color: #121212}.c-blog__heading.style-2 i {
						  background: -webkit-linear-gradient(left, #000000 40%,#121212);
						  background: -o-linear-gradient(right, #000000 40%,#121212);
						  background: -moz-linear-gradient(right, #000000 40%,#121212);
						  background: linear-gradient(to right, #000000 40%,#121212);
					 ;}.c-blog__heading.style-2 i:after, .settings-page .nav-tabs-wrap ul.nav-tabs li.active:after { border-left-color: #121212 ; }.site-header .main-navigation.style-1, .widget-heading, .widget.background:after, .c-blog__heading.style-2 i, .tab-wrap .c-nav-tabs ul.c-tabs-content li.active a:after, .tab-wrap .c-nav-tabs ul.c-tabs-content li:hover a:after, .tab-wrap .c-nav-tabs ul.c-tabs-content li a:after, .related-heading.font-nav, .c-blog__heading.style-3, .settings-page .nav-tabs-wrap ul.nav-tabs li.active a, .off-canvas {
						  background: -webkit-linear-gradient(left, #000000 40%,#121212);
						  background: -o-linear-gradient(right, #000000 40%,#121212);
						  background: -moz-linear-gradient(right, #000000 40%,#121212);
						  background: linear-gradient(to right, #000000 40%,#121212);
					 ;}.widget-heading:after, .related-heading.font-nav:after, .genres_wrap .c-blog__heading.style-3.active:after { border-top-color: #000000 ;}body.modal-open .modal .modal-content a:hover, .tab-wrap .c-nav-tabs ul.c-tabs-content li.active a, .tab-wrap .c-nav-tabs ul.c-tabs-content li:hover a, body.search.search-results .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-summary .post-content .post-content_item .summary-content:not(.release-year) a:hover, body.search.search-results .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-summary .post-content .post-content_item .summary-content.release-year a:hover, .c-blog-post .entry-header .entry-meta .post-on:before, .manga-slider .slider__container .slick-dots li.slick-active button:before, .manga-slider .slider__container .slick-dots li button:hover:before, body.manga-page .profile-manga .tab-summary .summary_content_wrap .summary_content .post-status .manga-action .count-comment .action_icon a i, body.manga-page .profile-manga .tab-summary .summary_content_wrap .summary_content .post-status .manga-action .add-bookmark .action_icon a i, body.manga-page .profile-manga .tab-summary .summary_content_wrap .summary_content .post-status .manga-action .count-comment .action_detail a i, body.manga-page .profile-manga .tab-summary .summary_content_wrap .summary_content .post-status .manga-action .add-bookmark .action_detail a i, body.manga-page .profile-manga .post-title a, body.manga-page .content-readmore:hover, body.text-ui-light.manga-page .content-readmore:hover, .genres_wrap .genres__collapse .genres ul li a:hover, .genres_wrap .genres__collapse .genres ul li a:hover:before, .c-blog-post .entry-header .entry-meta .post-on .posted-on a:hover, .c-search-header__wrapper #search-advanced .search-advanced-form .form-group.checkbox-group .checkbox label:hover, .site-header .main-navigation .search-navigation .menu-search .open-search-main-menu, .c-btn.c-btn_style-2, .c-search-header__wrapper .search-content .btn-search-adv, body.reading-manga .entry-header .entry-header_wrap .action-icon ul li a, body.reading-manga .c-select-bottom .entry-header_wrap .action-icon ul li a, .widget.c-released .released-item-wrap ul.list-released li a:hover, body.manga-page .profile-manga .post-title h1, .genres_wrap .genres__collapse #genres ul li:hover a, .genres_wrap .genres__collapse #genres ul li:hover a:before, input[type=checkbox]:checked + label:before, input[type=radio]:checked + label:before, .genres_wrap a.btn-genres, .c-breadcrumb .breadcrumb li a:hover, body.search.search-results .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-summary .post-content .post-content_item.mg_genres .summary-content, body.page .c-page-content .c-page .c-page__content .page-content-listing .page-listing-item .page-item-detail .item-summary .list-chapter .chapter-item .vol a:hover, #hover-infor .item_thumb .post-title a, body.manga-page .version-chap:before, body.manga-page .content-readmore:hover, body.manga-page .chapter-readmore:hover, .icon-load-info, .c-blog-post .entry-header .entry-meta .post-on .c-blog__date .post-category a:hover, .woocommerce ul.products li.product .price, .woocommerce div.entry-summary p.price, .woocommerce div.entry-summary form.cart .variations .label, .woocommerce div.entry-summary form.cart .quantity-text, .widget_product_categories .product-categories li a:hover, .woocommerce ul.products li.product h2:hover, .woocommerce .c-woo-breadcrumb a:hover, .site-header .c-sub-header-nav .c-sub-nav_wrap .c-modal_item .c-user_item .c-user_menu a:hover, .site-header .c-sub-header-nav .c-sub-nav_wrap .sub-nav_content .sub-nav_list li:hover > a, .settings-page .action i.ion-ios-close:hover:before, .text-ui-dark .settings-page .list-chapter .chapter-item a:hover, .text-ui-dark .settings-page .tabs-content-wrap .tab-group-item .tab-item .history-content .item-infor .chapter span a, .text-ui-dark .settings-page .nav-tabs-wrap ul.nav-tabs li:not(.active):hover a, .main-color,.site-header .c-sub-header-nav .c-sub-nav_wrap .sub-nav_content .sub-nav_list li.menu-item-has-children.active > a,.woocommerce .woocommerce-ordering:after,.text-ui-light .widget.c-popular .popular-item-wrap .popular-content .chapter-item .chapter a:hover,body.search.text-ui-light .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-meta .latest-chap .chapter a:hover{ color: #000000 ;}.c-blog__heading.style-2 i:after{border-right-color:#000000 !important}body.page.text-ui-light .c-page-content .c-page .c-page__content .page-content-listing .page-listing-item .page-item-detail .item-summary .list-chapter .chapter-item .chapter a:hover, .text-ui-light .widget.c-popular .popular-item-wrap .popular-content .chapter-item .chapter a:hover,#hover-infor .item_thumb .post-title a{color: #FFFFFF}.navigation-ajax .load-ajax:not(.show-loading):hover, body.manga-page .page-content-listing.single-page .listing-chapters_wrap > ul.main.version-chap .sub-chap > li:before, .shortcode-manga-chapters .listing-chapters_wrap > ul.main.version-chap .sub-chap > li:before, .c-wg-button-wrap .btn:hover, body.manga-page .page-content-listing.single-page .listing-chapters_wrap ul.main.version-chap .wp-manga-chapter:before, .site-header .search-main-menu form input[type=submit], .form-submit input[type=submit], #comments.comments-area #respond.comment-respond .comment-form .form-submit #submit, .c-btn.c-btn_style-1, .settings-page input[type="submit"], .settings-page .remove-all #delete-bookmark-manga, body.manga-page .page-content-listing.single-page .listing-chapters_wrap > ul.main.version-chap li .wp-manga-chapter:before, .woocommerce ul.products li.product .button, .woocommerce span.onsale, .woocommerce .widget_price_filter .price_slider_amount .button:not(:hover), .woocommerce .woocommerce-pagination .page-numbers li span.current, .woocommerce .woocommerce-pagination .page-numbers li .prev:hover, .woocommerce .woocommerce-pagination .page-numbers li .next:hover, .woocommerce div.entry-summary form.cart .single_add_to_cart_button,.post-password-form input[name="Submit"] { background: #000000 ;}.navigation-ajax .load-ajax:not(.show-loading):hover, .popular-slider .slider__container .slider__item .slider__content .slider__content_item .chapter-item .chapter a:hover, .c-search-header__wrapper .search-content .btn-search-adv.collapsed, .c-btn.c-btn_style-2, .c-search-header__wrapper .search-content .btn-search-adv, .genres_wrap a.btn-genres, .wpcf7-validation-errors, .text-ui-light.woocommerce-page input[type="text"]:focus, .text-ui-light.woocommerce-page input[type="email"]:focus, .text-ui-light.woocommerce-page input[type="search"]:focus, .text-ui-light.woocommerce-page input[type="url"]:focus, .text-ui-light.woocommerce-page input[type="password"]:focus, .text-ui-light.woocommerce-page input[type="tel"]:focus, .text-ui-light.woocommerce-page .input-text:focus, .text-ui-light.woocommerce-page input[type="text"]:active, .text-ui-light.woocommerce-page input[type="email"]:active, .text-ui-light.woocommerce-page input[type="search"]:active, .text-ui-light.woocommerce-page input[type="url"]:active, .text-ui-light.woocommerce-page input[type="password"]:active, .text-ui-light.woocommerce-page input[type="tel"]:active, .text-ui-light.woocommerce-page .input-text:active, .text-ui-light.woocommerce-page input[type="text"]:hover, .text-ui-light.woocommerce-page input[type="email"]:hover, .text-ui-light.woocommerce-page input[type="search"]:hover, .text-ui-light.woocommerce-page input[type="url"]:hover, .text-ui-light.woocommerce-page input[type="password"]:hover, .text-ui-light.woocommerce-page input[type="tel"]:hover, .text-ui-light.woocommerce-page .input-text:hover, .text-ui-light.woocommerce-page select.orderby:hover  { border-color: #000000 ;}.c-search-header__wrapper .search-content .btn-search-adv.collapsed{background-color:#000000; color:#FFF}.c-search-header__wrapper .search-content .btn-search-adv{color:#FFF}.site-header .c-sub-header-nav .c-sub-nav_wrap .sub-nav_content .sub-nav_list > li.menu-item-has-children > ul.sub-menu, .site-header .c-sub-header-nav .c-sub-nav_wrap .c-modal_item .c-user_item .c-user_menu { border-bottom-color: #000000 ;}.widget.widget_tag_cloud .tag-cloud-link:hover, body.page .c-page-content .c-page .c-page__content .page-content-listing .page-listing-item .page-item-detail .item-summary .list-chapter .chapter-item .chapter:hover, .popular-slider .slider__container .slider__item .slider__content .slider__content_item .chapter-item .chapter a:hover, .widget.c-popular .popular-item-wrap .popular-content .chapter-item .chapter:hover, .site-footer .top-footer .wrap_social_account ul.social_account__item li a, .site-content .main-col .item-tags ul li a:hover, .popular-slider .slider__container .slick-arrow:hover, .widget.background.widget_tag_cloud .tag-cloud-link:hover, .wp-pagenavi a:hover, body.search.search-results .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-meta .latest-chap .chapter:hover, .go-to-top:hover, .widget.c-popular .widget-view-more, .c-search-header__wrapper .search-content .search-form .search-submit, body.reading-manga .entry-header .select-pagination .nav-links .nav-next a:not(:hover), body.reading-manga .c-select-bottom .select-pagination .nav-links .nav-next a:not(:hover), body.reading-manga .entry-header .entry-header_wrap .action-icon ul li:hover a, body.reading-manga .c-select-bottom .entry-header_wrap .action-icon ul li:hover a, .widget.c-released .released-search form [type="submit"], body.manga-page .profile-manga .tab-summary .loader-inner > div, .wpcf7-submit, .woocommerce #respond input#submit.alt, .woocommerce a.button.alt, .woocommerce button.button.alt, .woocommerce input.button.alt, .woocommerce .woocommerce-cart-form .cart button.button, .woocommerce .cart input.button:not(:hover), #adult_modal .modal-footer .btn.btn-primary:not(:hover), body.reading-manga .entry-header .select-pagination .nav-links > * a, body.reading-manga .c-select-bottom .select-pagination .nav-links > * a, body.text-ui-light .settings-page .list-chapter .chapter-item .chapter:hover, body.modal-open .modal .modal-content .modal-body .login .submit .wp-submit:not(:hover), .settings-page .tabs-content-wrap .my_account_orders a.button.view, .main-bg, #madara-comments.comments-area #respond.comment-respond .comment-form .form-submit #submit, .c-search-header__wrapper .search-content .btn-search-adv { background-color: #000000 ;}body.search.search-results .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-meta .latest-chap .chapter:hover a, .wp-pagenavi a:hover{color:#FFF !important}.item-thumb .quick-chapter-link{background: #000000;}            
            .page-content-listing.single-page li.wp-manga-chapter.unread a{color:#000000}.page-item-detail.video .item-thumb > a:hover, .page-item-detail.video .item-thumb:hover a:hover:before{color:#000000}
			#pageloader.spinners{
				position:fixed;
				top:0;
				left:0;
				width:100%;
				height:100%;
				z-index:99999;
				background:#222
			}
		
			p.madara-unyson{
				color: #FF0000;
			}
		
			.table.table-hover.list-bookmark tr:last-child td{
				text-align: center;
			}
		#adminmenu .wp-submenu li.current { display: none !important;}.show_tgmpa_version{ float: right; padding: 0em 1.5em 0.5em 0; }.tgmpa > h2{ font-size: 23px; font-weight: 400; line-height: 29px; margin: 0; padding: 9px 15px 4px 0;}.update-php{ width: 100%; height: 98%; min-height: 850px; padding-top: 1px; }.c-blog-post .entry-content .entry-content_wrap .read-container img.alignleft { margin: 10px 30px 10px 0 !important; } .c-blog-post .entry-content .entry-content_wrap .read-container img.alignright { margin: 10px 0px 10px 30px !important; } .read-container i.fas.fa-spinner.fa-spin{ font-size: 31px; color: #888; }.c-blog-post .entry-content .entry-content_wrap .read-container img{ cursor : pointer; }.choose-avatar .loading-overlay {
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background-color: rgba(255, 255, 255, 0.72);
			z-index: 1;
			display: none;
		}

		.choose-avatar .loading-overlay i.fas.fa-spinner {
			font-size: 40px;
			color: #ec3348;
		}

		.choose-avatar .loading-overlay .loading-icon {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%,-50%);
		}

		.choose-avatar.uploading .loading-overlay {
			display: block;
		}.site-header .c-sub-header-nav .entry-header {
			display: none;
			margin-bottom: 15px;
		}

		.site-header .c-sub-header-nav.sticky .entry-header {
			display: block;
		}

		.site-header .c-sub-header-nav.hide-sticky-menu.sticky .c-sub-nav_wrap{
			display:none;
		}
		.site-header .c-sub-header-nav.hide-sticky-menu .entry-header{
			margin-top:15px;
		}
		@media (max-width: 480px) {.c-blog-post .entry-content .entry-content_wrap .reading-content{margin-left:-15px;margin-right:-15px}}
        .settings-page table.list-bookmark > tbody tr td > div.mange-name:before {
            content: "Manga Name";
          }
          .settings-page table.list-bookmark > tbody tr td > div.action:before {
            content: "Edit";
          }
          .settings-page table.list-bookmark > tbody tr td > div.post-on:before {            
            content: "Updated Time";
          }

</style>
<script type="text/javascript" src="https://kakuseiproject.com/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<link rel="https://api.w.org/" href="https://kakuseiproject.com/wp-json/" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://kakuseiproject.com/xmlrpc.php?rsd" />
<meta name="generator" content="WordPress 6.8.2" />
<link rel='shortlink' href='https://kakuseiproject.com/?p=713' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://kakuseiproject.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fkakuseiproject.com%2Fmanga%2Fyamada-kun-to-lv999-no-koi-wo-suru%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://kakuseiproject.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fkakuseiproject.com%2Fmanga%2Fyamada-kun-to-lv999-no-koi-wo-suru%2F&#038;format=xml" />
<!-- start Simple Custom CSS and JS -->
<!-- Modal HTML -->
<div class="modal fade" id="tipa_modal" tabindex="-1" role="dialog" aria-labelledby="tipa_label" aria-hidden="true" data-backdrop="static" style="display:none;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="tipa_label">Removemos os anúncios!</h3>
                <button type="button" class="close" id="tipa-close-btn" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Agora, a Kakusei Project funciona exclusivamente com o apoio dos leitores, sem anúncios invasivos. Para que possamos continuar oferecendo essa experiência à nossa comunidade, sua ajuda é essencial.</p>
                <p>Se você aprecia o nosso trabalho, considere apoiar nosso projeto com uma doação. Sua contribuição faz toda a diferença!</p>
            </div>
            <div class="modal-footer">
                <button id="tipa-confirm" type="button" class="btn btn-primary">Doar Agora</button>
                <button id="tipa-close" type="button" class="btn btn-secondary">Fechar</button>
            </div>
        </div>
    </div>
</div>

<!-- Script para abrir e fechar o modal -->
<script>
jQuery(document).ready(function($){
    // Função para abrir o modal
    function openModal() {
        $('#tipa_modal').fadeIn().addClass('show').attr('aria-hidden', 'false').css('display', 'block');
        // bloqueia scroll do body
        $('body').css('overflow', 'hidden');
    }

    // Função para fechar o modal
    function closeModal() {
        $('#tipa_modal').fadeOut().removeClass('show').attr('aria-hidden', 'true').css('display', 'none');
        $('body').css('overflow', '');
    }

    // Verifica se a URL contém "/mangas/"
    if (!window.location.pathname.startsWith("/manga/")) {
        // Abrir o modal automaticamente após 3 segundos (exemplo)
        setTimeout(openModal, 3000);
    }

    // Fechar ao clicar no botão fechar (X e Fechar)
    $('#tipa-close-btn, #tipa-close').on('click', function(){
        closeModal();
    });

    // Ação do botão Doar Agora - redirecionar para link de doação (exemplo)
    $('#tipa-confirm').on('click', function(){
        window.location.href = 'https://tipa.ai/kakuseiproject'; // Alterar para o link de doação real
    });

    // Fechar ao clicar fora do conteúdo (background)
    $('#tipa_modal').on('click', function(e){
        if (e.target === this) {
            closeModal();
        }
    });

});
</script>


<!-- CSS simples para modal básico -->
<style>
.modal {
    position: fixed;
    z-index: 1050;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    background: rgba(0,0,0,0.5);
}

.modal-dialog {
    margin: 10% auto;
    max-width: 500px;
}
#tipa_modal .modal-dialog {
    position: absolute;
    top: 50%;
    left: 50%;
    -ms-transform: translate(-50%,-50%);
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
	 width: 90%;
}
#tipa_modal .modal-content {
    background-color: #262626 !important;
    border: none;
    border-radius: 0;
    font-size: 16px;
	    position: relative;
    display: -ms-flexbox;
    display: flex
;
    -ms-flex-direction: column;
    flex-direction: column;
    width: 100% !important;
    pointer-events: auto;
    background-color: #fff;
    background-clip: padding-box;
    border: 1px solid rgba(0, 0, 0, .2);
    border-radius: .3rem;
    outline: 0;
}
@media (min-width: 576px) {
    .modal-dialog {
        width: 600px;
        max-width: 600px;
				margin: 30px auto;
    }
}
#tipa_modal .modal-header, #tipa_modal .modal-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
border:none !important;
}

#tipa_modal .modal-header .close {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
}

#tipa_modal .btn-primary {
    background-color: #ffe400;
    border: none;
    color: black;
    padding: 0.5rem 1rem;
    cursor: pointer;
    border-radius: 3px;
}

.btn-secondary {
    background-color: #6c757d;
    border: none;
    color: white;
    padding: 0.5rem 1rem;
    cursor: pointer;
    border-radius: 3px;
}

.btn-primary:hover {
    background-color: #0b5ed7;
}

.btn-secondary:hover {
    background-color: #5c636a;
}

</style><!-- end Simple Custom CSS and JS -->
<!-- start Simple Custom CSS and JS -->
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1688363780516982"
     crossorigin="anonymous"></script>
<!-- end Simple Custom CSS and JS -->
<meta name="generator" content="Site Kit by Google 1.160.1" /><link rel="icon" href="https://kakuseiproject.com/wp-content/uploads/2025/05/cropped-Kakusei_1-32x32.png" sizes="32x32" />
<link rel="icon" href="https://kakuseiproject.com/wp-content/uploads/2025/05/cropped-Kakusei_1-192x192.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://kakuseiproject.com/wp-content/uploads/2025/05/cropped-Kakusei_1-180x180.png" />
<meta name="msapplication-TileImage" content="https://kakuseiproject.com/wp-content/uploads/2025/05/cropped-Kakusei_1-270x270.png" />
		<style type="text/css" id="wp-custom-css">
			.c-page__content {
    padding-top: 20px;
}
body.page .c-page-content .main-col-inner .entry-header .entry-title .item-title {
    margin-top: 20px;
}
.site-header .main-navigation .main-navigation_wrap .c-user_item {
    display: flex;
    align-content: center;
    align-items: center;
}
.page-content-listing.item-big_thumbnail .post-on {
    float: unset !important;
}
body.modal-open .modal .modal-dialog {
    background-image: url(images/bg-search.jpg);
    position: absolute;
    background: #000000d4;
    backdrop-filter: blur(10px);
    top: 50%;
    left: 50%;
    -ms-transform: translate(-50%, -50%);
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
}
.c-new-tag {
    display: inline-block;

    height: 30px;
    background: url(https://kakuseiproject.com/wp-content/uploads/2025/09/up.webp) center center no-repeat;
}
.site-header .main-navigation{
	padding:10px 0 10px 0;
}
ul.list-inline.font-nav a{
	color:#000;
}
.page-id-1940 .entry-content_wrap, .page-id-1954 .entry-content_wrap{
    color: #fff;
    background: #000;
    padding: 15px;
    border-radius: 15px;
}
.page-id-1940 .entry-title, .page-id-1954 .entry-title{
    border: 0 !important;
}
.google-auto-placed {
    display: none !important;
}
.page-id-1940 h1.item-title.h2, .page-id-1954 h1.item-title.h2{
    text-align: center;
	padding: 15px;
    background: #000;
    border-radius: 15px;
}
.page-id-1954 .entry-content_wrap a {
	color: #ffd700;
}
.page-id-1954 .entry-content_wrap a:hover {
	color:#bdab4b;
}
body.text-ui-light .site-footer .bottom-footer .nav-footer ul li + li {
    border-left-color: #000000;
}
/*Página inicial*/
.c-blog__heading.style-2.font-heading.no-icon {
    margin-top: 20px;
    margin-bottom: 0;
}
body.text-ui-light .manga-slider.style-2 .slider__container .slick-list .slick-track .slider__item .slider__thumb {
    background-color: #26262600;
    padding: 0;
}
body.text-ui-light .manga-slider.style-2 .slider__container .slick-list .slick-track .slider__item .slider__thumb img, .manga-slider .slider__container .slick-list .slick-track .slider__item .slider__thumb .slider__thumb_item .slider-overlay{
    border-radius:3px;
}
.manga-slider .slider__container .slick-list .slick-track .slider__item .slider__thumb .slider__thumb_item .slider-overlay{
	display:none;
}
.body-wrap .sidebar-hidden {
    background-color: #000000e6;
    border-top-style: solid;
    border-top-color: #3e3e4f;
    border-bottom-style: solid;
    border-bottom-color: #323242;
    border-top-left-radius: 21px;
    border-bottom-right-radius: 20px;
    border-bottom-left-radius: 23px;
    border-top-right-radius: 24px;
    padding-top: 0px;
}
body.text-ui-light .body-wrap {
    background-color: #1e1e1e !important;
}
/*Página inicial FIM*/

div#disqus_thread iframe[sandbox] {
        max-height: 0px !important;
}

div#manga-discussion i, div#manga-discussion h4, .c-blog__heading.style-2.font-heading h4 {
    margin-top: 0.8rem;
}
span.manga-title-badges.custom.lancamento {
    background-color: #673ab7;
}
span.manga-title-badges.custom.em-breve {
    background-color: #ff9800;
}
.manga-title-badges.custom {
	background-color: #03a9f4;
}
span.manga-title-badges.custom.hiato {
    background-color: #000000;
}
span.manga-title-badges.custom.dropado{
	background-color: #ba0000;
}
a.btn-active-modal:nth-child(2) {
    background: #00385a;
    border-radius: 10px !important;
}
.c-breadcrumb-wrapper {
    background: #27284100 !important;
}
.site-header .c-sub-header-nav .c-sub-nav_wrap .sub-nav_content .sub-nav_list > li > a:hover {
    color: #aaa;
}
body.text-ui-light .body-wrap {
    background-color: #243240;
}
.profile-manga.summary-layout-1 {
    background: none !important;
}
.profile-manga .col-sm-12 {
    background-color: #151415;
    border-top-left-radius: 29px;
	margin-top: 15px;
    border-bottom-right-radius: 16px;
    border-top-right-radius: 6px;
    border-bottom-left-radius: 15px;
}
.profile-manga .post-title h1 {
    color: #ffffff !important;
    text-decoration: none;
    font-weight: 600 !important;
}
.profile-manga .tab-summary .summary_image {
    background-color: #494949 !important
}
body.search .c-search-header__wrapper{
	 background: #494949 !important
}
.tab-summary .summary_content {
    background-color: #494949 !important
}
body.modal-open .modal .modal-content .modal-body .login label {
    width: 100%;
    max-width: 315px;
    text-align: left;
    color: #fff;
    font-weight: 600;
    margin-bottom: 14px;
}
body.text-ui-light .c-blog__heading.style-2 {
    border-color: #fff0;
}
.navigation-ajax .load-ajax {
    margin-top: 43px;
    -webkit-transition: all 200ms ease-out;
    -moz-transition: all 200ms ease-out;
    -o-transition: all 200ms ease-out;
    transition: all 200ms ease-out;
    border: 1px solid #03a9f4;
    background-color: #289fff;
    width: 100%;
    border-radius: 15px;
    font-size: 14px;
    line-height: 2.142857142857143;
    font-weight: 600;
}
@media only screen and (max-width: 790px) {
i.icon.ion-ios-search {
    color: #000 !important;
	transition: 0.6s ease;
}
	a.open-search-main-menu.search-open:hover{
		background: #0295ed !important;
	}
	a.open-search-main-menu.search-open:hover i.icon.ion-ios-search {
    color: #fff !important;
		
	transition: 0.6s ease;
}
}
@media only screen and (min-width: 790px) {
.search-navigation.search-sidebar{
	display: none !important;
	}
}
body.text-ui-light .popular-slider .slider__container .slider__item .item__wrap {
    background-color: #232323;
}
#manga-search-3 .widget-content {
    padding: 0;
}
body.text-ui-light .site-footer {
    background-color: #cfced6;
	color:#000;
    border-top: none;
    border-bottom: 0;
}
.c-sidebar.c-top-sidebar {
    background: none !important;
}
.manga-slider.style-2 .slider__container .slick-list .slick-track .slider__item .slider__thumb {
    padding: 3px;
    border-radius: 3px;
    -webkit-box-shadow: 0px 3px 8px 0px rgb(0 0 0 / 15%); 
    -moz-box-shadow: 0px 3px 8px 0px rgba(0, 0, 0, 0.15);
    box-shadow: 0px 3px 8px 0px rgb(0 0 0 / 15%);
}
.manga-slider .slider__container .slick-list .slick-track .slider__item .slider__thumb .slider__thumb_item img {
    border-radius: 3px;
}
	.manga-slider .slider__container .slick-list .slick-track .slider__item .slider__content .slider__content_item .post-title h4 a{
  display: none;
}


.wp-manga-user-section img.avatar.avatar-50.photo {
    box-shadow: 1px 1px 8px black;
}

@media only screen and (max-width: 720px) {
.site-header .main-navigation.style-1 .wrap_branding a img {
    max-width: 150px;
	margin-left: auto;
    position: relative;
    display: flex;
}
	.wrap_branding {
    margin-left: 0px !important;
    margin-right: 0px !important;
}
}
.c-user_item {
    margin-right: 45px;
}
#search-sidebar {
    position: absolute;
    margin-left: 30px;
    right: 250px;
    top: 2rem;
}
@media only screen and (max-width: 992px) {
body.manga-page .profile-manga .tab-summary .post-content_item > *{
    display: inline-block;
    font-size: 12px;
    vertical-align: top;
	}
}
@media only screen and (max-width: 992px) {
.main-navigation_wrap .c-sub-header-nav.hide-sticky-menu{
	display: none;
	}
}
.site-header .main-navigation.style-1 .wrap_branding {
    width: auto;
}
.wrap_branding {
    margin-left: 50px;
    margin-right: 20px;
}
.c-sub-header-nav.hide-sticky-menu {
    position: relative;
    /* margin-top: auto; */
    margin-left: 20px;
    max-height: 104px;
}

.c-page-content.style-1.reading-content-wrap.chapter-type-manga .container {
    max-width: 1140px;
}
.main-navigation.style-1 .container {
    max-width: 100%;
}

i.icon.ion-ios-search {
    color: #fff;
    transition: 0.6s ease;
    font-size: 18px;
}
.site-header .c-sub-header-nav {
    background-color: #fff0 !important;
}

.modal-dialog-centered-2{
	background: -webkit-linear-gradient(left, #eb3349 40%, #f45c43) !important;
	border: none;
	border-radius: 15px;
}
.modal.fade.dark-wz{
	border: none;
		border-radius: 15px;
}
body.modal-open .modal .modal-content{
	border: none;
}
button.btn.btn-primary-2 {
    position: fixed;
    justify-content: flex-end;
    bottom: 25px;
}
button.btn.btn-primary-2 {
	background: #fff;
	border-radius:25px;
    right: 15%;
}
#dark-whitez label{
	color: #fff;
	font-size:15px;
	padding:5px;
}
.modal-dialog-centered-2 input#reading-input-submit {
    border-radius: 15px;
    background: black;
    color: white;
    border: none;
}
.site-header .main-navigation.style-1 .wrap_branding a img {
    max-width: 162px;
}
#tituloz{
	padding:15px;
	color: #fff;
	font-size:20px;
	text-align: center !important;
}
h5#tituloz{
	text-align: center !important;
}
@media only screen and (max-width: 920px) {
.c-sub-header-nav.hide-sticky-menu{
	display: none;
	}
	.site-header .main-navigation .main-navigation_wrap .c-user_item,	.site-header .main-navigation .main-navigation_wrap .user-section.c-modal_item{
		display:none;
	}
}


img.avatar.avatar-50.photo {
    border-radius: 25px;
}

.main-navigation_wrap .c-modal_item {
    text-align: right;
}
.main-navigation_wrap .c-sub-nav_wrap > * {
    display: inline-block;
    font-size: 14px;
    vertical-align: middle;
}
.main-navigation_wrap .c-sub-nav_wrap {
    font-size: 0;
}
.main-navigation_wrap .c-modal_item {
    text-align: right;
	position: absolute;
	    margin-right: 25px;
	top: 0 ;
	right: 0;
}
.c-user_item span {
    color: #fff !important;
}
.main-navigation_wrap .c-user_item .c-user_avatar .c-user_menu li a{
	color: #fff !important;
}
.main-navigation_wrap .c-user_item .c-user_avatar .c-user_menu {
    opacity: 0;
    visibility: hidden;
    position: absolute;
    list-style: none;
    margin-right: 25px;
    padding: 0;
    border-radius: 0 0 15px 15px;
    background-color: #2d2e47 !important;
    min-width: 150px;
    max-width: 250px;
    text-align: left;
    top: 100%;
    margin-top: 12px;
    right: 0;
    padding: 10px;
    z-index: 9999;
    border-bottom: 3px solid #ffffff !important;
    border-top: 1px solid #ebebeb;
    white-space: nowrap;
}
.section_adult, .site-header .c-sub-header-nav .c-sub-nav_wrap .section_adult {
    float: left;
    border-radius: 4px;
    line-height: 18px;
    padding: 4px 10px;
    margin-right: 20px !important;
    font-size: 12px;
    position: relative;
    text-align: center;
    color: #00f99f;
    margin: 10px 0;
}
.main-navigation_wrap .c-user_item .c-user_avatar:hover .c-user_menu{
    opacity: 1;
    visibility: visible;
    position: absolute;
    list-style: none;
    padding: 0;
    background-color: #f3f3f3;
    min-width: 150px;
    max-width: 250px;
    text-align: left;
    top: 100%;
    margin-top: 12px;
    right: 0;
    padding: 10px;
    z-index: 9999;
    border-bottom: 3px
 solid #eb3349;
    border-top: 1px
 solid #ebebeb;
    white-space: nowrap;
}
.main-navigation_wrap .c-modal_item .c-user_avatar:hover {
    cursor: pointer;
}
.main-navigation_wrap .c-modal_item .c-user_item .c-user_menu:after {
    display: block;
    width: 100%;
    content: "";
    height: 15px;
    background-color: transparent;
    position: absolute;
    top: -15px;
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    -o-transform: translateX(-50%);
    transform: translateX(-50%);
}
.main-navigation_wrap .c-modal_item .c-user_item span {
    margin-right: 10px;
    color: #666;
}
.main-navigation_wrap .c-sub-nav_wrap .c-modal_item .c-user_item > * {
    display: inline-block;
    vertical-align: middle;
}
.main-navigation_wrap .c-modal_item {
    text-align: right;
    position: absolute;
    top: 25%;
    right: 0;
    /* display: flex; */
    align-items: center;
    justify-content: center;
    align-content: center;
}

@media only screen and (max-width: 992px) {
.main-navigation_wrap .c-sub-nav_wrap .c-modal_item {
    opacity: 0 !important;
    visibility: hidden !important;
	display: block;
	left: 125px;
}
}
#search-sidebar input {
padding-right: 164px;
    background: rgb(255 255 255 / 30%);
    border: none;
    border-radius: 19px;
    width: 100%;
}

#search-sidebar input::placeholder{
	color: #fff
}

@media only screen and (max-width: 1148px) {
#search-sidebar {
 display: none
}
}

.main-navigation_wrap .c-sub-nav_wrap .c-modal_item .btn-active-modal {
    color: #666;
    font-weight: 600;
	margin-top: 5px;
    display: inline-block;
    padding: 5px 15px;
    border: 2px solid #666;
    border-radius: 30px;
    -webkit-transition: all 0.3s;
    -moz-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s;
}
.site-header .main-navigation .main-navigation_wrap {
    padding: 12px 0;
}
.main-navigation_wrap .c-sub-nav_wrap .c-modal_item .c-user_item .c-user_menu a {
    display: block;
    padding: 5px 10px;
    color: #666;
    -webkit-transition: all 0.2s;
    -moz-transition: all 0.2s;
    -o-transition: all 0.2s;
    transition: all 0.2s;
    font-weight: 600;
    position: relative;
}
body.page .c-page-content .content-area {
    margin-top: 50px;
}
.site-header .c-sub-header-nav .c-sub-nav_wrap .c-modal_item{
	opacity: 0;
	visibility: hidden;
	pointer-events: none;
    display: none;
}
@media only screen and (max-width: 720px) {
.site-header .c-sub-header-nav .c-sub-nav_wrap .c-modal_item{
	opacity: 1;
	visibility: visible;
}
}
ul.sub-nav_list.list-inline.second-menu {
    display: flex;
    justify-content: center;
}
@media only screen and (max-width: 720px) {
	ul.sub-nav_list.list-inline.second-menu {
    display: list-item;
    justify-content: center;
}
}
.site-header .c-sub-header-nav .c-sub-nav_wrap .sub-nav_content {
    width: 100%;
}		</style>
							<script type="application/ld+json">
						{
							"@context": "http://schema.org",
							"@type": "Article",
							"mainEntityOfPage": {
								"@type": "WebPage",
								"@id": "https://google.com/article"
							},
							"headline": "Yamada-kun to Lv999 no Koi wo Suru",
							"image": {
								"@type": "ImageObject",
								"url": "https://kakuseiproject.com/wp-content/uploads/2024/03/capa-yamada.jpg",
								"height": 391,
								"width": 696							},
							"datePublished": "2024-03-25 23:13:44",
							"dateModified": "2025-05-26 23:29:01",
							"author": {
								"@type": "Person",
								"name": "Law"
							},
							"publisher": {
								"@type": "Organization",
								"name": "Kakusei Project",
								"logo": {
									"@type": "ImageObject",
									"url": "https://kakuseiproject.com/wp-content/uploads/2023/01/LOGO-POR-EXTENSO.png"
								}
							},
							"description": "Yamada-kun to Lv999 no Koi wo Suru. Capítulo 51. 



O namorado dela foi roubado através de um jogo online! Durante esse desgosto, ela entrou no jogo e conheceu …!?




"
						}
					</script>
				<meta property="og:type" content="article"/>
<meta property="og:image" content="https://kakuseiproject.com/wp-content/uploads/2024/03/capa-yamada.jpg"/>
<meta property="og:site_name" content="Kakusei Project"/>
<meta property="fb:app_id" content="" />
<meta property="og:title" content="Yamada-kun to Lv999 no Koi wo Suru - Capítulo 51 - Kakusei Project"/>
<meta property="og:url" content="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/"/>
<meta property="og:description" content="Yamada-kun to Lv999 no Koi wo Suru. Capítulo 51. 



O namorado dela foi roubado através de um jogo online! Durante esse desgosto, ela entrou no jogo e conheceu …!?




"/>
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@Kakusei Project" />
<meta name="twitter:title" content="Yamada-kun to Lv999 no Koi wo Suru - Capítulo 51 - Kakusei Project" />
<meta name="twitter:description" content="Yamada-kun to Lv999 no Koi wo Suru. Capítulo 51. 



O namorado dela foi roubado através de um jogo online! Durante esse desgosto, ela entrou no jogo e conheceu …!?




" />
<meta name="twitter:url" content="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/" />
<meta name="twitter:image" content="https://kakuseiproject.com/wp-content/uploads/2024/03/capa-yamada.jpg" />
<meta name="description" content="Yamada-kun to Lv999 no Koi wo Suru. Capítulo 51. 



O namorado dela foi roubado através de um jogo online! Durante esse desgosto, ela entrou no jogo e conheceu …!?




" /><meta name="generator" content="Powered by Madara - A powerful manga, novel theme from Mangabooth.com" />
			<style>
			@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Special+Gothic+Expanded+One&family=Winky+Rough:ital,wght@0,300..900;1,300..900&display=swap');
			</style>
			</head>

<body class="wp-singular wp-manga-template-default single single-wp-manga postid-713 wp-embed-responsive wp-theme-madara wp-manga-page reading-manga click-to-scroll keyboard-navigate page header-style-1 text-ui-light manga-reading-paged-style">




<div class="wrap">
    <div class="body-wrap">
		        <header class="site-header">
            <div class="c-header__top">
                <ul class="search-main-menu">
                    <li>
                        <form id="blog-post-search" class="ajax" action="https://kakuseiproject.com/" method="get">
                            <input type="text" placeholder="Search..." name="s" value="">
                            <input type="submit" value="Search">
                            <div class="loader-inner line-scale">
                                <div></div>
                                <div></div>
                                <div></div>
                                <div></div>
                                <div></div>
                            </div>
                        </form>
                    </li>
                </ul>
                <div class="main-navigation style-1 ">
                    <div class="container ">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="main-navigation_wrap">
                                    <div class="wrap_branding">
                                        <a class="logo" href="https://kakuseiproject.com/" title="Kakusei Project">
											                                            <img class="img-responsive" src="https://kakuseiproject.com/wp-content/uploads/2023/01/LOGO-POR-EXTENSO.png"  alt="Kakusei Project"/>
                                        </a>
                                    </div>

									    <div class="main-menu">
		<ul class="nav navbar-nav main-navbar"><li id="menu-item-100" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-100"><a href="https://kakuseiproject.com/"><i class="fa fa-home" aria-hidden="true"></i> HOME</a></li>
<li id="menu-item-101" class="menu-item menu-item-type-post_type menu-item-object-page current_page_parent menu-item-101"><a href="https://kakuseiproject.com/manga/"><i class="fa fa-book" aria-hidden="true"></i> PROJETOS</a></li>
<li id="menu-item-105" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-105"><a href="/?s&#038;post_type=wp-manga&#038;m_orderby=alphabet"><i class="fa fa-search" aria-hidden="true"></i> PESQUISAR</a></li>
<li id="menu-item-1966" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1966"><a href="https://tipa.ai/kakuseiproject"><i class="fas fa-hand-holding-heart"></i> APOIE</a></li>
<li id="menu-item-140" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-140"><a href="https://discord.com/invite/bkf8Pc4bYP"><i class="fab fa-discord"></i> DISCORD</a></li>
</ul>    </div>

    <div class="search-navigation search-sidebar">

					<div id="manga-search-3" class="widget col-12 col-md-12   default  no-icon heading-style-1 manga-widget widget-manga-search"><div class="widget__inner manga-widget widget-manga-search__inner c-widget-wrap"><div class="widget-content">
		<div class="search-navigation__wrap">

			<script>
	jQuery(document).ready(function ($) {
		if ($('.c-header__top .manga-search-form').length !== 0 && $('.c-header__top .manga-search-form.search-form').length !== 0) {

			$('form#blog-post-search').append('<input type="hidden" name="post_type" value="wp-manga">');

			$('form#blog-post-search').addClass("manga-search-form");

			$('form#blog-post-search input[name="s"]').addClass("manga-search-field");

			$('form.manga-search-form.ajax input.manga-search-field').each(function(){

			var searchIcon = $(this).parent().children('.ion-ios-search-strong');

			var append = $(this).parent();

			$(this).autocomplete({
				appendTo: append,
				source: function( request, resp ) {
					$.ajax({
						url: manga.ajax_url,
						type: 'POST',
						dataType: 'json',
						data: {
							action: 'wp-manga-search-manga',
							title: request.term,
						},
						success: function( data ) {
							resp( $.map( data.data, function( item ) {
								if ( true == data.success ) {
									return {
										label: item.title,
										value: item.title,
										url: item.url,
										type: item.type
									}
								} else {
									return {
										label: item.message,
										value: item.message,
										type: item.type,
										click: false
									}
								}
							}))
						}
					});
				},
				select: function( e, ui ) {
					if ( ui.item.url ) {
						window.location.href = ui.item.url;
					} else {
						if ( ui.item.click ) {
							return true;
						} else {
							return false;
						}
					}
				},
				open: function( e, ui ) {
					var acData = $(this).data( 'uiAutocomplete' );
					acData.menu.element.addClass('manga-autocomplete').find('li div').each(function(){
						var $self = $(this),
							keyword = $.trim( acData.term ).split(' ').join('|');
						$self.html( $self.text().replace( new RegExp( "(" + keyword + ")", "gi" ), '<span class="manga-text-highlight">$1</span>' ) );
					});
				}
			}).autocomplete( "instance" )._renderItem = function( ul, item ) {
				  return $( "<li class='search-item'>" )
					.append( "<div class='manga-type-" + item.type + "'>" + item.label + "</div>" )
					.appendTo( ul );
			};
		});
		}
	});
</script>
<ul class="main-menu-search nav-menu">
    <li class="menu-search">
        <a href="javascript:;" class="open-search-main-menu"> <i class="icon ion-ios-search"></i>
            <i class="icon ion-android-close"></i> </a>
        <ul class="search-main-menu">
            <li>
                <form class="manga-search-form search-form ajax" action="https://kakuseiproject.com/" method="get">
                    <input class="manga-search-field" type="text" placeholder="Search..." name="s" value="">
                    <input type="hidden" name="post_type" value="wp-manga"> <i class="icon ion-ios-search"></i>
                    <div class="loader-inner ball-clip-rotate-multiple">
                        <div></div>
                        <div></div>
                    </div>
                    <input type="submit" value="Search">
                </form>
            </li>
        </ul>
    </li>
</ul>

		
		</div>

		</div></div></div>				
    </div>
    <div class="c-togle__menu">
        <button aria-label="open" type="button" class="menu_icon__open">
            <span></span> <span></span> <span></span>
        </button>
    </div>

                        <div class="user-section c-modal_item">
                            <!-- Button trigger modal -->
                            <a href="javascript:void(0)" data-toggle="modal" data-target="#form-login" class="btn-active-modal">Sign in</a>
                            <a href="javascript:void(0)" data-toggle="modal" data-target="#form-sign-up" class="btn-active-modal">Sign up</a>
                        </div>
					
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

			
<div class="mobile-menu menu-collapse off-canvas">
    <div class="close-nav">
        <button aria-label="close" class="menu_icon__close">
            <span></span> <span></span>
        </button>
    </div>

	
        <div class="user-section c-modal_item">
            <!-- Button trigger modal -->
            <span class="c-modal_sign-in">
                <a href="#" data-toggle="modal" data-target="#form-login" class="btn-active-modal">Sign in</a>
            </span>

            <span class="c-modal_sign-up">
                <a href="javascript:void(0)" data-toggle="modal" data-target="#form-sign-up" class="btn-active-modal">Sign up</a>
            </span>

        </div>

	
    <nav class="off-menu">
		<ul id="menu-one-1" class="nav navbar-nav main-navbar"><li id="nav-menu-item-100" class="main-menu-item menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page menu-item-home"><a href="https://kakuseiproject.com/" class="menu-link  main-menu-link"><i class="fa fa-home" aria-hidden="true"></i> HOME </a></li>
<li id="nav-menu-item-101" class="main-menu-item menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page current_page_parent"><a href="https://kakuseiproject.com/manga/" class="menu-link  main-menu-link"><i class="fa fa-book" aria-hidden="true"></i> PROJETOS </a></li>
<li id="nav-menu-item-105" class="main-menu-item menu-item-depth-0 menu-item menu-item-type-custom menu-item-object-custom"><a href="/?s&amp;post_type=wp-manga&amp;m_orderby=alphabet" class="menu-link  main-menu-link"><i class="fa fa-search" aria-hidden="true"></i> PESQUISAR </a></li>
<li id="nav-menu-item-1966" class="main-menu-item menu-item-depth-0 menu-item menu-item-type-custom menu-item-object-custom"><a href="https://tipa.ai/kakuseiproject" class="menu-link  main-menu-link"><i class="fas fa-hand-holding-heart"></i> APOIE </a></li>
<li id="nav-menu-item-140" class="main-menu-item menu-item-depth-0 menu-item menu-item-type-custom menu-item-object-custom"><a href="https://discord.com/invite/bkf8Pc4bYP" class="menu-link  main-menu-link"><i class="fab fa-discord"></i> DISCORD </a></li>
</ul>    </nav>
	
	<div class="center"></div>
</div>
			
        </header>

		
			
			
				        <div class="site-content">
            <div class="c-page-content style-1 reading-content-wrap chapter-type-manga" data-site-url="https://kakuseiproject.com/">
        <div class="content-area">
            <div class="container">
                <div class="row">
                    <div class="main-col col-md-12 col-sm-12 sidebar-hidden">
												<h1 id="chapter-heading">
							Yamada-kun to Lv999 no Koi wo Suru - Capítulo 51						</h1>
												
                        <!-- container & no-sidebar-->
                        <div class="main-col-inner">
                            <div class="c-blog-post">
                                <div class="entry-header header" id="manga-reading-nav-head" data-position="header" data-chapter="capitulo-51" data-id="713">				<div class="wp-manga-nav">
					<div class="entry-header_wrap">
						
        <div class="c-breadcrumb-wrapper" >

			
                        <div class="c-breadcrumb">
                            <ol class="breadcrumb">
                                <li>
                                    <a href="https://kakuseiproject.com/">
										Home                                    </a>
                                </li>
																
								
								                                    <li>
                                        <a href="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/">
											Yamada-kun to Lv999 no Koi wo Suru                                        </a>
                                    </li>
								
								                                            <li class="active">
												Capítulo 51                                            </li>
											
                            </ol>
                        </div>

						                            <div class="action-icon ">
                                <ul class="action_list_icon list-inline">
									                                    <li>
										<script type="text/javascript"> var requireLogin2BookMark = true; </script><a href="#" class="wp-manga-action-button" data-action="bookmark" data-post="713" data-chapter="4511" data-page="1" title="Bookmark"><i class="icon ion-ios-bookmark"></i></a>                                    </li>
										<li><a href="#" class="wp-manga-action-button" data-action="toggle-contrast" title="Toggle Dark/Light Mode"><i class="icon ion-md-contrast"></i></a></li>
	                                </ul>
                            </div>
																		        </div>

						</div>
					
                <div class="select-view">
					
                    <!-- select volume -->
										
                    <!-- select chapter -->
								<div class="chapter-selection chapters_selectbox_holder" data-manga="713" data-chapter="capitulo-51" data-vol="0" data-type="manga" data-style="paged">
				<!-- place holder -->
			</div>
			                    <!-- select page style -->
                    <div class="c-selectpicker selectpicker_load">
						                        <label> <select class="selectpicker reading-style-select">
                                <option data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/?style=list" >List style</option>
                                <option data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/"  selected='selected'>Paged style</option>
                            </select> </label>
                    </div>
					                </div>
				                <script type="text/javascript">
					var prevChapLastPage = 19;
                </script>
			
            <div class="select-pagination">
                <div class="c-selectpicker selectpicker_page">
                    <label>

                        <select id="single-pager" class="selectpicker">
							
								                                <option value="1" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/1/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=1&style=paged&action=chapter_navigate_page"  selected='selected'>
									1/15                                </option>
							
								                                <option value="2" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/2/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=2&style=paged&action=chapter_navigate_page" >
									2/15                                </option>
							
								                                <option value="3" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/3/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=3&style=paged&action=chapter_navigate_page" >
									3/15                                </option>
							
								                                <option value="4" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/4/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=4&style=paged&action=chapter_navigate_page" >
									4/15                                </option>
							
								                                <option value="5" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/5/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=5&style=paged&action=chapter_navigate_page" >
									5/15                                </option>
							
								                                <option value="6" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/6/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=6&style=paged&action=chapter_navigate_page" >
									6/15                                </option>
							
								                                <option value="7" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/7/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=7&style=paged&action=chapter_navigate_page" >
									7/15                                </option>
							
								                                <option value="8" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/8/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=8&style=paged&action=chapter_navigate_page" >
									8/15                                </option>
							
								                                <option value="9" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/9/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=9&style=paged&action=chapter_navigate_page" >
									9/15                                </option>
							
								                                <option value="10" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/10/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=10&style=paged&action=chapter_navigate_page" >
									10/15                                </option>
							
								                                <option value="11" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/11/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=11&style=paged&action=chapter_navigate_page" >
									11/15                                </option>
							
								                                <option value="12" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/12/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=12&style=paged&action=chapter_navigate_page" >
									12/15                                </option>
							
								                                <option value="13" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/13/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=13&style=paged&action=chapter_navigate_page" >
									13/15                                </option>
							
								                                <option value="14" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/14/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=14&style=paged&action=chapter_navigate_page" >
									14/15                                </option>
							
								                                <option value="15" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/15/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=15&style=paged&action=chapter_navigate_page" >
									15/15                                </option>
							                        </select>

                    </label>
                </div>
                <div class="nav-links">

                    <i class="mobile-nav-btn icon ion-md-menu"></i>
					
					                        <div class="nav-previous ">
                            <a href="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-50/p/19" class="btn prev_page" data-navigation="postID=713&amp;chapter=capitulo-50&amp;manga-paged=19&amp;style=paged&amp;action=chapter_navigate_page" title="Capítulo 50">
								Prev                            </a>
                        </div>
					
					                        <div class="nav-next ">
                            <a href="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/2/" class="btn next_page" data-navigation="postID=713&amp;chapter=capitulo-51&amp;manga-paged=2&amp;style=paged&amp;action=chapter_navigate_page" data-order="1" title="Capítulo 51">
								Next                            </a>
                        </div>
					                </div>
            </div>
			            </div>

						</div>
                                <div class="entry-content">
                                    <div class="entry-content_wrap">

                                        <div class="read-container">

																						
                                            <div class="reading-content">
												<input type="hidden" id="wp-manga-current-chap" data-id="4511" value="capitulo-51"/>
														<a href="javascript:void(0)" class="page-link-hover page-prev-link"></a>
	
			
			<img id="image-0" data-image-paged="0" src="https://kakuseiproject.com/wp-content/uploads/WP-manga/data/manga_65fb63d5122e9/7d8c62e84d59f5e55b14dfe73b90f3b3/001.jpg" class="wp-manga-chapter-img">
			
								<a href="javascript:void(0)" id="btn_view_full_image">View Full Size Image</a>
					
			
					<a href="javascript:void(0)" class="page-link-hover page-next-link"></a>
			<script type="text/javascript" id="chapter_preloaded_images">
			var chapter_preloaded_images = ["https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/001.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/002.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/003.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/004.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/005.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/006.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/007.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/008.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/009.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/010.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/011.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/012.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/013.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/014.jpg","https:\/\/kakuseiproject.com\/wp-content\/uploads\/WP-manga\/data\/manga_65fb63d5122e9\/7d8c62e84d59f5e55b14dfe73b90f3b3\/015.jpg"], chapter_images_per_page = 1;
		</script>
		
                                            </div>
										

											
                                        </div>


                                    </div>
                                </div>
								<div class="entry-header footer" id="manga-reading-nav-foot" data-position="footer" data-id="713">            <div class="wp-manga-nav">
                <div class="select-view">
					
                    <!-- select volume -->
										
                    <!-- select chapter -->
								<div class="chapter-selection chapters_selectbox_holder" data-manga="713" data-chapter="capitulo-51" data-vol="0" data-type="manga" data-style="paged">
				<!-- place holder -->
			</div>
			                    <!-- select page style -->
                    <div class="c-selectpicker selectpicker_load">
						                        <label> <select class="selectpicker reading-style-select">
                                <option data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/?style=list" >List style</option>
                                <option data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/"  selected='selected'>Paged style</option>
                            </select> </label>
                    </div>
					                </div>
				                <script type="text/javascript">
					var prevChapLastPage = 19;
                </script>
			
            <div class="select-pagination">
                <div class="c-selectpicker selectpicker_page">
                    <label>

                        <select id="single-pager" class="selectpicker">
							
								                                <option value="1" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/1/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=1&style=paged&action=chapter_navigate_page"  selected='selected'>
									1/15                                </option>
							
								                                <option value="2" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/2/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=2&style=paged&action=chapter_navigate_page" >
									2/15                                </option>
							
								                                <option value="3" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/3/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=3&style=paged&action=chapter_navigate_page" >
									3/15                                </option>
							
								                                <option value="4" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/4/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=4&style=paged&action=chapter_navigate_page" >
									4/15                                </option>
							
								                                <option value="5" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/5/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=5&style=paged&action=chapter_navigate_page" >
									5/15                                </option>
							
								                                <option value="6" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/6/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=6&style=paged&action=chapter_navigate_page" >
									6/15                                </option>
							
								                                <option value="7" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/7/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=7&style=paged&action=chapter_navigate_page" >
									7/15                                </option>
							
								                                <option value="8" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/8/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=8&style=paged&action=chapter_navigate_page" >
									8/15                                </option>
							
								                                <option value="9" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/9/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=9&style=paged&action=chapter_navigate_page" >
									9/15                                </option>
							
								                                <option value="10" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/10/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=10&style=paged&action=chapter_navigate_page" >
									10/15                                </option>
							
								                                <option value="11" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/11/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=11&style=paged&action=chapter_navigate_page" >
									11/15                                </option>
							
								                                <option value="12" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/12/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=12&style=paged&action=chapter_navigate_page" >
									12/15                                </option>
							
								                                <option value="13" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/13/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=13&style=paged&action=chapter_navigate_page" >
									13/15                                </option>
							
								                                <option value="14" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/14/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=14&style=paged&action=chapter_navigate_page" >
									14/15                                </option>
							
								                                <option value="15" data-redirect="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/15/" data-navigation="postID=713&chapter=capitulo-51&manga-paged=15&style=paged&action=chapter_navigate_page" >
									15/15                                </option>
							                        </select>

                    </label>
                </div>
                <div class="nav-links">

                    <i class="mobile-nav-btn icon ion-md-menu"></i>
					
					                        <div class="nav-previous ">
                            <a href="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-50/p/19" class="btn prev_page" data-navigation="postID=713&amp;chapter=capitulo-50&amp;manga-paged=19&amp;style=paged&amp;action=chapter_navigate_page" title="Capítulo 50">
								Prev                            </a>
                        </div>
					
					                        <div class="nav-next ">
                            <a href="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/p/2/" class="btn next_page" data-navigation="postID=713&amp;chapter=capitulo-51&amp;manga-paged=2&amp;style=paged&amp;action=chapter_navigate_page" data-order="1" title="Capítulo 51">
								Next                            </a>
                        </div>
					                </div>
            </div>
			            </div>

			</div>
                            </div>

							
							                                <div class="row ">
                                    <div class="main-col col-12 col-sm-8 col-md-8 col-lg-8">
                                        <!-- comments-area -->
										
								<h4>Comments for chapter &quot;Capítulo 51&quot;</h4>
					<div id="manga-discussion" class="c-blog__heading style-2 font-heading">
	<h4 class="h4"> <i class="icon ion-ios-star"></i> MANGA DISCUSSION</h4>           

				            </div>
			            <div  class="manga-discussion wrapper">
				
<div class="hr mv40"></div>

<div id="madara-comments" class="comments-area">

	
		<div id="respond" class="comment-respond">
		<h4 id="reply-title" class="comment-reply-title">Deixe um comentário <small><a rel="nofollow" id="cancel-comment-reply-link" href="/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/#respond" style="display:none;">Cancelar resposta</a></small></h4><form action="https://kakuseiproject.com/wp-comments-post.php" method="post" id="commentform" class="comment-form"><p class="comment-notes"><span id="email-notes">O seu endereço de e-mail não será publicado.</span> <span class="required-field-message">Campos obrigatórios são marcados com <span class="required">*</span></span></p><p class="comment-form-comment"><textarea id="comment" name="comment" cols="45" rows="8" aria-required="true" placeholder="Comment"></textarea></p><p class="comment-form-author"><label for="author">Name</label> <span class="required">*</span><input id="author" name="author" type="text" placeholder="Name" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email</label> <span class="required">*</span><input id="email" name="email" type="text" placeholder="Email" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label><input id="url" name="url" type="text" placeholder="Website" value="" size="30" /></p>
<p class="comment-form-cookies-consent"><input id="wp-comment-cookies-consent" name="wp-comment-cookies-consent" type="checkbox" value="yes" /> <label for="wp-comment-cookies-consent">Salvar meus dados neste navegador para a próxima vez que eu comentar.</label></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Publicar comentário" /> <input type='hidden' name='comment_post_ID' value='713' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p>                <input type="hidden" name="wp_manga_chapter_id" value="4511">
            <p style="display: none !important;" class="akismet-fields-container" data-prefix="ak_"><label>&#916;<textarea name="ak_hp_textarea" cols="45" rows="8" maxlength="100"></textarea></label><input type="hidden" id="ak_js_1" name="ak_js" value="192"/><script>document.getElementById( "ak_js_1" ).setAttribute( "value", ( new Date() ).getTime() );</script></p></form>	</div><!-- #respond -->
	
	        <h4 class="comments-title">
			1 Comment        </h4>

		
        <ol class="comment-list" id="comments">
			            <li class="comment even thread-even depth-1" id="comment-388">
			                <article id="div-comment-388" class="comment-body">
			            <div class="block block-left">
                <footer class="comment-meta">
                    <div class="comment-avatar">
						<img alt='' src='https://secure.gravatar.com/avatar/1c33be07c4d4e8f3e62ef665d9f1a875af4dc47ddfef99ccc5f06677ea473743?s=60&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/1c33be07c4d4e8f3e62ef665d9f1a875af4dc47ddfef99ccc5f06677ea473743?s=120&#038;d=mm&#038;r=g 2x' class='avatar avatar-60 photo' height='60' width='60' decoding='async'/>                    </div>
                </footer>
                <!-- .comment-meta -->
            </div>
            <div class="block block-right">
                <div class="comment-author">
                    <h6 class="heading fn">Bay4</h6>
                </div>
                <!--!comment-author-->
                <div class="comment-content">
					<p>Espero que consigam se resolver</p>

					
					                </div>
                <!-- .comment-content -->
                <div class="comment-metadata">
                    <a href="https://kakuseiproject.com/manga/yamada-kun-to-lv999-no-koi-wo-suru/capitulo-51/#comment-388">
						05/10/2025 at 1:30 pm</a>
                </div>
                <!-- .comment-metadata -->
            </div>

            <div class="reply">
				<a rel="nofollow" class="comment-reply-link" href="#comment-388" data-commentid="388" data-postid="713" data-belowelement="div-comment-388" data-respondelement="respond" data-replyto="Responder para Bay4" aria-label="Responder para Bay4">Responder</a>            </div>

			                </article>
			</li><!-- #comment-## -->
        </ol><!-- .comment-list -->

		
	
	

</div><!-- #comments -->            </div>

																			<!-- END comments-area -->
                                    </div>

									                                            <div class="sidebar-col col-md-4 col-sm-4">
												        <div id="main-sidebar" class="main-sidebar" role="complementary">
			        </div>
		                                            </div>
										
                                </div>
							
							
            <div class="row c-row related-manga">
                <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="c-blog__heading style-2 font-heading">
                        <h4 class="h4">
                            <i class="icon ion-ios-star"></i>
							YOU MAY ALSO LIKE</h4>
                    </div>
                </div>


				
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="related-reading-wrap related-style-1">
                                <div class="related-reading-img widget-thumbnail c-image-hover">
                                    <a title="Park" href="https://kakuseiproject.com/manga/park/">
										<img width="75" height="106"  src="https://kakuseiproject.com/wp-content/uploads/2023/03/imagem_2023-03-12_115944369-75x106.png" class="img-responsive" style=""  alt="imagem_2023-03-12_115944369"/>                                    </a>
                                </div>
                                <div class="related-reading-content">
                                    <h5 class="widget-title">
                                        <a href="https://kakuseiproject.com/manga/park/" title="Park">
											Park                                        </a>
                                    </h5>
                                </div>
								                                    <div class="post-on font-meta">
                                        <span>
                                            12/03/2023                                        </span>
                                    </div>
								                            </div>
                        </div>
						
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="related-reading-wrap related-style-1">
                                <div class="related-reading-img widget-thumbnail c-image-hover">
                                    <a title="Urusei Yatsura" href="https://kakuseiproject.com/manga/urusei-yatsura/">
										<img width="75" height="106"  src="https://kakuseiproject.com/wp-content/uploads/2023/02/imagem_2023-02-25_160308082-75x106.png" srcset="https://kakuseiproject.com/wp-content/uploads/2023/02/imagem_2023-02-25_160308082-75x106.png 75w, https://kakuseiproject.com/wp-content/uploads/2023/02/imagem_2023-02-25_160308082-225x320.png 225w" sizes="(max-width: 75px) 100vw, 75px" class="img-responsive" style=""  alt="imagem_2023-02-25_160308082"/>                                    </a>
                                </div>
                                <div class="related-reading-content">
                                    <h5 class="widget-title">
                                        <a href="https://kakuseiproject.com/manga/urusei-yatsura/" title="Urusei Yatsura">
											Urusei Yatsura                                        </a>
                                    </h5>
                                </div>
								                                    <div class="post-on font-meta">
                                        <span>
                                            25/02/2023                                        </span>
                                    </div>
								                            </div>
                        </div>
						
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="related-reading-wrap related-style-1">
                                <div class="related-reading-img widget-thumbnail c-image-hover">
                                    <a title="Mairimashita! Iruma-kun" href="https://kakuseiproject.com/manga/mairimashita-iruma-kun/">
										<img width="75" height="106"  src="https://kakuseiproject.com/wp-content/uploads/2023/01/vol-45-cover-v0-jhtu6zxe8qmf1-75x106.webp" class="img-responsive" style=""  alt="vol-45-cover-v0-jhtu6zxe8qmf1"/>                                    </a>
                                </div>
                                <div class="related-reading-content">
                                    <h5 class="widget-title">
                                        <a href="https://kakuseiproject.com/manga/mairimashita-iruma-kun/" title="Mairimashita! Iruma-kun">
											Mairimashita! Iruma-kun                                        </a>
                                    </h5>
                                </div>
								                                    <div class="post-on font-meta">
                                        <span>
                                            02/10/2025                                        </span>
                                    </div>
								                            </div>
                        </div>
						
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="related-reading-wrap related-style-1">
                                <div class="related-reading-img widget-thumbnail c-image-hover">
                                    <a title="Tales of Outcast" href="https://kakuseiproject.com/manga/tales-of-outcast/">
										<img width="75" height="106"  src="https://kakuseiproject.com/wp-content/uploads/2024/12/imagem_2024-12-29_141959606-75x106.png" class="img-responsive" style=""  alt="imagem_2024-12-29_141959606"/>                                    </a>
                                </div>
                                <div class="related-reading-content">
                                    <h5 class="widget-title">
                                        <a href="https://kakuseiproject.com/manga/tales-of-outcast/" title="Tales of Outcast">
											Tales of Outcast                                        </a>
                                    </h5>
                                </div>
								                                    <div class="post-on font-meta">
                                        <span>
                                            03/01/2025                                        </span>
                                    </div>
								                            </div>
                        </div>
						            </div>

			                        </div>
                    </div>
					                </div>
            </div>
        </div>
    </div>
        </div><!-- <div class="site-content"> -->

		
			
		
        <footer class="site-footer">

			
						
						<div class="c-footer-sidebar">
				<div class="container">
					<div class="row c-row">
											</div>
				</div>
			</div>
			
            <div class="bottom-footer">
                <div class="container">
                    <div class="row">
                        <div class="col-md-12">

							<div class="nav-footer"><ul class="list-inline font-nav"><li id="menu-item-1962" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-1962"><a href="https://kakuseiproject.com/">Home</a></li>
<li id="menu-item-1951" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1951"><a href="https://kakuseiproject.com/politica-de-privacidade/">Política de Privacidade</a></li>
<li id="menu-item-1959" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1959"><a href="https://kakuseiproject.com/contato/">Contato</a></li>
</ul></div>
                            <div class="copyright">
								<p>©2025 Kakusei Project Inc. | Powered by Kng</p>                            </div>
                            
                                                    </div>
                    </div>
                </div>
            </div>

        </footer>
		
		            <div id="hover-infor"></div>
		
        </div> <!-- class="wrap" --></div> <!-- class="body-wrap" -->

	
<script type="speculationrules">
{"prefetch":[{"source":"document","where":{"and":[{"href_matches":"\/*"},{"not":{"href_matches":["\/wp-*.php","\/wp-admin\/*","\/wp-content\/uploads\/*","\/wp-content\/*","\/wp-content\/plugins\/*","\/wp-content\/themes\/madara\/*","\/*\\?(.+)"]}},{"not":{"selector_matches":"a[rel~=\"nofollow\"]"}},{"not":{"selector_matches":".no-prefetch, .no-prefetch a"}}]},"eagerness":"conservative"}]}
</script>

<!-- Modal -->
<div class="wp-manga-section">
    <input type="hidden" name="bookmarking" value="0"/>
    <div class="modal fade" id="form-login" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    <div id="login" class="login">
                        <h3>
                            <a href="https://kakuseiproject.com/" title="Kakusei Project" tabindex="-1">Sign in</a>
                        </h3>
                        <p class="message login"></p>
						<link rel='dns-prefetch' href='//www.googletagmanager.com' />
<meta name="generator" content="Site Kit by Google 1.160.1" /><link rel="icon" href="https://kakuseiproject.com/wp-content/uploads/2025/05/cropped-Kakusei_1-32x32.png" sizes="32x32" />
<link rel="icon" href="https://kakuseiproject.com/wp-content/uploads/2025/05/cropped-Kakusei_1-192x192.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://kakuseiproject.com/wp-content/uploads/2025/05/cropped-Kakusei_1-180x180.png" />
<meta name="msapplication-TileImage" content="https://kakuseiproject.com/wp-content/uploads/2025/05/cropped-Kakusei_1-270x270.png" />
												                        <form name="loginform" id="loginform" method="post">
                            <p>
                                <label>Username or Email Address *                                    <br> <input type="text" name="log" class="input user_login" value="" size="20">
                                </label>
                            </p>
                            <p>
                                <label>Password *                                    <br> <input type="password" autocomplete="" name="pwd" class="input user_pass" value="" size="20">
                                </label>
                            </p>
                            <p>
								                                
                            </p>
                            <p class="forgetmenot">
                                <label>
                                    <input name="rememberme" type="checkbox" id="rememberme" value="forever">Remember Me                                 </label>
                            </p>
                            <p class="submit">
								<input type="submit" name="wp-submit" class="button button-primary button-large wp-submit" value="Log In">                                <input type="hidden" name="redirect_to" value="https://kakuseiproject.com/wp-admin/">
                                <input type="hidden" name="testcookie" value="1">
                            </p>
                        </form>
                        <p class="nav">
                            <a href="javascript:avoid(0)" class="to-reset">Lost your password?</a>
                        </p>
                        <p class="backtoblog">
                            <a href="javascript:void(0)">&larr; Back to Kakusei Project</a>
                        </p>
                    </div>
                </div>
                <div class="modal-footer"></div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="form-sign-up" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    <div id="sign-up" class="login">
                        <h3>
                            <a href="https://kakuseiproject.com/" title="Kakusei Project" tabindex="-1">Sign Up</a>
                        </h3>
                        <p class="message register">Register For This Site.</p>
                        <form name="registerform" id="registerform" novalidate="novalidate">
                            <p>
                                <label>Username *                                    <br>
                                    <input type="text" name="user_sign-up" class="input user_login" value="" size="20">
                                </label>
                            </p>
                            <p>
                                <label>Email Address *                                    <br>
                                    <input type="email" name="email_sign-up" class="input user_email" value="" size="20">
                                </label>
                            </p>
                            <p>
                                <label>Password *<br>
                                    <input type="password" name="pass_sign-up" autocomplete="" class="input user_pass" value="" size="25">
                                </label>
                            </p>
                            <p class="action">
								                            </p>

                            <input type="hidden" name="redirect_to" value="">
                            <p class="submit">
                                <input type="submit" name="wp-submit" class="button button-primary button-large wp-submit" value="Register">
                            </p>
                        </form>
                        <p class="nav">
                            <a href="javascript:void(0)" class="to-login">Log in</a>
                            |
                            <a href="javascript:void(0)" class="to-reset">Lost your password?</a>
                        </p>
                        <p class="backtoblog">
                            <a href="javascript:void(0)">&larr; Back to Kakusei Project</a>
                        </p>
                    </div>
                </div>
                <div class="modal-footer"></div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="form-reset" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    <div id="reset" class="login">
                        <h3>
                            <a href="javascript:void(0)" class="to-reset">Lost your password?</a>
                        </h3>
                        <p class="message reset">Please enter your username or email address. You will receive a link to create a new password via email.</p>
                        <form name="resetform" id="resetform" method="post">
                            <p>
                                <label>Username or Email Address                                    <br>
                                    <input type="text" name="user_reset" id="user_reset" class="input" value="" size="20">
                                </label>
                            </p>
                                                        <p class="submit">
                                <input type="submit" name="wp-submit" class="button button-primary button-large wp-submit" value="Get New Password">
                                <input type="hidden" name="testcookie" value="1">
                            </p>
                        </form>
                        <p>
                            <a class="backtoblog" href="javascript:void(0)">&larr; Back to  Kakusei Project</a>
                        </p>
                    </div>
                </div>
                <div class="modal-footer"></div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
                                    var gRecaptchas = document.getElementsByClassName('g-recaptcha');
                                    for (let i = 0; i < gRecaptchas.length; i++) {
                                        gRecaptchas[i].setAttribute('data-callback', 'wpMangaSubmitSwitch');
                                        gRecaptchas[i].setAttribute('data-expired-callback', 'wpMangaSubmitSwitch');
                                        gRecaptchas[i].setAttribute('data-error', 'wpMangaSubmitSwitch');
                                    }
                                </script>
</div>
				<script id="dsq-count-scr" src="https://kakuseiproject.disqus.com/count.js" async></script>
				<script type="text/javascript" src="https://kakuseiproject.com/wp-includes/js/comment-reply.min.js?ver=6.8.2" id="comment-reply-js" async="async" data-wp-strategy="async"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-content/themes/madara/js/core.js?ver=6.8.2" id="madara-core-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-content/themes/madara/js/bootstrap.min.js?ver=4.6.0" id="bootstrap-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-content/themes/madara/js/shuffle.min.js?ver=5.3.0" id="shuffle-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-includes/js/imagesloaded.min.js?ver=5.0.0" id="imagesloaded-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-content/themes/madara/js/aos.js?ver=6.8.2" id="aos-js"></script>
<script type="text/javascript" id="madara-js-js-extra">
/* <![CDATA[ */
var madara = {"ajaxurl":"https:\/\/kakuseiproject.com\/wp-admin\/admin-ajax.php","query_vars":{"manga-core":"yamada-kun-to-lv999-no-koi-wo-suru","post_type":"wp-manga","name":"yamada-kun-to-lv999-no-koi-wo-suru","chapter":"capitulo-51","error":"","m":"","p":0,"post_parent":"","subpost":"","subpost_id":"","attachment":"","attachment_id":0,"pagename":"","page_id":0,"second":"","minute":"","hour":"","day":0,"monthnum":0,"year":0,"w":0,"category_name":"","tag":"","cat":"","tag_id":"","author":"","author_name":"","feed":"","tb":"","paged":0,"meta_key":"","meta_value":"","preview":"","s":"","sentence":"","title":"","fields":"all","menu_order":"","embed":"","category__in":[],"category__not_in":[],"category__and":[],"post__in":[],"post__not_in":[],"post_name__in":[],"tag__in":[],"tag__not_in":[],"tag__and":[],"tag_slug__in":[],"tag_slug__and":[],"post_parent__in":[],"post_parent__not_in":[],"author__in":[],"author__not_in":[],"search_columns":[],"ignore_sticky_posts":false,"suppress_filters":false,"cache_results":true,"update_post_term_cache":true,"update_menu_item_cache":false,"lazy_load_term_meta":true,"update_post_meta_cache":true,"posts_per_page":10,"nopaging":false,"comments_per_page":"50","no_found_rows":false,"order":"DESC"},"current_url":"https:\/\/kakuseiproject.com\/manga\/yamada-kun-to-lv999-no-koi-wo-suru\/capitulo-51","cursorPrev":"https:\/\/kakuseiproject.com\/wp-content\/themes\/madara\/images\/cursorLeft.png","cursorNext":"https:\/\/kakuseiproject.com\/wp-content\/themes\/madara\/images\/cursorRight.png"};
/* ]]> */
</script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-content/themes/madara/js/template.js?ver=2.2.3" id="madara-js-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-content/themes/madara/js/ajax.js?ver=6.8.2" id="madara-ajax-js"></script>
<script type="text/javascript" id="wp-manga-login-ajax-js-extra">
/* <![CDATA[ */
var wpMangaLogin = {"admin_ajax":"https:\/\/kakuseiproject.com\/wp-admin\/admin-ajax.php","home_url":"https:\/\/kakuseiproject.com","nonce":"07e023b622","messages":{"please_enter_username":"Please enter username","please_enter_password":"Please enter password","invalid_username_or_password":"Invalid username or password","server_error":"Server Error!","username_or_email_cannot_be_empty":"Username or Email cannot be empty","please_fill_all_fields":"Please fill in all password fields.","password_cannot_less_than_12":"Password cannot have less than 12 characters","password_doesnot_match":"Password does not match. Please try again.","username_cannot_empty":"Username cannot be empty","email_cannot_empty":"Email cannot be empty","password_cannot_empty":"Password cannot be empty"}};
/* ]]> */
</script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-content/plugins/madara-core/assets/js/login.js?ver=1.7.2" id="wp-manga-login-ajax-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-content/plugins/madara-core/assets/slick/slick.min.js?ver=6.8.2" id="wp-manga-slick-js-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-includes/js/jquery/ui/core.min.js?ver=1.13.3" id="jquery-ui-core-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-includes/js/jquery/ui/menu.min.js?ver=1.13.3" id="jquery-ui-menu-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-includes/js/dist/dom-ready.min.js?ver=f77871ff7694fffea381" id="wp-dom-ready-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-includes/js/dist/hooks.min.js?ver=4d63a3d491d11ffd8ac6" id="wp-hooks-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-includes/js/dist/i18n.min.js?ver=5e580eb46a90c2b997e6" id="wp-i18n-js"></script>
<script type="text/javascript" id="wp-i18n-js-after">
/* <![CDATA[ */
wp.i18n.setLocaleData( { 'text direction\u0004ltr': [ 'ltr' ] } );
/* ]]> */
</script>
<script type="text/javascript" id="wp-a11y-js-translations">
/* <![CDATA[ */
( function( domain, translations ) {
	var localeData = translations.locale_data[ domain ] || translations.locale_data.messages;
	localeData[""].domain = domain;
	wp.i18n.setLocaleData( localeData, domain );
} )( "default", {"translation-revision-date":"2025-08-30 11:44:20+0000","generator":"GlotPress\/4.0.1","domain":"messages","locale_data":{"messages":{"":{"domain":"messages","plural-forms":"nplurals=2; plural=n > 1;","lang":"pt_BR"},"Notifications":["Notifica\u00e7\u00f5es"]}},"comment":{"reference":"wp-includes\/js\/dist\/a11y.js"}} );
/* ]]> */
</script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-includes/js/dist/a11y.min.js?ver=3156534cc54473497e14" id="wp-a11y-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-includes/js/jquery/ui/autocomplete.min.js?ver=1.13.3" id="jquery-ui-autocomplete-js"></script>
<script type="text/javascript" id="wp-manga-js-extra">
/* <![CDATA[ */
var mangaNav = {"mangaUrl":"https:\/\/kakuseiproject.com\/manga\/yamada-kun-to-lv999-no-koi-wo-suru\/","backInfoPage":"on","text":{"backInfoPage":"Manga Info","prev":"Prev","next":"Next"}};
var manga = {"ajax_url":"https:\/\/kakuseiproject.com\/wp-admin\/admin-ajax.php","home_url":"https:\/\/kakuseiproject.com","base_url":"https:\/\/kakuseiproject.com\/manga\/yamada-kun-to-lv999-no-koi-wo-suru\/","manga_paged_var":"manga-paged","enable_manga_view":"1","manga_id":"713","chapter_slug":"capitulo-51"};
var mangaReadingAjax = {"isEnable":"1"};
/* ]]> */
</script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-content/plugins/madara-core/assets/js/script.js?ver=2.1.0.1" id="wp-manga-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-content/themes/madara/js/slick/slick.min.js?ver=1.9.0" id="slick-js"></script>
<script type="text/javascript" src="https://kakuseiproject.com/wp-content/plugins/madara-shortcodes/shortcodes/js/ct-shortcodes.js?ver=1.5.2.1" id="ct-shortcode-js-js"></script>

</body></html>

<!-- Page supported by LiteSpeed Cache 7.4 on 2025-10-08 19:11:12 -->