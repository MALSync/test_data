<html lang="tr">

<head>
  <meta charset="utf-8">
  <style type="text/css">
    svg:not(:root).svg-inline--fa {
      overflow: visible;
    }

    .svg-inline--fa {
      display: inline-block;
      font-size: inherit;
      height: 1em;
      overflow: visible;
      vertical-align: -0.125em;
    }

    .svg-inline--fa.fa-lg {
      vertical-align: -0.225em;
    }

    .svg-inline--fa.fa-w-1 {
      width: 0.0625em;
    }

    .svg-inline--fa.fa-w-2 {
      width: 0.125em;
    }

    .svg-inline--fa.fa-w-3 {
      width: 0.1875em;
    }

    .svg-inline--fa.fa-w-4 {
      width: 0.25em;
    }

    .svg-inline--fa.fa-w-5 {
      width: 0.3125em;
    }

    .svg-inline--fa.fa-w-6 {
      width: 0.375em;
    }

    .svg-inline--fa.fa-w-7 {
      width: 0.4375em;
    }

    .svg-inline--fa.fa-w-8 {
      width: 0.5em;
    }

    .svg-inline--fa.fa-w-9 {
      width: 0.5625em;
    }

    .svg-inline--fa.fa-w-10 {
      width: 0.625em;
    }

    .svg-inline--fa.fa-w-11 {
      width: 0.6875em;
    }

    .svg-inline--fa.fa-w-12 {
      width: 0.75em;
    }

    .svg-inline--fa.fa-w-13 {
      width: 0.8125em;
    }

    .svg-inline--fa.fa-w-14 {
      width: 0.875em;
    }

    .svg-inline--fa.fa-w-15 {
      width: 0.9375em;
    }

    .svg-inline--fa.fa-w-16 {
      width: 1em;
    }

    .svg-inline--fa.fa-w-17 {
      width: 1.0625em;
    }

    .svg-inline--fa.fa-w-18 {
      width: 1.125em;
    }

    .svg-inline--fa.fa-w-19 {
      width: 1.1875em;
    }

    .svg-inline--fa.fa-w-20 {
      width: 1.25em;
    }

    .svg-inline--fa.fa-pull-left {
      margin-right: 0.3em;
      width: auto;
    }

    .svg-inline--fa.fa-pull-right {
      margin-left: 0.3em;
      width: auto;
    }

    .svg-inline--fa.fa-border {
      height: 1.5em;
    }

    .svg-inline--fa.fa-li {
      width: 2em;
    }

    .svg-inline--fa.fa-fw {
      width: 1.25em;
    }

    .fa-layers svg.svg-inline--fa {
      bottom: 0;
      left: 0;
      margin: auto;
      position: absolute;
      right: 0;
      top: 0;
    }

    .fa-layers {
      display: inline-block;
      height: 1em;
      position: relative;
      text-align: center;
      vertical-align: -0.125em;
      width: 1em;
    }

    .fa-layers svg.svg-inline--fa {
      -webkit-transform-origin: center center;
      transform-origin: center center;
    }

    .fa-layers-counter,
    .fa-layers-text {
      display: inline-block;
      position: absolute;
      text-align: center;
    }

    .fa-layers-text {
      left: 50%;
      top: 50%;
      -webkit-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
      -webkit-transform-origin: center center;
      transform-origin: center center;
    }

    .fa-layers-counter {
      background-color: #ff253a;
      border-radius: 1em;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      color: #fff;
      height: 1.5em;
      line-height: 1;
      max-width: 5em;
      min-width: 1.5em;
      overflow: hidden;
      padding: 0.25em;
      right: 0;
      text-overflow: ellipsis;
      top: 0;
      -webkit-transform: scale(0.25);
      transform: scale(0.25);
      -webkit-transform-origin: top right;
      transform-origin: top right;
    }

    .fa-layers-bottom-right {
      bottom: 0;
      right: 0;
      top: auto;
      -webkit-transform: scale(0.25);
      transform: scale(0.25);
      -webkit-transform-origin: bottom right;
      transform-origin: bottom right;
    }

    .fa-layers-bottom-left {
      bottom: 0;
      left: 0;
      right: auto;
      top: auto;
      -webkit-transform: scale(0.25);
      transform: scale(0.25);
      -webkit-transform-origin: bottom left;
      transform-origin: bottom left;
    }

    .fa-layers-top-right {
      right: 0;
      top: 0;
      -webkit-transform: scale(0.25);
      transform: scale(0.25);
      -webkit-transform-origin: top right;
      transform-origin: top right;
    }

    .fa-layers-top-left {
      left: 0;
      right: auto;
      top: 0;
      -webkit-transform: scale(0.25);
      transform: scale(0.25);
      -webkit-transform-origin: top left;
      transform-origin: top left;
    }

    .fa-lg {
      font-size: 1.3333333333em;
      line-height: 0.75em;
      vertical-align: -0.0667em;
    }

    .fa-xs {
      font-size: 0.75em;
    }

    .fa-sm {
      font-size: 0.875em;
    }

    .fa-1x {
      font-size: 1em;
    }

    .fa-2x {
      font-size: 2em;
    }

    .fa-3x {
      font-size: 3em;
    }

    .fa-4x {
      font-size: 4em;
    }

    .fa-5x {
      font-size: 5em;
    }

    .fa-6x {
      font-size: 6em;
    }

    .fa-7x {
      font-size: 7em;
    }

    .fa-8x {
      font-size: 8em;
    }

    .fa-9x {
      font-size: 9em;
    }

    .fa-10x {
      font-size: 10em;
    }

    .fa-fw {
      text-align: center;
      width: 1.25em;
    }

    .fa-ul {
      list-style-type: none;
      margin-left: 2.5em;
      padding-left: 0;
    }

    .fa-ul>li {
      position: relative;
    }

    .fa-li {
      left: -2em;
      position: absolute;
      text-align: center;
      width: 2em;
      line-height: inherit;
    }

    .fa-border {
      border: solid 0.08em #eee;
      border-radius: 0.1em;
      padding: 0.2em 0.25em 0.15em;
    }

    .fa-pull-left {
      float: left;
    }

    .fa-pull-right {
      float: right;
    }

    .fa.fa-pull-left,
    .fas.fa-pull-left,
    .far.fa-pull-left,
    .fal.fa-pull-left,
    .fab.fa-pull-left {
      margin-right: 0.3em;
    }

    .fa.fa-pull-right,
    .fas.fa-pull-right,
    .far.fa-pull-right,
    .fal.fa-pull-right,
    .fab.fa-pull-right {
      margin-left: 0.3em;
    }

    .fa-spin {
      -webkit-animation: fa-spin 2s infinite linear;
      animation: fa-spin 2s infinite linear;
    }

    .fa-pulse {
      -webkit-animation: fa-spin 1s infinite steps(8);
      animation: fa-spin 1s infinite steps(8);
    }

    @-webkit-keyframes fa-spin {
      0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
      }

      100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
      }
    }

    @keyframes fa-spin {
      0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
      }

      100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
      }
    }

    .fa-rotate-90 {
      -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";
      -webkit-transform: rotate(90deg);
      transform: rotate(90deg);
    }

    .fa-rotate-180 {
      -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";
      -webkit-transform: rotate(180deg);
      transform: rotate(180deg);
    }

    .fa-rotate-270 {
      -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";
      -webkit-transform: rotate(270deg);
      transform: rotate(270deg);
    }

    .fa-flip-horizontal {
      -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";
      -webkit-transform: scale(-1, 1);
      transform: scale(-1, 1);
    }

    .fa-flip-vertical {
      -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
      -webkit-transform: scale(1, -1);
      transform: scale(1, -1);
    }

    .fa-flip-both,
    .fa-flip-horizontal.fa-flip-vertical {
      -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
      -webkit-transform: scale(-1, -1);
      transform: scale(-1, -1);
    }

    :root .fa-rotate-90,
    :root .fa-rotate-180,
    :root .fa-rotate-270,
    :root .fa-flip-horizontal,
    :root .fa-flip-vertical,
    :root .fa-flip-both {
      -webkit-filter: none;
      filter: none;
    }

    .fa-stack {
      display: inline-block;
      height: 2em;
      position: relative;
      width: 2.5em;
    }

    .fa-stack-1x,
    .fa-stack-2x {
      bottom: 0;
      left: 0;
      margin: auto;
      position: absolute;
      right: 0;
      top: 0;
    }

    .svg-inline--fa.fa-stack-1x {
      height: 1em;
      width: 1.25em;
    }

    .svg-inline--fa.fa-stack-2x {
      height: 2em;
      width: 2.5em;
    }

    .fa-inverse {
      color: #fff;
    }

    .sr-only {
      border: 0;
      clip: rect(0, 0, 0, 0);
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px;
    }

    .sr-only-focusable:active,
    .sr-only-focusable:focus {
      clip: auto;
      height: auto;
      margin: 0;
      overflow: visible;
      position: static;
      width: auto;
    }

    .svg-inline--fa .fa-primary {
      fill: var(--fa-primary-color, currentColor);
      opacity: 1;
      opacity: var(--fa-primary-opacity, 1);
    }

    .svg-inline--fa .fa-secondary {
      fill: var(--fa-secondary-color, currentColor);
      opacity: 0.4;
      opacity: var(--fa-secondary-opacity, 0.4);
    }

    .svg-inline--fa.fa-swap-opacity .fa-primary {
      opacity: 0.4;
      opacity: var(--fa-secondary-opacity, 0.4);
    }

    .svg-inline--fa.fa-swap-opacity .fa-secondary {
      opacity: 1;
      opacity: var(--fa-primary-opacity, 1);
    }

    .svg-inline--fa mask .fa-primary,
    .svg-inline--fa mask .fa-secondary {
      fill: black;
    }

    .fad.fa-inverse {
      color: #fff;
    }
  </style>
  <link rel="shortcut icon" href="/favicon.ico">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta http-equiv="copyright" content="Copyright © 2021 AnimeWho?">
  <meta http-equiv="content-language" content="tr_TR">
  <meta name="theme-color" content="#fc0043">
  <meta name="robots" content="index, follow">
  <meta name="googlebot" content="index, follow">
  <meta name="revisit-after" content="1 Days">
  <meta name="distribution" content="global">
  <meta name="resource-type" content="document">
  <meta name="doc-type" content="white paper">
  <meta name="doc-class" content="living document">
  <meta name="doc-rights" content="public">
  <meta name="fragment" content="!">
  <link rel="apple-touch-icon" sizes="57x57" href="/apple-icon-57x57.png">
  <link rel="apple-touch-icon" sizes="60x60" href="/apple-icon-60x60.png">
  <link rel="apple-touch-icon" sizes="120x120" href="/apple-icon-120x120.png">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-icon-180x180.png">
  <link rel="icon" type="image/png" sizes="192x192" href="/android-icon-192x192.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png">
  <meta name="application-name" content="AnimeWho?">
  <meta name="apple-mobile-web-app-title" content="AnimeWho?">
  <meta name="msapplication-TileColor" content="#ffffff">
  <meta name="msapplication-TileImage" content="/ms-icon-144x144.png">
  <link rel="manifest" href="/manifest.json">
  <script async="" src="https://www.google-analytics.com/analytics.js"></script>
  <script async="" src="https://www.google-analytics.com/analytics.js"></script>
  <script data-ad-client="ca-pub-1255481505209617" async=""
    src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
  <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
  <script async="" src="https://arc.io/widget.min.js#EQzcjnif"></script>
  <title>Tate no Yuusha no Nariagari 3. Bölüm Türkçe Oku - AnimeWho? Manga</title>
  <link href="/static/css/main.ebd2f28f.chunk.css" rel="stylesheet">
  <style data-jss="" data-meta="MuiCssBaseline">
    html {
      box-sizing: border-box;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    *,
    *::before,
    *::after {
      box-sizing: inherit;
    }

    strong,
    b {
      font-weight: 700;
    }

    body {
      color: #fff;
      margin: 0;
      font-size: .8rem;
      font-family: 'Source Sans Pro', sans-serif;
      font-weight: bold;
      line-height: 1.6;
      letter-spacing: 0.0075em;
      background-color: #121212;
    }

    @media print {
      body {
        background-color: #fff;
      }
    }

    body::backdrop {
      background-color: #121212;
    }
  </style>
  <style data-jss="" data-meta="MuiTypography">
    .MuiTypography-root {
      margin: 0;
    }

    .MuiTypography-body2 {
      font-size: .8rem;
      font-family: 'Source Sans Pro', sans-serif;
      font-weight: bold;
      line-height: 1.6;
      letter-spacing: 0.0075em;
    }

    .MuiTypography-body1 {
      font-size: 1rem;
      font-family: 'Source Sans Pro', sans-serif;
      font-weight: 400;
      line-height: 1.5;
    }

    .MuiTypography-caption {
      font-size: 0.75rem;
      font-family: 'Roboto', sans-serif;
      font-weight: 400;
      line-height: 1.66;
    }

    .MuiTypography-button {
      font-size: 0.875rem;
      font-family: 'Roboto', sans-serif;
      font-weight: 500;
      line-height: 1.75;
      text-transform: uppercase;
    }

    .MuiTypography-h1 {
      font-size: 2.9rem;
      font-family: 'Roboto', sans-serif;
      font-weight: bold;
      line-height: 1.2;
    }

    @media (min-width:600px) {
      .MuiTypography-h1 {
        font-size: 3.75rem;
      }
    }

    @media (min-width:960px) {
      .MuiTypography-h1 {
        font-size: 4.375rem;
      }
    }

    @media (min-width:1280px) {
      .MuiTypography-h1 {
        font-size: 4.7917rem;
      }
    }

    .MuiTypography-h2 {
      font-size: 2rem;
      font-family: 'Roboto', sans-serif;
      font-weight: bold;
      line-height: 1.2;
    }

    @media (min-width:600px) {
      .MuiTypography-h2 {
        font-size: 2.5rem;
      }
    }

    @media (min-width:960px) {
      .MuiTypography-h2 {
        font-size: 2.7083rem;
      }
    }

    @media (min-width:1280px) {
      .MuiTypography-h2 {
        font-size: 2.9167rem;
      }
    }

    .MuiTypography-h3 {
      font-size: 1.7rem;
      font-family: 'Roboto', sans-serif;
      font-weight: bold;
      line-height: 1.2;
    }

    @media (min-width:600px) {
      .MuiTypography-h3 {
        font-size: 2.0833rem;
      }
    }

    @media (min-width:960px) {
      .MuiTypography-h3 {
        font-size: 2.2917rem;
      }
    }

    @media (min-width:1280px) {
      .MuiTypography-h3 {
        font-size: 2.5rem;
      }
    }

    .MuiTypography-h4 {
      font-size: 1.35rem;
      font-family: 'Roboto', sans-serif;
      font-weight: bold;
      line-height: 1.235;
    }

    @media (min-width:600px) {
      .MuiTypography-h4 {
        font-size: 1.417rem;
      }
    }

    @media (min-width:960px) {
      .MuiTypography-h4 {
        font-size: 1.6194rem;
      }
    }

    @media (min-width:1280px) {
      .MuiTypography-h4 {
        font-size: 1.6194rem;
      }
    }

    .MuiTypography-h5 {
      font-size: 1rem;
      font-family: 'Roboto', sans-serif;
      font-weight: bold;
      line-height: 1.334;
    }

    .MuiTypography-h6 {
      font-size: .8rem;
      font-family: 'Roboto', sans-serif;
      font-weight: bold;
      line-height: 1.6;
    }

    .MuiTypography-subtitle1 {
      font-size: 0.875rem;
      font-family: 'Source Sans Pro', sans-serif;
      font-weight: 400;
      line-height: 1.25;
      border-radius: 2px;
    }

    .MuiTypography-subtitle2 {
      font-size: 0.675rem;
      font-family: 'Source Sans Pro', sans-serif;
      font-weight: 500;
      line-height: 1.57;
      border-radius: 2px;
    }

    .MuiTypography-overline {
      font-size: 0.75rem;
      font-family: 'Roboto', sans-serif;
      font-weight: 400;
      line-height: 2.66;
      text-transform: uppercase;
    }

    .MuiTypography-srOnly {
      width: 1px;
      height: 1px;
      overflow: hidden;
      position: absolute;
    }

    .MuiTypography-alignLeft {
      text-align: left;
    }

    .MuiTypography-alignCenter {
      text-align: center;
    }

    .MuiTypography-alignRight {
      text-align: right;
    }

    .MuiTypography-alignJustify {
      text-align: justify;
    }

    .MuiTypography-noWrap {
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }

    .MuiTypography-gutterBottom {
      margin-bottom: 0.35em;
    }

    .MuiTypography-paragraph {
      margin-bottom: 16px;
    }

    .MuiTypography-colorInherit {
      color: inherit;
    }

    .MuiTypography-colorPrimary {
      color: #fc0043;
    }

    .MuiTypography-colorSecondary {
      color: #fc0043;
    }

    .MuiTypography-colorTextPrimary {
      color: #fff;
    }

    .MuiTypography-colorTextSecondary {
      color: rgba(255, 255, 255, 0.7);
    }

    .MuiTypography-colorError {
      color: #f44336;
    }

    .MuiTypography-displayInline {
      display: inline;
    }

    .MuiTypography-displayBlock {
      display: block;
    }
  </style>
  <style data-jss="" data-meta="makeStyles">
    .jss42 {
      padding: 16px;
    }

    .jss43 {
      display: flex;
      flex-wrap: wrap;
    }

    .jss44 {
      color: #aaaaaa;
      font-size: 0.975em;
      margin-top: 32px;
    }

    .jss45 {
      color: #bdbdbd;
      margin-right: 8px;
    }
  </style>
  <style data-jss="" data-meta="MuiDivider">
    .MuiDivider-root {
      border: none;
      height: 1px;
      margin: 0;
      flex-shrink: 0;
      background-color: rgba(255, 255, 255, 0.12);
    }

    .MuiDivider-absolute {
      left: 0;
      width: 100%;
      bottom: 0;
      position: absolute;
    }

    .MuiDivider-inset {
      margin-left: 72px;
    }

    .MuiDivider-light {
      background-color: rgba(255, 255, 255, 0.08);
    }

    .MuiDivider-middle {
      margin-left: 16px;
      margin-right: 16px;
    }

    .MuiDivider-vertical {
      width: 1px;
      height: 100%;
    }

    .MuiDivider-flexItem {
      height: auto;
      align-self: stretch;
    }
  </style>
  <style data-jss="" data-meta="MuiList">
    .MuiList-root {
      margin: 0;
      padding: 0;
      position: relative;
      list-style: none;
    }

    .MuiList-padding {
      padding-top: 8px;
      padding-bottom: 8px;
    }

    .MuiList-subheader {
      padding-top: 0;
    }
  </style>
  <style data-jss="" data-meta="MuiTouchRipple">
    .MuiTouchRipple-root {
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 0;
      overflow: hidden;
      position: absolute;
      border-radius: inherit;
      pointer-events: none;
    }

    .MuiTouchRipple-ripple {
      opacity: 0;
      position: absolute;
    }

    .MuiTouchRipple-rippleVisible {
      opacity: 0.3;
      animation: MuiTouchRipple-keyframes-enter 550ms cubic-bezier(0.4, 0, 0.2, 1);
      transform: scale(1);
    }

    .MuiTouchRipple-ripplePulsate {
      animation-duration: 300ms;
    }

    .MuiTouchRipple-child {
      width: 100%;
      height: 100%;
      display: block;
      opacity: 1;
      border-radius: 50%;
      background-color: currentColor;
    }

    .MuiTouchRipple-childLeaving {
      opacity: 0;
      animation: MuiTouchRipple-keyframes-exit 550ms cubic-bezier(0.4, 0, 0.2, 1);
    }

    .MuiTouchRipple-childPulsate {
      top: 0;
      left: 0;
      position: absolute;
      animation: MuiTouchRipple-keyframes-pulsate 2500ms cubic-bezier(0.4, 0, 0.2, 1) 200ms infinite;
    }

    @-webkit-keyframes MuiTouchRipple-keyframes-enter {
      0% {
        opacity: 0.1;
        transform: scale(0);
      }

      100% {
        opacity: 0.3;
        transform: scale(1);
      }
    }

    @-webkit-keyframes MuiTouchRipple-keyframes-exit {
      0% {
        opacity: 1;
      }

      100% {
        opacity: 0;
      }
    }

    @-webkit-keyframes MuiTouchRipple-keyframes-pulsate {
      0% {
        transform: scale(1);
      }

      50% {
        transform: scale(0.92);
      }

      100% {
        transform: scale(1);
      }
    }
  </style>
  <style data-jss="" data-meta="MuiButtonBase">
    .MuiButtonBase-root {
      color: inherit;
      border: 0;
      cursor: pointer;
      margin: 0;
      display: inline-flex;
      outline: 0;
      padding: 0;
      position: relative;
      align-items: center;
      user-select: none;
      border-radius: 0;
      vertical-align: middle;
      -moz-appearance: none;
      justify-content: center;
      text-decoration: none;
      background-color: transparent;
      -webkit-appearance: none;
      -webkit-tap-highlight-color: transparent;
    }

    .MuiButtonBase-root::-moz-focus-inner {
      border-style: none;
    }

    .MuiButtonBase-root.Mui-disabled {
      cursor: default;
      pointer-events: none;
    }

    @media print {
      .MuiButtonBase-root {
        -webkit-print-color-adjust: exact;
      }
    }
  </style>
  <style data-jss="" data-meta="MuiListItem">
    .MuiListItem-root {
      width: 100%;
      display: flex;
      position: relative;
      box-sizing: border-box;
      text-align: left;
      align-items: center;
      padding-top: 8px;
      padding-bottom: 8px;
      justify-content: flex-start;
      text-decoration: none;
    }

    .MuiListItem-root.Mui-focusVisible {
      background-color: rgba(255, 255, 255, 0.16);
    }

    .MuiListItem-root.Mui-selected,
    .MuiListItem-root.Mui-selected:hover {
      background-color: rgba(255, 255, 255, 0.16);
    }

    .MuiListItem-root.Mui-disabled {
      opacity: 0.5;
    }

    .MuiListItem-container {
      position: relative;
    }

    .MuiListItem-dense {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .MuiListItem-alignItemsFlexStart {
      align-items: flex-start;
    }

    .MuiListItem-divider {
      border-bottom: 1px solid rgba(255, 255, 255, 0.12);
      background-clip: padding-box;
    }

    .MuiListItem-gutters {
      padding-left: 16px;
      padding-right: 16px;
    }

    .MuiListItem-button {
      transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    }

    .MuiListItem-button:hover {
      text-decoration: none;
      background-color: rgba(255, 255, 255, 0.08);
    }

    @media (hover: none) {
      .MuiListItem-button:hover {
        background-color: transparent;
      }
    }

    .MuiListItem-secondaryAction {
      padding-right: 48px;
    }
  </style>
  <style data-jss="" data-meta="MuiBox">

  </style>
  <style data-jss="" data-meta="MuiBox">
  </style>
  <style data-jss="" data-meta="MuiBox">
  </style>
  <style data-jss="" data-meta="MuiBox">
  </style>
  <style data-jss="" data-meta="MuiBox">
  </style>
  <style data-jss="" data-meta="MuiBox">
  </style>
  <style data-jss="" data-meta="MuiBox">
  </style>
  <style data-jss="" data-meta="MuiBox">
  </style>
  <style data-jss="" data-meta="MuiBox">
  </style>
  <style data-jss="" data-meta="MuiBox">
  </style>
  <style data-jss="" data-meta="MuiBox">
  </style>
  <style data-jss="" data-meta="MuiBox">
  </style>
  <style data-jss="" data-meta="MuiBox">
  </style>
  <style data-jss="" data-meta="MuiListItemIcon">
    .MuiListItemIcon-root {
      color: #fff;
      display: inline-flex;
      min-width: 56px;
      flex-shrink: 0;
    }

    .MuiListItemIcon-alignItemsFlexStart {
      margin-top: 8px;
    }
  </style>
  <style data-jss="" data-meta="MuiListItemText">
    .MuiListItemText-root {
      flex: 1 1 auto;
      min-width: 0;
      margin-top: 4px;
      margin-bottom: 4px;
    }

    .MuiListItemText-multiline {
      margin-top: 6px;
      margin-bottom: 6px;
    }

    .MuiListItemText-inset {
      padding-left: 56px;
    }
  </style>
  <style data-jss="" data-meta="MuiPaper">
    .MuiPaper-root {
      color: #fff;
      transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      background-color: #333333;
    }

    .MuiPaper-rounded {
      border-radius: 4px;
    }

    .MuiPaper-outlined {
      border: 1px solid rgba(255, 255, 255, 0.12);
    }

    .MuiPaper-elevation0 {
      box-shadow: none;
    }

    .MuiPaper-elevation1 {
      box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation2 {
      box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation3 {
      box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation4 {
      box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation5 {
      box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation6 {
      box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation7 {
      box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation8 {
      box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation9 {
      box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation10 {
      box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation11 {
      box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation12 {
      box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation13 {
      box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation14 {
      box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation15 {
      box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation16 {
      box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation17 {
      box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation18 {
      box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation19 {
      box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation20 {
      box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation21 {
      box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation22 {
      box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation23 {
      box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);
    }

    .MuiPaper-elevation24 {
      box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);
    }
  </style>
  <style data-jss="" data-meta="MuiAppBar">
    .MuiAppBar-root {
      width: 100%;
      display: flex;
      z-index: 1100;
      box-sizing: border-box;
      flex-shrink: 0;
      flex-direction: column;
    }

    .MuiAppBar-positionFixed {
      top: 0;
      left: auto;
      right: 0;
      position: fixed;
    }

    @media print {
      .MuiAppBar-positionFixed {
        position: absolute;
      }
    }

    .MuiAppBar-positionAbsolute {
      top: 0;
      left: auto;
      right: 0;
      position: absolute;
    }

    .MuiAppBar-positionSticky {
      top: 0;
      left: auto;
      right: 0;
      position: sticky;
    }

    .MuiAppBar-positionStatic {
      position: static;
    }

    .MuiAppBar-positionRelative {
      position: relative;
    }

    .MuiAppBar-colorDefault {
      color: #fff;
      background-color: #212121;
    }

    .MuiAppBar-colorPrimary {
      color: #fff;
      background-color: #fc0043;
    }

    .MuiAppBar-colorSecondary {
      color: #fff;
      background-color: #fc0043;
    }

    .MuiAppBar-colorInherit {
      color: inherit;
    }

    .MuiAppBar-colorTransparent {
      color: inherit;
      background-color: transparent;
    }
  </style>
  <style data-jss="" data-meta="MuiToolbar">
    .MuiToolbar-root {
      display: flex;
      position: relative;
      align-items: center;
    }

    .MuiToolbar-gutters {
      padding-left: 16px;
      padding-right: 16px;
    }

    @media (min-width:600px) {
      .MuiToolbar-gutters {
        padding-left: 29px;
        padding-right: 24px;
      }
    }

    .MuiToolbar-regular {
      min-height: 56px;
    }

    @media (min-width:0px) and (orientation: landscape) {
      .MuiToolbar-regular {
        min-height: 48px;
      }
    }

    @media (min-width:600px) {
      .MuiToolbar-regular {
        min-height: 64px;
      }
    }

    .MuiToolbar-dense {
      min-height: 48px;
    }
  </style>
  <style data-jss="" data-meta="MuiPopover">
    .MuiPopover-paper {
      outline: 0;
      position: absolute;
      max-width: calc(100% - 32px);
      min-width: 16px;
      max-height: calc(100% - 32px);
      min-height: 16px;
      overflow-x: hidden;
      overflow-y: auto;
    }
  </style>
  <style data-jss="" data-meta="MuiMenu">
    .MuiMenu-paper {
      max-height: calc(100% - 96px);
      -webkit-overflow-scrolling: touch;
    }

    .MuiMenu-list {
      outline: 0;
    }
  </style>
  <style data-jss="" data-meta="MuiMenuItem">
    .MuiMenuItem-root {
      width: auto;
      overflow: hidden;
      font-size: 1rem;
      box-sizing: border-box;
      min-height: 48px;
      font-family: 'Source Sans Pro', sans-serif;
      font-weight: 400;
      line-height: 1.5;
      padding-top: 6px;
      white-space: nowrap;
      padding-bottom: 6px;
    }

    @media (min-width:600px) {
      .MuiMenuItem-root {
        min-height: auto;
      }
    }

    .MuiMenuItem-dense {
      font-size: .8rem;
      min-height: auto;
      font-family: 'Source Sans Pro', sans-serif;
      font-weight: bold;
      line-height: 1.6;
      letter-spacing: 0.0075em;
    }
  </style>
  <style data-jss="" data-meta="MuiDrawer">
    .MuiDrawer-docked {
      flex: 0 0 auto;
    }

    .MuiDrawer-paper {
      top: 0;
      flex: 1 0 auto;
      height: 100%;
      display: flex;
      outline: 0;
      z-index: 1200;
      position: fixed;
      overflow-y: auto;
      flex-direction: column;
      -webkit-overflow-scrolling: touch;
    }

    .MuiDrawer-paperAnchorLeft {
      left: 0;
      right: auto;
    }

    .MuiDrawer-paperAnchorRight {
      left: auto;
      right: 0;
    }

    .MuiDrawer-paperAnchorTop {
      top: 0;
      left: 0;
      right: 0;
      bottom: auto;
      height: auto;
      max-height: 100%;
    }

    .MuiDrawer-paperAnchorBottom {
      top: auto;
      left: 0;
      right: 0;
      bottom: 0;
      height: auto;
      max-height: 100%;
    }

    .MuiDrawer-paperAnchorDockedLeft {
      border-right: 1px solid rgba(255, 255, 255, 0.12);
    }

    .MuiDrawer-paperAnchorDockedTop {
      border-bottom: 1px solid rgba(255, 255, 255, 0.12);
    }

    .MuiDrawer-paperAnchorDockedRight {
      border-left: 1px solid rgba(255, 255, 255, 0.12);
    }

    .MuiDrawer-paperAnchorDockedBottom {
      border-top: 1px solid rgba(255, 255, 255, 0.12);
    }
  </style>
  <style data-jss="" data-meta="MuiSvgIcon">
    .MuiSvgIcon-root {
      fill: currentColor;
      width: 1em;
      height: 1em;
      display: inline-block;
      font-size: 1.5rem;
      transition: fill 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      flex-shrink: 0;
      user-select: none;
    }

    .MuiSvgIcon-colorPrimary {
      color: #fc0043;
    }

    .MuiSvgIcon-colorSecondary {
      color: #fc0043;
    }

    .MuiSvgIcon-colorAction {
      color: #fff;
    }

    .MuiSvgIcon-colorError {
      color: #f44336;
    }

    .MuiSvgIcon-colorDisabled {
      color: rgba(255, 255, 255, 0.3);
    }

    .MuiSvgIcon-fontSizeInherit {
      font-size: inherit;
    }

    .MuiSvgIcon-fontSizeSmall {
      font-size: 1.25rem;
    }

    .MuiSvgIcon-fontSizeLarge {
      font-size: 2.1875rem;
    }
  </style>
  <style data-jss="" data-meta="MuiIconButton">
    .MuiIconButton-root {
      flex: 0 0 auto;
      color: #fff;
      padding: 12px;
      overflow: visible;
      font-size: 1.5rem;
      text-align: center;
      transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      border-radius: 50%;
    }

    .MuiIconButton-root:hover {
      background-color: rgba(255, 255, 255, 0.08);
    }

    .MuiIconButton-root.Mui-disabled {
      color: rgba(255, 255, 255, 0.3);
      background-color: transparent;
    }

    @media (hover: none) {
      .MuiIconButton-root:hover {
        background-color: transparent;
      }
    }

    .MuiIconButton-edgeStart {
      margin-left: -12px;
    }

    .MuiIconButton-sizeSmall.MuiIconButton-edgeStart {
      margin-left: -3px;
    }

    .MuiIconButton-edgeEnd {
      margin-right: -12px;
    }

    .MuiIconButton-sizeSmall.MuiIconButton-edgeEnd {
      margin-right: -3px;
    }

    .MuiIconButton-colorInherit {
      color: inherit;
    }

    .MuiIconButton-colorPrimary {
      color: #fc0043;
    }

    .MuiIconButton-colorPrimary:hover {
      background-color: rgba(252, 0, 67, 0.08);
    }

    @media (hover: none) {
      .MuiIconButton-colorPrimary:hover {
        background-color: transparent;
      }
    }

    .MuiIconButton-colorSecondary {
      color: #fc0043;
    }

    .MuiIconButton-colorSecondary:hover {
      background-color: rgba(252, 0, 67, 0.08);
    }

    @media (hover: none) {
      .MuiIconButton-colorSecondary:hover {
        background-color: transparent;
      }
    }

    .MuiIconButton-sizeSmall {
      padding: 3px;
      font-size: 1.125rem;
    }

    .MuiIconButton-label {
      width: 100%;
      display: flex;
      align-items: inherit;
      justify-content: inherit;
    }
  </style>
  <style data-jss="" data-meta="MuiGrid">
    .MuiGrid-container {
      width: 100%;
      display: flex;
      flex-wrap: wrap;
      box-sizing: border-box;
    }

    .MuiGrid-item {
      margin: 0;
      box-sizing: border-box;
    }

    .MuiGrid-zeroMinWidth {
      min-width: 0;
    }

    .MuiGrid-direction-xs-column {
      flex-direction: column;
    }

    .MuiGrid-direction-xs-column-reverse {
      flex-direction: column-reverse;
    }

    .MuiGrid-direction-xs-row-reverse {
      flex-direction: row-reverse;
    }

    .MuiGrid-wrap-xs-nowrap {
      flex-wrap: nowrap;
    }

    .MuiGrid-wrap-xs-wrap-reverse {
      flex-wrap: wrap-reverse;
    }

    .MuiGrid-align-items-xs-center {
      align-items: center;
    }

    .MuiGrid-align-items-xs-flex-start {
      align-items: flex-start;
    }

    .MuiGrid-align-items-xs-flex-end {
      align-items: flex-end;
    }

    .MuiGrid-align-items-xs-baseline {
      align-items: baseline;
    }

    .MuiGrid-align-content-xs-center {
      align-content: center;
    }

    .MuiGrid-align-content-xs-flex-start {
      align-content: flex-start;
    }

    .MuiGrid-align-content-xs-flex-end {
      align-content: flex-end;
    }

    .MuiGrid-align-content-xs-space-between {
      align-content: space-between;
    }

    .MuiGrid-align-content-xs-space-around {
      align-content: space-around;
    }

    .MuiGrid-justify-xs-center {
      justify-content: center;
    }

    .MuiGrid-justify-xs-flex-end {
      justify-content: flex-end;
    }

    .MuiGrid-justify-xs-space-between {
      justify-content: space-between;
    }

    .MuiGrid-justify-xs-space-around {
      justify-content: space-around;
    }

    .MuiGrid-justify-xs-space-evenly {
      justify-content: space-evenly;
    }

    .MuiGrid-spacing-xs-1 {
      width: calc(100% + 8px);
      margin: -4px;
    }

    .MuiGrid-spacing-xs-1>.MuiGrid-item {
      padding: 4px;
    }

    .MuiGrid-spacing-xs-2 {
      width: calc(100% + 16px);
      margin: -8px;
    }

    .MuiGrid-spacing-xs-2>.MuiGrid-item {
      padding: 8px;
    }

    .MuiGrid-spacing-xs-3 {
      width: calc(100% + 24px);
      margin: -12px;
    }

    .MuiGrid-spacing-xs-3>.MuiGrid-item {
      padding: 12px;
    }

    .MuiGrid-spacing-xs-4 {
      width: calc(100% + 32px);
      margin: -16px;
    }

    .MuiGrid-spacing-xs-4>.MuiGrid-item {
      padding: 16px;
    }

    .MuiGrid-spacing-xs-5 {
      width: calc(100% + 40px);
      margin: -20px;
    }

    .MuiGrid-spacing-xs-5>.MuiGrid-item {
      padding: 20px;
    }

    .MuiGrid-spacing-xs-6 {
      width: calc(100% + 48px);
      margin: -24px;
    }

    .MuiGrid-spacing-xs-6>.MuiGrid-item {
      padding: 24px;
    }

    .MuiGrid-spacing-xs-7 {
      width: calc(100% + 56px);
      margin: -28px;
    }

    .MuiGrid-spacing-xs-7>.MuiGrid-item {
      padding: 28px;
    }

    .MuiGrid-spacing-xs-8 {
      width: calc(100% + 64px);
      margin: -32px;
    }

    .MuiGrid-spacing-xs-8>.MuiGrid-item {
      padding: 32px;
    }

    .MuiGrid-spacing-xs-9 {
      width: calc(100% + 72px);
      margin: -36px;
    }

    .MuiGrid-spacing-xs-9>.MuiGrid-item {
      padding: 36px;
    }

    .MuiGrid-spacing-xs-10 {
      width: calc(100% + 80px);
      margin: -40px;
    }

    .MuiGrid-spacing-xs-10>.MuiGrid-item {
      padding: 40px;
    }

    .MuiGrid-grid-xs-auto {
      flex-grow: 0;
      max-width: none;
      flex-basis: auto;
    }

    .MuiGrid-grid-xs-true {
      flex-grow: 1;
      max-width: 100%;
      flex-basis: 0;
    }

    .MuiGrid-grid-xs-1 {
      flex-grow: 0;
      max-width: 8.333333%;
      flex-basis: 8.333333%;
    }

    .MuiGrid-grid-xs-2 {
      flex-grow: 0;
      max-width: 16.666667%;
      flex-basis: 16.666667%;
    }

    .MuiGrid-grid-xs-3 {
      flex-grow: 0;
      max-width: 25%;
      flex-basis: 25%;
    }

    .MuiGrid-grid-xs-4 {
      flex-grow: 0;
      max-width: 33.333333%;
      flex-basis: 33.333333%;
    }

    .MuiGrid-grid-xs-5 {
      flex-grow: 0;
      max-width: 41.666667%;
      flex-basis: 41.666667%;
    }

    .MuiGrid-grid-xs-6 {
      flex-grow: 0;
      max-width: 50%;
      flex-basis: 50%;
    }

    .MuiGrid-grid-xs-7 {
      flex-grow: 0;
      max-width: 58.333333%;
      flex-basis: 58.333333%;
    }

    .MuiGrid-grid-xs-8 {
      flex-grow: 0;
      max-width: 66.666667%;
      flex-basis: 66.666667%;
    }

    .MuiGrid-grid-xs-9 {
      flex-grow: 0;
      max-width: 75%;
      flex-basis: 75%;
    }

    .MuiGrid-grid-xs-10 {
      flex-grow: 0;
      max-width: 83.333333%;
      flex-basis: 83.333333%;
    }

    .MuiGrid-grid-xs-11 {
      flex-grow: 0;
      max-width: 91.666667%;
      flex-basis: 91.666667%;
    }

    .MuiGrid-grid-xs-12 {
      flex-grow: 0;
      max-width: 100%;
      flex-basis: 100%;
    }

    @media (min-width:600px) {
      .MuiGrid-grid-sm-auto {
        flex-grow: 0;
        max-width: none;
        flex-basis: auto;
      }

      .MuiGrid-grid-sm-true {
        flex-grow: 1;
        max-width: 100%;
        flex-basis: 0;
      }

      .MuiGrid-grid-sm-1 {
        flex-grow: 0;
        max-width: 8.333333%;
        flex-basis: 8.333333%;
      }

      .MuiGrid-grid-sm-2 {
        flex-grow: 0;
        max-width: 16.666667%;
        flex-basis: 16.666667%;
      }

      .MuiGrid-grid-sm-3 {
        flex-grow: 0;
        max-width: 25%;
        flex-basis: 25%;
      }

      .MuiGrid-grid-sm-4 {
        flex-grow: 0;
        max-width: 33.333333%;
        flex-basis: 33.333333%;
      }

      .MuiGrid-grid-sm-5 {
        flex-grow: 0;
        max-width: 41.666667%;
        flex-basis: 41.666667%;
      }

      .MuiGrid-grid-sm-6 {
        flex-grow: 0;
        max-width: 50%;
        flex-basis: 50%;
      }

      .MuiGrid-grid-sm-7 {
        flex-grow: 0;
        max-width: 58.333333%;
        flex-basis: 58.333333%;
      }

      .MuiGrid-grid-sm-8 {
        flex-grow: 0;
        max-width: 66.666667%;
        flex-basis: 66.666667%;
      }

      .MuiGrid-grid-sm-9 {
        flex-grow: 0;
        max-width: 75%;
        flex-basis: 75%;
      }

      .MuiGrid-grid-sm-10 {
        flex-grow: 0;
        max-width: 83.333333%;
        flex-basis: 83.333333%;
      }

      .MuiGrid-grid-sm-11 {
        flex-grow: 0;
        max-width: 91.666667%;
        flex-basis: 91.666667%;
      }

      .MuiGrid-grid-sm-12 {
        flex-grow: 0;
        max-width: 100%;
        flex-basis: 100%;
      }
    }

    @media (min-width:960px) {
      .MuiGrid-grid-md-auto {
        flex-grow: 0;
        max-width: none;
        flex-basis: auto;
      }

      .MuiGrid-grid-md-true {
        flex-grow: 1;
        max-width: 100%;
        flex-basis: 0;
      }

      .MuiGrid-grid-md-1 {
        flex-grow: 0;
        max-width: 8.333333%;
        flex-basis: 8.333333%;
      }

      .MuiGrid-grid-md-2 {
        flex-grow: 0;
        max-width: 16.666667%;
        flex-basis: 16.666667%;
      }

      .MuiGrid-grid-md-3 {
        flex-grow: 0;
        max-width: 25%;
        flex-basis: 25%;
      }

      .MuiGrid-grid-md-4 {
        flex-grow: 0;
        max-width: 33.333333%;
        flex-basis: 33.333333%;
      }

      .MuiGrid-grid-md-5 {
        flex-grow: 0;
        max-width: 41.666667%;
        flex-basis: 41.666667%;
      }

      .MuiGrid-grid-md-6 {
        flex-grow: 0;
        max-width: 50%;
        flex-basis: 50%;
      }

      .MuiGrid-grid-md-7 {
        flex-grow: 0;
        max-width: 58.333333%;
        flex-basis: 58.333333%;
      }

      .MuiGrid-grid-md-8 {
        flex-grow: 0;
        max-width: 66.666667%;
        flex-basis: 66.666667%;
      }

      .MuiGrid-grid-md-9 {
        flex-grow: 0;
        max-width: 75%;
        flex-basis: 75%;
      }

      .MuiGrid-grid-md-10 {
        flex-grow: 0;
        max-width: 83.333333%;
        flex-basis: 83.333333%;
      }

      .MuiGrid-grid-md-11 {
        flex-grow: 0;
        max-width: 91.666667%;
        flex-basis: 91.666667%;
      }

      .MuiGrid-grid-md-12 {
        flex-grow: 0;
        max-width: 100%;
        flex-basis: 100%;
      }
    }

    @media (min-width:1280px) {
      .MuiGrid-grid-lg-auto {
        flex-grow: 0;
        max-width: none;
        flex-basis: auto;
      }

      .MuiGrid-grid-lg-true {
        flex-grow: 1;
        max-width: 100%;
        flex-basis: 0;
      }

      .MuiGrid-grid-lg-1 {
        flex-grow: 0;
        max-width: 8.333333%;
        flex-basis: 8.333333%;
      }

      .MuiGrid-grid-lg-2 {
        flex-grow: 0;
        max-width: 16.666667%;
        flex-basis: 16.666667%;
      }

      .MuiGrid-grid-lg-3 {
        flex-grow: 0;
        max-width: 25%;
        flex-basis: 25%;
      }

      .MuiGrid-grid-lg-4 {
        flex-grow: 0;
        max-width: 33.333333%;
        flex-basis: 33.333333%;
      }

      .MuiGrid-grid-lg-5 {
        flex-grow: 0;
        max-width: 41.666667%;
        flex-basis: 41.666667%;
      }

      .MuiGrid-grid-lg-6 {
        flex-grow: 0;
        max-width: 50%;
        flex-basis: 50%;
      }

      .MuiGrid-grid-lg-7 {
        flex-grow: 0;
        max-width: 58.333333%;
        flex-basis: 58.333333%;
      }

      .MuiGrid-grid-lg-8 {
        flex-grow: 0;
        max-width: 66.666667%;
        flex-basis: 66.666667%;
      }

      .MuiGrid-grid-lg-9 {
        flex-grow: 0;
        max-width: 75%;
        flex-basis: 75%;
      }

      .MuiGrid-grid-lg-10 {
        flex-grow: 0;
        max-width: 83.333333%;
        flex-basis: 83.333333%;
      }

      .MuiGrid-grid-lg-11 {
        flex-grow: 0;
        max-width: 91.666667%;
        flex-basis: 91.666667%;
      }

      .MuiGrid-grid-lg-12 {
        flex-grow: 0;
        max-width: 100%;
        flex-basis: 100%;
      }
    }

    @media (min-width:1600px) {
      .MuiGrid-grid-xl-auto {
        flex-grow: 0;
        max-width: none;
        flex-basis: auto;
      }

      .MuiGrid-grid-xl-true {
        flex-grow: 1;
        max-width: 100%;
        flex-basis: 0;
      }

      .MuiGrid-grid-xl-1 {
        flex-grow: 0;
        max-width: 8.333333%;
        flex-basis: 8.333333%;
      }

      .MuiGrid-grid-xl-2 {
        flex-grow: 0;
        max-width: 16.666667%;
        flex-basis: 16.666667%;
      }

      .MuiGrid-grid-xl-3 {
        flex-grow: 0;
        max-width: 25%;
        flex-basis: 25%;
      }

      .MuiGrid-grid-xl-4 {
        flex-grow: 0;
        max-width: 33.333333%;
        flex-basis: 33.333333%;
      }

      .MuiGrid-grid-xl-5 {
        flex-grow: 0;
        max-width: 41.666667%;
        flex-basis: 41.666667%;
      }

      .MuiGrid-grid-xl-6 {
        flex-grow: 0;
        max-width: 50%;
        flex-basis: 50%;
      }

      .MuiGrid-grid-xl-7 {
        flex-grow: 0;
        max-width: 58.333333%;
        flex-basis: 58.333333%;
      }

      .MuiGrid-grid-xl-8 {
        flex-grow: 0;
        max-width: 66.666667%;
        flex-basis: 66.666667%;
      }

      .MuiGrid-grid-xl-9 {
        flex-grow: 0;
        max-width: 75%;
        flex-basis: 75%;
      }

      .MuiGrid-grid-xl-10 {
        flex-grow: 0;
        max-width: 83.333333%;
        flex-basis: 83.333333%;
      }

      .MuiGrid-grid-xl-11 {
        flex-grow: 0;
        max-width: 91.666667%;
        flex-basis: 91.666667%;
      }

      .MuiGrid-grid-xl-12 {
        flex-grow: 0;
        max-width: 100%;
        flex-basis: 100%;
      }
    }
  </style>
  <style data-jss="" data-meta="MuiButton">
    .MuiButton-root {
      color: #fff;
      padding: 6px 16px;
      font-size: 0.875rem;
      min-width: 64px;
      box-sizing: border-box;
      transition: background-color 400ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 400ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 400ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      font-family: 'Roboto', sans-serif;
      font-weight: 500;
      line-height: 1.75;
      border-radius: 4px;
      text-transform: uppercase;
    }

    .MuiButton-root:hover {
      text-decoration: none;
      background-color: rgba(255, 255, 255, 0.08);
    }

    .MuiButton-root.Mui-disabled {
      color: rgba(255, 255, 255, 0.3);
    }

    @media (hover: none) {
      .MuiButton-root:hover {
        background-color: transparent;
      }
    }

    .MuiButton-root:hover.Mui-disabled {
      background-color: transparent;
    }

    .MuiButton-label {
      width: 100%;
      display: inherit;
      align-items: inherit;
      justify-content: inherit;
    }

    .MuiButton-text {
      padding: 6px 8px;
    }

    .MuiButton-textPrimary {
      color: #fc0043;
    }

    .MuiButton-textPrimary:hover {
      background-color: rgba(252, 0, 67, 0.08);
    }

    @media (hover: none) {
      .MuiButton-textPrimary:hover {
        background-color: transparent;
      }
    }

    .MuiButton-textSecondary {
      color: #fc0043;
    }

    .MuiButton-textSecondary:hover {
      background-color: rgba(252, 0, 67, 0.08);
    }

    @media (hover: none) {
      .MuiButton-textSecondary:hover {
        background-color: transparent;
      }
    }

    .MuiButton-outlined {
      border: 1px solid rgba(255, 255, 255, 0.23);
      padding: 5px 15px;
    }

    .MuiButton-outlined.Mui-disabled {
      border: 1px solid rgba(255, 255, 255, 0.12);
    }

    .MuiButton-outlinedPrimary {
      color: #fc0043;
      border: 1px solid rgba(252, 0, 67, 0.5);
    }

    .MuiButton-outlinedPrimary:hover {
      border: 1px solid #fc0043;
      background-color: rgba(252, 0, 67, 0.08);
    }

    @media (hover: none) {
      .MuiButton-outlinedPrimary:hover {
        background-color: transparent;
      }
    }

    .MuiButton-outlinedSecondary {
      color: #fc0043;
      border: 1px solid rgba(252, 0, 67, 0.5);
    }

    .MuiButton-outlinedSecondary:hover {
      border: 1px solid #fc0043;
      background-color: rgba(252, 0, 67, 0.08);
    }

    .MuiButton-outlinedSecondary.Mui-disabled {
      border: 1px solid rgba(255, 255, 255, 0.3);
    }

    @media (hover: none) {
      .MuiButton-outlinedSecondary:hover {
        background-color: transparent;
      }
    }

    .MuiButton-contained {
      color: rgba(0, 0, 0, 0.87);
      box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
      background-color: #e0e0e0;
    }

    .MuiButton-contained:hover {
      box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
      background-color: #d5d5d5;
    }

    .MuiButton-contained.Mui-focusVisible {
      box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
    }

    .MuiButton-contained:active {
      box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);
    }

    .MuiButton-contained.Mui-disabled {
      color: rgba(255, 255, 255, 0.3);
      box-shadow: none;
      background-color: rgba(255, 255, 255, 0.12);
    }

    @media (hover: none) {
      .MuiButton-contained:hover {
        box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
        background-color: #e0e0e0;
      }
    }

    .MuiButton-contained:hover.Mui-disabled {
      background-color: rgba(255, 255, 255, 0.12);
    }

    .MuiButton-containedPrimary {
      color: #fff;
      background-color: #fc0043;
    }

    .MuiButton-containedPrimary:hover {
      background-color: rgb(176, 0, 46);
    }

    @media (hover: none) {
      .MuiButton-containedPrimary:hover {
        background-color: #fc0043;
      }
    }

    .MuiButton-containedSecondary {
      color: #fff;
      background-color: #fc0043;
    }

    .MuiButton-containedSecondary:hover {
      background-color: rgb(176, 0, 46);
    }

    @media (hover: none) {
      .MuiButton-containedSecondary:hover {
        background-color: #fc0043;
      }
    }

    .MuiButton-disableElevation {
      box-shadow: none;
    }

    .MuiButton-disableElevation:hover {
      box-shadow: none;
    }

    .MuiButton-disableElevation.Mui-focusVisible {
      box-shadow: none;
    }

    .MuiButton-disableElevation:active {
      box-shadow: none;
    }

    .MuiButton-disableElevation.Mui-disabled {
      box-shadow: none;
    }

    .MuiButton-colorInherit {
      color: inherit;
      border-color: currentColor;
    }

    .MuiButton-textSizeSmall {
      padding: 4px 5px;
      font-size: 0.8125rem;
    }

    .MuiButton-textSizeLarge {
      padding: 8px 11px;
      font-size: 0.9375rem;
    }

    .MuiButton-outlinedSizeSmall {
      padding: 3px 9px;
      font-size: 0.8125rem;
    }

    .MuiButton-outlinedSizeLarge {
      padding: 7px 21px;
      font-size: 0.9375rem;
    }

    .MuiButton-containedSizeSmall {
      padding: 4px 10px;
      font-size: 0.8125rem;
    }

    .MuiButton-containedSizeLarge {
      padding: 8px 22px;
      font-size: 0.9375rem;
    }

    .MuiButton-fullWidth {
      width: 100%;
    }

    .MuiButton-startIcon {
      display: inherit;
      margin-left: -4px;
      margin-right: 8px;
    }

    .MuiButton-startIcon.MuiButton-iconSizeSmall {
      margin-left: -2px;
    }

    .MuiButton-endIcon {
      display: inherit;
      margin-left: 8px;
      margin-right: -4px;
    }

    .MuiButton-endIcon.MuiButton-iconSizeSmall {
      margin-right: -2px;
    }

    .MuiButton-iconSizeSmall>*:first-child {
      font-size: 18px;
    }

    .MuiButton-iconSizeMedium>*:first-child {
      font-size: 20px;
    }

    .MuiButton-iconSizeLarge>*:first-child {
      font-size: 22px;
    }
  </style>
  <style data-jss="" data-meta="makeStyles">
    .jss9 {
      overflow-x: hidden;
    }

    @media (min-width:600px) {
      .jss9 {
        overflow-x: initial;
      }
    }

    .jss10 {
      z-index: 1201;
    }

    .jss11 {
      width: 0;
      margin-left: 260px;
    }

    @media (min-width:600px) {
      .jss11 {
        width: 100%;
      }
    }

    .jss12 {
      margin-right: 36px;
    }

    @media (max-width:959.95px) {
      .jss12 {
        margin-right: 10px;
      }
    }

    .jss13 {
      width: 260px;
      flex-shrink: 0;
      white-space: nowrap;
    }

    .jss14 {
      background-color: #212121;
    }

    .jss15 {
      display: flex;
      padding: 0 8px;
      min-height: 56px;
      align-items: center;
      justify-content: flex-end;
    }

    @media (min-width:0px) and (orientation: landscape) {
      .jss15 {
        min-height: 48px;
      }
    }

    @media (min-width:600px) {
      .jss15 {
        min-height: 64px;
      }
    }

    .jss16 {
      padding: 24px;
      flex-grow: 1;
    }

    .jss17 {
      display: flex;
      flex-grow: 1;
    }

    .jss18 {
      height: 46px;
    }

    .jss19 {
      width: 100vw;
      transition: none;
    }

    @media (min-width:600px) {
      .jss19 {
        width: 260px;
      }
    }

    .jss19:hover {
      background-color: #333333;
    }

    .jss20 {
      font-size: .8rem !important;
    }

    .jss21 {
      color: #9e9e9e;
      display: contents;
    }

    .jss21 svg {
      color: #9e9e9e;
    }

    .jss22 {
      width: 81px;
      display: flex;
      align-items: center;
      flex-direction: column;
      justify-content: center;
    }

    .jss23 {
      color: #9e9e9e;
      display: none;
      font-size: 0.7rem;
      text-align: center;
      white-space: pre-wrap;
    }

    .jss24 {
      background-color: #333333;
    }

    .jss24 .jss23 {
      color: #fff;
    }

    .jss24 .jss21 {
      color: #fff;
    }

    .jss24 .jss21 svg {
      color: #fff;
    }

    .jss25 {
      display: flex;
    }

    .jss26:hover {
      background-color: #333333;
    }

    .jss27 {
      width: 100vw;
      overflow-x: hidden;
    }

    .jss27 .jss20 {
      white-space: pre-wrap;
    }

    .jss27 .jss22 {
      width: 48px;
      max-width: 48px;
      min-width: 48px;
      align-items: initial;
    }

    @media (min-width:600px) {
      .jss27 {
        width: 260px;
      }
    }

    .jss27 .jss24 .jss19 {
      background-color: #333333;
    }

    .jss28 {
      width: 0;
      overflow-x: hidden;
    }

    .jss28 .jss19 {
      padding: 8px 0;
    }

    .jss28 .jss22 {
      padding: 8px 0px;
    }

    .jss28 .jss23 {
      display: block;
    }

    .jss28 .jss20 {
      display: none;
    }

    @media (min-width:600px) {
      .jss28 {
        width: 81px;
      }
    }

    @media (max-width:599.95px) {
      .jss28 {
        border-right: 0;
      }
    }

    .jss29 {
      width: 250px;
    }

    .jss30 {
      width: auto;
    }

    .jss31 {
      margin: 16px;
    }

    .jss32 {
      display: none;
    }

    .jss33 {
      display: block;
    }
  </style>
  <style data-jss="" data-meta="MuiInputBase">
    @-webkit-keyframes mui-auto-fill {}

    @-webkit-keyframes mui-auto-fill-cancel {}

    .MuiInputBase-root {
      color: #fff;
      cursor: text;
      display: inline-flex;
      position: relative;
      font-size: 1rem;
      box-sizing: border-box;
      align-items: center;
      font-family: 'Source Sans Pro', sans-serif;
      font-weight: 400;
      line-height: 1.1876em;
    }

    .MuiInputBase-root.Mui-disabled {
      color: rgba(255, 255, 255, 0.5);
      cursor: default;
    }

    .MuiInputBase-multiline {
      padding: 6px 0 7px;
    }

    .MuiInputBase-multiline.MuiInputBase-marginDense {
      padding-top: 3px;
    }

    .MuiInputBase-fullWidth {
      width: 100%;
    }

    .MuiInputBase-input {
      font: inherit;
      color: currentColor;
      width: 100%;
      border: 0;
      height: 1.1876em;
      margin: 0;
      display: block;
      padding: 6px 0 7px;
      min-width: 0;
      background: none;
      box-sizing: content-box;
      animation-name: mui-auto-fill-cancel;
      letter-spacing: inherit;
      animation-duration: 10ms;
      -webkit-tap-highlight-color: transparent;
    }

    .MuiInputBase-input::-webkit-input-placeholder {
      color: currentColor;
      opacity: 0.5;
      transition: opacity 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    }

    .MuiInputBase-input::-moz-placeholder {
      color: currentColor;
      opacity: 0.5;
      transition: opacity 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    }

    .MuiInputBase-input:-ms-input-placeholder {
      color: currentColor;
      opacity: 0.5;
      transition: opacity 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    }

    .MuiInputBase-input::-ms-input-placeholder {
      color: currentColor;
      opacity: 0.5;
      transition: opacity 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    }

    .MuiInputBase-input:focus {
      outline: 0;
    }

    .MuiInputBase-input:invalid {
      box-shadow: none;
    }

    .MuiInputBase-input::-webkit-search-decoration {
      -webkit-appearance: none;
    }

    .MuiInputBase-input.Mui-disabled {
      opacity: 1;
    }

    .MuiInputBase-input:-webkit-autofill {
      animation-name: mui-auto-fill;
      animation-duration: 5000s;
    }

    label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input::-webkit-input-placeholder {
      opacity: 0 !important;
    }

    label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input::-moz-placeholder {
      opacity: 0 !important;
    }

    label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input:-ms-input-placeholder {
      opacity: 0 !important;
    }

    label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input::-ms-input-placeholder {
      opacity: 0 !important;
    }

    label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input:focus::-webkit-input-placeholder {
      opacity: 0.5;
    }

    label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input:focus::-moz-placeholder {
      opacity: 0.5;
    }

    label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input:focus:-ms-input-placeholder {
      opacity: 0.5;
    }

    label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input:focus::-ms-input-placeholder {
      opacity: 0.5;
    }

    .MuiInputBase-inputMarginDense {
      padding-top: 3px;
    }

    .MuiInputBase-inputMultiline {
      height: auto;
      resize: none;
      padding: 0;
    }

    .MuiInputBase-inputTypeSearch {
      -moz-appearance: textfield;
      -webkit-appearance: textfield;
    }
  </style>
  <style data-jss="" data-meta="MuiInput">
    .MuiInput-root {
      position: relative;
    }

    label+.MuiInput-formControl {
      margin-top: 16px;
    }

    .MuiInput-colorSecondary.MuiInput-underline:after {
      border-bottom-color: #fc0043;
    }

    .MuiInput-underline:after {
      left: 0;
      right: 0;
      bottom: 0;
      content: "";
      position: absolute;
      transform: scaleX(0);
      transition: transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
      border-bottom: 2px solid #fc0043;
      pointer-events: none;
    }

    .MuiInput-underline.Mui-focused:after {
      transform: scaleX(1);
    }

    .MuiInput-underline.Mui-error:after {
      transform: scaleX(1);
      border-bottom-color: #f44336;
    }

    .MuiInput-underline:before {
      left: 0;
      right: 0;
      bottom: 0;
      content: "\00a0";
      position: absolute;
      transition: border-bottom-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      border-bottom: 1px solid rgba(255, 255, 255, 0.7);
      pointer-events: none;
    }

    .MuiInput-underline:hover:not(.Mui-disabled):before {
      border-bottom: 2px solid #fff;
    }

    .MuiInput-underline.Mui-disabled:before {
      border-bottom-style: dotted;
    }

    @media (hover: none) {
      .MuiInput-underline:hover:not(.Mui-disabled):before {
        border-bottom: 1px solid rgba(255, 255, 255, 0.7);
      }
    }
  </style>
  <style data-jss="" data-meta="MuiFormLabel">
    .MuiFormLabel-root {
      color: rgba(255, 255, 255, 0.7);
      padding: 0;
      font-size: 1rem;
      font-family: 'Source Sans Pro', sans-serif;
      font-weight: 400;
      line-height: 1;
    }

    .MuiFormLabel-root.Mui-focused {
      color: #FFF;
    }

    .MuiFormLabel-root.Mui-disabled {
      color: rgba(255, 255, 255, 0.5);
    }

    .MuiFormLabel-root.Mui-error {
      color: #f44336;
    }

    .MuiFormLabel-colorSecondary.Mui-focused {
      color: #fc0043;
    }

    .MuiFormLabel-asterisk.Mui-error {
      color: #f44336;
    }
  </style>
  <style data-jss="" data-meta="MuiInputLabel">
    .MuiInputLabel-root {
      display: block;
      transform-origin: top left;
    }

    .MuiInputLabel-formControl {
      top: 0;
      left: 0;
      position: absolute;
      transform: translate(0, 24px) scale(1);
    }

    .MuiInputLabel-marginDense {
      transform: translate(0, 21px) scale(1);
    }

    .MuiInputLabel-shrink {
      transform: translate(0, 1.5px) scale(0.75);
      transform-origin: top left;
    }

    .MuiInputLabel-animated {
      transition: color 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms, transform 300ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
    }

    .MuiInputLabel-filled {
      z-index: 1;
      transform: translate(12px, 20px) scale(1);
      pointer-events: none;
    }

    .MuiInputLabel-filled.MuiInputLabel-marginDense {
      transform: translate(12px, 17px) scale(1);
    }

    .MuiInputLabel-filled.MuiInputLabel-shrink {
      transform: translate(12px, 10px) scale(0.75);
    }

    .MuiInputLabel-filled.MuiInputLabel-shrink.MuiInputLabel-marginDense {
      transform: translate(12px, 7px) scale(0.75);
    }

    .MuiInputLabel-outlined {
      z-index: 1;
      transform: translate(14px, 20px) scale(1);
      pointer-events: none;
    }

    .MuiInputLabel-outlined.MuiInputLabel-marginDense {
      transform: translate(14px, 12px) scale(1);
    }

    .MuiInputLabel-outlined.MuiInputLabel-shrink {
      transform: translate(14px, -6px) scale(0.75);
    }
  </style>
  <style data-jss="" data-meta="MuiFormControl">
    .MuiFormControl-root {
      border: 0;
      margin: 0;
      display: inline-flex;
      padding: 0;
      position: relative;
      min-width: 0;
      flex-direction: column;
      vertical-align: top;
    }

    .MuiFormControl-marginNormal {
      margin-top: 16px;
      margin-bottom: 8px;
    }

    .MuiFormControl-marginDense {
      margin-top: 8px;
      margin-bottom: 4px;
    }

    .MuiFormControl-fullWidth {
      width: 100%;
    }
  </style>
  <style data-jss="" data-meta="MuiSelect">
    .MuiSelect-select {
      cursor: pointer;
      min-width: 16px;
      user-select: none;
      border-radius: 0;
      -moz-appearance: none;
      -webkit-appearance: none;
    }

    .MuiSelect-select:focus {
      border-radius: 0;
      background-color: rgba(255, 255, 255, 0.05);
    }

    .MuiSelect-select::-ms-expand {
      display: none;
    }

    .MuiSelect-select.Mui-disabled {
      cursor: default;
    }

    .MuiSelect-select[multiple] {
      height: auto;
    }

    .MuiSelect-select:not([multiple]) option,
    .MuiSelect-select:not([multiple]) optgroup {
      background-color: #333333;
    }

    .MuiSelect-select.MuiSelect-select {
      padding-right: 24px;
    }

    .MuiSelect-filled.MuiSelect-filled {
      padding-right: 32px;
    }

    .MuiSelect-outlined {
      border-radius: 4px;
    }

    .MuiSelect-outlined.MuiSelect-outlined {
      padding-right: 32px;
    }

    .MuiSelect-selectMenu {
      height: auto;
      overflow: hidden;
      min-height: 1.1876em;
      white-space: nowrap;
      text-overflow: ellipsis;
    }

    .MuiSelect-icon {
      top: calc(50% - 12px);
      color: #fff;
      right: 0;
      position: absolute;
      pointer-events: none;
    }

    .MuiSelect-icon.Mui-disabled {
      color: rgba(255, 255, 255, 0.3);
    }

    .MuiSelect-iconOpen {
      transform: rotate(180deg);
    }

    .MuiSelect-iconFilled {
      right: 7px;
    }

    .MuiSelect-iconOutlined {
      right: 7px;
    }

    .MuiSelect-nativeInput {
      left: 0;
      width: 100%;
      bottom: 0;
      opacity: 0;
      position: absolute;
      pointer-events: none;
    }
  </style>
  <style data-jss="" data-meta="makeStyles">
    .jss46 {
      top: 50%;
      left: 50%;
      width: 600px;
      position: absolute;
      transform: translate(-50%, -50%);
    }

    @media (max-width:959.95px) {
      .jss46 {
        width: 100%;
      }
    }

    .jss47:first-child {
      margin-right: 8px;
    }
  </style>
  <style data-jss="" data-meta="makeStyles">
    .jss48 {
      top: 50%;
      left: 50%;
      width: 600px;
      position: absolute;
      transform: translate(-50%, -50%);
    }

    @media (max-width:959.95px) {
      .jss48 {
        width: 100%;
      }
    }

    .jss49:first-child {
      margin-right: 8px;
    }
  </style>
  <style data-jss="" data-meta="makeStyles">
    .jss5 {
      width: 100%;
      height: 100%;
      display: flex;
    }

    .jss6 {
      width: 100%;
      padding: 96px 56px 24px;
      box-sizing: border-box;
    }

    @media (max-width:599.95px) {
      .jss6 {
        padding: 80px 12px 24px;
      }
    }

    .jss7 {
      width: 100%;
      height: 100%;
      transform: translateZ(0);
      overflow-y: auto;
      -webkit-transform: translateZ(0);
    }

    @media (max-width:959.95px) {
      .jss7 {
        overflow-y: scroll;
        scrollbar-width: none;
        -ms-overflow-style: none;
      }
    }

    .jss8 {
      isolation: isolate;
    }

    *::-webkit-scrollbar {
      width: 8px;
    }

    @media (max-width:959.95px) {
      *::-webkit-scrollbar {
        width: 0;
        height: 0;
      }
    }

    *::-webkit-scrollbar-track {
      margin-top: 64px;
      background-color: #333333;
      -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.00);
    }

    @media (max-width:599.95px) {
      *::-webkit-scrollbar-track {
        margin-top: 56px;
      }
    }

    *::-webkit-scrollbar-thumb {
      background-color: #fc0043;
    }
  </style>
  <style data-jss="" data-meta="makeStyles">
    .jss69 {
      position: relative;
    }

    .jss72 {
      left: 96px;
      bottom: 0;
      position: fixed;
    }

    @media (max-width:959.95px) {
      .jss72 {
        width: calc(50% - 8px);
        position: initial;
        margin-top: 8px;
        margin-right: 8px;
      }
    }

    .jss73 {
      right: 96px;
      bottom: 0;
      position: fixed;
    }

    @media (max-width:959.95px) {
      .jss73 {
        width: calc(50% - 8px);
        position: initial;
        margin-top: 8px;
        margin-left: 8px;
      }
    }

    .jss74 {
      display: flex;
      margin-top: 16px;
      justify-content: center;
    }

    .jss74 svg {
      margin-right: 8px;
    }

    .jss75 {
      margin-right: 8px;
    }

    .jss76 {
      margin-left: 8px;
    }

    .jss77 {
      display: flex;
      align-items: center;
      flex-direction: column;
      justify-content: center;
    }

    .jss78 {
      display: flex;
      position: relative;
      justify-content: center;
    }

    .jss79 {
      height: auto;
      max-width: 100%;
    }

    .jss80 {
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      display: flex;
      position: absolute;
    }

    .jss81 {
      width: 50%;
      cursor: pointer;
    }
  </style>
  <style data-jss="" data-meta="makeStyles">
    .jss83 {
      margin-bottom: 16px;
    }

    .jss84 {
      padding: 16px;
      position: relative;
      box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
      margin-bottom: 16px;
      background-color: #333333;
    }

    .jss85 {
      top: 8px;
      right: 8px;
      position: absolute;
    }
  </style>
  <script charset="utf-8" src="/static/js/1.3dc491bc.chunk.js"></script>
  <script charset="utf-8" src="/static/js/7.e76da0f2.chunk.js"></script>
  <script charset="utf-8" src="/static/js/14.1f47213f.chunk.js"></script>
  <meta name="title" content="Tate no Yuusha no Nariagari 3. Bölüm Türkçe Oku - AnimeWho? Manga" data-rh="true">
  <meta name="description" content="Tate no Yuusha no Nariagari 3. Bölüm Türkçe Oku ve İndir - AnimeWho? Manga Oku"
    data-rh="true">
  <meta name="keywords"
    content="anime izle, manga oku, hd anime, anime, manga, turkanime, türk anime, anime indir, yabancı animeler, tr anime, tr manga, türkçe anime izle, türkçe manga, türkçe anime, türkçe manga oku, fansub, fansubs, animewho fansub, animewho, popüler animeler, kaliteli anime, bluray anime, 4k anime, 8k anime, hd anime, türkçe indir ve izle, toplu indir"
    data-rh="true">
  <meta property="og:type" content="website" data-rh="true">
  <meta property="og:url"
    content="https://animewho.comhttps://animewho.com/ceviriler/manga/tate-no-yuusha-no-nariagari/oku" data-rh="true">
  <meta property="og:title" content="Tate no Yuusha no Nariagari 3. Bölüm Türkçe Oku - AnimeWho? Manga" data-rh="true">
  <meta property="og:description"
    content="Tate no Yuusha no Nariagari 3. Bölüm Türkçe Oku ve İndir - AnimeWho? Manga Oku" data-rh="true">
  <meta property="og:image" content="https://vistapointe.net/images/tate-no-yuusha-no-nariagari-wallpaper-10.jpg"
    data-rh="true">
  <meta property="twitter:card" content="summary" data-rh="true">
  <meta property="twitter:url"
    content="https://animewho.comhttps://animewho.com/ceviriler/manga/tate-no-yuusha-no-nariagari/oku" data-rh="true">
  <meta property="twitter:title" content="Tate no Yuusha no Nariagari 3. Bölüm Türkçe Oku - AnimeWho? Manga"
    data-rh="true">
  <meta property="twitter:description"
    content="Tate no Yuusha no Nariagari 3. Bölüm Türkçe Oku ve İndir - AnimeWho? Manga Oku" data-rh="true">
  <meta property="twitter:image" content="https://vistapointe.net/images/tate-no-yuusha-no-nariagari-wallpaper-10.jpg"
    data-rh="true">
</head>

<body><noscript>
    <style>
      p {
        color: red;
        font-family: Roboto, sans-serif;
        font-weight: 700;
        font-size: 36px;
        width: 100vw;
        height: 90vh;
        display: flex;
        align-items: center;
        justify-content: center
      }

      a {
        margin-left: 10px
      }
    </style>
    <p>Bu sayfayı görüntülemek için JavaScript'e ihtiyacınız var. Daha iyi bir browser indirmek için <a
        href="http://outdatedbrowser.com/en" target="_blank">buraya tıklayın.</a></p><a href="https://angelbets.com/"
      title="deneme bonusu veren siteler" target="_blank">deneme bonusu veren siteler</a><a
      href="https://hdfreeizle.com/izle/erotik-film/" title="erotik filmler" target="_blank">erotik filmler</a><a
      href="http://www.tyescorts.com" title="ankara escort" target="_blank">ankara escort</a><a
      href="https://takipciodasi.com/" title="instagram takipçi satın al">instagram takipçi satın al</a>
    <div style="display:none"></div>
  </noscript>
  <div id="app-mount">
    <div class="jss5">
      <div class="jss9">
        <header
          class="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorDefault jss10 mui-fixed MuiPaper-elevation4">
          <div class="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"><button
              class="MuiButtonBase-root MuiIconButton-root jss12 MuiIconButton-colorInherit MuiIconButton-edgeStart"
              tabindex="0" type="button" aria-label="Open/close drawer"><span class="MuiIconButton-label"><svg
                  class="MuiSvgIcon-root" focusable="false" viewBox="0 0 24 24" aria-hidden="true">
                  <path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path>
                </svg></span><span class="MuiTouchRipple-root"></span></button>
            <div class="jss17"><a href="/" style="display: flex;"><img title="Site logo" loading="lazy" class="jss18"
                  src="/static/media/fullLogo.d1e15cb6.png" alt="Site Logo"></a></div>
            <div class="jss25"><button class="MuiButtonBase-root MuiIconButton-root" tabindex="0" type="button"><span
                  class="MuiIconButton-label"><svg class="MuiSvgIcon-root" focusable="false" viewBox="0 0 24 24"
                    aria-hidden="true" style="height: 25px;">
                    <path
                      d="M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79 1.42-1.41zM4 10.5H1v2h3v-2zm9-9.95h-2V3.5h2V.55zm7.45 3.91l-1.41-1.41-1.79 1.79 1.41 1.41 1.79-1.79zm-3.21 13.7l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4zM20 10.5v2h3v-2h-3zm-8-5c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm-1 16.95h2V19.5h-2v2.95zm-7.45-3.91l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8z">
                    </path>
                  </svg></span><span class="MuiTouchRipple-root"></span></button><button
                class="MuiButtonBase-root MuiIconButton-root" tabindex="0" type="button" aria-label="account menus"
                aria-controls="menu-appbar" aria-haspopup="true"><span class="MuiIconButton-label"><svg
                    class="MuiSvgIcon-root" focusable="false" viewBox="0 0 24 24" aria-hidden="true">
                    <path
                      d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z">
                    </path>
                  </svg></span><span class="MuiTouchRipple-root"></span></button></div>
          </div>
        </header>
        <div class="MuiDrawer-root MuiDrawer-docked jss13 jss28">
          <div
            class="MuiPaper-root MuiDrawer-paper jss14 jss28 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft MuiPaper-elevation0">
            <div class="jss15"><button class="MuiButtonBase-root MuiIconButton-root" tabindex="0" type="button"><span
                  class="MuiIconButton-label"><svg class="MuiSvgIcon-root" focusable="false" viewBox="0 0 24 24"
                    aria-hidden="true">
                    <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"></path>
                  </svg></span><span class="MuiTouchRipple-root"></span></button></div>
            <hr class="MuiDivider-root">
            <ul class="MuiList-root MuiList-padding"><a href="/">
                <div class="MuiButtonBase-root MuiListItem-root jss19 MuiListItem-gutters MuiListItem-button"
                  tabindex="0" role="button" aria-disabled="false">
                  <div class="MuiBox-root jss60 jss22">
                    <div class="MuiListItemIcon-root jss21"><svg class="MuiSvgIcon-root" focusable="false"
                        viewBox="0 0 24 24" aria-hidden="true">
                        <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"></path>
                      </svg></div>
                    <h6 class="MuiTypography-root jss23 MuiTypography-subtitle2">Ana Sayfa</h6>
                  </div>
                  <div class="MuiListItemText-root jss20"><span class="MuiTypography-root MuiTypography-body2">Ana
                      Sayfa</span></div><span class="MuiTouchRipple-root"></span>
                </div>
              </a><a href="/ara">
                <div class="MuiButtonBase-root MuiListItem-root jss19 MuiListItem-gutters MuiListItem-button"
                  tabindex="0" role="button" aria-disabled="false">
                  <div class="MuiBox-root jss61 jss22">
                    <div class="MuiListItemIcon-root jss21"><svg class="MuiSvgIcon-root" focusable="false"
                        viewBox="0 0 24 24" aria-hidden="true">
                        <path
                          d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z">
                        </path>
                      </svg></div>
                    <h6 class="MuiTypography-root jss23 MuiTypography-subtitle2">Ara</h6>
                  </div>
                  <div class="MuiListItemText-root jss20"><span class="MuiTypography-root MuiTypography-body2">İçerik
                      Ara</span></div><span class="MuiTouchRipple-root"></span>
                </div>
              </a><a href="/sss">
                <div class="MuiButtonBase-root MuiListItem-root jss19 MuiListItem-gutters MuiListItem-button"
                  tabindex="0" role="button" aria-disabled="false">
                  <div class="MuiBox-root jss62 jss22">
                    <div class="MuiListItemIcon-root jss21"><svg class="MuiSvgIcon-root" focusable="false"
                        viewBox="0 0 24 24" aria-hidden="true">
                        <path
                          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z">
                        </path>
                      </svg></div>
                    <h6 class="MuiTypography-root jss23 MuiTypography-subtitle2">SSS</h6>
                  </div>
                  <div class="MuiListItemText-root jss20"><span class="MuiTypography-root MuiTypography-body2">Sıkça
                      Sorulan Sorular</span></div><span class="MuiTouchRipple-root"></span>
                </div>
              </a><a href="/ekip-alimlari">
                <div class="MuiButtonBase-root MuiListItem-root jss19 MuiListItem-gutters MuiListItem-button"
                  tabindex="0" role="button" aria-disabled="false">
                  <div class="MuiBox-root jss63 jss22">
                    <div class="MuiListItemIcon-root jss21">
                      <h2>EA</h2>
                    </div>
                    <h6 class="MuiTypography-root jss23 MuiTypography-subtitle2">Ekip Alımları</h6>
                  </div>
                  <div class="MuiListItemText-root jss20"><span class="MuiTypography-root MuiTypography-body2">Ekip
                      Alımları</span></div><span class="MuiTouchRipple-root"></span>
                </div>
              </a><a href="/destek-ol">
                <div class="MuiButtonBase-root MuiListItem-root jss19 MuiListItem-gutters MuiListItem-button"
                  tabindex="0" role="button" aria-disabled="false">
                  <div class="MuiBox-root jss64 jss22">
                    <div class="MuiListItemIcon-root jss21"><svg class="MuiSvgIcon-root" focusable="false"
                        viewBox="0 0 24 24" aria-hidden="true">
                        <path d="M4 10h3v7H4zM10.5 10h3v7h-3zM2 19h20v3H2zM17 10h3v7h-3zM12 1L2 6v2h20V6z"></path>
                      </svg></div>
                    <h6 class="MuiTypography-root jss23 MuiTypography-subtitle2">Destek Ol</h6>
                  </div>
                  <div class="MuiListItemText-root jss20"><span class="MuiTypography-root MuiTypography-body2">Destek
                      Ol</span></div><span class="MuiTouchRipple-root"></span>
                </div>
              </a></ul>
            <hr class="MuiDivider-root">
            <ul class="MuiList-root MuiList-padding"><a
                href="https://play.google.com/store/apps/details?id=com.animewho.mobil" target="_blank"
                rel="noopener noreferrer" class="jss26">
                <div class="MuiButtonBase-root MuiListItem-root jss19 MuiListItem-gutters MuiListItem-button"
                  tabindex="0" role="button" aria-disabled="false" style="background-color: inherit;">
                  <div class="MuiBox-root jss65 jss22">
                    <div class="MuiListItemIcon-root jss21"><svg aria-hidden="true" focusable="false" data-prefix="fab"
                        data-icon="google-play" class="svg-inline--fa fa-google-play fa-w-16 fa-2x " role="img"
                        xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                        <path fill="currentColor"
                          d="M325.3 234.3L104.6 13l280.8 161.2-60.1 60.1zM47 0C34 6.8 25.3 19.2 25.3 35.3v441.3c0 16.1 8.7 28.5 21.7 35.3l256.6-256L47 0zm425.2 225.6l-58.9-34.1-65.7 64.5 65.7 64.5 60.1-34.1c18-14.3 18-46.5-1.2-60.8zM104.6 499l280.8-161.2-60.1-60.1L104.6 499z">
                        </path>
                      </svg></div>
                    <h6 class="MuiTypography-root jss23 MuiTypography-subtitle2">Anime İzle</h6>
                  </div>
                  <div class="MuiListItemText-root jss20"><span class="MuiTypography-root MuiTypography-body2">Anime ve
                      Manga Mobil Uygulama!</span></div><span class="MuiTouchRipple-root"></span>
                </div>
              </a><a href="https://discordapp.com/invite/kXkg3pY" target="_blank" rel="noopener noreferrer"
                class="jss26">
                <div class="MuiButtonBase-root MuiListItem-root jss19 MuiListItem-gutters MuiListItem-button"
                  tabindex="0" role="button" aria-disabled="false" style="background-color: inherit;">
                  <div class="MuiBox-root jss66 jss22">
                    <div class="MuiListItemIcon-root jss21"><svg aria-hidden="true" focusable="false" data-prefix="fab"
                        data-icon="discord" class="svg-inline--fa fa-discord fa-w-14 fa-2x " role="img"
                        xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
                        <path fill="currentColor"
                          d="M297.216 243.2c0 15.616-11.52 28.416-26.112 28.416-14.336 0-26.112-12.8-26.112-28.416s11.52-28.416 26.112-28.416c14.592 0 26.112 12.8 26.112 28.416zm-119.552-28.416c-14.592 0-26.112 12.8-26.112 28.416s11.776 28.416 26.112 28.416c14.592 0 26.112-12.8 26.112-28.416.256-15.616-11.52-28.416-26.112-28.416zM448 52.736V512c-64.494-56.994-43.868-38.128-118.784-107.776l13.568 47.36H52.48C23.552 451.584 0 428.032 0 398.848V52.736C0 23.552 23.552 0 52.48 0h343.04C424.448 0 448 23.552 448 52.736zm-72.96 242.688c0-82.432-36.864-149.248-36.864-149.248-36.864-27.648-71.936-26.88-71.936-26.88l-3.584 4.096c43.52 13.312 63.744 32.512 63.744 32.512-60.811-33.329-132.244-33.335-191.232-7.424-9.472 4.352-15.104 7.424-15.104 7.424s21.248-20.224 67.328-33.536l-2.56-3.072s-35.072-.768-71.936 26.88c0 0-36.864 66.816-36.864 149.248 0 0 21.504 37.12 78.08 38.912 0 0 9.472-11.52 17.152-21.248-32.512-9.728-44.8-30.208-44.8-30.208 3.766 2.636 9.976 6.053 10.496 6.4 43.21 24.198 104.588 32.126 159.744 8.96 8.96-3.328 18.944-8.192 29.44-15.104 0 0-12.8 20.992-46.336 30.464 7.68 9.728 16.896 20.736 16.896 20.736 56.576-1.792 78.336-38.912 78.336-38.912z">
                        </path>
                      </svg></div>
                    <h6 class="MuiTypography-root jss23 MuiTypography-subtitle2">Discord</h6>
                  </div>
                  <div class="MuiListItemText-root jss20"><span class="MuiTypography-root MuiTypography-body2">Discord
                      Sunucumuza Katılın!</span></div><span class="MuiTouchRipple-root"></span>
                </div>
              </a><a href="https://animehaber.com" target="_blank" rel="noopener noreferrer" class="jss26">
                <div class="MuiButtonBase-root MuiListItem-root jss19 MuiListItem-gutters MuiListItem-button"
                  tabindex="0" role="button" aria-disabled="false" style="background-color: inherit;">
                  <div class="MuiBox-root jss67 jss22">
                    <div class="MuiListItemIcon-root jss21"><svg aria-hidden="true" focusable="false" data-prefix="far"
                        data-icon="newspaper" class="svg-inline--fa fa-newspaper fa-w-18 fa-2x " role="img"
                        xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512">
                        <path fill="currentColor"
                          d="M552 64H112c-20.858 0-38.643 13.377-45.248 32H24c-13.255 0-24 10.745-24 24v272c0 30.928 25.072 56 56 56h496c13.255 0 24-10.745 24-24V88c0-13.255-10.745-24-24-24zM48 392V144h16v248c0 4.411-3.589 8-8 8s-8-3.589-8-8zm480 8H111.422c.374-2.614.578-5.283.578-8V112h416v288zM172 280h136c6.627 0 12-5.373 12-12v-96c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v96c0 6.627 5.373 12 12 12zm28-80h80v40h-80v-40zm-40 140v-24c0-6.627 5.373-12 12-12h136c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H172c-6.627 0-12-5.373-12-12zm192 0v-24c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H364c-6.627 0-12-5.373-12-12zm0-144v-24c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H364c-6.627 0-12-5.373-12-12zm0 72v-24c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H364c-6.627 0-12-5.373-12-12z">
                        </path>
                      </svg></div>
                    <h6 class="MuiTypography-root jss23 MuiTypography-subtitle2">AnimeHaber</h6>
                  </div>
                  <div class="MuiListItemText-root jss20"><span
                      class="MuiTypography-root MuiTypography-body2">AnimeHaber - Haber Yaz</span></div><span
                    class="MuiTouchRipple-root"></span>
                </div>
              </a><a href="https://archive.animewho.com" target="_blank" rel="noopener noreferrer" class="jss26">
                <div class="MuiButtonBase-root MuiListItem-root jss19 MuiListItem-gutters MuiListItem-button"
                  tabindex="0" role="button" aria-disabled="false" style="background-color: inherit;">
                  <div class="MuiBox-root jss68 jss22">
                    <div class="MuiListItemIcon-root jss21"><svg aria-hidden="true" focusable="false" data-prefix="fas"
                        data-icon="inbox" class="svg-inline--fa fa-inbox fa-w-18 fa-2x " role="img"
                        xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512">
                        <path fill="currentColor"
                          d="M567.938 243.908L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L8.062 243.908A47.994 47.994 0 0 0 0 270.533V400c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V270.533a47.994 47.994 0 0 0-8.062-26.625zM162.252 128h251.497l85.333 128H376l-32 64H232l-32-64H76.918l85.334-128z">
                        </path>
                      </svg></div>
                    <h6 class="MuiTypography-root jss23 MuiTypography-subtitle2">Arşiv</h6>
                  </div>
                  <div class="MuiListItemText-root jss20"><span class="MuiTypography-root MuiTypography-body2">Arşiv -
                      AnimeWho?</span></div><span class="MuiTouchRipple-root"></span>
                </div>
              </a></ul>
            <hr class="MuiDivider-root">
            <div class="jss32">
              <footer>
                <div class="jss42">
                  <div class="jss43"><a href="https://github.com/Hime-Dev" rel="noopener noreferrer" target="_blank"
                      class="jss45">
                      <h6 class="MuiTypography-root MuiTypography-h6">Prenses</h6>
                    </a><a href="https://discord.com/invite/kXkg3pY" rel="noopener noreferrer" target="_blank"
                      class="jss45">
                      <h6 class="MuiTypography-root MuiTypography-h6">Discord</h6>
                    </a><a href="https://www.instagram.com/animewho.com_official/?hl=tr" rel="noopener noreferrer"
                      target="_blank" class="jss45">
                      <h6 class="MuiTypography-root MuiTypography-h6">Instagram</h6>
                    </a><a href="https://www.youtube.com/channel/UC9fIdZHdj0enrs12Efr4p-A?view_as=subscriber"
                      rel="noopener noreferrer" target="_blank" class="jss45">
                      <h6 class="MuiTypography-root MuiTypography-h6">Youtube</h6>
                    </a><a href="https://twitter.com/animewho1" rel="noopener noreferrer" target="_blank" class="jss45">
                      <h6 class="MuiTypography-root MuiTypography-h6">Twitter</h6>
                    </a><a href="https://github.com/mavis-bot" rel="noopener noreferrer" target="_blank" class="jss45">
                      <h6 class="MuiTypography-root MuiTypography-h6">Mavis-Bot</h6>
                    </a><a href="http://istanbuleskort.net/" rel="noopener noreferrer" target="_blank" class="jss45">
                      <h6 class="MuiTypography-root MuiTypography-h6">escort istanbul</h6>
                    </a><a href="https://hdfreeizle.com/izle/erotik-film/" rel="noopener noreferrer" target="_blank"
                      class="jss45">
                      <h6 class="MuiTypography-root MuiTypography-h6">erotik filmler</h6>
                    </a><a href="http://www.tyescorts.com" rel="noopener noreferrer" target="_blank" class="jss45">
                      <h6 class="MuiTypography-root MuiTypography-h6">ankara escort</h6>
                    </a><a href="https://takipciodasi.com/" rel="noopener noreferrer" target="_blank" class="jss45">
                      <h6 class="MuiTypography-root MuiTypography-h6">instagram takipçi satın al</h6>
                    </a></div>
                  <h6 class="MuiTypography-root jss44 MuiTypography-subtitle1"><a href="https://forfansubs.github.io/"
                      rel="noopener noreferrer" target="_blank">ForFansubs v3.4.1<br>Release name: v4soon™</a><br><a
                      href="https://aybertocarlos.github.io/" rel="noopener noreferrer" target="_blank">aybertocarlos ©
                      2023</a></h6>
                </div>
              </footer>
            </div>
          </div>
        </div>
      </div>
      <div class="jss7" id="scroll-node">
        <div class="jss6">
          <section class="jss8">
            <div id="malsync-data" type="manga" issyncpage="true" name="Tate no Yuusha no Nariagari" episode="3"
              series_id="tate-no-yuusha-no-nariagari" mal_url="https://myanimelist.net/manga/67615"
              overview_link="https://animewho.com/ceviriler/manga/tate-no-yuusha-no-nariagari"></div>
            <div class="MuiGrid-root jss69 MuiGrid-container MuiGrid-spacing-xs-2 MuiGrid-justify-xs-center">
              <div class="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"></div>
              <div class="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12">
                <div class="MuiBox-root jss86 jss70">
                  <div class="MuiFormControl-root MuiFormControl-fullWidth"><label
                      class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
                      data-shrink="true" for="episode-selector">Okumak istediğiniz bölümü seçin</label>
                    <div
                      class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl">
                      <div
                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
                        tabindex="0" role="button" aria-haspopup="listbox"
                        aria-labelledby="mui-component-select-episode" id="mui-component-select-episode">3. Bölüm:
                      </div><input name="episode" aria-hidden="true" tabindex="-1" class="MuiSelect-nativeInput"
                        id="episode-selector" value="3"><svg class="MuiSvgIcon-root MuiSelect-icon" focusable="false"
                        viewBox="0 0 24 24" aria-hidden="true">
                        <path d="M7 10l5 5 5-5z"></path>
                      </svg>
                    </div>
                  </div><button
                    class="MuiButtonBase-root MuiButton-root MuiButton-outlined jss72 MuiButton-outlinedSizeLarge MuiButton-sizeLarge Mui-disabled Mui-disabled"
                    tabindex="-1" type="button" disabled=""><span class="MuiButton-label"><svg class="MuiSvgIcon-root"
                        focusable="false" viewBox="0 0 24 24" aria-hidden="true">
                        <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"></path>
                      </svg></span></button><button
                    class="MuiButtonBase-root MuiButton-root MuiButton-outlined jss73 MuiButton-outlinedSizeLarge MuiButton-sizeLarge"
                    tabindex="0" type="button"><span class="MuiButton-label"><svg class="MuiSvgIcon-root"
                        focusable="false" viewBox="0 0 24 24" aria-hidden="true">
                        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"></path>
                      </svg></span><span class="MuiTouchRipple-root"></span></button>
                  <div class="jss74"><button class="MuiButtonBase-root MuiButton-root MuiButton-outlined jss75"
                      tabindex="0" type="button"><span class="MuiButton-label"><svg class="MuiSvgIcon-root"
                          focusable="false" viewBox="0 0 24 24" aria-hidden="true">
                          <path
                            d="M1 5h2v14H1zm4 0h2v14H5zm17 0H10c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM11 17l2.5-3.15L15.29 16l2.5-3.22L21 17H11z">
                          </path>
                        </svg>Webtoon</span><span class="MuiTouchRipple-root"></span></button><a
                      href="/ceviriler/manga/tate-no-yuusha-no-nariagari"><button
                        class="MuiButtonBase-root MuiButton-root MuiButton-outlined jss76" tabindex="0"
                        type="button"><span class="MuiButton-label">Mangaya git</span><span
                          class="MuiTouchRipple-root"></span></button></a></div>
                </div>
              </div>
              <div class="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-9">
                <div class="jss78"><img class="jss79"
                    src="https://animewho.com/api/resimler/manga/tate-no-yuusha-no-nariagari/oku/3/0 - Cover.jpg"
                    alt="Tate no Yuusha no Nariagari 3. Bölüm 1. Sayfa">
                  <div class="jss80">
                    <div class="jss81" title="Önceki Sayfa"></div>
                    <div class="jss81" title="Sonraki Sayfa"></div>
                  </div>
                </div>
              </div>
              <div class="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12">
                <div class="MuiBox-root jss87">
                  <div class="MuiBox-root jss88"><button class="MuiButtonBase-root MuiButton-root MuiButton-outlined"
                      tabindex="0" type="button"><span class="MuiButton-label">
                        <h6 class="MuiTypography-root MuiTypography-h6">Yorumları aç</h6>
                      </span><span class="MuiTouchRipple-root"></span></button></div>
                </div>
              </div>
            </div>
          </section>
        </div>
      </div>
      <div class="Toastify"></div>
    </div>
  </div>
  <script>!function (e) { function r(r) { for (var n, a, c = r[0], i = r[1], f = r[2], s = 0, p = []; s < c.length; s++)a = c[s], Object.prototype.hasOwnProperty.call(o, a) && o[a] && p.push(o[a][0]), o[a] = 0; for (n in i) Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n]); for (l && l(r); p.length;)p.shift()(); return u.push.apply(u, f || []), t() } function t() { for (var e, r = 0; r < u.length; r++) { for (var t = u[r], n = !0, c = 1; c < t.length; c++) { var i = t[c]; 0 !== o[i] && (n = !1) } n && (u.splice(r--, 1), e = a(a.s = t[0])) } return e } var n = {}, o = { 5: 0 }, u = []; function a(r) { if (n[r]) return n[r].exports; var t = n[r] = { i: r, l: !1, exports: {} }; return e[r].call(t.exports, t, t.exports, a), t.l = !0, t.exports } a.e = function (e) { var r = [], t = o[e]; if (0 !== t) if (t) r.push(t[2]); else { var n = new Promise((function (r, n) { t = o[e] = [r, n] })); r.push(t[2] = n); var u, c = document.createElement("script"); c.charset = "utf-8", c.timeout = 120, a.nc && c.setAttribute("nonce", a.nc), c.src = function (e) { return a.p + "static/js/" + ({}[e] || e) + "." + { 0: "4e92acd8", 1: "3dc491bc", 2: "0eab87cc", 3: "b54b993d", 7: "e76da0f2", 8: "1a83b80e", 9: "44ecc7da", 10: "293fee49", 11: "1213ca03", 12: "2bb909cc", 13: "2fb870d8", 14: "1f47213f", 15: "ced63505", 16: "feb37652", 17: "1ce767dd" }[e] + ".chunk.js" }(e); var i = new Error; u = function (r) { c.onerror = c.onload = null, clearTimeout(f); var t = o[e]; if (0 !== t) { if (t) { var n = r && ("load" === r.type ? "missing" : r.type), u = r && r.target && r.target.src; i.message = "Loading chunk " + e + " failed.\n(" + n + ": " + u + ")", i.name = "ChunkLoadError", i.type = n, i.request = u, t[1](i) } o[e] = void 0 } }; var f = setTimeout((function () { u({ type: "timeout", target: c }) }), 12e4); c.onerror = c.onload = u, document.head.appendChild(c) } return Promise.all(r) }, a.m = e, a.c = n, a.d = function (e, r, t) { a.o(e, r) || Object.defineProperty(e, r, { enumerable: !0, get: t }) }, a.r = function (e) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) }, a.t = function (e, r) { if (1 & r && (e = a(e)), 8 & r) return e; if (4 & r && "object" == typeof e && e && e.__esModule) return e; var t = Object.create(null); if (a.r(t), Object.defineProperty(t, "default", { enumerable: !0, value: e }), 2 & r && "string" != typeof e) for (var n in e) a.d(t, n, function (r) { return e[r] }.bind(null, n)); return t }, a.n = function (e) { var r = e && e.__esModule ? function () { return e.default } : function () { return e }; return a.d(r, "a", r), r }, a.o = function (e, r) { return Object.prototype.hasOwnProperty.call(e, r) }, a.p = "/", a.oe = function (e) { throw console.error(e), e }; var c = this.webpackJsonpforfansubsfront = this.webpackJsonpforfansubsfront || [], i = c.push.bind(c); c.push = r, c = c.slice(); for (var f = 0; f < c.length; f++)r(c[f]); var l = i; t() }([])</script>
  <script src="/static/js/6.b5c17872.chunk.js"></script>
  <script src="/static/js/main.ef621de0.chunk.js"></script>
  <div role="presentation" class="MuiPopover-root" id="menu-appbar" aria-hidden="true"
    style="position: fixed; z-index: 1300; inset: 0px; visibility: hidden;">
    <div tabindex="0" data-test="sentinelStart"></div>
    <div class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded" tabindex="-1"
      style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;">
      <ul class="MuiList-root MuiMenu-list MuiList-padding" role="menu" tabindex="-1">
        <div tabindex="0">
          <li
            class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
            tabindex="-1" role="menuitem" aria-disabled="false">Giriş yap<span class="MuiTouchRipple-root"></span></li>
          <li
            class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
            tabindex="-1" role="menuitem" aria-disabled="false">Kayıt ol<span class="MuiTouchRipple-root"></span></li>
        </div>
      </ul>
    </div>
    <div tabindex="0" data-test="sentinelEnd"></div>
  </div>
</body>

</html>
