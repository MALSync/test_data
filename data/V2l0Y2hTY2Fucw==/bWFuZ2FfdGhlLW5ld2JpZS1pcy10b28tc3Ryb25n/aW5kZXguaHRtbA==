<!DOCTYPE html><html lang="en-US" prefix="og: https://ogp.me/ns#"><head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="viewport" content="width=device-width">
        <meta name="theme-color" content="#0a0a0a">
    <meta name="msapplication-navbutton-color" content="#0a0a0a">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="#0a0a0a">
	<meta name="galaksion-domain-verification" content="ddb4903295c4352a4adf2901c9e5b507c86e53743bed2c9ee3934cd27ed12793">

    <!-- Set the page title for the homepage -->
    <title>The Newbie is Too Strong - Witch Scans</title>

    <!-- Meta description for SEO -->
    
    <!-- Add JSON-LD Schema for Witch Scans Series -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "WebSite",
      "name": "Witch Scans",
      "url": "https://witchscans.com/",
      "description": "Witch Scans delivers quality translations of manga, manhwa, and manhua. Enjoy expertly localized content and the latest chapters, all in one place.",
      "publisher": {
        "@type": "Organization",
        "name": "Witch Scans",
        "url": "https://witchscans.com/"
      },
      "genre": ["Manga", "Manhwa", "Manhua"],
      "inLanguage": ["en", "ar"],
      "author": {
        "@type": "Organization",
        "name": "Witch Scans"
      },
      "isAccessibleForFree": "True",
      "hasPart": [
        {
          "@type": "CreativeWork",
          "name": "Manga Series Title",
          "genre": "Manga",
          "url": "https://witchscans.com/manga/",
          "inLanguage": ["en", "ar"]
        },
        {
          "@type": "CreativeWork",
          "name": "Manhwa Series Title",
          "genre": "Manhwa",
          "url": "https://witchscans.com/manga/",
          "inLanguage": ["en", "ar"]
        },
        {
          "@type": "CreativeWork",
          "name": "Manhua Series Title",
          "genre": "Manhua",
          "url": "https://witchscans.com/manga",
          "inLanguage": ["en", "ar"]
        }
      ]
    }
    </script>

    	<style>img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }</style>
	
<!-- Search Engine Optimization by Rank Math - https://rankmath.com/ -->
<title>The Newbie is Too Strong - Witch Scans</title>
<meta name="description" content="JaeJu (which means “skill” in Korean) grew up without parents in an orphanage skillfully, just like his name suggests. One day, he heard that the orphanage">
<meta name="robots" content="follow, index, max-snippet:-1, max-video-preview:-1, max-image-preview:large">
<link rel="canonical" href="https://witchscans.com/manga/the-newbie-is-too-strong/">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="article">
<meta property="og:title" content="The Newbie is Too Strong - Witch Scans">
<meta property="og:description" content="JaeJu (which means “skill” in Korean) grew up without parents in an orphanage skillfully, just like his name suggests. One day, he heard that the orphanage">
<meta property="og:url" content="https://witchscans.com/manga/the-newbie-is-too-strong/">
<meta property="og:site_name" content="Witch Scans">
<meta property="og:updated_time" content="2025-09-22T10:08:30+00:00">
<meta property="og:image" content="https://i0.wp.com/witchscans.com/wp-content/uploads/2025/08/images-1.jpeg">
<meta property="og:image:secure_url" content="https://i0.wp.com/witchscans.com/wp-content/uploads/2025/08/images-1.jpeg">
<meta property="og:image:width" content="477">
<meta property="og:image:height" content="643">
<meta property="og:image:alt" content="The Newbie is Too Strong">
<meta property="og:image:type" content="image/jpeg">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:title" content="The Newbie is Too Strong - Witch Scans">
<meta name="twitter:description" content="JaeJu (which means “skill” in Korean) grew up without parents in an orphanage skillfully, just like his name suggests. One day, he heard that the orphanage">
<meta name="twitter:image" content="https://i0.wp.com/witchscans.com/wp-content/uploads/2025/08/images-1.jpeg">
<script type="application/ld+json" class="rank-math-schema">{"@context":"https://schema.org","@graph":[{"@type":"BreadcrumbList","@id":"https://witchscans.com/manga/the-newbie-is-too-strong/#breadcrumb","itemListElement":[{"@type":"ListItem","position":"1","item":{"@id":"https://witchscans.com","name":"Home"}},{"@type":"ListItem","position":"2","item":{"@id":"https://witchscans.com/manga/","name":"Manga"}},{"@type":"ListItem","position":"3","item":{"@id":"https://witchscans.com/manga/the-newbie-is-too-strong/","name":"The Newbie is Too Strong"}}]}]}</script>
<!-- /Rank Math WordPress SEO plugin -->

<link rel="dns-prefetch" href="//cdn.jsdelivr.net">
<link rel="dns-prefetch" href="//www.googletagmanager.com">
<link rel="alternate" type="application/rss+xml" title="Witch Scans » The Newbie is Too Strong Comments Feed" href="https://witchscans.com/manga/the-newbie-is-too-strong/feed/">
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/16.0.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/16.0.1\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/witchscans.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.8.2"}};
/*! This file is auto-generated */
!function(s,n){var o,i,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),a=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===a[t]})}function u(e,t){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);for(var n=e.getImageData(16,16,1,1),a=0;a<n.data.length;a++)if(0!==n.data[a])return!1;return!0}function f(e,t,n,a){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\udde8\ud83c\uddf6","\ud83c\udde8\u200b\ud83c\uddf6")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!a(e,"\ud83e\udedf")}return!1}function g(e,t,n,a){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):s.createElement("canvas"),o=r.getContext("2d",{willReadFrequently:!0}),i=(o.textBaseline="top",o.font="600 32px Arial",{});return e.forEach(function(e){i[e]=t(o,e,n,a)}),i}function t(e){var t=s.createElement("script");t.src=e,t.defer=!0,s.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",i=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){s.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+g.toString()+"("+[JSON.stringify(i),f.toString(),p.toString(),u.toString()].join(",")+"));",a=new Blob([e],{type:"text/javascript"}),r=new Worker(URL.createObjectURL(a),{name:"wpTestEmojiSupports"});return void(r.onmessage=function(e){c(n=e.data),r.terminate(),t(n)})}catch(e){}c(n=g(i,f,p,u))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<link rel="stylesheet" id="menu-icon-font-awesome-css" href="https://witchscans.com/wp-content/plugins/menu-icons/css/fontawesome/css/all.min.css?ver=5.15.4" type="text/css" media="all">
<link rel="stylesheet" id="menu-icons-extra-css" href="https://witchscans.com/wp-content/plugins/menu-icons/css/extra.min.css?ver=0.13.19" type="text/css" media="all">
<style id="wp-emoji-styles-inline-css" type="text/css">

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<style id="classic-theme-styles-inline-css" type="text/css">
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<link rel="stylesheet" id="sb-style-css" href="https://witchscans.com/wp-content/plugins/Support%20Button/assets/css/support-button.css?ver=6.8.2" type="text/css" media="all">
<link rel="stylesheet" id="bootstrap5-css-css" href="https://witchscans.com/wp-content/plugins/lock%20chapters/assets/bootstrap-5.3.3/css/bootstrap.min.css?ver=5.3.3.2" type="text/css" media="all">
<link rel="stylesheet" id="parent-style-css" href="https://witchscans.com/wp-content/themes/mangareader/style.css?ver=2.2.0" type="text/css" media="all">
<link rel="stylesheet" id="child-style-css" href="https://witchscans.com/wp-content/themes/mangareader-child/style.css?ver=1.0.2" type="text/css" media="all">
<link rel="stylesheet" id="style-css" href="https://witchscans.com/wp-content/themes/mangareader-child/style.css?ver=2.2.0" type="text/css" media="all">
<link rel="stylesheet" id="ts-lightstyle-css" href="https://witchscans.com/wp-content/themes/mangareader/assets/css/lightmode.css?ver=2.2.0" type="text/css" media="all">
<link rel="stylesheet" id="wpdiscuz-frontend-css-css" href="https://witchscans.com/wp-content/plugins/wpdiscuz/themes/default/style.css?ver=7.6.33" type="text/css" media="all">
<style id="wpdiscuz-frontend-css-inline-css" type="text/css">
 #wpdcom .wpd-blog-administrator .wpd-comment-label{color:#ffffff;background-color:#00B38F;border:none}#wpdcom .wpd-blog-administrator .wpd-comment-author, #wpdcom .wpd-blog-administrator .wpd-comment-author a{color:#00B38F}#wpdcom.wpd-layout-1 .wpd-comment .wpd-blog-administrator .wpd-avatar img{border-color:#00B38F}#wpdcom.wpd-layout-2 .wpd-comment.wpd-reply .wpd-comment-wrap.wpd-blog-administrator{border-left:3px solid #00B38F}#wpdcom.wpd-layout-2 .wpd-comment .wpd-blog-administrator .wpd-avatar img{border-bottom-color:#00B38F}#wpdcom.wpd-layout-3 .wpd-blog-administrator .wpd-comment-subheader{border-top:1px dashed #00B38F}#wpdcom.wpd-layout-3 .wpd-reply .wpd-blog-administrator .wpd-comment-right{border-left:1px solid #00B38F}#wpdcom .wpd-blog-editor .wpd-comment-label{color:#ffffff;background-color:#00B38F;border:none}#wpdcom .wpd-blog-editor .wpd-comment-author, #wpdcom .wpd-blog-editor .wpd-comment-author a{color:#00B38F}#wpdcom.wpd-layout-1 .wpd-comment .wpd-blog-editor .wpd-avatar img{border-color:#00B38F}#wpdcom.wpd-layout-2 .wpd-comment.wpd-reply .wpd-comment-wrap.wpd-blog-editor{border-left:3px solid #00B38F}#wpdcom.wpd-layout-2 .wpd-comment .wpd-blog-editor .wpd-avatar img{border-bottom-color:#00B38F}#wpdcom.wpd-layout-3 .wpd-blog-editor .wpd-comment-subheader{border-top:1px dashed #00B38F}#wpdcom.wpd-layout-3 .wpd-reply .wpd-blog-editor .wpd-comment-right{border-left:1px solid #00B38F}#wpdcom .wpd-blog-author .wpd-comment-label{color:#ffffff;background-color:#00B38F;border:none}#wpdcom .wpd-blog-author .wpd-comment-author, #wpdcom .wpd-blog-author .wpd-comment-author a{color:#00B38F}#wpdcom.wpd-layout-1 .wpd-comment .wpd-blog-author .wpd-avatar img{border-color:#00B38F}#wpdcom.wpd-layout-2 .wpd-comment .wpd-blog-author .wpd-avatar img{border-bottom-color:#00B38F}#wpdcom.wpd-layout-3 .wpd-blog-author .wpd-comment-subheader{border-top:1px dashed #00B38F}#wpdcom.wpd-layout-3 .wpd-reply .wpd-blog-author .wpd-comment-right{border-left:1px solid #00B38F}#wpdcom .wpd-blog-contributor .wpd-comment-label{color:#ffffff;background-color:#00B38F;border:none}#wpdcom .wpd-blog-contributor .wpd-comment-author, #wpdcom .wpd-blog-contributor .wpd-comment-author a{color:#00B38F}#wpdcom.wpd-layout-1 .wpd-comment .wpd-blog-contributor .wpd-avatar img{border-color:#00B38F}#wpdcom.wpd-layout-2 .wpd-comment .wpd-blog-contributor .wpd-avatar img{border-bottom-color:#00B38F}#wpdcom.wpd-layout-3 .wpd-blog-contributor .wpd-comment-subheader{border-top:1px dashed #00B38F}#wpdcom.wpd-layout-3 .wpd-reply .wpd-blog-contributor .wpd-comment-right{border-left:1px solid #00B38F}#wpdcom .wpd-blog-subscriber .wpd-comment-label{color:#ffffff;background-color:#00B38F;border:none}#wpdcom .wpd-blog-subscriber .wpd-comment-author, #wpdcom .wpd-blog-subscriber .wpd-comment-author a{color:#00B38F}#wpdcom.wpd-layout-2 .wpd-comment .wpd-blog-subscriber .wpd-avatar img{border-bottom-color:#00B38F}#wpdcom.wpd-layout-3 .wpd-blog-subscriber .wpd-comment-subheader{border-top:1px dashed #00B38F}#wpdcom .wpd-blog-user_vip .wpd-comment-label{color:#ffffff;background-color:#00B38F;border:none}#wpdcom .wpd-blog-user_vip .wpd-comment-author, #wpdcom .wpd-blog-user_vip .wpd-comment-author a{color:#00B38F}#wpdcom.wpd-layout-1 .wpd-comment .wpd-blog-user_vip .wpd-avatar img{border-color:#00B38F}#wpdcom.wpd-layout-2 .wpd-comment .wpd-blog-user_vip .wpd-avatar img{border-bottom-color:#00B38F}#wpdcom.wpd-layout-3 .wpd-blog-user_vip .wpd-comment-subheader{border-top:1px dashed #00B38F}#wpdcom.wpd-layout-3 .wpd-reply .wpd-blog-user_vip .wpd-comment-right{border-left:1px solid #00B38F}#wpdcom .wpd-blog-post_author .wpd-comment-label{color:#ffffff;background-color:#00B38F;border:none}#wpdcom .wpd-blog-post_author .wpd-comment-author, #wpdcom .wpd-blog-post_author .wpd-comment-author a{color:#00B38F}#wpdcom .wpd-blog-post_author .wpd-avatar img{border-color:#00B38F}#wpdcom.wpd-layout-1 .wpd-comment .wpd-blog-post_author .wpd-avatar img{border-color:#00B38F}#wpdcom.wpd-layout-2 .wpd-comment.wpd-reply .wpd-comment-wrap.wpd-blog-post_author{border-left:3px solid #00B38F}#wpdcom.wpd-layout-2 .wpd-comment .wpd-blog-post_author .wpd-avatar img{border-bottom-color:#00B38F}#wpdcom.wpd-layout-3 .wpd-blog-post_author .wpd-comment-subheader{border-top:1px dashed #00B38F}#wpdcom.wpd-layout-3 .wpd-reply .wpd-blog-post_author .wpd-comment-right{border-left:1px solid #00B38F}#wpdcom .wpd-blog-guest .wpd-comment-label{color:#ffffff;background-color:#00B38F;border:none}#wpdcom .wpd-blog-guest .wpd-comment-author, #wpdcom .wpd-blog-guest .wpd-comment-author a{color:#00B38F}#wpdcom.wpd-layout-3 .wpd-blog-guest .wpd-comment-subheader{border-top:1px dashed #00B38F}#comments, #respond, .comments-area, #wpdcom.wpd-dark{background:#111111;color:#CCCCCC}#wpdcom .ql-editor > *{color:#000000}#wpdcom .ql-editor::before{opacity:1;color:#DDDDDD}#wpdcom .ql-toolbar{border:1px solid #D1D1D1;border-top:none}#wpdcom .ql-container{background:#999999;border:1px solid #D1D1D1;border-bottom:none}#wpdcom .wpd-form-row .wpdiscuz-item input[type="text"], #wpdcom .wpd-form-row .wpdiscuz-item input[type="email"], #wpdcom .wpd-form-row .wpdiscuz-item input[type="url"], #wpdcom .wpd-form-row .wpdiscuz-item input[type="color"], #wpdcom .wpd-form-row .wpdiscuz-item input[type="date"], #wpdcom .wpd-form-row .wpdiscuz-item input[type="datetime"], #wpdcom .wpd-form-row .wpdiscuz-item input[type="datetime-local"], #wpdcom .wpd-form-row .wpdiscuz-item input[type="month"], #wpdcom .wpd-form-row .wpdiscuz-item input[type="number"], #wpdcom .wpd-form-row .wpdiscuz-item input[type="time"], #wpdcom textarea, #wpdcom select{background:#999999;border:1px solid #D1D1D1;color:#000000}#wpdcom.wpd-dark .wpdiscuz-item.wpd-field-select select.wpdiscuz_select, #wpdcom.wpd-dark select{background:#999999!important;border:1px solid #D1D1D1!important;color:#000000!important}#wpdcom .wpd-form-row .wpdiscuz-item textarea{border:1px solid #D1D1D1}#wpdcom input::placeholder, #wpdcom textarea::placeholder, #wpdcom input::-moz-placeholder, #wpdcom textarea::-webkit-input-placeholder{opacity:1;color:#DDDDDD}#wpdcom .wpd-comment-text{color:#CCCCCC}.lity-wrap .wpd-item a{color:#666}.lity-wrap .wpd-item a:hover{color:#222}.wpd-inline-shortcode.wpd-active{background-color:#666}#wpdcom .wpd-thread-head .wpd-thread-info{border-bottom:2px solid #00B38F}#wpdcom .wpd-thread-head .wpd-thread-info.wpd-reviews-tab svg{fill:#00B38F}#wpdcom .wpd-thread-head .wpdiscuz-user-settings{border-bottom:2px solid #00B38F}#wpdcom .wpd-thread-head .wpdiscuz-user-settings:hover{color:#00B38F}#wpdcom .wpd-comment .wpd-follow-link:hover{color:#00B38F}#wpdcom .wpd-comment-status .wpd-sticky{color:#00B38F}#wpdcom .wpd-thread-filter .wpdf-active{color:#00B38F;border-bottom-color:#00B38F}#wpdcom .wpd-comment-info-bar{border:1px dashed #33c3a6;background:#e6f8f4}#wpdcom .wpd-comment-info-bar .wpd-current-view i{color:#00B38F}#wpdcom .wpd-filter-view-all:hover{background:#00B38F}#wpdcom .wpdiscuz-item .wpdiscuz-rating > label{color:#DDDDDD}#wpdcom .wpdiscuz-item .wpdiscuz-rating:not(:checked) > label:hover, .wpdiscuz-rating:not(:checked) > label:hover ~ label{}#wpdcom .wpdiscuz-item .wpdiscuz-rating > input ~ label:hover, #wpdcom .wpdiscuz-item .wpdiscuz-rating > input:not(:checked) ~ label:hover ~ label, #wpdcom .wpdiscuz-item .wpdiscuz-rating > input:not(:checked) ~ label:hover ~ label{color:#FFED85}#wpdcom .wpdiscuz-item .wpdiscuz-rating > input:checked ~ label:hover, #wpdcom .wpdiscuz-item .wpdiscuz-rating > input:checked ~ label:hover, #wpdcom .wpdiscuz-item .wpdiscuz-rating > label:hover ~ input:checked ~ label, #wpdcom .wpdiscuz-item .wpdiscuz-rating > input:checked + label:hover ~ label, #wpdcom .wpdiscuz-item .wpdiscuz-rating > input:checked ~ label:hover ~ label, .wpd-custom-field .wcf-active-star, #wpdcom .wpdiscuz-item .wpdiscuz-rating > input:checked ~ label{color:#FFD700}#wpd-post-rating .wpd-rating-wrap .wpd-rating-stars svg .wpd-star{fill:#DDDDDD}#wpd-post-rating .wpd-rating-wrap .wpd-rating-stars svg .wpd-active{fill:#FFD700}#wpd-post-rating .wpd-rating-wrap .wpd-rate-starts svg .wpd-star{fill:#DDDDDD}#wpd-post-rating .wpd-rating-wrap .wpd-rate-starts:hover svg .wpd-star{fill:#FFED85}#wpd-post-rating.wpd-not-rated .wpd-rating-wrap .wpd-rate-starts svg:hover ~ svg .wpd-star{fill:#DDDDDD}.wpdiscuz-post-rating-wrap .wpd-rating .wpd-rating-wrap .wpd-rating-stars svg .wpd-star{fill:#DDDDDD}.wpdiscuz-post-rating-wrap .wpd-rating .wpd-rating-wrap .wpd-rating-stars svg .wpd-active{fill:#FFD700}#wpdcom .wpd-comment .wpd-follow-active{color:#ff7a00}#wpdcom .page-numbers{color:#555;border:#555 1px solid}#wpdcom span.current{background:#555}#wpdcom.wpd-layout-1 .wpd-new-loaded-comment > .wpd-comment-wrap > .wpd-comment-right{background:#FFFAD6}#wpdcom.wpd-layout-2 .wpd-new-loaded-comment.wpd-comment > .wpd-comment-wrap > .wpd-comment-right{background:#FFFAD6}#wpdcom.wpd-layout-2 .wpd-new-loaded-comment.wpd-comment.wpd-reply > .wpd-comment-wrap > .wpd-comment-right{background:transparent}#wpdcom.wpd-layout-2 .wpd-new-loaded-comment.wpd-comment.wpd-reply > .wpd-comment-wrap{background:#FFFAD6}#wpdcom.wpd-layout-3 .wpd-new-loaded-comment.wpd-comment > .wpd-comment-wrap > .wpd-comment-right{background:#FFFAD6}#wpdcom .wpd-follow:hover i, #wpdcom .wpd-unfollow:hover i, #wpdcom .wpd-comment .wpd-follow-active:hover i{color:#00B38F}#wpdcom .wpdiscuz-readmore{cursor:pointer;color:#00B38F}.wpd-custom-field .wcf-pasiv-star, #wpcomm .wpdiscuz-item .wpdiscuz-rating > label{color:#DDDDDD}.wpd-wrapper .wpd-list-item.wpd-active{border-top:3px solid #00B38F}#wpdcom.wpd-layout-2 .wpd-comment.wpd-reply.wpd-unapproved-comment .wpd-comment-wrap{border-left:3px solid #FFFAD6}#wpdcom.wpd-layout-3 .wpd-comment.wpd-reply.wpd-unapproved-comment .wpd-comment-right{border-left:1px solid #FFFAD6}#wpdcom .wpd-prim-button{background-color:#07B290;color:#FFFFFF}#wpdcom .wpd_label__check i.wpdicon-on{color:#07B290;border:1px solid #83d9c8}#wpd-bubble-wrapper #wpd-bubble-all-comments-count{color:#1DB99A}#wpd-bubble-wrapper > div{background-color:#1DB99A}#wpd-bubble-wrapper > #wpd-bubble #wpd-bubble-add-message{background-color:#1DB99A}#wpd-bubble-wrapper > #wpd-bubble #wpd-bubble-add-message::before{border-left-color:#1DB99A;border-right-color:#1DB99A}#wpd-bubble-wrapper.wpd-right-corner > #wpd-bubble #wpd-bubble-add-message::before{border-left-color:#1DB99A;border-right-color:#1DB99A}.wpd-inline-icon-wrapper path.wpd-inline-icon-first{fill:#1DB99A}.wpd-inline-icon-count{background-color:#1DB99A}.wpd-inline-icon-count::before{border-right-color:#1DB99A}.wpd-inline-form-wrapper::before{border-bottom-color:#1DB99A}.wpd-inline-form-question{background-color:#1DB99A}.wpd-inline-form{background-color:#1DB99A}.wpd-last-inline-comments-wrapper{border-color:#1DB99A}.wpd-last-inline-comments-wrapper::before{border-bottom-color:#1DB99A}.wpd-last-inline-comments-wrapper .wpd-view-all-inline-comments{background:#1DB99A}.wpd-last-inline-comments-wrapper .wpd-view-all-inline-comments:hover,.wpd-last-inline-comments-wrapper .wpd-view-all-inline-comments:active,.wpd-last-inline-comments-wrapper .wpd-view-all-inline-comments:focus{background-color:#1DB99A}#wpdcom .ql-snow .ql-tooltip[data-mode="link"]::before{content:"Enter link:"}#wpdcom .ql-snow .ql-tooltip.ql-editing a.ql-action::after{content:"Save"}.comments-area{width:auto}
</style>
<link rel="stylesheet" id="wpdiscuz-fa-css" href="https://witchscans.com/wp-content/plugins/wpdiscuz/assets/third-party/font-awesome-5.13.0/css/fa.min.css?ver=7.6.33" type="text/css" media="all">
<link rel="stylesheet" id="wpdiscuz-combo-css-css" href="https://witchscans.com/wp-content/plugins/wpdiscuz/assets/css/wpdiscuz-combo.min.css?ver=6.8.2" type="text/css" media="all">
<link rel="stylesheet" id="um_modal-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/css/um-modal.min.css?ver=2.10.5" type="text/css" media="all">
<link rel="stylesheet" id="um_ui-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/jquery-ui/jquery-ui.min.css?ver=1.13.2" type="text/css" media="all">
<link rel="stylesheet" id="um_tipsy-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/tipsy/tipsy.min.css?ver=1.0.0a" type="text/css" media="all">
<link rel="stylesheet" id="um_raty-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/raty/um-raty.min.css?ver=2.6.0" type="text/css" media="all">
<link rel="stylesheet" id="select2-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/select2/select2.min.css?ver=4.0.13" type="text/css" media="all">
<link rel="stylesheet" id="um_fileupload-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/css/um-fileupload.min.css?ver=2.10.5" type="text/css" media="all">
<link rel="stylesheet" id="um_confirm-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/um-confirm/um-confirm.min.css?ver=1.0" type="text/css" media="all">
<link rel="stylesheet" id="um_datetime-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/pickadate/default.min.css?ver=3.6.2" type="text/css" media="all">
<link rel="stylesheet" id="um_datetime_date-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/pickadate/default.date.min.css?ver=3.6.2" type="text/css" media="all">
<link rel="stylesheet" id="um_datetime_time-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/pickadate/default.time.min.css?ver=3.6.2" type="text/css" media="all">
<link rel="stylesheet" id="um_fonticons_ii-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/legacy/fonticons/fonticons-ii.min.css?ver=2.10.5" type="text/css" media="all">
<link rel="stylesheet" id="um_fonticons_fa-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/legacy/fonticons/fonticons-fa.min.css?ver=2.10.5" type="text/css" media="all">
<link rel="stylesheet" id="um_fontawesome-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/css/um-fontawesome.min.css?ver=6.5.2" type="text/css" media="all">
<link rel="stylesheet" id="um_common-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/css/common.min.css?ver=2.10.5" type="text/css" media="all">
<link rel="stylesheet" id="um_responsive-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/css/um-responsive.min.css?ver=2.10.5" type="text/css" media="all">
<link rel="stylesheet" id="um_styles-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/css/um-styles.min.css?ver=2.10.5" type="text/css" media="all">
<link rel="stylesheet" id="um_crop-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/cropper/cropper.min.css?ver=1.6.1" type="text/css" media="all">
<link rel="stylesheet" id="um_profile-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/css/um-profile.min.css?ver=2.10.5" type="text/css" media="all">
<link rel="stylesheet" id="um_account-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/css/um-account.min.css?ver=2.10.5" type="text/css" media="all">
<link rel="stylesheet" id="um_misc-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/css/um-misc.min.css?ver=2.10.5" type="text/css" media="all">
<link rel="stylesheet" id="um_default_css-css" href="https://witchscans.com/wp-content/plugins/ultimate-member/assets/css/um-old-default.min.css?ver=2.10.5" type="text/css" media="all">
	<script>
		var baseurl = "https://witchscans.com/";
		var ajaxurl = "https://witchscans.com/wp-admin/admin-ajax.php";
		 
		var max_bookmark = 50;
		 
		var max_history = 10;
		var defaultTheme = "darkmode";
	</script>
<script type="text/javascript" src="https://witchscans.com/wp-content/themes/mangareader/assets/js/jquery.min.js?ver=3.5.1" id="jquery-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/themes/mangareader/assets/js/bookmark.js?ver=2.2.0" id="bookmarks_script-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/themes/mangareader/assets/js/series-history.js?ver=2.2.0" id="series_history_script-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/themes/mangareader/assets/js/history.js?ver=2.2.0" id="ts-history_script-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/themes/mangareader/assets/js/function.js?ver=2.2.0" id="tsfn_scripts-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/themes/mangareader/assets/js/tsmedia.js?ver=2.2.0" id="tsmedia-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/themes/mangareader/assets/js/nsfw.js?ver=2.2.0" id="ts-nsfw_scripts-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/themes/mangareader/assets/js/chapter-search.js?ver=2.2.0" id="ts-chapter-search-js"></script>

<!-- Google tag (gtag.js) snippet added by Site Kit -->
<!-- Google Analytics snippet added by Site Kit -->
<script type="text/javascript" src="https://www.googletagmanager.com/gtag/js?id=GT-MJBJNFSR" id="google_gtagjs-js" async=""></script>
<script type="text/javascript" id="google_gtagjs-js-after">
/* <![CDATA[ */
window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}
gtag("set","linker",{"domains":["witchscans.com"]});
gtag("js", new Date());
gtag("set", "developer_id.dZTNiMT", true);
gtag("config", "GT-MJBJNFSR");
 window._googlesitekit = window._googlesitekit || {}; window._googlesitekit.throttledEvents = []; window._googlesitekit.gtagEvent = (name, data) => { var key = JSON.stringify( { name, data } ); if ( !! window._googlesitekit.throttledEvents[ key ] ) { return; } window._googlesitekit.throttledEvents[ key ] = true; setTimeout( () => { delete window._googlesitekit.throttledEvents[ key ]; }, 5 ); gtag( "event", name, { ...data, event_source: "site-kit" } ); }; 
/* ]]> */
</script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/js/um-gdpr.min.js?ver=2.10.5" id="um-gdpr-js"></script>
<link rel="https://api.w.org/" href="https://witchscans.com/wp-json/"><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://witchscans.com/xmlrpc.php?rsd">
<meta name="generator" content="WordPress 6.8.2">
<link rel="shortlink" href="https://witchscans.com/?p=132450">
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://witchscans.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwitchscans.com%2Fmanga%2Fthe-newbie-is-too-strong%2F">
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://witchscans.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwitchscans.com%2Fmanga%2Fthe-newbie-is-too-strong%2F&amp;format=xml">
<meta name="generator" content="Site Kit by Google 1.162.0">    <script>
    document.addEventListener('contextmenu', function(e){
        e.preventDefault();
    }, false);

    document.addEventListener('keydown', function(e) {
        if (e.keyCode === 123) {
            e.preventDefault();
            e.stopPropagation();
        }
        if (e.ctrlKey && e.keyCode === 85) {
            e.preventDefault();
            e.stopPropagation();
        }
        if (e.ctrlKey && e.keyCode === 83) {
            e.preventDefault();
            e.stopPropagation();
        }
        if (e.ctrlKey && e.shiftKey && e.keyCode === 73) {
            e.preventDefault();
            e.stopPropagation();
        }
        if (e.ctrlKey && e.shiftKey && e.keyCode === 74) {
            e.preventDefault();
            e.stopPropagation();
        }
        if (e.ctrlKey && e.shiftKey && e.keyCode === 67) {
            e.preventDefault();
            e.stopPropagation();
        }
    }, false);
    </script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="">
<link href="https://fonts.googleapis.com/css2?family=Fira+Sans:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&amp;family=Poppins:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&amp;display=swap" rel="stylesheet">
<script>
	$(document).ready(function(){
		$(".shme").click(function(){
			$(".mm").toggleClass("shwx");
		});
		$(".srcmob").click(function(){
			$(".minmb").toggleClass("minmbx");
		});
	});
</script>
<script type="text/javascript">
$(document).ready(function(){
	
	//Check to see if the window is top if not then display button
	$(window).scroll(function(){
		if ($(this).scrollTop() > 100) {
			$('.scrollToTop').fadeIn();
		} else {
			$('.scrollToTop').fadeOut();
		}
	});
	
	//Click event to scroll to top
	$('.scrollToTop').click(function(){
		$('html, body').animate({scrollTop : 0},800);
		return false;
	});
	
});
</script>
<style>
	.th, .serieslist.pop ul li.topone .limit .bw .ctr,.releases .vl,.scrollToTop,#sidebar #bm-history li a:hover,.hpage a,#footer .footermenu,.footer-az .az-list li a,.main-info .info-desc .spe span:before,.bxcl ul li span.dt a,.bookmark,.commentx #submit,.radiox input:checked ~ .checkmarkx,.advancedsearch button.searchz,.lightmode .nav_apb a:hover,.lista a,.lightmode .lista a:hover,.nextprev a,.disqusmen #commentform #submit, .blogbox .btitle .vl, .bigblogt span a,.big-slider .paging .centerpaging .swiper-pagination span.swiper-pagination-bullet-active {background:#0a0a0a} .pagination span.page-numbers.current,.quickfilter .filters .filter.submit button,#sidebar .section .ts-wpop-series-gen .ts-wpop-nav-tabs li.active span,#gallery.owl-loaded .owl-dots .owl-dot.active span,.bs.stylefiv .bsx .chfiv li a:hover,.bs.stylesix .bsx .chfiv li a:hover {background:#0a0a0a !important} 
	#sidebar .section #searchform #searchsubmit,.series-gen .nav-tabs li.active a,.lastend .inepcx a,.nav_apb a:hover,#top-menu li a:hover,.readingnav.rnavbot .readingnavbot .readingbar .readingprogress,.lightmode .main-info .info-desc .wd-full .mgen a:hover,.lightmode .bxcl ul li .chbox:hover,.lightmode ul.taxindex li a:hover,.comment-list .comment-body .reply a:hover,.topmobile,.bxcl ul::-webkit-scrollbar-thumb,.lightmode .slider:before,.quickfilter .filters .filter .genrez::-webkit-scrollbar-thumb,.hothome .releases,.lightmode .seriestucon .seriestucont .seriestucontr .seriestugenre a:hover,.bloglist .blogbox .innerblog .thumb .btags,.slidernom2 .mainslider .limit .sliderinfo .sliderinfolimit .start-reading span:hover,.lightmode .bixbox .bvlcen .bvl,.tsfront .headfront .fsearch #submit,.tsfront .headfront .fhomebutton a,.section .wp-block-search .wp-block-search__button {background:#0a0a0a} 
	.lightmode #sidebar .section h4, .lightmode .serieslist ul li .ctr,.listupd .utao .uta .luf ul li,.lightmode .bs .bsx:hover .tt,.soralist ul,a:hover,.lightmode .blogbox .btitle h3,.lightmode .blogbox .btitle h1,.bxcl ul li .lchx a:visited, .listupd .utao .uta .luf ul li a:visited,.lightmode .pagination a:hover,.lightmode a:hover,#sidebar .serieslist ul li .leftseries h2 a:hover,.bs.styletere .epxs,.bxcl ul li .dt a,.lightmode .main-info .info-desc .wd-full .mgen a,.lightmode #sidebar .serieslist ul li .leftseries h2 a:hover,.comment-list .comment-body .reply a,.bxcl ul li .eph-num a:visited,.headpost .allc a,.lightmode .seriestucon .seriestucont .seriestucontr .seriestugenre a,.bs.stylesix .bsx .chfiv li a,.bs.stylefor .bsx a:visited .bigor .adds .epxs,.bs.stylefiv .bsx .chfiv li a:visited .fivchap,.stylesven .sveninner .svenbottom .svenmetabot .svenchapters li a:visited,.listupd .utao.stylegg .uta .luf ul li a:visited .eggchap,.lightmode .listupd .utao.stylegg .uta .luf ul li a:visited .eggchap,.lightmode .serieslist ul li .leftseries span a {color:#0a0a0a} 
	.bxcl ul li .lchx a:visited, .listupd .utao .uta .luf ul li a:visited,.bs.stylesix .bsx .chfiv li a {color:#0a0a0a !important} 
	.lightmode .serieslist ul li .ctr,.advancedsearch button.searchz,.lista a,.lightmode .lista a:hover,.blogbox .boxlist .bma .bmb .bmba, .page.blog .thumb,#sidebar .section #searchform #searchsubmit,.lightmode .main-info .info-desc .wd-full .mgen a,.lightmode .bxcl ul li .chbox:hover, .comment-list .comment-body .reply a,.lightmode .seriestucon .seriestucont .seriestucontr .seriestugenre a,.slidernom2 .mainslider .limit .sliderinfo .sliderinfolimit .start-reading span:hover,.section .wp-block-search .wp-block-search__button {border-color:#0a0a0a}
	.bs.stylesix .bsx .chfiv li a:before {content: "";background: #0a0a0a;opacity: 0.2;position: absolute;display: block;left: 0;right: 0;top: 0;bottom: 0;border-radius: 10px;}
	.bs.stylesix .bsx .chfiv li a{background:none !important;}
	.slider.round:before{background: #333;}
	.hpage a:hover,.bs.stylefiv .bsx .chfiv li a:hover,.bs.stylesix .bsx .chfiv li a:hover{color:#FFF !important;}
	@media only screen and (max-width:800px) {
		.lightmode.black .th, .lightmode .th, .th, .surprise{background:#0a0a0a} 
		#main-menu {background: rgba(28,28,28,0.95);}
	}
</style>
<style>
	.home-genres,.home-genres.gennom2 .alman a,.lightmode .home-genres.gennom2{background:#dd3333;}
	.home-genres .alman a{color:#dd3333;}
	.home-genres.gennom2{border-color:#dd3333;}
</style>
        <script type="text/javascript">
                var sf_templates = "<a href=\"{search_url_escaped}\">View All Results<\/a>";
                var sf_position = '0';
                var sf_input = '.search-live';
                jQuery(document).ready(function(){
                    jQuery(sf_input).ajaxyLiveSearch({"expand":false,"searchUrl":"https:\/\/witchscans.com\/?s=%s","text":"Search","delay":500,"iwidth":180,"width":350,"ajaxUrl":"https:\/\/witchscans.com\/wp-admin\/admin-ajax.php","rtl":0});
                    jQuery(".live-search_ajaxy-selective-input").keyup(function() {
                        var width = jQuery(this).val().length * 8;
                        if(width < 50) {
                            width = 50;
                        }
                        jQuery(this).width(width);
                    });
                    jQuery(".live-search_ajaxy-selective-search").click(function() {
                        jQuery(this).find(".live-search_ajaxy-selective-input").focus();
                    });
                    jQuery(".live-search_ajaxy-selective-close").click(function() {
                        jQuery(this).parent().remove();
                    });
                });
        </script>
        <link rel="icon" href="https://i2.wp.com/witchscans.com/wp-content/uploads/2024/10/cropped-icon21-32x32.png" sizes="32x32">
<link rel="icon" href="https://i2.wp.com/witchscans.com/wp-content/uploads/2024/10/cropped-icon21-192x192.png" sizes="192x192">
<link rel="apple-touch-icon" href="https://i2.wp.com/witchscans.com/wp-content/uploads/2024/10/cropped-icon21-180x180.png">
<meta name="msapplication-TileImage" content="https://i2.wp.com/witchscans.com/wp-content/uploads/2024/10/cropped-icon21-270x270.png">
		<style type="text/css" id="wp-custom-css">
			





#reportFormContainer {
    background-image: initial !important;
    background-color: #0d0e0e00 !important;
    box-shadow: var(--darkreader-background-ff000026, rgba(124, 22, 22, 0.15)) 0px 6px 18px, var(--darkreader-background-0000001f, rgba(0, 0, 0, 0.12)) 0px 1.5px 4px !important;
    color: var(--darkreader-text-ffffff, #e8e6e3) !important;
}
#main-menu ul li ul li a {
    color: #ffffff;
}


#main-menu ul li ul {
    background-image: initial;
    background-color: #282a2a6e;
    box-shadow: var(--darkreader-background-00000061, rgba(0, 0, 0, 0.38)) 0px 4px 4px;
}



@media only screen and (max-width: 890px) {
    .shme {
        display: block;
        float: left;
        font-size: 24px;
        margin-top: 13px;
        margin-right: 103px;
        color: #FFF;
        cursor: pointer;
        position: relative; /* or absolute/fixed */
        z-index: 999991;      /* very high value to ensure it's on top */
    }
}
@media only screen and (max-width: 890px) {
    #main-menu.shwx ul li ul {
        background-image: initial;
        background-color: #22242400;
    }
}








.um.um-login {
    max-width: 450px;
    margin: 40px auto;
    padding: 32px 28px;
    background: rgba(24, 23, 29, 0.32); /* semi-transparent dark */
    border-radius: 20px;
    box-shadow: 0 10px 36px rgba(180, 0, 44, 0.15);
    transition: all 0.3s cubic-bezier(.4,0,.2,1);
    font-family: 'Segoe UI', 'Cinzel', 'Georgia', serif;
    border: 1.5px solid #b4002c;
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(18px);
    -webkit-backdrop-filter: blur(18px);
    z-index: 0;
}

/* Avatar */
.um-login .um-avatar {
    border-radius: 50%;
    border: 2.5px solid #b4002c;
    box-shadow: 0 0 16px rgba(180, 0, 44, 0.18);
    margin-bottom: 12px;
    width: 80px;
    height: 80px;
    object-fit: cover;
    display: block;
    margin-left: auto;
    margin-right: auto;
}

/* Name styling */
.um-login .um-misc-with-img strong {
    display: block;
    font-size: 19px;
    color: #b4002c;
    margin-top: 10px;
    text-align: center;
    font-family: 'Cinzel', 'Georgia', serif;
    letter-spacing: 1px;
    font-weight: 600;
}

/* List of links */
.um-login .um-misc-ul {
    list-style: none;
    padding: 0;
    margin-top: 24px;
    text-align: center;
}

.um-login .um-misc-ul li {
    margin: 12px 0;
}

.um-login .um-misc-ul a {
    color: #b4002c;
    text-decoration: none;
    font-weight: 600;
    padding: 9px 22px;
    border-radius: 9px;
    display: inline-block;
    transition: background 0.2s, color 0.2s, box-shadow 0.2s;
    border: 1px solid #f4b1b1;
    background: linear-gradient(90deg, #fff0f3 0%, #ffe0ea 100%);
    box-shadow: 0 2px 10px rgba(180, 0, 44, 0.06);
}

.um-login .um-misc-ul a:hover {
    background: linear-gradient(90deg, #b4002c 0%, #ff3a6c 100%);
    color: #fff;
    border: 1px solid #b4002c;
    box-shadow: 0 4px 18px rgba(180, 0, 44, 0.17);
    text-shadow: 0 1px 4px rgba(0,0,0,0.07);
}

/* Skip .releases styling */
.releases { }

.statusind {
    background: #33333300;
}


.statusind.Ongoing i {
    color: #ff0000;
}


[data-darkreader-inline-color] {
    text-align: center;
}


.row {
    --bs-gutter-x: 1.5rem;
    --bs-gutter-y: 0;
    display: flex
;
    margin-top: calc(-1 * var(--bs-gutter-y));
    margin-right: calc(-.5 * var(--bs-gutter-x));
    margin-left: calc(-.5 * var(--bs-gutter-x));
    justify-content: center;
    flex-wrap: wrap;
}




.rank-badge {
  display: none;
}



.listupd.popularslider .popconslide .bs {
    max-width: 160px;
}


/*third rank*/
.hotrank-3 {
  position: relative;
  border-radius: 10px;
  background: #2c3e50;
  overflow: hidden;
  color: white;
  margin-right: 10px;
}

.hotrank-3 > * {
  position: relative;  
  z-index: 10;         
}

.hotrank-3::before {
  content: "";
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  pointer-events: none;
  z-index: 1;  
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 1) 8%,
    rgba(0, 0, 0, 0.85) 16%,
    rgba(0, 0, 0, 0.65) 36%,
    rgba(0, 0, 0, 0.35) 64%,
    rgba(0, 0, 0, 0) 96%
  );
}

.hotrank-3::after {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 300%;
  height: 100%;
  pointer-events: none;
  z-index: 0;  
  background: linear-gradient(
    120deg,
    transparent 0%,
    rgba(255, 255, 255, 0.4) 50%,
    transparent 100%
  );
  opacity: 0.8;
  transform: skewX(-20deg);
  animation: shine 1.5s linear infinite;

  mask-image: linear-gradient(to right, transparent, black 20%, black 80%, transparent);
  -webkit-mask-image: linear-gradient(to right, transparent, black 20%, black 80%, transparent);
}

@keyframes shine {
  0% {
    transform: translateX(-100%) skewX(-20deg);
  }
  100% {
    transform: translateX(100%) skewX(-20deg);
  }
}


.hotrank-3 .rank-badge.rank-3 {
  position: absolute;
  top: 9%;
  left: 9%;
  transform: translateY(-50%);
  width: 35px;
  height: 35px;
  border-radius: 50%;
  background: #001f3f; 
  color: white;
  font-size: 18px;
  font-weight: 700;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
  z-index: 9999;
  pointer-events: none;

  border: 4px solid transparent;
  background-clip: padding-box;
  box-shadow: 0 0 10px #003366;

  animation: glowingStrokeBlue 3s linear infinite;
}

@keyframes glowingStrokeBlue {
  0% {
    border-color: #0074D9 transparent transparent transparent;
    box-shadow: 0 0 8px rgba(0, 116, 217, 0.7);
  }
  25% {
    border-color: transparent #0074D9 transparent transparent;
    box-shadow: 0 0 12px rgba(0, 116, 217, 0.7);
  }
  50% {
    border-color: transparent transparent #0074D9 transparent;
    box-shadow: 0 0 8px rgba(0, 100, 190, 0.7);
  }
  75% {
    border-color: transparent transparent transparent #005f99;
    box-shadow: 0 0 12px rgba(0, 95, 153, 0.7);
  }
  100% {
    border-color: #0074D9 transparent transparent transparent;
    box-shadow: 0 0 8px rgba(0, 116, 217, 0.7);
  }
}






/*second rank*/
.hotrank-2 {
  position: relative;
  border-radius: 10px;
  background: #c70028;
  overflow: hidden;
  color: white;
		margin-right: 10px;
}
.hotrank-2 > * {
  position: relative;  
  z-index: 10;         
}

.hotrank-2::before {
  content: "";
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  pointer-events: none;
  z-index: 1;  
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 1) 8%,
    rgba(0, 0, 0, 0.85) 16%,
    rgba(0, 0, 0, 0.65) 36%,
    rgba(0, 0, 0, 0.35) 64%,
    rgba(0, 0, 0, 0) 96%
  );
}

.hotrank-2::after {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 300%;
  height: 100%;
  pointer-events: none;
  z-index: 0;  
  background: linear-gradient(
    120deg,
    transparent 0%,
    rgba(255, 255, 255, 0.4) 50%,
    transparent 100%
  );
  opacity: 0.8;
  transform: skewX(-20deg);
  animation: shine 1.5s linear infinite;

  mask-image: linear-gradient(to right, transparent, black 20%, black 80%, transparent);
  -webkit-mask-image: linear-gradient(to right, transparent, black 20%, black 80%, transparent);
}

@keyframes shine {
  0% {
    transform: translateX(-100%) skewX(-20deg);
  }
  100% {
    transform: translateX(100%) skewX(-20deg);
  }
}

.hotrank-2 .rank-badge.rank-2 {
  position: absolute;
  top: 9%;
  left: 9%;
  transform: translateY(-50%);
  width: 35px;
  height: 35px;
  border-radius: 50%;
  background: #6d0000; 
  color: white;
  font-size: 18px;
  font-weight: 700;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
  z-index: 9999;
  pointer-events: none;

  border: 4px solid transparent;
  border-radius: 50%;
  background-clip: padding-box;
  box-shadow: 0 0 10px #d000ffaa;

    animation: glowingStrokeRed 3s linear infinite;
}

@keyframes glowingStrokeRed {
  0% {
    border-color: #ff0000 transparent transparent transparent;
    box-shadow: 0 0 8px rgba(255, 0, 0, 0.7);
  }
  25% {
    border-color: transparent #ff0000 transparent transparent;
    box-shadow: 0 0 12px rgba(255, 50, 50, 0.7);
  }
  50% {
    border-color: transparent transparent #ff0000 transparent;
    box-shadow: 0 0 8px rgba(255, 20, 20, 0.7);
  }
  75% {
    border-color: transparent transparent transparent #ff0000;
    box-shadow: 0 0 12px rgba(255, 70, 70, 0.7);
  }
  100% {
    border-color: #ff0000 transparent transparent transparent;
    box-shadow: 0 0 8px rgba(255, 0, 0, 0.7);
  }
}


















/*first rank*/
.hotrank-1 {
  position: relative;
  border-radius: 10px;
  background: #6f00ff;
  overflow: hidden;
  color: white;
		margin-right: 10px;

}
.hotrank-1 > * {
  position: relative;  
  z-index: 10;         
}

.hotrank-1::before {
  content: "";
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  pointer-events: none;
  z-index: 1;  
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 1) 8%,
    rgba(0, 0, 0, 0.85) 16%,
    rgba(0, 0, 0, 0.65) 36%,
    rgba(0, 0, 0, 0.35) 64%,
    rgba(0, 0, 0, 0) 96%
  );
}

.hotrank-1::after {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 300%;
  height: 100%;
  pointer-events: none;
  z-index: 0;  
  background: linear-gradient(
    120deg,
    transparent 0%,
    rgba(255, 255, 255, 0.4) 50%,
    transparent 100%
  );
  opacity: 0.8;
  transform: skewX(-20deg);
  animation: shine 1.5s linear infinite;

  mask-image: linear-gradient(to right, transparent, black 20%, black 80%, transparent);
  -webkit-mask-image: linear-gradient(to right, transparent, black 20%, black 80%, transparent);
}

@keyframes shine {
  0% {
    transform: translateX(-100%) skewX(-20deg);
  }
  100% {
    transform: translateX(100%) skewX(-20deg);
  }
}

.hotrank-1 .rank-badge.rank-1 {
  position: absolute;
  top: 9%;
  left: 9%;
  transform: translateY(-50%);
  width: 35px;
  height: 35px;
  border-radius: 50%;
  background: #4a006d; 
  color: white;
  font-size: 18px;
  font-weight: 700;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
  z-index: 9999;
  pointer-events: none;

  border: 4px solid transparent;
  border-radius: 50%;
  background-clip: padding-box;
  box-shadow: 0 0 10px #d000ffaa;

  animation: glowingStroke 3s linear infinite;
}


@keyframes glowingStroke {
  0% {
    border-color: #d000ff transparent transparent transparent;
    box-shadow: 0 0 8px #d000ffaa;
  }
  25% {
    border-color: transparent #9a00ff transparent transparent;
    box-shadow: 0 0 12px #9a00ffaa;
  }
  50% {
    border-color: transparent transparent #6f00ff transparent;
    box-shadow: 0 0 8px #6f00ffaa;
  }
  75% {
    border-color: transparent transparent transparent #bb00ff;
    box-shadow: 0 0 12px #bb00ffaa;
  }
  100% {
    border-color: #d000ff transparent transparent transparent;
    box-shadow: 0 0 8px #d000ffaa;
  }
}







/* General logo container styling */
.logos {
    position: relative;
    display: inline-block;
    cursor: pointer; /* Indicates clickable area */
}
.searchx #form {
    padding: 0;
    position: relative;
    bottom: 8px;
}

/* Logo Image Styling */
.logos img {
    width: auto;
    max-height: 70px;
    position: relative;
    transition: opacity 0.5s ease, transform 0.5s ease;
    z-index: 1; /* Ensure the logo is above the home icon initially */
		    bottom: 6px;
}

/* Home Icon Styling (as a pseudo-element) */
.logos::after {
    content: '';
    position: absolute;
    top: 50%; /* Center vertically */
    left: 50%; /* Center horizontally */
    width: 45px; /* Same width as the logo */
    height: 50px; /* Same height as the logo */
    background-image: url('https://witchscans.com/wp-content/uploads/2024/10/home-white.png'); /* URL of the home icon */
    background-size: contain;
    background-repeat: no-repeat;
    opacity: 0; /* Initially hidden */
    transform: translate(-50%, -50%) scale(0.8); /* Center and scale down initially */
    transition: opacity 0.5s ease, transform 0.5s ease;
    z-index: 0; /* Behind the logo */
}

/* Hover Effect */
.logos:hover img {
    opacity: 0; /* Fades out the logo */
    transform: scale(1.2); /* Slight zoom out effect */
}

.logos:hover::after {
    opacity: 1; /* Fades in the home icon */
    transform: translate(-50%, -50%) scale(1); /* Center it and scale to normal size */
}

/* Ensuring the logo container is clickable */
.logos:hover {
    pointer-events: auto; /* Ensures the logo is clickable */
}



@media only screen and (max-width: 890px) {
    .logos img {
        max-height: 65px !important;

    }
}

@media only screen and (max-width: 890px) {
    .shme {
        display: block;
        float: left;
        font-size: 24px;
        margin-top: 13px;
        margin-right: 103px;
        color: #FFF;
        cursor: pointer;
    }
}

@media only screen and (max-width: 570px) {
    .srcmob {
        display: block !important;
        float: right;
        font-size: 22px;
        margin-top: 10px;
        color: #FFF;
        cursor: pointer;
        border-radius: 50%;
        width: 35px;
        text-align: center;
        background: rgba(0, 0, 0, .1);
    }
}


#main-menu ul li a {
    display: block;
    text-align: center;
    line-height: 68px;
    height: 66px;
    padding: 0 10px;
    color: #FFF;
    border-left: 0;
    transition: color .5s;
    position: relative;
    font-weight: 500;
    font-size: 1rem;
}


.searchx {
    float: right;
    width: 270px;
    margin: 24px 0 16px 0;
    position: relative;
}

body {
    background: #000000; /* Base background color (black) */
    background: #000000;
    background-attachment: fixed;
    font-size: 14px;
    line-height: 1.5;
    color: #b8b8b8;
    margin: 0 auto;
    font-family: 'Poppins', sans-serif;
    -webkit-font-smoothing: antialiased !important;
    -moz-osx-font-smoothing: grayscale !important;
    position: relative;
    min-height: 100%;
}





.th, .serieslist.pop ul li.topone .limit .bw .ctr, .releases .vl, .scrollToTop, #sidebar #bm-history li a:hover, .hpage a, #footer .footermenu, .footer-az .az-list li a, .main-info .info-desc .spe span:before, .bxcl ul li span.dt a, .bookmark, .commentx #submit, .radiox input:checked ~ .checkmarkx, .advancedsearch button.searchz, .lightmode .nav_apb a:hover, .lista a, .lightmode .lista a:hover, .nextprev a, .disqusmen #commentform #submit, .blogbox .btitle .vl, .bigblogt span a, .big-slider .paging .centerpaging .swiper-pagination span.swiper-pagination-bullet-active {
    background: #00000000;
	  padding-top: 12px;
}



.lightmode #sidebar .section h4, .lightmode .serieslist ul li .ctr, .listupd .utao .uta .luf ul li, .lightmode .bs .bsx:hover .tt, .soralist ul, a:hover, .lightmode .blogbox .btitle h3, .lightmode .blogbox .btitle h1, .bxcl ul li .lchx a:visited, .listupd .utao .uta .luf ul li a:visited, .lightmode .pagination a:hover, .lightmode a:hover, #sidebar .serieslist ul li .leftseries h2 a:hover, .bs.styletere .epxs, .bxcl ul li .dt a, .lightmode .main-info .info-desc .wd-full .mgen a, .lightmode #sidebar .serieslist ul li .leftseries h2 a:hover, .comment-list .comment-body .reply a, .bxcl ul li .eph-num a:visited, .headpost .allc a, .lightmode .seriestucon .seriestucont .seriestucontr .seriestugenre a, .bs.stylesix .bsx .chfiv li a, .bs.stylefor .bsx a:visited .bigor .adds .epxs, .bs.stylefiv .bsx .chfiv li a:visited .fivchap, .stylesven .sveninner .svenbottom .svenmetabot .svenchapters li a:visited, .listupd .utao.stylegg .uta .luf ul li a:visited .eggchap, .lightmode .listupd .utao.stylegg .uta .luf ul li a:visited .eggchap, .lightmode .serieslist ul li .leftseries span a {
    color: #b90000;
}


.bxcl ul li .lchx a:visited, .listupd .utao .uta .luf ul li a:visited, .bs.stylesix .bsx .chfiv li a {
    color: #ff0000 !important;
}

.series-gen .nav-tabs {
    list-style: none;
    margin: 0;
    padding: 6px;
    overflow: hidden;
    background: #000;
    border-radius: 3px;
    font-weight: 500;
}


#sidebar .section #searchform #searchsubmit, .series-gen .nav-tabs li.active a, .lastend .inepcx a, .nav_apb a:hover, #top-menu li a:hover, .readingnav.rnavbot .readingnavbot .readingbar .readingprogress, .lightmode .main-info .info-desc .wd-full .mgen a:hover, .lightmode .bxcl ul li .chbox:hover, .lightmode ul.taxindex li a:hover, .comment-list .comment-body .reply a:hover, .topmobile, .bxcl ul::-webkit-scrollbar-thumb, .lightmode .slider:before, .quickfilter .filters .filter .genrez::-webkit-scrollbar-thumb, .hothome .releases, .lightmode .seriestucon .seriestucont .seriestucontr .seriestugenre a:hover, .bloglist .blogbox .innerblog .thumb .btags, .slidernom2 .mainslider .limit .sliderinfo .sliderinfolimit .start-reading span:hover, .lightmode .bixbox .bvlcen .bvl, .tsfront .headfront .fsearch #submit, .tsfront .headfront .fhomebutton a, .section .wp-block-search .wp-block-search__button {
    background: #0000;
}

.bixbox {
    background: #0000;
    border-radius: 3px;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    margin-bottom: 18px;
    overflow: hidden;
    -webkit-box-shadow: 0 2px 3px rgba(0, 0, 0, .1);
    -khtml-box-shadow: 0 2px 3px rgba(0, 0, 0, .1);
    -moz-box-shadow: 0 2px 3px rgba(0, 0, 0, .1);
    -ms-box-shadow: 0 2px 3px rgba(0, 0, 0, .1);
    -o-box-shadow: 0 2px 3px rgba(0, 0, 0, .1);
    box-shadow: 0 2px 3px rgba(0, 0, 0, .1);
}
	
	.hothome .releases h2 {
    margin-top: 15px;
    padding: 5px 20px;
    background: #000;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
    font-size: 15px;
}
	


.releases {
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    border-bottom: 1px solid #0000;
    padding: 8px 15px;
}






.hothome .releases h2 {
    padding: 5px 20px;
    background: #0000;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
    font-size: 15px;
    text-transform: uppercase; /* Change text to uppercase */
    font-weight: bold; /* Make text bold */
}

.releases h1, .releases h2, .releases h3, #sidebar .section h4 {
    padding: -0px 20px;
    background: #0000;
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
    font-size: 15px;
    text-transform: uppercase;
    font-weight: bold; 
}



/* SLIDER ABOVE 8888888843956349856845638465346384988888888888888 */







.big-slider .paging .centerpaging {
    display: flex; 
    justify-content: center; 
    position: relative; 
    z-index: 5;
	
}

.big-slider .paging .centerpaging .swiper-pagination {
    z-index: 5; 
    right: auto; 
}


.big-slider .paging .centerpaging .swiper-pagination span.swiper-pagination-bullet {
    margin: 0 4px;
    width: 11px;
    height: 11px;
}


.swiper-container {
    margin-left: auto;
    margin-right: auto;
    position: relative;
    overflow: hidden;
    list-style: none;
    padding: 0;
    z-index: 1;
    border-radius: 25px;
}




.slidernom3 .mainslider .limit .bigbanner {
    min-height: 350px;
    filter: blur(28px);
    transform: scaleX(-1); /* Flips the element horizontally */
}


.home-genres, .home-genres.gennom2 .alman a, .lightmode .home-genres.gennom2 {
    background: linear-gradient(to right, #dd3333, #000000);
}



#sidebar .section {
    margin-left: 15px;
    background: #00000000;
    border-radius: 3px;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    margin-bottom: 18px;
}


#sidebar .section .ts-wpop-series-gen .ts-wpop-nav-tabs {
    list-style: none;
    margin: 10px;
    padding: 6px;
    overflow: hidden;
    background: linear-gradient(to right, #960000, black); /* Red to black gradient */
    border-radius: 17px;
    font-weight: 500;
}



#sidebar .section .ts-wpop-series-gen .ts-wpop-nav-tabs li {
    float: left;
    width: 33.3333333%;
    padding: 0;
    border: 0;
    text-align: center;
    color: white; /* Changes the font color to white */
}




/*------------------------*/


/* Sidebar Series List Item Styling */
#sidebar .section .serieslist ul li {
    padding: 12px 15px;
    text-overflow: ellipsis; /* For long text */
}

/* Sidebar Series List Image */
.serieslist ul li .imgseries {
    max-height: 100%;
    max-width: 100px;
    width: 73px;
    overflow: hidden;
    position: relative;
}

/* Styling for the list container */
#sidebar .section .serieslist ul {
    list-style: none; /* Removes bullets */
    padding: 0; /* Removes padding from the list */
    margin: 0; /* Removes margin from the list */
}

/* Optional: Customize the font and color */
#sidebar .section .serieslist ul li {
    font-family: Arial, sans-serif;
    color: #333; 
		border-bottom: 0px solid #383838;
}

/* Image next to the series name */
.serieslist ul li img {
    float: left;
    margin-right: 10px;
    border-radius: 5px; /* Rounds image corners */
}



.serieslist ul li .imgseries {
	max-height: 100%;
	max-width:  100px;
	width: 73px;
	
}

.serieslist ul li .imgseries img {
    width: 100%;
    height: auto;
    padding: 0;
    border: none;
    margin-bottom: 0;
    margin-right: 0;
    float: none;
    border-radius: 20px;
}

.serieslist ul li .imgseries {
    max-height: 100%;
    max-width: 100px;
    width: 73px;
    transition: max-width 0.3s ease, transform 0.3s ease, opacity 0.3s ease;
    overflow: hidden;
    position: relative;
}

.serieslist ul li .imgseries:hover {
    max-width: 120px; /* Increase the width on hover */
    transform: scale(1.1); /* Slightly scale up on hover */

}

/* Optional: Add a shadow effect on hover */
.serieslist ul li .imgseries::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    pointer-events: none;
    transition: opacity 0.3s ease;
}

#sidebar .section .textwidget {
    padding: 5px 15px;
    line-height: normal;
    font-size: 13px;
    transition: transform 0.3s ease;
}

#sidebar .section .textwidget:hover {
    transform: scale(1.04); /* You can adjust the scale factor as needed */
}


.bs .bsx .limit {
    position: relative;
    overflow: hidden;
}

.bs .bsx .limit::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    z-index: 2;
    display: block;
    width: 50%;
    height: 100%;
    background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, .3) 100%);
    transform: skewX(-25deg);
}

/* Add the transition only on hover */
.bs .bsx .limit:hover::before {
    left: 125%;
    transition: left 0.7s ease; /* Play the transition on hover */
}

/* Instantly reset the effect without animation when not hovered */
.bs .bsx .limit:not(:hover)::before {
    transition: none; /* No animation when hover ends */
    left: -100%; /* Instantly return to the original position */
}




#sidebar .section .serieslist ul li::after {
    content: "";
    position: absolute;
    bottom: 0;
    right: 0;
    width: 0;
    height: 3px;
    background-color: #ffffff;
    transition: width 0.3s ease;
}

#sidebar .section .serieslist ul li:hover::after {
    width: 100%;
	
}



/*--------------------------*/





.bs .bsx .limit img {
    width: 100%;
    height: 100%;
    object-fit: stretch;
    top: 0;
    position: absolute;
    transition: transform 0.3s ease-in-out, filter 0.3s ease-in-out;
}



.bs .bsx .limit img::before {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.8) 50%, rgba(255, 255, 255, 0) 70%);
    /* White radial shine effect */
    opacity: 0;
}

/* .bs .bsx .limit:hover img */
.bs .bsx .limit:hover img {
    filter: saturate(140%);
    /* Apply saturation effect on hover */
    transition: transform 0.3s ease-in-out, filter 0.3s ease-in-out;
}

/* .bs .bsx .limit:hover img::before */
.bs .bsx .limit:hover img::before {
    opacity: 1;
	
}

/* .bs .bsx .limit img, .uta .imgu img */
.bs .bsx .limit img,
.uta .imgu img {
    border-radius: 0px;
}

/* .full .bs:hover */
.full .bs:hover {
    transform: translate(0, -3%);
    transition: 0.35s;
}

/* .full .bs */
.full .bs {
    transition: 0.2s;
}

/* .bs:hover */
.bs:hover {}

/* .bs:not(:hover) */
.bs:not(:hover) {
    transform: none;
    position: relative;
    overflow: hidden;
}
.bs.stylefiv .bsx .limit {
    border-radius: 11px;
}


.listupd .utao.styletwo .uta .imgu img {
    width: 103px;
	  height: 100%;
    transition: transform 0.3s ease; /* Add a transition for smooth scaling */
}

.listupd .utao.styletwo .uta .imgu img:hover {
    transform: scale(1.1); /* Increase the size to 110% on hover */
}

.listupd .utao.styletwo .uta .imgu {
    height: 150px;
    border-radius: 7px;
}


.bs .bsx .tt {
    transition: color .2s; /* Smooth transition for color change */
	      font-size: 14px;

}

.bs .bsx:hover .tt,
.bs .bsx .tt:hover {
    color: red; /* Change the text color to red on hover */
}

.listupd {
    padding: 10px;
    overflow: hidden;
    padding-bottom: 35px;
}

.listupd .utao.styletwo .uta .luf h4 {
    font-size: 15px;
    font-weight: 600;
    transition: color .2s; /* Smooth transition for color change */
}

.listupd .utao.styletwo .uta:hover .luf h4,
.listupd .utao.styletwo .uta .luf h4:hover {
    color: red; /* Change the text color to red on hover */
}



#sidebar .serieslist ul li .leftseries h2 a {
    color: #ddd; /* Default text color */
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    transition: color .2s; /* Smooth transition for color change */
}

#sidebar .serieslist ul li .leftseries h2 a:hover {
    color: red; /* Change text color to red on hover */
}




.series-gen .nav-tabs li a {
    display: block;
    text-align: center;
    padding: 4px;
    font-size: 13px;
    color: #ddd; /* Default color */
    transition: color 0.2s; /* Smooth transition for color change */
}

/* Change text color to red on hover */
.series-gen .nav-tabs li a:hover {
    color: red; /* Change text color to red on hover */
}



#sidebar .section #searchform #searchsubmit,
.series-gen .nav-tabs li.active a,
.lastend .inepcx a,
.nav_apb a:hover,
#top-menu li a:hover,
.readingnav.rnavbot .readingnavbot .readingbar .readingprogress,
.lightmode .main-info .info-desc .wd-full .mgen a:hover,
.lightmode .bxcl ul li .chbox:hover,
.lightmode ul.taxindex li a:hover,
.comment-list .comment-body .reply a:hover,
.topmobile,
.bxcl ul::-webkit-scrollbar-thumb,
.lightmode .slider:before,
.quickfilter .filters .fil
ter .genrez::-webkit-scrollbar-thumb,
.hothome .releases,
.lightmode .seriestucon .seriestucont .seriestucontr .seriestugenre a:hover,
.bloglist .blogbox .innerblog .thumb .btags,
.slidernom2 .mainslider .limit .sliderinfo .sliderinfolimit .start-reading span:hover,
.lightmode .bixbox .bvlcen .bvl,
.tsfront .headfront .fsearch #submit,
.tsfront .headfront .fhomebutton a,
.section .wp-block-search .wp-block-search__button {
    color: red; /* Change text color to black */
}


.bs .bsx .limit {
    padding: 150% 0 0;
    border-radius: 5px;
}



.mainslider .limit img {
    position: static !important;
    top: 0;
    width: 100%;
    height: auto;
    filter: contrast(110%); 

}


.main-info .info-left .thumb img {
    width: 100%;
    border-radius: 8px;
}

@media only screen and (max-width: 800px) {
    .main-info .info-left .thumb {
        max-width: 140px;
        text-align: center;
        margin: 0 auto;
        border: 0px solid #16151d;

    }
}	
			



#content.manga-info .postbody.full {
    z-index: 1;
    position: relative;
    padding-top: 59px;
}

.bigcover .img-blur {
    filter: blur(16px);
}


.bigcover .bigbanner {
    background-position: 50% 50%;
	  filter: blur(44);
	  filter: blur(16px);
	  min-height: 289px;

}


.bigcover .bigbanner {
    background-position: 50% 0%; 
    background-size: cover;
    animation: slideDown 145s linear infinite; 
}

@keyframes slideDown {
    0% {
        background-position: 50% 0%;
    }
    100% {
        background-position: 50% 100%;
    }
}

.bxcl ul li .chbox {
    background: li-gradient(to bottom, rgba(85, 0, 0, 1), rgba(255, 0, 0, 0));
}


.bookmark {
    transition: background 0.5s ease; /* Adjust the duration as needed */
    border-radius: 14px;
    text-transform: uppercase; /* Convert text to uppercase */
}

.bookmark:hover {
    background: #6f6f6f;
}



.bxcl ul li .chbox {
    display: block;
    padding: 12px;
		pa-right: 14px:
    background: ; /* Dark background */
    color: white;
    text-align: center;
    border-radius: 10px;
    border: 1px solid red; /* Initial border color */
    transition: transform 0.5s ease, border-color 0.5s ease, box-shadow 0.5s ease; /* Unified transitions */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5); /* Subtle shadow */
}

.bxcl ul li .chbox:hover {
    transform: scale(0.97); /* Slight zoom-out effect */
    border-color: black; /* Change border color to black on hover */
    color: #ff0000; /* Change text color to red */
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.7); /* Enhance shadow on hover */
}



.black {
    background: #000000;
}



#content.readercontent .chdesc {
    font-size: 0px;

}


.black .nextprev a {
    color: #FFF;
    padding: 10px 25px;
    border-radius: 25px; 
    background-color: #000;
    text-decoration: none;
    display: inline-block; 
}

.black .nextprev a:hover {
    background-color: #444;
}


#content.readercontent .bixbox {
    margin: 0 auto;
    margin-bottom: -44px;
    max-width: 1142px;
    font-size: 0px;
}


.headpost .allc {
	  font-size: 19px;
	  padding-bottom: 4px;
	  margin-top: 14px;
}


.headpost .allc {
    font-size: 19px;
    padding-bottom: 4px;
    margin-top: 7px;
	  font-size: 20px;

}

.headpost .allc a {
    position: relative; 
    font-size: 18px;           
    padding-bottom: 4px;      
    margin-top: 14px;         
    color: transparent; /* Hide the original text */
    text-decoration: none; /* Remove underline */
}

.headpost .allc a::after {
    content: "⇦ Series page";  /* New text */
    color: #fff;             /* Default text color (white) */
    text-decoration: none;    /* No underline */
    display: block;          /* Make it a block */
}

/* Change color on hover */
.headpost .allc a:hover::after {
    color: red;              /* Change text color to red on hover */
}

#readerarea p {
    margin: 0;
    filter: contrast(1.03);
}



.listupd .utao.styletwo .uta .luf ul li a {
    color: #999;
    max-width: 100%;
}



.listupd .utao.styletwo .uta .luf ul li span {
    margin-left: 10px;
}

.serieslist ul li .ctr {
    text-align: center;
    line-height: 29px;
    font-size: 1.6em;
    color: #888;
    position: absolute;
    top: 45px;
    left: 11px;
    border: .0px solid #888;
}



.pagination span.page-numbers.current, 
.quickfilter .filters .filter.submit button, 
#sidebar .section .ts-wpop-series-gen .ts-wpop-nav-tabs li.active span, 
#gallery.owl-loaded .owl-dots .owl-dot.active span, 
.bs.stylefiv .bsx .chfiv li a:hover, 
.bs.stylesix .bsx .chfiv li a:hover {
    background: rgb(10 8 8 / 0%) !important;
    border-radius: 14px;
}



#content.readercontent .chaptertags {
    max-width: 1142px;
    margin: 0 auto;
    margin-bottom: 15px;
    background: #000;
    overflow: hidden;
    border-radius: 3px;
    padding: 0 15px;
    font-size: 13px;
}



#content.readercontent .chaptertags {
    max-width: 1142px;
    margin: 0 auto;
    margin-bottom: 15px;
    background: #000;
    overflow: hidden;
    border-radius: 3px;
    padding: 0 15px;
    font-size: 0px;
}




.main-info .wd-full .mgen a {
    border-radius: 10px;
	  background-color: #00000017;
	  color: white;
    transition: all 0.3s ease;
}

.main-info .wd-full .mgen a:hover {
    background-color: #9a0000;
}



element.style {
}
@media only screen and (max-width: 880px) {
    .slidernom3 .mainslider .limit .sliderinfo .sliderinfolimit .meta .metas-genres-values a:nth-child(1), .slidernom3 .mainslider .limit .sliderinfo .sliderinfolimit .meta .metas-genres-values a:nth-child(2), .slidernom3 .mainslider .limit .sliderinfo .sliderinfolimit .meta .metas-genres-values a:nth-child(3) {
        display: inline-block;
        /* margin-right: -11px; */
    }
}
@media only screen and (max-width: 880px) {
    .slidernom3 .mainslider .limit .sliderinfo .sliderinfolimit .meta .metas-genres-values a {
        display: none;
    }
}
.slidernom3 .mainslider .limit .sliderinfo .sliderinfolimit .meta .metas-genres-values a {
    font-size: 12px;
    display: inline-block;
    border: 0px;
    transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease; /* Smooth transition for zoom, background, and color */
}

/* Apply the zoom-out and white box effect on hover */
.slidernom3 .mainslider .limit .sliderinfo .sliderinfolimit .meta .metas-genres-values a:hover {
    transform: scale(0.9); /* Zoom out on hover */
    background-color: #FFF; /* White background */
    color: #333; /* Darker color for the text */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Add a subtle shadow to make it stand out */
    border-radius: 4px; /* Slight rounding on corners */
}

/* Media query for smaller screens */
@media only screen and (max-width: 880px) {
    .slidernom3 .mainslider .limit .sliderinfo .sliderinfolimit .meta .metas-genres-values a:nth-child(1),
    .slidernom3 .mainslider .limit .sliderinfo .sliderinfolimit .meta .metas-genres-values a:nth-child(2),
    .slidernom3 .mainslider .limit .sliderinfo .sliderinfolimit .meta .metas-genres-values a:nth-child(3) {
        display: inline-block;
        margin-right: 2px;
    }
}

.bigcover {
    position: absolute;
    left: 0;
    z-index: 0;
    width: 100%;
    height: 336px;
    overflow: hidden;
    background: #00000000;
}




.bixbox {
    border-radius: 24px;
}

#footer {
    margin-top: 30px;
    text-align: center;
    line-height: 0px;
    padding: 0;
    font-size: 12px;
    color: #000000;
    background: #000000;
    position: absolute;
    width: 100%;
    bottom: 0;
}


.footercopyright p {
    margin: 0;
    margin-top: 0px;
    font-size: 0px;
    margin-bottom: 0;
    line-height: 0px;
    letter-spacing: -6.5px;
}

.footercopyright .sosmedmrgn {
    margin-top: 16px;
}


#footer .footermenu ul li a {
    color: #fff;
    font-size: 12px;
}



.slidernom3 .mainslider .limit {
    overflow: hidden; /* Hide any content that overflows */
    position: relative;
    width: 100%; /* Adjust the width to fit your needs */
}

.slidernom3 .mainslider .limit .bigbanner {
    min-height: 350px;
    filter: blur(28px);
    transform: scaleX(-1);

    /* Position and size adjustments */
    position: absolute;
    width: 200%; /* Double the width for tiling effect */
    animation: scrollBanner 20s linear infinite; /* Animation to scroll */
}

/* Keyframes to move from right to left */
@keyframes scrollBanner {
    0% {
        transform: translateX(0) scaleX(-1); /* Start position */
    }
    100% {
        transform: translateX(-50%) scaleX(-1); /* Move left */
    }
}


.text-primary {
    --bs-text-opacity: 1;
    color: red !important;
}

.max-w26 {
    max-width: 26rem;
	  border-radius: 34px;
	  background-color: red;
}



.main-info .wd-full .entry-content.entry-content-single {
    line-height: 24px;
    color: white;
    text-shadow: 4px 4px 6px rgba(0, 0, 0, 0.8);
}


.main-info .wd-full b, .main-info .info-desc .wd-full h2, .main-info .info-desc .flex-wrap .fmed b {
	
	    color: white;
    text-shadow: 1px 1px 6px rgba(0, 0, 0, 0.8);
}


.main-info .info-desc h1 {
	
	    color: white;
    text-shadow: 1px 1px 6px rgba(0, 0, 0, 0.8);
}


.package-card {
    border: 0px solid #e3e3e382 !important;
    border-radius: 61px !important;
    padding: 20px !important;
    text-align: center !important;
    background-color: #000000 !important;
    transition: transform 0.3s ease !important;
}


@import url('https://fonts.googleapis.com/css2?family=Mystery+Quest&display=swap');

.package-coins {
    font-size: 32px !important;
    color: #ffffff !important;
    margin: 23px 0 !important;
    font-family: 'Mystery Quest', cursive, sans-serif !important; /* Changed font to 'Mystery Quest' */
}



.package-coins img {
    width: 100px !important;
    height: 100% !important;
    display: block !important; 
    margin: 0 auto !important; 
	padding-bottom: 14px;
}












.btn-primary {
    --bs-btn-color: #fff;
    --bs-btn-bg: #000000;
    --bs-btn-border-color: #fd0d0d;
	  --bs-btn-hover-bg: #dc0000;
	  --bs-btn-hover-border-color: #ff0000;
	border-radius: 34px;



}


.bigcover {
    position: absolute;
    left: -25px;
    z-index: 0;
    width: 105%;
    height: 100% !important;
    background: #00000000;
}


.custom-button {

    background-color: #cf0000 !important;

}

.border-secondary {
    --bs-border-opacity: 0 !important;
    border-color: rgba(var(--bs-secondary-rgb), var(--bs-border-opacity)) !important;
    background-color: rgba(0, 0, 0, 0.25) !important;
    backdrop-filter: blur(9px) !important;
    border-radius: 20px !important;
}

.text-white {
	  padding-top: 14px !important;
    --bs-text-opacity: 1 !important;
    color: rgba(var(--bs-white-rgb), var(--bs-text-opacity)) !important;
    text-align: center !important;
}

.text-gray-300 {
    color: #d1d5db;
}

.modal-header .modal-title {
    color: #ff4c4c !important;
    font-weight: 600;
}

.modal-content {
    background: #0000 !important;
    color: #ffffff !important;
    border-radius: 12px !important;
    backdrop-filter: blur(23px) !important;
}

.bg-custom {
    background-color: #0000 !important;
}

.modal-footer .btn-primary {
    background-color: #4ca5ff !important;
    border-color: #4ca5ff !important;
    animation: glowEffect 1.5s infinite !important;
    box-shadow: 0 0 10px #4ca5ff !important; /* Initial glow effect */
}

.modal-footer .btn-primary:hover {
    background-color: #3578e5 !important;
    border-color: #3578e5 !important;
    box-shadow: 0 0 20px #3578e5 !important; /* Glow on hover */
}

@keyframes glowEffect {
    0% {
        background-color: #4ca5ff !important;
        border-color: #4ca5ff !important;
        box-shadow: 0 0 10px #4ca5ff !important; /* Subtle glow */
    }
    50% {
        background-color: #3578e5 !important;
        border-color: #3578e5 !important;
        box-shadow: 0 0 20px #3578e5 !important; /* Stronger glow */
    }
    100% {
        background-color: #4ca5ff !important;
        border-color: #4ca5ff !important;
        box-shadow: 0 0 10px #4ca5ff !important; /* Subtle glow */
    }
}


.text-center {
    text-align: center !important;
    font-size: 38px;
    font-family: 'Poppins', sans-serif;
    color: white;
    position: relative;
    animation: textGlow 1s infinite alternate; /* Animation added */
}


@media (min-width: 1200px) {
    .h3, h3 {
        font-size: 1.35rem !important;
        background-color: #a6050500  !important;
        border-radius: 50px !important;
        padding: 5px 5px !important; 
        max-width: 200px !important; 
        margin: 0 auto !important; 
        text-align: center !important; 
    }
}




.btn-blue-300 {
    background-color: black !important;
    border: 1px solid red !important;
}

.card-header:first-child {
    background-color: #000000;
}


.card-body {
    background: #000000 !important;
		border: 10 !important;
}



.card {
    --bs-card-inner-border-radius: 0;
}












h2.mb-4 {
    color: white !important;
    font-size: 48px !important;
    text-align: center !important;
    position: relative !important;
    padding: 50px !important;
    margin: 50px !important;
    animation: coolerGlow 1.5s infinite alternate;
}

@keyframes coolerGlow {
    0% {
        text-shadow: 0 0 5px red, 0 0 20px red, 0 0 40px red, 0 0 60px red;
    }
    50% {
        text-shadow: 0 0 10px orange, 0 0 20px #a90aff, 0 0 40px #a90aff, 0 0 60px yellow;
    }
    100% {
        text-shadow: 0 0 10px red, 0 0 20px #a90aff, 0 0 40px #a90aff, 0 0 80px #a90aff;
    }
}

h2.mb-4::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 180px;
    height: 100px;
    background: radial-gradient(ellipse, rgba(169, 10, 255, 0.3), transparent);
    border: 2px solid rgba(169, 10, 255, 0.5);
    border-radius: 50% 30%;
    transform: translate(-50%, -50%);
    animation: rotateRings 4s linear infinite;
    z-index: -1;
}

h2.mb-4::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 220px;
    height: 120px;
    border: 2px dashed rgba(169, 10, 255, 0.5);
    border-radius: 40% 60%;
    transform: translate(-50%, -50%);
    animation: pulseRings 2.5s infinite alternate ease-in-out;
    z-index: -1;
}

@keyframes rotateRings {
    0% {
        transform: translate(-50%, -50%) rotate(0deg);
    }
    100% {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}

@keyframes pulseRings {
    0% {
        opacity: 0.5;
        transform: translate(-50%, -50%) scale(1);
    }
    100% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1.1);
    }
}



#searchchapter {
	
	border-radius: 20px;
	border: 1px solid #700000;
	padding-top: 4px;
}

#searchchapter {
    text-align: center; /* Centers the text horizontally */
    line-height: 40px; /* Adjust to match the height of the input for vertical centering */
    height: 40px; /* Set the height of the input */
}


@media only screen and (max-width: 890px) {
    #main-menu.shwx {
        background-image: initial;
        background-color: #000000d6;
    }
}



@media only screen and (max-width: 890px) {
    #main-menu.shwx ul li a {
        text-align: center;
        height: auto !important;
        line-height: 51px !important;
        border-radius: 5px;
        font-weight: 400;
        font-size: 18px !important;
        color: #d3d3d3;
        padding: 0 !important;
    }
}



@media only screen and (max-width: 890px) {
    #main-menu.shwx ul {
        margin-top: 73px;
    }
}



@media only screen and (max-width: 890px) {
    #main-menu.shwx {
        top: 0px;
			z-index: 99999 !important;

    }
}


.postarea {
    overflow: visible;
}



/* -------------------------------- */
/*  Support Button                  */
/* -------------------------------- */
#sb-support-btn {
  display: block;
  margin: 12px auto;
  background: #df00dd;
  color: #fff;
  cursor: pointer;
  border-radius: 11px;
  font-size: 16px;
  text-align: center;
  width: 100%;
  z-index: 1000;    
	    padding: 7px;/* ensure button is above page text */
}

/* -------------------------------- */
/*  Primary Buttons                 */
/* -------------------------------- */
.sb-button {
  background: #ac0000;
}
.sb-button:hover {
  background-color: transparent;
  color: #ac0000;
  transform: none;
}

/* -------------------------------- */
/*  Modal & Layout                  */
/* -------------------------------- */
.sb-modal {
  display: none;
  position: fixed;
  inset: 0;
  background: rgba(0,0,0,0.6);
  z-index: 9999;               /* ensure backdrop is on top */
}
.sb-modal-content {
  background: rgba(0,0,0,0.6);
  backdrop-filter: blur(2px);
  -webkit-backdrop-filter: blur(8px);
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin: 2% auto;
  padding: 20px;
  width: 90%;
  max-width: 380px;
  border-radius: 8px;
  animation: slideDownFadeIn 0.4s forwards;
  box-sizing: border-box;
  position: relative;
  z-index: 10000;              /* ensure content is above everything */
}

/* Modal Heading */
.sb-modal-content h2 {
  font-size: 1.5rem;
  margin: 0 0 18px;
  color: #fff;
}

/* Close Icon */
.sb-close {
  position: absolute;
  top: 10px;
  right: 14px;
  font-size: 24px;
  color: #ccc;
  cursor: pointer;
}
.sb-close:hover {
  color: #fff;
}

/* -------------------------------- */
/*  Tabs                            */
/* -------------------------------- */
.sb-tabs {
  display: flex;
  width: 100%;
  margin-bottom: 3px;
}
.sb-tabs button {
  flex: 1;
  padding: 6px 0;
  background: #222;
  color: #ccc;
  border: none;
  border-radius: 4px 4px 0 0;
  font-size: 0.95rem;
  transition: background 0.2s;
  margin-bottom: 4px;
}
.sb-tabs button.active {
  background: #e53935;
  color: #fff;
}
.sb-tabs button:not(.active):hover {
  background: #333;
  color: #fff;
}

/* -------------------------------- */
/*  Note Box                        */
/* -------------------------------- */
.sb-note {
  background: #222;
  border-left: 3px solid #e53935;
  padding: 8px 15px;
  margin: 10px 0;
  font-size: 0.9rem;
  line-height: 1.4;
  color: #ddd;
  width: 100%;
  box-sizing: border-box;
  border-radius: 4px;
}

/* -------------------------------- */
/*  Custom File Input (Receipt)     */
/* -------------------------------- */
.sb-input-file {
  position: relative;
  display: inline-block;
  width: 100%;
  max-width: 150px;
  color: transparent;
  margin: 15px 0;
}
.sb-input-file::-webkit-file-upload-button,
.sb-input-file::file-selector-button {
  visibility: hidden;
}
.sb-input-file::before {
  content: "Choose receipt…";
  display: inline-block;
  background: #e53935;
  color: #fff;
  padding: 8px 12px;
  border-radius: 4px;
  cursor: pointer;
  font-weight: 600;
  margin-right: 8px;
  transition: background 0.2s, transform 0.1s;
}
.sb-input-file:hover::before {
  background: #c62828;
  transform: translateY(-1px);
}
.sb-input-file:active::before {
  transform: scale(0.98);
}
.sb-input-file::after {
  content: attr(data-file-name);
  display: inline-block;
  color: #eee;
  font-style: italic;
  vertical-align: middle;
  max-width: calc(100% - 130px);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* -------------------------------- */
/*  Discord Username Inputs         */
/* -------------------------------- */
#sb-kofi-discord,
#sb-crypto-discord {
  width: 100%;
  padding: 12px 16px;
  background: #2f3136;
  border: 2px solid #40444b;
  border-radius: 50px;
  color: #dcddde;
  font-size: 1rem;
  box-sizing: border-box;
  transition: border-color 0.2s, box-shadow 0.2s;
  margin-top: 15px;
}
#sb-kofi-discord::placeholder,
#sb-crypto-discord::placeholder {
  color: #72767d;
  font-style: italic;
}
#sb-kofi-discord:focus,
#sb-crypto-discord:focus {
  outline: none;
  border-color: #7289da;
  box-shadow: 0 0 0 2px rgba(114,137,218,0.4);
  background: #36393f;
}

/* -------------------------------- */
/*  Animations                      */
/* -------------------------------- */
@keyframes slideDownFadeIn {
  from { opacity: 0; transform: translateY(-20px); }
  to   { opacity: 1; transform: translateY(0); }
}


.sb-tab-content {
    display: flex
;
    flex-direction: column;
    align-items: center;
    gap: 5px;
    width: 100%;
    background: #11111100;
    padding: 12px;
    border-radius: 0 4px 4px 4px;
    max-height: 160vh;
    overflow-y: auto;
    box-sizing: border-box;align-content
}


.sb-input-file {
  margin: 0 auto;
}
.sb-input-file {
  display: flex;
  justify-content: center;
  align-items: center;
}




@media (max-width: 600px) {

  #sb-support-btn {
    font-size: 14px;
    padding: 10px;
    width: 90%;
    margin: 10px auto;
  }

  .sb-modal-content {
    width: 95%;
    padding: 16px;
    margin: 5% auto;
    max-width: 320px;
  }

  .sb-tabs button {
    font-size: 0.85rem;
    padding: 8px 0;
  }

  .sb-note {
    font-size: 0.85rem;
    padding: 10px 12px;
  }

  .sb-input-file::before {
    padding: 6px 10px;
    font-size: 0.9rem;
  }

  .sb-input-file::after {
    font-size: 0.8rem;
    max-width: calc(100% - 100px);
  }

  #sb-kofi-discord,
  #sb-crypto-discord {
    padding: 10px 14px;
    font-size: 0.95rem;
  }

  .sb-tab-content {
    padding: 10px;
    gap: 8px;
  }

  .sb-close {
    font-size: 22px;
    top: 8px;
    right: 10px;
  }

}



.crypto-rune-notice {
  font-weight: 700;
  font-size: 22px;
  text-align: center;
  margin: 25px auto;
  /* Gradient text */
  background: linear-gradient(90deg, #FFD700, #FF8C00, #8B4513, #FFD700);
  background-size: 300% 300%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  /* Glow and float animation */
  animation: gradientShift 6s ease infinite, 
             glowPulse 2s ease-in-out infinite, 
             floatUpDown 3s ease-in-out infinite;
}

/* 1. Gradient shifting */
@keyframes gradientShift {
  0%   { background-position:   0% 50%; }
  50%  { background-position: 100% 50%; }
  100% { background-position:   0% 50%; }
}



/* 3. Gentle float up/down */
@keyframes floatUpDown {
  0%,100% { transform: translateY(0); }
  50%      { transform: translateY(-6px); }
}


.ts-wpop-nav-tabs {
  position: relative;
  display: flex;
  padding: 0;
  margin: 0 0 1em;
  list-style: none;
}

.ts-wpop-nav-tabs li {
  position: relative;
  margin: 0;
  padding: 0;
}

/* the underline pseudo-element */
.ts-wpop-nav-tabs li::after {
  content: "";
  position: absolute;
  bottom: -3px;              /* sits just under the border */
  left: 50%;                 /* center point */
  width: 55px;               /* your fixed width */
  height: 2.5px;
  background: #fff;
  opacity: 0;                /* hidden by default */
  transform: translateX(-50%) scaleX(0.5);
  transition: opacity 0.3s ease,
              transform 0.3s ease;
}

.ts-wpop-nav-tabs li.active::after {
  opacity: 1;                /* show */
  transform: translateX(-50%) scaleX(1);
}


/* optional: color change on active text */
.ts-wpop-nav-tabs li span.ts-wpop-tab {
  display: block;
  padding: 0.5em 1em;
  color: #ccc;
  cursor: pointer;
  transition: color 0.3s ease;
}
.ts-wpop-nav-tabs li.active span.ts-wpop-tab {
  color: #fff;
}








.new-icon-label {
  display: inline-flex;
  align-items: center;
  font-weight: bold;
  color: #fff;
  font-size: 14px;
  margin-left: 10px;
  float: right;
  pointer-events: none;
}

.new-icon-label i {
  margin-right: 5px;
  color: #fff;
  font-size: 16px;
  animation: hatFloatSide 4s ease-in-out infinite, hatBlink 1.5s linear infinite;
}

/* Floating diagonally (left-right and slightly up-down) */
@keyframes hatFloatSide {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }
  25% {
    transform: translate(-3px, -2px) rotate(-4deg);
  }
  50% {
    transform: translate(3px, 1px) rotate(3deg);
  }
  75% {
    transform: translate(-2px, 2px) rotate(-2deg);
  }
  100% {
    transform: translate(0, 0) rotate(0deg);
  }
}

/* Lightning-style blinking */
@keyframes hatBlink {
  0%, 10%, 90%, 100% {
    opacity: 1;
  }
  40%, 60% {
    opacity: 0.3;
  }
  50% {
    opacity: 0;
  }
}





.new-icon-label {
  display: inline-flex !important;
  align-items: center;
  font-weight: bold;
  color: #fff;
  font-size: 14px;
  margin-left: 10px;
  pointer-events: none;
  position: relative;
  z-index: 99;
}

.new-icon-label i {
  margin-right: 8px;
  color: #fff;
  font-size: 16px;
  animation: hatFloatSide 4s ease-in-out infinite, hatBlink 1.5s linear infinite;
}

/* Floating movement (left-right and up-down with rotation) */
@keyframes hatFloatSide {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }
  25% {
    transform: translate(-1.5px, -0.5px) rotate(-2deg); /* Less upward movement */
  }
  50% {
    transform: translate(1.5px, 0.2px) rotate(2deg); /* Less downward movement */
  }
  75% {
    transform: translate(-1px, 0.5px) rotate(-1deg); /* Less downward movement */
  }
  100% {
    transform: translate(0, 0) rotate(0deg);
  }
}


.listupd .utao .uta .luf ul li a {
	
	margin-right: 4px

}

.listupd .utao .uta {
    border-bottom: 0px solid #312f40;
}




.slidernom3 .mainslider .limit .sliderinfo .sliderinfolimit .start-reading span {
    display: inline-block;
    background: #00000078;  
    color: white;
    font-weight: 500;
    font-size: 14px;
    line-height: 35px;
    padding: 0 20px;
    border-radius: 14px;
    transition: transform 0.3s ease;  
    cursor: pointer;
}

.slidernom3 .mainslider .limit .sliderinfo .sliderinfolimit .start-reading span:hover {
    transform: scale(1.1); 
}







@media only screen and (max-width: 500px) { .mainslider .limit .sliderinfo .sliderinfolimit .desc p {
    font-size: 9px;
    line-height: 12px;
}


		</style>
		<style>:root{--swal2-outline: 0 0 0 3px rgba(100, 150, 200, 0.5);--swal2-container-padding: 0.625em;--swal2-backdrop: rgba(0, 0, 0, 0.4);--swal2-backdrop-transition: background-color 0.1s;--swal2-width: 32em;--swal2-padding: 0 0 1.25em;--swal2-border: none;--swal2-border-radius: 0.3125rem;--swal2-background: white;--swal2-color: #545454;--swal2-show-animation: swal2-show 0.3s;--swal2-hide-animation: swal2-hide 0.15s forwards;--swal2-icon-zoom: 1;--swal2-icon-animations: true;--swal2-title-padding: 0.8em 1em 0;--swal2-html-container-padding: 1em 1.6em 0.3em;--swal2-input-border: 1px solid #d9d9d9;--swal2-input-border-radius: 0.1875em;--swal2-input-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.06), 0 0 0 3px transparent;--swal2-input-background: transparent;--swal2-input-transition: border-color 0.2s, box-shadow 0.2s;--swal2-input-hover-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.06), 0 0 0 3px transparent;--swal2-input-focus-border: 1px solid #b4dbed;--swal2-input-focus-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.06), 0 0 0 3px $swal2-outline-color;--swal2-progress-step-background: #add8e6;--swal2-validation-message-background: #f0f0f0;--swal2-validation-message-color: #666;--swal2-footer-border-color: #eee;--swal2-footer-background: transparent;--swal2-footer-color: inherit;--swal2-timer-progress-bar-background: rgba(0, 0, 0, 0.3);--swal2-close-button-position: initial;--swal2-close-button-inset: auto;--swal2-close-button-font-size: 2.5em;--swal2-close-button-color: #ccc;--swal2-close-button-transition: color 0.2s, box-shadow 0.2s;--swal2-close-button-outline: initial;--swal2-close-button-box-shadow: inset 0 0 0 3px transparent;--swal2-close-button-focus-box-shadow: inset var(--swal2-outline);--swal2-close-button-hover-transform: none;--swal2-actions-justify-content: center;--swal2-actions-width: auto;--swal2-actions-margin: 1.25em auto 0;--swal2-actions-padding: 0;--swal2-actions-border-radius: 0;--swal2-actions-background: transparent;--swal2-action-button-transition: background-color 0.2s, box-shadow 0.2s;--swal2-action-button-hover: black 10%;--swal2-action-button-active: black 10%;--swal2-confirm-button-box-shadow: none;--swal2-confirm-button-border-radius: 0.25em;--swal2-confirm-button-background-color: #7066e0;--swal2-confirm-button-color: #fff;--swal2-deny-button-box-shadow: none;--swal2-deny-button-border-radius: 0.25em;--swal2-deny-button-background-color: #dc3741;--swal2-deny-button-color: #fff;--swal2-cancel-button-box-shadow: none;--swal2-cancel-button-border-radius: 0.25em;--swal2-cancel-button-background-color: #6e7881;--swal2-cancel-button-color: #fff;--swal2-toast-show-animation: swal2-toast-show 0.5s;--swal2-toast-hide-animation: swal2-toast-hide 0.1s forwards;--swal2-toast-border: none;--swal2-toast-box-shadow: 0 0 1px hsl(0deg 0% 0% / 0.075), 0 1px 2px hsl(0deg 0% 0% / 0.075), 1px 2px 4px hsl(0deg 0% 0% / 0.075), 1px 3px 8px hsl(0deg 0% 0% / 0.075), 2px 4px 16px hsl(0deg 0% 0% / 0.075)}[data-swal2-theme=dark]{--swal2-dark-theme-black: #19191a;--swal2-dark-theme-white: #e1e1e1;--swal2-background: var(--swal2-dark-theme-black);--swal2-color: var(--swal2-dark-theme-white);--swal2-footer-border-color: #555;--swal2-input-background: color-mix(in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10%);--swal2-validation-message-background: color-mix( in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10% );--swal2-validation-message-color: var(--swal2-dark-theme-white);--swal2-timer-progress-bar-background: rgba(255, 255, 255, 0.7)}@media(prefers-color-scheme: dark){[data-swal2-theme=auto]{--swal2-dark-theme-black: #19191a;--swal2-dark-theme-white: #e1e1e1;--swal2-background: var(--swal2-dark-theme-black);--swal2-color: var(--swal2-dark-theme-white);--swal2-footer-border-color: #555;--swal2-input-background: color-mix(in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10%);--swal2-validation-message-background: color-mix( in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10% );--swal2-validation-message-color: var(--swal2-dark-theme-white);--swal2-timer-progress-bar-background: rgba(255, 255, 255, 0.7)}}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px var(--swal2-backdrop)}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{inset:0 auto auto 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{inset:0 0 auto auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{inset:0 auto auto 0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{inset:50% auto auto 0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{inset:50% auto auto 50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{inset:50% 0 auto auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{inset:auto auto 0 0}body.swal2-toast-shown .swal2-container.swal2-bottom{inset:auto auto 0 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{inset:auto 0 0 auto}@media print{body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown) .swal2-container{position:static !important}}div:where(.swal2-container){display:grid;position:fixed;z-index:1060;inset:0;box-sizing:border-box;grid-template-areas:"top-start     top            top-end" "center-start  center         center-end" "bottom-start  bottom-center  bottom-end";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:var(--swal2-container-padding);overflow-x:hidden;transition:var(--swal2-backdrop-transition);-webkit-overflow-scrolling:touch}div:where(.swal2-container).swal2-backdrop-show,div:where(.swal2-container).swal2-noanimation{background:var(--swal2-backdrop)}div:where(.swal2-container).swal2-backdrop-hide{background:rgba(0,0,0,0) !important}div:where(.swal2-container).swal2-top-start,div:where(.swal2-container).swal2-center-start,div:where(.swal2-container).swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}div:where(.swal2-container).swal2-top,div:where(.swal2-container).swal2-center,div:where(.swal2-container).swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}div:where(.swal2-container).swal2-top-end,div:where(.swal2-container).swal2-center-end,div:where(.swal2-container).swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}div:where(.swal2-container).swal2-top-start>.swal2-popup{align-self:start}div:where(.swal2-container).swal2-top>.swal2-popup{grid-column:2;place-self:start center}div:where(.swal2-container).swal2-top-end>.swal2-popup,div:where(.swal2-container).swal2-top-right>.swal2-popup{grid-column:3;place-self:start end}div:where(.swal2-container).swal2-center-start>.swal2-popup,div:where(.swal2-container).swal2-center-left>.swal2-popup{grid-row:2;align-self:center}div:where(.swal2-container).swal2-center>.swal2-popup{grid-column:2;grid-row:2;place-self:center center}div:where(.swal2-container).swal2-center-end>.swal2-popup,div:where(.swal2-container).swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;place-self:center end}div:where(.swal2-container).swal2-bottom-start>.swal2-popup,div:where(.swal2-container).swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}div:where(.swal2-container).swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;place-self:end center}div:where(.swal2-container).swal2-bottom-end>.swal2-popup,div:where(.swal2-container).swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;place-self:end end}div:where(.swal2-container).swal2-grow-row>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}div:where(.swal2-container).swal2-grow-column>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}div:where(.swal2-container).swal2-no-transition{transition:none !important}div:where(.swal2-container)[popover]{width:auto;border:0}div:where(.swal2-container) div:where(.swal2-popup){display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:var(--swal2-width);max-width:100%;padding:var(--swal2-padding);border:var(--swal2-border);border-radius:var(--swal2-border-radius);background:var(--swal2-background);color:var(--swal2-color);font-family:inherit;font-size:1rem;container-name:swal2-popup}div:where(.swal2-container) div:where(.swal2-popup):focus{outline:none}div:where(.swal2-container) div:where(.swal2-popup).swal2-loading{overflow-y:hidden}div:where(.swal2-container) div:where(.swal2-popup).swal2-draggable{cursor:grab}div:where(.swal2-container) div:where(.swal2-popup).swal2-draggable div:where(.swal2-icon){cursor:grab}div:where(.swal2-container) div:where(.swal2-popup).swal2-dragging{cursor:grabbing}div:where(.swal2-container) div:where(.swal2-popup).swal2-dragging div:where(.swal2-icon){cursor:grabbing}div:where(.swal2-container) h2:where(.swal2-title){position:relative;max-width:100%;margin:0;padding:var(--swal2-title-padding);color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;overflow-wrap:break-word;cursor:initial}div:where(.swal2-container) div:where(.swal2-actions){display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:var(--swal2-actions-justify-content);width:var(--swal2-actions-width);margin:var(--swal2-actions-margin);padding:var(--swal2-actions-padding);border-radius:var(--swal2-actions-border-radius);background:var(--swal2-actions-background)}div:where(.swal2-container) div:where(.swal2-loader){display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}div:where(.swal2-container) button:where(.swal2-styled){margin:.3125em;padding:.625em 1.1em;transition:var(--swal2-action-button-transition);border:none;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}div:where(.swal2-container) button:where(.swal2-styled):not([disabled]){cursor:pointer}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm){border-radius:var(--swal2-confirm-button-border-radius);background:initial;background-color:var(--swal2-confirm-button-background-color);box-shadow:var(--swal2-confirm-button-box-shadow);color:var(--swal2-confirm-button-color);font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm):hover{background-color:color-mix(in srgb, var(--swal2-confirm-button-background-color), var(--swal2-action-button-hover))}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm):active{background-color:color-mix(in srgb, var(--swal2-confirm-button-background-color), var(--swal2-action-button-active))}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny){border-radius:var(--swal2-deny-button-border-radius);background:initial;background-color:var(--swal2-deny-button-background-color);box-shadow:var(--swal2-deny-button-box-shadow);color:var(--swal2-deny-button-color);font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny):hover{background-color:color-mix(in srgb, var(--swal2-deny-button-background-color), var(--swal2-action-button-hover))}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny):active{background-color:color-mix(in srgb, var(--swal2-deny-button-background-color), var(--swal2-action-button-active))}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel){border-radius:var(--swal2-cancel-button-border-radius);background:initial;background-color:var(--swal2-cancel-button-background-color);box-shadow:var(--swal2-cancel-button-box-shadow);color:var(--swal2-cancel-button-color);font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel):hover{background-color:color-mix(in srgb, var(--swal2-cancel-button-background-color), var(--swal2-action-button-hover))}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel):active{background-color:color-mix(in srgb, var(--swal2-cancel-button-background-color), var(--swal2-action-button-active))}div:where(.swal2-container) button:where(.swal2-styled):focus-visible{outline:none;box-shadow:var(--swal2-action-button-focus-box-shadow)}div:where(.swal2-container) button:where(.swal2-styled)[disabled]:not(.swal2-loading){opacity:.4}div:where(.swal2-container) button:where(.swal2-styled)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-footer){margin:1em 0 0;padding:1em 1em 0;border-top:1px solid var(--swal2-footer-border-color);background:var(--swal2-footer-background);color:var(--swal2-footer-color);font-size:1em;text-align:center;cursor:initial}div:where(.swal2-container) .swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:var(--swal2-border-radius);border-bottom-left-radius:var(--swal2-border-radius)}div:where(.swal2-container) div:where(.swal2-timer-progress-bar){width:100%;height:.25em;background:var(--swal2-timer-progress-bar-background)}div:where(.swal2-container) img:where(.swal2-image){max-width:100%;margin:2em auto 1em;cursor:initial}div:where(.swal2-container) button:where(.swal2-close){position:var(--swal2-close-button-position);inset:var(--swal2-close-button-inset);z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:var(--swal2-close-button-transition);border:none;border-radius:var(--swal2-border-radius);outline:var(--swal2-close-button-outline);background:rgba(0,0,0,0);color:var(--swal2-close-button-color);font-family:monospace;font-size:var(--swal2-close-button-font-size);cursor:pointer;justify-self:end}div:where(.swal2-container) button:where(.swal2-close):hover{transform:var(--swal2-close-button-hover-transform);background:rgba(0,0,0,0);color:#f27474}div:where(.swal2-container) button:where(.swal2-close):focus-visible{outline:none;box-shadow:var(--swal2-close-button-focus-box-shadow)}div:where(.swal2-container) button:where(.swal2-close)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-html-container){z-index:1;justify-content:center;margin:0;padding:var(--swal2-html-container-padding);overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;overflow-wrap:break-word;word-break:break-word;cursor:initial}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea),div:where(.swal2-container) select:where(.swal2-select),div:where(.swal2-container) div:where(.swal2-radio),div:where(.swal2-container) label:where(.swal2-checkbox){margin:1em 2em 3px}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea){box-sizing:border-box;width:auto;transition:var(--swal2-input-transition);border:var(--swal2-input-border);border-radius:var(--swal2-input-border-radius);background:var(--swal2-input-background);box-shadow:var(--swal2-input-box-shadow);color:inherit;font-size:1.125em}div:where(.swal2-container) input:where(.swal2-input).swal2-inputerror,div:where(.swal2-container) input:where(.swal2-file).swal2-inputerror,div:where(.swal2-container) textarea:where(.swal2-textarea).swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}div:where(.swal2-container) input:where(.swal2-input):hover,div:where(.swal2-container) input:where(.swal2-file):hover,div:where(.swal2-container) textarea:where(.swal2-textarea):hover{box-shadow:var(--swal2-input-hover-box-shadow)}div:where(.swal2-container) input:where(.swal2-input):focus,div:where(.swal2-container) input:where(.swal2-file):focus,div:where(.swal2-container) textarea:where(.swal2-textarea):focus{border:var(--swal2-input-focus-border);outline:none;box-shadow:var(--swal2-input-focus-box-shadow)}div:where(.swal2-container) input:where(.swal2-input)::placeholder,div:where(.swal2-container) input:where(.swal2-file)::placeholder,div:where(.swal2-container) textarea:where(.swal2-textarea)::placeholder{color:#ccc}div:where(.swal2-container) .swal2-range{margin:1em 2em 3px;background:var(--swal2-background)}div:where(.swal2-container) .swal2-range input{width:80%}div:where(.swal2-container) .swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}div:where(.swal2-container) .swal2-range input,div:where(.swal2-container) .swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}div:where(.swal2-container) .swal2-input{height:2.625em;padding:0 .75em}div:where(.swal2-container) .swal2-file{width:75%;margin-right:auto;margin-left:auto;background:var(--swal2-input-background);font-size:1.125em}div:where(.swal2-container) .swal2-textarea{height:6.75em;padding:.75em}div:where(.swal2-container) .swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:var(--swal2-input-background);color:inherit;font-size:1.125em}div:where(.swal2-container) .swal2-radio,div:where(.swal2-container) .swal2-checkbox{align-items:center;justify-content:center;background:var(--swal2-background);color:inherit}div:where(.swal2-container) .swal2-radio label,div:where(.swal2-container) .swal2-checkbox label{margin:0 .6em;font-size:1.125em}div:where(.swal2-container) .swal2-radio input,div:where(.swal2-container) .swal2-checkbox input{flex-shrink:0;margin:0 .4em}div:where(.swal2-container) label:where(.swal2-input-label){display:flex;justify-content:center;margin:1em auto 0}div:where(.swal2-container) div:where(.swal2-validation-message){align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:var(--swal2-validation-message-background);color:var(--swal2-validation-message-color);font-size:1em;font-weight:300}div:where(.swal2-container) div:where(.swal2-validation-message)::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}div:where(.swal2-container) .swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}div:where(.swal2-container) .swal2-progress-steps li{display:inline-block;position:relative}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:var(--swal2-progress-step-background);color:#fff}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:var(--swal2-progress-step-background)}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}div:where(.swal2-icon){position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;zoom:var(--swal2-icon-zoom);border:.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}div:where(.swal2-icon) .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}div:where(.swal2-icon).swal2-error{border-color:#f27474;color:#f27474}div:where(.swal2-icon).swal2-error .swal2-x-mark{position:relative;flex-grow:1}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}}div:where(.swal2-icon).swal2-warning{border-color:#f8bb86;color:#f8bb86}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}}div:where(.swal2-icon).swal2-info{border-color:#3fc3ee;color:#3fc3ee}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}}div:where(.swal2-icon).swal2-question{border-color:#87adbd;color:#87adbd}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}}div:where(.swal2-icon).swal2-success{border-color:#a5dc86;color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;border-radius:50%}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}div:where(.swal2-icon).swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}div:where(.swal2-icon).swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:var(--swal2-show-animation)}.swal2-hide{animation:var(--swal2-hide-animation)}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;border:var(--swal2-toast-border);background:var(--swal2-background);box-shadow:var(--swal2-toast-box-shadow);pointer-events:all}.swal2-toast>*{grid-column:2}.swal2-toast h2:where(.swal2-title){margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-toast .swal2-loading{justify-content:center}.swal2-toast input:where(.swal2-input){height:2em;margin:.5em;font-size:1em}.swal2-toast .swal2-validation-message{font-size:1em}.swal2-toast div:where(.swal2-footer){margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-toast button:where(.swal2-close){grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-toast div:where(.swal2-html-container){margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-toast div:where(.swal2-html-container):empty{padding:0}.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-toast div:where(.swal2-actions){justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-toast button:where(.swal2-styled){margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;border-radius:50%}.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}@container swal2-popup style(--swal2-icon-animations:true){.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}}.swal2-toast.swal2-show{animation:var(--swal2-toast-show-animation)}.swal2-toast.swal2-hide{animation:var(--swal2-toast-hide-animation)}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}</style><script src="https://witchscans.com/wp-includes/js/wp-emoji-release.min.js?ver=6.8.2" defer=""></script><style>.\[\&_\.gdprAdTransparencyCogWheelButton\]\:\!pjra-z-\[5\],
AD-SLOT,
DFP-AD,
[class^="adDisplay-module"],
[class^="amp-ad-"],
[data-ad-cls],
[data-adbridg-ad-class],
[data-adshim],
[data-asg-ins],
[data-block-type="ad"],
[data-cl-spot-id],
[data-css-class="dfp-inarticle"],
[data-d-ad-id],
[data-desktop-ad-id],
[data-dynamic-ads],
[data-ez-name],
[data-freestar-ad][id],
[data-id^="div-gpt-ad"],
[data-identity="adhesive-ad"],
[data-m-ad-id],
[data-mobile-ad-id],
[data-rc-widget],
[data-role="tile-ads-module"],
[data-template-type="nativead"],
[data-testid="adBanner-wrapper"],
[data-testid="ad_testID"],
[data-testid="prism-ad-wrapper"],
[data-testid^="section-AdRowBillboard"],
[data-type="ad-vertical"],
[data-wpas-zoneid],
[href$="/sexdating.php"],
[id^="ad-wrap-"],
[id^="ad_sky"],
[id^="ad_slider"],
[id^="section-ad-banner"],
[onclick^="location.href='https://1337x.vpnonly.site/"],
a-ad,
a[data-href^="http://ads.trafficjunky.net/"],
a[data-url^="https://vulpix.bet/?ref="],
a[onclick^="window.location.replace('https://random-affiliate.atimaze.com/"],
a[style="width:100%;height:100%;z-index:10000000000000000;position:absolute;top:0;left:0;"],
ad-shield-ads,
ad-slot,
app-ad,
app-advertisement,
app-large-ad,
aside[id^="adrotate_widgets-"],
atf-ad-slot,
bottomadblock,
display-ad-component,
display-ads,
div[class$="-adlabel"],
div[class^="Adstyled__AdWrapper-"],
div[data-ad-placeholder],
div[data-ad-region],
div[data-ad-wrapper],
div[data-adname],
div[data-adunit-path],
div[data-adunit],
div[data-adzone],
div[data-alias="300x250 Ad 1"],
div[data-alias="300x250 Ad 2"],
div[data-contentexchange-widget],
div[data-dfp-id],
div[data-id-advertdfpconf],
div[id^="ad-div-"],
div[id^="ad-position-"],
div[id^="adngin-"],
div[id^="adrotate_widgets-"],
div[id^="adspot-"],
div[id^="crt-"][style],
div[id^="div-ads-"],
div[id^="google_dfp_"],
div[id^="gpt_ad_"],
div[id^="lazyad-"],
div[id^="optidigital-adslot"],
div[id^="rc-widget-"],
div[id^="st"][style^="z-index: 999999999;"],
div[id^="sticky_ad_"],
div[id^="vuukle-ad-"],
div[ow-ad-unit-wrapper],
gpt-ad,
guj-ad,
hl-adsense,
img[src^="https://images.purevpnaffiliates.com"],
img[src^="https://s-img.adskeeper.com/"],
ps-connatix-module,
span[data-ez-ph-id],
span[id^="ezoic-pub-ad-placeholder-"],
topadblock,
zeus-ad,
broadstreet-zone-container,
iframe[scrolling="no"][sandbox*="allow-popups allow-modals"][style^="width: 100%; height: 100%; border: none;"],
[class^="tile-picker__CitrusBannerContainer-sc-"],
citrus-ad-wrapper,
div[id*="MarketGid"],
[onclick*="content.ad/"],
AMP-AD,
amp-ad,
amp-ad-custom,
amp-connatix-player,
amp-fx-flying-carpet,
a[data-oburl^="https://paid.outbrain.com/network/redir?"],
a[data-redirect^="https://paid.outbrain.com/network/redir?"],
a[onmousedown^="this.href='https://paid.outbrain.com/network/redir?"] + .ob_source,
[data-taboola-options],
[data-testid="commercial-label-taboola"],
[data-testid^="taboola-"],
div[id^="taboola-stream-"],
div[id^="zergnet-widget"],
html[lang] > body.ishome > div.adult + main.main,
html[lang] > body:not([class]):not([id]):not([style]) > div.background-container > div.container > div.captcha-box,
html[lang] > body.startnew > div#sections > section#section_uname,
html[lang] > body:not([style]) > div.captchaBody,
html[lang] > body#body > * > div.cv-xwrapper > div.cvc > div.cv-inner,
html[lang] > body#body > * > div.cvh.BlockClicksActivityBusy,
html#html[sti][vic][lang] > body#allbody,
html > body > div.container.m-p > #checkbox-window.checkbox-window,
html[lang] > body:not([class]):not([id]):not([style]) > div.container > div.recaptcha-box,
body > .security-container[style="opacity: 1; transform: translateY(0px);"],
html > body.hold-transition.theme-primary.bg-img[style^="background-image"][style*="wallpaperaccess.com"][style*="background-repeat"][style*="background-size"],
html > body > div.container > form#unsubscribe-form[onsubmit="submitUnsubscribeForm(event)"],
html > body > div.content > dl > dd.dd1 > div.min_sider > form#form1[action="unsubscribe.php"],
html > body.body > div.container > div.content > form > table.optoutForm,
div[id][style^="position: fixed; inset: 0px; z-index: 2147483647; background: black"][style*="opacity: 0.01"],
div[class$="player-promo-col"],
div#spot-holder.spot-holder[style="display: block;"],
a[dontfo=""][style$="position: absolute; z-index: 2147483647;"],
[data-ad-module]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-ad-width]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-adblockkey]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(html):not(.adsbygoogle),
[data-advadstrackid]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-ad-manager-id]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
div[style^="z-index: 999999; background-image: url(\"data:image/gif;base64,"][style$="position: absolute;"],
a[onclick="openAuc();"],
div[style="position: fixed; display: block; width: 100%; height: 100%; inset: 0px; background-color: rgba(0, 0, 0, 0); z-index: 300000;"],
div[style^="position:fixed;inset:0px;z-index:2147483647;background:black;opacity:0.01"],
div[style^="position: fixed; inset: 0px; z-index: 2147483647; background: black; opacity: 0.01"],
iframe.lazyloaded[data-src^="https://rcm-fe.amazon-adsystem.com/"],
#player div[style$="cursor: pointer; position: absolute; width: 100%; height: 100%; padding: 1rem; z-index: 2147483647;"],
html[lang][style^="--main-bg-color"] > body:not([class]):not([id]) > div#container[style="visibility: visible;"] > div#banner[style="opacity:0"] ~ main:not([class]):not([id]) > div#message,
[onclick*="postlnk.com"],
[data-lnguri*="vipbox"],
[class^="div-gpt-ad"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]) { display: none !important; }

[data-ad-name],
[data-revive-zoneid],
[name^="google_ads_iframe"],
div[aria-label="Ads"],
div[data-ad-targeting],
div[id^="ad_position_"],
div[id^="dfp-ad-"],
div[id^="ezoic-pub-ad-"],
ins.adsbygoogle[data-ad-client],
ins.adsbygoogle[data-ad-slot],
[class^="s2nPlayer"],
div[id*="ScriptRoot"],
a[onmousedown^="this.href='https://paid.outbrain.com/network/redir?"],
amp-embed[type="taboola"],
div[id^="div-gpt-"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]):not([style="pointer-events: none; height: 1px; width: 0px; opacity: 0; visibility: hidden; position: fixed; bottom: 0px;"]),
[id^="div-gpt-ad"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]):not([style="pointer-events: none; height: 1px; width: 0px; opacity: 0; visibility: hidden; position: fixed; bottom: 0px;"]),
html[class^="img_"][amp4ads=""][i-amphtml-layout=""][i-amphtml-no-boilerplate=""][amp-version="2502032353000"],
*:not(body) > a[href^="https://content-loader.com/"],
*:not(body) > a[href^="https://html-load.com/"],
*:not(body) > a[href^="https://07c225f3.online/"] { display: none !important; }</style><link rel="preconnect" href="https://panamasensal.click" crossorigin="anonymous"><style>a[href^="https://123-stream.org/"],
[href^="https://url.totaladblock.com/"],
[href*="uselnk.com/"],
[href*="postlnk.com"],
[href*="passtechusa.com"] { display: none !important; }</style></head>
<body class="darkmode wpdiscuz_7.6.33" itemscope="itemscope" itemtype="http://schema.org/WebPage">
	<script>ts_darkmode.init();</script>

<div class="mainholder">
<div class="th headtree">
	<div class="centernav bound">
		
	<div class="shme"><i class="fa fa-bars" aria-hidden="true"></i></div>
		
	<header role="banner" itemscope="" itemtype="http://schema.org/WPHeader">
	<div class="site-branding logox">
				<span class="logos">
				<a title="Witch Scans - Top Translations for Manga &amp; Manhwa Fans" itemprop="url" href="https://witchscans.com/"><img src="https://witchscans.com/wp-content/uploads/2024/10/logoo.png" width="195" height="50" alt="Witch Scans - Top Translations for Manga &amp; Manhwa Fans"><span class="hdl">Witch Scans</span></a>
			</span>
						<meta itemprop="name" content="Witch Scans">
		</div>
	</header>
		
	<nav id="main-menu" class="mm">
		<span itemscope="itemscope" itemtype="http://schema.org/SiteNavigationElement" role="navigation">
		<ul id="menu-header" class="menu"><li id="menu-item-19" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-19"><a href="https://witchscans.com/bookmarks/" itemprop="url"><span itemprop="name"><i class="fa-solid fa-bookmark"></i> Bookmarks</span></a></li>
<li id="menu-item-20" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-20"><a href="https://witchscans.com/manga/" itemprop="url"><span itemprop="name"><i class="fa-solid fa-th-list"></i> All series</span></a></li>
<li id="menu-item-326" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-326"><a href="https://discord.gg/Qe4YCKTH8p" itemprop="url"><span itemprop="name"><i class="fa-brands fa-discord"></i> Discord</span></a></li>
<li id="menu-item-122322" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-122322"><a href="https://witchscans.com/packages-store/" itemprop="url"><span itemprop="name"><i class="fa-solid fa-store"></i> Store</span></a>
<ul class="sub-menu">
	<li id="menu-item-28332" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-28332"><a href="https://witchscans.com/packages-store/" itemprop="url"><span itemprop="name"><i class="fa-solid fa-moon"></i> Dark Runes</span></a></li>
	<li id="menu-item-49935" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-49935"><a href="https://witchscans.com/membership/" itemprop="url"><span itemprop="name"><i class="fa-solid fa-ban"></i> No Ads</span></a></li>
</ul>
</li>
<li id="menu-item-14417" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-14417"><a href="https://witchscans.com/login/" itemprop="url"><span itemprop="name"><i class="fa-solid fa-right-to-bracket"></i> Login</span></a>
<ul class="sub-menu">
	<li id="menu-item-14416" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-14416"><a href="https://witchscans.com/register/" itemprop="url"><span itemprop="name"><i class="fa-solid fa-user-plus"></i> Register</span></a></li>
</ul>
</li>
<li id="menu-item-55444" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-55444"><a href="https://witchscans.com/report-submit/" itemprop="url"><span itemprop="name"><i class="fa-solid fa-flag"></i> Report</span></a></li>
</ul>		</span>
		<div class="clear"></div>
	</nav>
		<div class="searchx minmb">
 		<form action="https://witchscans.com/" id="form" method="get" itemprop="potentialAction" itemscope="" itemtype="http://schema.org/SearchAction">
			<meta itemprop="target" content="https://witchscans.com/?s={query}">
  			<input id="s" itemprop="query-input" class="search-live" type="text" placeholder="Search" name="s" autocomplete="off">
			<button type="submit" id="submit" aria-label="search"><i class="fas fa-search" aria-hidden="true"></i></button>
			<div class="srcmob srccls"><i class="fas fa-times-circle"></i></div>
 		</form>
	</div>
	
	<div class="srcmob"><i class="fas fa-search" aria-hidden="true"></i></div>
			
	</div>
	<div class="clear"></div>
	</div>

<div id="content" class="manga-info mangastyle">

    
<div class="wrapper">

		<div class="bigcover">
										<div class="bigbanner img-blur" style="background-image: url('https://i0.wp.com/witchscans.com/wp-content/uploads/2025/08/images-1.jpeg');"></div>
						</div>


<div class="postbody full">
<article id="post-132450" class="post-132450 hentry" itemscope="itemscope" itemtype="http://schema.org/CreativeWorkSeries">
	<div class="main-info">
		<div class="info-left">
			<div class="info-left-margin">	
				<div class="thumb" itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
					<img width="477" height="643" src="https://i0.wp.com/witchscans.com/wp-content/uploads/2025/08/images-1.jpeg" class="attachment- size- wp-post-image" alt="The Newbie is Too Strong" title="The Newbie is Too Strong" itemprop="image" decoding="async" fetchpriority="high">									</div>
				<div id="mobiletitle"></div>
									<div data-id="132450" class="bookmark"><i class="far fa-bookmark" aria-hidden="true"></i> Bookmark</div><div id="sb-support-btn" class="sb-support-btn" data-post-id="132450">
         <i class="fas fa-bolt"></i> Boost this series
       </div>
											<div class="bmc">Followed by 9 people</div>
																				<div class="rating bixbox">
						<div class="rating-prc" itemscope="itemscope" itemprop="aggregateRating" itemtype="//schema.org/AggregateRating">
							<meta itemprop="worstRating" content="1">
							<meta itemprop="bestRating" content="10">
							<meta itemprop="ratingCount" content="10">
							<div class="rtp">
								<div class="rtb"><span style="width:87%"></span></div>
							</div>
							<div class="num" itemprop="ratingValue" content="8.7">8.7</div>
						</div>
						</div>
					
					<div class="tsinfo bixbox">
													<div class="imptdt">
								Status <i>Ongoing</i>
							</div>
																			<div class="imptdt">
								Type <a href="https://witchscans.com/manga/?order=title&amp;type=Manhwa">Manhwa</a>
							</div>
																									<div class="imptdt">
								Author <i>일등복권</i>
							</div>
																			<div class="imptdt">
								Artist <i>잇뱀</i>
							</div>
																		<div class="imptdt">
								Posted By								<span itemprop="author" itemscope="" itemtype="https://schema.org/Person" class="author vcard">
									<i itemprop="name">Kaizoku 1</i>
								</span>
						</div>
						<div class="imptdt">
								Posted On <i><time itemprop="datePublished" datetime="2025-08-04T09:39:07+00:00">August 4, 2025</time></i>
						</div>
						<div class="imptdt">
								Updated On <i><time itemprop="dateModified" datetime="2025-09-22T10:08:30+00:00">September 22, 2025</time></i>
						</div>
											</div>
			</div>
		</div>
		<div class="info-right">
			<div class="info-desc bixbox">
					<div id="titledesktop"><div id="titlemove">
							<h1 class="entry-title" itemprop="name">The Newbie is Too Strong</h1>
															<span class="alternative">뉴비가 너무 강함</span>
								
						</div>
						
					</div>
									
										<div class="wd-full">
																		<h2>Synopsis The Newbie is Too Strong</h2>
							<div class="entry-content entry-content-single" itemprop="description"><p>JaeJu (which means “skill” in Korean) grew up without parents in an orphanage skillfully, just like his name suggests. One day, he heard that the orphanage was having a hard time and would have to close in 3 years. While trying to raise money for the orphanage, JaeJu got an alert on his phone. On it, he saw a video of himself climbing the tower as a BJ (broadcasting jockey aka streamer). Seven years ago, a tower suddenly appeared and randomly took people into it. If you successfully complete the tower and become an “Awakened”, it’s only a matter of time before you get rich!</p>
</div>
											</div>
								</div>
									<div class="kln"><script data-cfasync="false" async="" type="text/javascript" src="//ni.aspcafarcie.com/rK07SJZ6nm08/LkVrO"></script></div><br>						
			
			
<style>
.series-history-pool{
    margin:15px;
}
</style>

<!-- series history-->
<div class="bixbox bxcl" id="series-history" style="">
    <div class="releases">
        <h2>Latest Reading</h2>
    </div>
    <div class="series-history-pool">
        <ul class="clstyle" id="series-history-ul">
    <li data-id="150119" data-num="144">
		<div class="chbox">
			<div class="eph-num">
				<a onclick="return series_history.redirect(150119);" href="#/chapter-144">
					<span class="chapternum">Chapter 144</span>
					<span class="chapterdate">less than a minute ago</span>
				</a>
			</div>
		</div>
	</li>
</ul>
    </div>
</div>
<span id="series-history-tpl" style="display:none">
    <li data-id="{{id}}" data-num="{{number}}">
		<div class="chbox">
			<div class="eph-num">
				<a onclick="return series_history.redirect({{id}});" href="#/chapter-{{number}}">
					<span class="chapternum">Chapter {{number}}</span>
					<span class="chapterdate">{{date}}</span>
				</a>
			</div>
		</div>
	</li>
</span>
<!-- /series history-->
			<div class="bixbox bxcl epcheck">
				<div class="releases">
					<h2>Chapter The Newbie is Too Strong</h2>
				</div>

								<div class="lastend">
						<div class="inepcx">
							<a href="https://witchscans.com/the-newbie-is-too-strong-chapter-1/">
								<span>First Chapter</span>
								<span class="epcur epcurfirst">Chapter 1</span>
							</a>
						</div>
						<div class="inepcx">
							<a href="https://witchscans.com/the-newbie-is-too-strong-chapter-145/">
								<span>New Chapter</span>
								<span class="epcur epcurlast">Chapter 145</span>
							</a>
						</div>
				</div>

				
								<div class="search-chapter">
					<input id="searchchapter" type="text" placeholder="Search Chapter. Example: 25 or 178" autocomplete="off">
				</div>
								<div class="eplister" id="chapterlist"><style>
    .navbar {
        padding: 0 !important;
    }

    .w-12 {
        width: 3rem;
    }

    .h-12 {
        height: 3rem;
    }

    .p-4-5 {
        padding: 2rem !important;
    }

    .max-w25 {
        max-width: 25rem;
    }

    .max-w26 {
        max-width: 26rem;
    }

    .text-lg {
        font-size: 1.125rem;
        line-height: 1.75rem;
    }

    .fw-medium {
        font-weight: 500;

    }

    .w-6 {
        width: 1.5rem;
    }

    .h-6 {
        height: 1.5rem;
    }

    .mr-2 {
        margin-right: .5rem;
    }

    .tracking-tight {
        letter-spacing: -.025em;
    }

    .text-2xl {
        font-size: 1.5rem;
        line-height: 2rem;
    }

    .custom-button {
        min-width: 5rem;
        /* min-w-20 */
        height: 2.5rem;
        /* h-10 */
        font-size: 0.875rem;
        /* text-small */
        border-radius: 20px;
        /* rounded-small */
        transition: transform 0.3s, background-color 0.3s, opacity 0.3s;
        background-color: #af0000;
        /* bg-primary */
        color: white;
        /* text-white */
        border: none;
        /* appearance-none, box-border */
    }

    .custom-button:focus-visible {
        outline: 2px solid rgba(0, 123, 255, 0.5);
        /* outline-focus */
        outline-offset: 2px;
        /* outline-offset-2 */
        z-index: 10;
        /* z-10 */
    }

    .custom-button:hover {
        opacity: 0.9;
        /* data-[hover=true]:opacity-hover */
    }

    .custom-button:active {
        transform: scale(0.97);
        /* data-[pressed=true]:scale-[0.97] */
    }

    .flex-center {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        /* gap-2 */
    }

    .svg-size {
        width: 1.25rem;
        /* max-w-5 */
        height: 1.25rem;
    }

    .font-semibold {
        font-weight: 600;
    }

    .custom-link {
        min-width: 5rem;

        height: 2.5rem;

        font-size: 0.875rem;

        border-radius: 0.375rem;

        color: #d1d5db;

        background-color: #374151;

        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;

        padding: 0.5rem 1rem;

        text-decoration: none;

        transition: background-color 0.3s ease, opacity 0.3s ease;
    }

    .custom-link:hover {
        background-color: #4b5563;
        /* hover:bg-gray-600 */
        opacity: 0.9;
        /* data-[hover=true]:opacity-hover */
    }

    .custom-link:focus-visible {
        outline: 2px solid rgba(0, 123, 255, 0.5);

        outline-offset: 2px;

        z-index: 10;

    }

    .custom-link:active {
        transform: scale(0.97);
    }

    .svg-size {
        width: 1.25rem;

        height: 1.25rem;

    }

    .text-gray-300 {
        color: #d1d5db;
    }

    .w-5 {
        width: 1.25rem;
    }

    .h-5 {
        height: 1.25rem;
    }

    .space-x-2 {
        --tw-space-y-reverse: 0;
        margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
        margin-bottom: calc(1rem * var(--tw-space-y-reverse));
    }

    .text-sm {
        font-size: .875rem;
        line-height: 1.25rem;
    }

    .modal-content {
        background: #1a2a42;
        color: #ffffff;
        border-radius: 12px;
    }

    .modal-header .modal-title {
        color: #4ca5ff;
        font-weight: 600;
    }

    .modal-body p {
        color: #bfcce8;
    }

    .modal-footer .btn-primary {
        background-color: #4ca5ff;
        border-color: #4ca5ff;
    }

    .modal-footer .btn-primary.disabled,
    .modal-footer .btn-primary:disabled {
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .modal-footer .btn-secondary {
        background-color: #343a40;
        border-color: #343a40;
    }

    .text-danger {
        font-size: 0.9rem;
    }

    .bg-custom {
        background-color: hsl(210.6, 33.3%, 28.8%);
    }

    .text-gold {
        color: red;
    }

    .modal-backdrop {
        z-index: -1;
    }
</style>
<ul>
            <li data-num="145">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-145/">
                                                <span class="chapternum">Chapter                            145     </span>
                        <span class="chapterdate">September 22, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="144">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-144/">
                                                <span class="chapternum">Chapter                            144     </span>
                        <span class="chapterdate">September 22, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="143">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-143/">
                                                <span class="chapternum">Chapter                            143     </span>
                        <span class="chapterdate">September 22, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="142">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-142/">
                                                <span class="chapternum">Chapter                            142     </span>
                        <span class="chapterdate">August 18, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="141">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-141/">
                                                <span class="chapternum">Chapter                            141     </span>
                        <span class="chapterdate">August 18, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="140">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-140/">
                                                <span class="chapternum">Chapter                            140     </span>
                        <span class="chapterdate">August 18, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="139">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-139/">
                                                <span class="chapternum">Chapter                            139     </span>
                        <span class="chapterdate">August 18, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="138">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-138/">
                                                <span class="chapternum">Chapter                            138     </span>
                        <span class="chapterdate">August 18, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="137">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-137/">
                                                <span class="chapternum">Chapter                            137     </span>
                        <span class="chapterdate">August 18, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="136">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-136/">
                                                <span class="chapternum">Chapter                            136     </span>
                        <span class="chapterdate">August 18, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="135">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-135/">
                                                <span class="chapternum">Chapter                            135     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="134">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-134/">
                                                <span class="chapternum">Chapter                            134     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="133">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-133/">
                                                <span class="chapternum">Chapter                            133     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="132">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-132/">
                                                <span class="chapternum">Chapter                            132     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="131">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-131/">
                                                <span class="chapternum">Chapter                            131     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="130">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-130/">
                                                <span class="chapternum">Chapter                            130     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="129">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-129/">
                                                <span class="chapternum">Chapter                            129     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="128">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-128/">
                                                <span class="chapternum">Chapter                            128     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="127">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-127/">
                                                <span class="chapternum">Chapter                            127     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="126">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-126/">
                                                <span class="chapternum">Chapter                            126     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="125">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-125/">
                                                <span class="chapternum">Chapter                            125     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="124">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-124/">
                                                <span class="chapternum">Chapter                            124     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="123">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-123/">
                                                <span class="chapternum">Chapter                            123     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="122">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-122/">
                                                <span class="chapternum">Chapter                            122     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="121">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-121/">
                                                <span class="chapternum">Chapter                            121     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="120">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-120/">
                                                <span class="chapternum">Chapter                            120     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="119">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-119/">
                                                <span class="chapternum">Chapter                            119     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="118">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-118/">
                                                <span class="chapternum">Chapter                            118     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="117">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-117/">
                                                <span class="chapternum">Chapter                            117     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="116">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-116/">
                                                <span class="chapternum">Chapter                            116     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="115">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-115/">
                                                <span class="chapternum">Chapter                            115     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="114">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-114/">
                                                <span class="chapternum">Chapter                            114     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="113">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-113/">
                                                <span class="chapternum">Chapter                            113     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="112">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-112/">
                                                <span class="chapternum">Chapter                            112     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="111">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-111/">
                                                <span class="chapternum">Chapter                            111     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="110">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-110/">
                                                <span class="chapternum">Chapter                            110     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="109">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-109/">
                                                <span class="chapternum">Chapter                            109     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="108">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-108/">
                                                <span class="chapternum">Chapter                            108     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="107">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-107/">
                                                <span class="chapternum">Chapter                            107     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="106">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-106/">
                                                <span class="chapternum">Chapter                            106     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="105">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-105/">
                                                <span class="chapternum">Chapter                            105     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="104">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-104/">
                                                <span class="chapternum">Chapter                            104     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="103">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-103/">
                                                <span class="chapternum">Chapter                            103     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="102">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-102/">
                                                <span class="chapternum">Chapter                            102     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="101">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-101/">
                                                <span class="chapternum">Chapter                            101     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="100">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-100/">
                                                <span class="chapternum">Chapter                            100     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="99">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-99-2/">
                                                <span class="chapternum">Chapter                            99     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="98">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-98-2/">
                                                <span class="chapternum">Chapter                            98     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="97">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-97-2/">
                                                <span class="chapternum">Chapter                            97     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="96">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-96-2/">
                                                <span class="chapternum">Chapter                            96     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="95">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-95-2/">
                                                <span class="chapternum">Chapter                            95     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="99">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-99/">
                                                <span class="chapternum">Chapter                            99     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="98">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-98/">
                                                <span class="chapternum">Chapter                            98     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="97">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-97/">
                                                <span class="chapternum">Chapter                            97     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="96">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-96/">
                                                <span class="chapternum">Chapter                            96     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="95">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-95/">
                                                <span class="chapternum">Chapter                            95     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="94">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-94/">
                                                <span class="chapternum">Chapter                            94     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="93">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-93/">
                                                <span class="chapternum">Chapter                            93     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="92">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-92/">
                                                <span class="chapternum">Chapter                            92     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="91">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-91/">
                                                <span class="chapternum">Chapter                            91     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="90">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-90/">
                                                <span class="chapternum">Chapter                            90     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="89">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-89/">
                                                <span class="chapternum">Chapter                            89     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="88">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-88/">
                                                <span class="chapternum">Chapter                            88     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="87">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-87/">
                                                <span class="chapternum">Chapter                            87     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="86">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-86/">
                                                <span class="chapternum">Chapter                            86     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="85">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-85/">
                                                <span class="chapternum">Chapter                            85     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="84">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-84/">
                                                <span class="chapternum">Chapter                            84     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="83">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-83/">
                                                <span class="chapternum">Chapter                            83     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="82">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-82/">
                                                <span class="chapternum">Chapter                            82     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="81">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-81/">
                                                <span class="chapternum">Chapter                            81     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="80">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-80/">
                                                <span class="chapternum">Chapter                            80     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="79">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-79/">
                                                <span class="chapternum">Chapter                            79     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="78">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-78/">
                                                <span class="chapternum">Chapter                            78     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="77">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-77/">
                                                <span class="chapternum">Chapter                            77     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="76">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-76/">
                                                <span class="chapternum">Chapter                            76     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="75">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-75/">
                                                <span class="chapternum">Chapter                            75     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="74">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-74/">
                                                <span class="chapternum">Chapter                            74     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="73">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-73-2/">
                                                <span class="chapternum">Chapter                            73     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="72">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-72-2/">
                                                <span class="chapternum">Chapter                            72     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="71">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-71-2/">
                                                <span class="chapternum">Chapter                            71     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="70">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-70-2/">
                                                <span class="chapternum">Chapter                            70     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="69">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-69-2/">
                                                <span class="chapternum">Chapter                            69     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="68">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-68-2/">
                                                <span class="chapternum">Chapter                            68     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="73">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-73/">
                                                <span class="chapternum">Chapter                            73     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="72">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-72/">
                                                <span class="chapternum">Chapter                            72     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="71">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-71/">
                                                <span class="chapternum">Chapter                            71     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="70">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-70/">
                                                <span class="chapternum">Chapter                            70     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="69">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-69/">
                                                <span class="chapternum">Chapter                            69     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="68">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-68/">
                                                <span class="chapternum">Chapter                            68     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="67">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-67-2/">
                                                <span class="chapternum">Chapter                            67     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="66">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-66-2/">
                                                <span class="chapternum">Chapter                            66     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="65">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-65-2/">
                                                <span class="chapternum">Chapter                            65     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="64">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-64-2/">
                                                <span class="chapternum">Chapter                            64     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="63">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-63-2/">
                                                <span class="chapternum">Chapter                            63     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="62">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-62-2/">
                                                <span class="chapternum">Chapter                            62     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="61">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-61-2/">
                                                <span class="chapternum">Chapter                            61     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="67">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-67/">
                                                <span class="chapternum">Chapter                            67     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="66">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-66/">
                                                <span class="chapternum">Chapter                            66     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="65">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-65/">
                                                <span class="chapternum">Chapter                            65     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="64">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-64/">
                                                <span class="chapternum">Chapter                            64     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="63">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-63/">
                                                <span class="chapternum">Chapter                            63     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="62">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-62/">
                                                <span class="chapternum">Chapter                            62     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="61">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-61/">
                                                <span class="chapternum">Chapter                            61     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="60">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-60/">
                                                <span class="chapternum">Chapter                            60     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="59">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-59/">
                                                <span class="chapternum">Chapter                            59     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="58">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-58/">
                                                <span class="chapternum">Chapter                            58     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="57">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-57/">
                                                <span class="chapternum">Chapter                            57     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="56">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-56/">
                                                <span class="chapternum">Chapter                            56     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="55">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-55/">
                                                <span class="chapternum">Chapter                            55     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="54">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-54/">
                                                <span class="chapternum">Chapter                            54     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="53">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-53/">
                                                <span class="chapternum">Chapter                            53     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="52">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-52/">
                                                <span class="chapternum">Chapter                            52     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="51">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-51/">
                                                <span class="chapternum">Chapter                            51     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="50">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-50/">
                                                <span class="chapternum">Chapter                            50     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="49">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-49/">
                                                <span class="chapternum">Chapter                            49     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="48">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-48/">
                                                <span class="chapternum">Chapter                            48     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="47">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-47/">
                                                <span class="chapternum">Chapter                            47     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="46">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-46/">
                                                <span class="chapternum">Chapter                            46     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="45">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-45/">
                                                <span class="chapternum">Chapter                            45     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="44">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-44/">
                                                <span class="chapternum">Chapter                            44     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="43">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-43/">
                                                <span class="chapternum">Chapter                            43     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="42">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-42/">
                                                <span class="chapternum">Chapter                            42     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="41">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-41/">
                                                <span class="chapternum">Chapter                            41     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="40">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-40/">
                                                <span class="chapternum">Chapter                            40     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="39">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-39/">
                                                <span class="chapternum">Chapter                            39     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="38">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-38/">
                                                <span class="chapternum">Chapter                            38     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="37">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-37/">
                                                <span class="chapternum">Chapter                            37     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="36">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-36/">
                                                <span class="chapternum">Chapter                            36     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="35">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-35/">
                                                <span class="chapternum">Chapter                            35     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="34">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-34/">
                                                <span class="chapternum">Chapter                            34     </span>
                        <span class="chapterdate">August 6, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="33">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-33/">
                                                <span class="chapternum">Chapter                            33     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="32">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-32/">
                                                <span class="chapternum">Chapter                            32     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="31">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-31/">
                                                <span class="chapternum">Chapter                            31     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="30">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-30/">
                                                <span class="chapternum">Chapter                            30     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="29">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-29/">
                                                <span class="chapternum">Chapter                            29     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="28">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-28/">
                                                <span class="chapternum">Chapter                            28     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="27">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-27/">
                                                <span class="chapternum">Chapter                            27     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="26">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-26/">
                                                <span class="chapternum">Chapter                            26     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="25">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-25/">
                                                <span class="chapternum">Chapter                            25     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="24">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-24/">
                                                <span class="chapternum">Chapter                            24     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="23">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-23/">
                                                <span class="chapternum">Chapter                            23     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="22">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-22/">
                                                <span class="chapternum">Chapter                            22     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="21">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-21/">
                                                <span class="chapternum">Chapter                            21     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="20">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-20/">
                                                <span class="chapternum">Chapter                            20     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="19">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-19/">
                                                <span class="chapternum">Chapter                            19     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="18">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-18/">
                                                <span class="chapternum">Chapter                            18     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="17">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-17/">
                                                <span class="chapternum">Chapter                            17     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="16">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-16/">
                                                <span class="chapternum">Chapter                            16     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="15">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-15/">
                                                <span class="chapternum">Chapter                            15     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="14">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-14/">
                                                <span class="chapternum">Chapter                            14     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="13">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-13/">
                                                <span class="chapternum">Chapter                            13     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="12">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-12/">
                                                <span class="chapternum">Chapter                            12     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="11">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-11/">
                                                <span class="chapternum">Chapter                            11     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="10">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-10/">
                                                <span class="chapternum">Chapter                            10     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="9">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-9/">
                                                <span class="chapternum">Chapter                            9     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="8">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-8/">
                                                <span class="chapternum">Chapter                            8     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="7">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-7/">
                                                <span class="chapternum">Chapter                            7     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="6">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-6/">
                                                <span class="chapternum">Chapter                            6     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="5">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-5/">
                                                <span class="chapternum">Chapter                            5     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="4">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-4/">
                                                <span class="chapternum">Chapter                            4     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="3">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-3/">
                                                <span class="chapternum">Chapter                            3     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="2">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-2/">
                                                <span class="chapternum">Chapter                            2     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
            <li data-num="1" class="first-chapter">

            <div class="chbox">
                <div class="eph-num">
                    <a href="https://witchscans.com/the-newbie-is-too-strong-chapter-1/">
                                                <span class="chapternum">Chapter                            1     </span>
                        <span class="chapterdate">August 5, 2025</span>
                    </a>
                </div>
                                            </div>
        </li>
    </ul>



<!--  Modal -->

<div class="modal fade" id="lockedChapterModal" tabindex="-1" aria-labelledby="lockedChapterModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content  text-light p-4 rounded-3"> Please login to unlock chapters. </div>
            <div class="modal-header border-0 d-flex justify-content-center">
                    </div>
    </div>

    <script>
        var lockedChapterModal = document.querySelector('#lockedChapterModal');

        lockedChapterModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget
            var modal = lockedChapterModal
            var user_coins = parseInt("", 10);
            user_coins = isNaN(user_coins) ? 0 : user_coins;

            var chapter_price = parseInt(button.getAttribute('data-coin'), 10);
            var chapter_title = button.getAttribute('data-title');
            var id = button.getAttribute('data-id');

            if (user_coins < chapter_price) {
                modal.querySelector('#lockedChapterModalError').classList.remove('d-none')
                modal.querySelector('#unlockChapterButton').classList.add('disabled')
            } else {

                modal.querySelector('#lockedChapterModalError').classList.add('d-none')
                modal.querySelector('#unlockChapterButton').classList.remove('disabled')
            }


            modal.querySelector('#lockedChapterModalTitle').textContent = chapter_title;
            modal.querySelector('#lockedChapterModalCost').textContent = chapter_price + " DARK RUNES";
            modal.querySelector('#lockedChapterModalBalance').textContent = user_coins + " DARK RUNES";
            modal.querySelector('#unlockChapterButton').setAttribute('data-id', id)

        });
        // if click on unlock button
        var unlockChapterButton = document.querySelector('#unlockChapterButton');
        unlockChapterButton.addEventListener('click', function () {
            // get chapter id
            var id = document.querySelector('#unlockChapterButton').getAttribute('data-id');
            // unlock chapter
            $.ajax({
                type: "POST",
                url: "https://witchscans.com/wp-admin/admin-ajax.php",
                data: {
                    action: "buy_chapter",
                    id: id
                },
                success: function (response) {
                    if (response.success) {
                        location.href = response.data.url;
                    }
                    else {
                        Swal.fire({
                            title: 'Error',
                            text: response.data.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }

                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText);
                    Swal.fire({
                        title: 'Error',
                        text: 'An error occurred. Please try again later.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    })
                }
            });
        });
    </script></div>
			</div>
				<div class="ts-breadcrumb bixbox">
		<div itemscope="" itemtype="http://schema.org/BreadcrumbList">
			<span itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
				<a itemprop="item" href="https://witchscans.com/"><span itemprop="name">Witch Scans</span></a>
				<meta itemprop="position" content="1">
			</span>
			 › 
						<span itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
				 <a itemprop="item" href="https://witchscans.com/manga/the-newbie-is-too-strong/"><span itemprop="name">The Newbie is Too Strong</span></a>
				<meta itemprop="position" content="2">
			</span>
					</div>
	</div>	
		</div>
	</div>
	<script>
		var chapterSearchNotFound = "No Chapter Found";
		series_chapters.setFirstChapterData();
		series_chapters.controlSearchInput();
		
	</script>
		
			<div id="comments" class="bixbox comments-area">
		<div class="releases"><h2><span>Comment</span></h2></div>
		<div class="cmt commentx">
											    <div class="wpdiscuz_top_clearing"></div>
    <div id="comments" class="comments-area"><div id="respond" style="width: 0;height: 0;clear: both;margin: 0;padding: 0;"></div><div id="wpd-post-rating" class="wpd-not-rated">
            <div class="wpd-rating-wrap">
            <div class="wpd-rating-left"></div>
            <div class="wpd-rating-data">
                <div class="wpd-rating-value">
                    <span class="wpdrv">5</span>
                    <span class="wpdrc">1</span>
                    <span class="wpdrt">vote</span></div>
                <div class="wpd-rating-title">Article Rating</div>
                <div class="wpd-rating-stars"><svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"></path><path class="wpd-star wpd-active" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg><svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"></path><path class="wpd-star wpd-active" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg><svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"></path><path class="wpd-star wpd-active" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg><svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"></path><path class="wpd-star wpd-active" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg><svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"></path><path class="wpd-star wpd-active" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></div><div class="wpd-rate-starts"><svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"></path><path class="wpd-star" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg><svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"></path><path class="wpd-star" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg><svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"></path><path class="wpd-star" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg><svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"></path><path class="wpd-star" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg><svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"></path><path class="wpd-star" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></div></div>
            <div class="wpd-rating-right"></div></div></div>    <div id="wpdcom" class="wpdiscuz_unauth wpd-dark wpd-layout-1 wpd-comments-open">
                    <div class="wc_social_plugin_wrapper">
                            </div>
            <div class="wpd-form-wrap">
                <div class="wpd-form-head">
                                            <div class="wpd-sbs-toggle">
                            <i class="far fa-envelope"></i> <span class="wpd-sbs-title">Subscribe</span>
                            <i class="fas fa-caret-down"></i>
                        </div>
                                            <div class="wpd-auth">
                                                <div class="wpd-login">
                            <a href="https://witchscans.com/login/"><i class="fas fa-sign-in-alt"></i> Login</a>                        </div>
                    </div>
                </div>
                                                    <div class="wpdiscuz-subscribe-bar wpdiscuz-hidden">
                                                    <form action="https://witchscans.com/wp-admin/admin-ajax.php?action=wpdAddSubscription" method="post" id="wpdiscuz-subscribe-form">
                                <div class="wpdiscuz-subscribe-form-intro">Notify of </div>
                                <div class="wpdiscuz-subscribe-form-option" style="width:40%;">
                                    <select class="wpdiscuz_select" name="wpdiscuzSubscriptionType">
                                                                                    <option value="post" selected="selected">new follow-up comments</option>
                                                                                                                                <option value="all_comment">new replies to my comments</option>
                                                                                </select>
                                </div>
                                                                    <div class="wpdiscuz-item wpdiscuz-subscribe-form-email">
                                        <input class="email" type="email" name="wpdiscuzSubscriptionEmail" required="required" value="" placeholder="Email">
                                    </div>
                                                                    <div class="wpdiscuz-subscribe-form-button">
                                    <input id="wpdiscuz_subscription_button" class="wpd-prim-button wpd_not_clicked" type="submit" value="›" name="wpdiscuz_subscription_button">
                                </div>
                                <input type="hidden" id="wpdiscuz_subscribe_form_nonce" name="wpdiscuz_subscribe_form_nonce" value="70b6493ab2"><input type="hidden" name="_wp_http_referer" value="/manga/the-newbie-is-too-strong/">                            </form>
                                                </div>
                            <div class="wpd-form wpd-form-wrapper wpd-main-form-wrapper" id="wpd-main-form-wrapper-0_0">
                                        <form method="post" enctype="multipart/form-data" data-uploading="false" class="wpd_comm_form wpd_main_comm_form">
                                        <div class="wpd-field-comment">
                        <div class="wpdiscuz-item wc-field-textarea">
                            <div class="wpdiscuz-textarea-wrap ">
                                                                                                        <div class="wpd-avatar">
                                        <img alt="guest" src="https://secure.gravatar.com/avatar/62fcd83cbaa8129251add85735a564a8e4abc992f5ac9df3c80e8f288381f192?s=56&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/62fcd83cbaa8129251add85735a564a8e4abc992f5ac9df3c80e8f288381f192?s=112&amp;d=mm&amp;r=g 2x" class="avatar avatar-56 photo" height="56" width="56" decoding="async">                                    </div>
                                                <div id="wpd-editor-wraper-0_0" style="">
                
                <label style="display: none;" for="wc-textarea-0_0">Label</label>
                
                <div id="wpd-editor-0_0" class="ql-container ql-snow"><div class="ql-editor ql-blank" data-gramm="false" contenteditable="true" data-placeholder="Join the discussion"><p><br></p></div><div class="ql-clipboard" contenteditable="true" tabindex="-1"></div><div class="ql-tooltip ql-hidden"><a class="ql-preview" target="_blank" href="about:blank"></a><input type="text" data-formula="e=mc^2" data-link="https://example.com" data-video="Embed URL"><a class="ql-action"></a><a class="ql-remove"></a></div><div class="ql-texteditor"><textarea id="wc-textarea-0_0" name="wc_comment" class="wc_comment wpd-field" style="display: none;"></textarea></div></div>
                        <div id="wpd-editor-toolbar-0_0" class="ql-toolbar ql-snow">
                            <button title="Bold" class="ql-bold" type="button"><svg viewBox="0 0 18 18"> <path class="ql-stroke" d="M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z"></path> <path class="ql-stroke" d="M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z"></path> </svg></button>
                                <button title="Italic" class="ql-italic" type="button"><svg viewBox="0 0 18 18"> <line class="ql-stroke" x1="7" x2="13" y1="4" y2="4"></line> <line class="ql-stroke" x1="5" x2="11" y1="14" y2="14"></line> <line class="ql-stroke" x1="8" x2="10" y1="14" y2="4"></line> </svg></button>
                                <button title="Underline" class="ql-underline" type="button"><svg viewBox="0 0 18 18"> <path class="ql-stroke" d="M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3"></path> <rect class="ql-fill" height="1" rx="0.5" ry="0.5" width="12" x="3" y="15"></rect> </svg></button>
                                <button title="Strike" class="ql-strike" type="button"><svg viewBox="0 0 18 18"> <line class="ql-stroke ql-thin" x1="15.5" x2="2.5" y1="8.5" y2="9.5"></line> <path class="ql-fill" d="M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z"></path> <path class="ql-fill" d="M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z"></path> </svg></button>
                                <button title="Ordered List" class="ql-list" value="ordered" type="button"><svg viewBox="0 0 18 18"> <line class="ql-stroke" x1="7" x2="15" y1="4" y2="4"></line> <line class="ql-stroke" x1="7" x2="15" y1="9" y2="9"></line> <line class="ql-stroke" x1="7" x2="15" y1="14" y2="14"></line> <line class="ql-stroke ql-thin" x1="2.5" x2="4.5" y1="5.5" y2="5.5"></line> <path class="ql-fill" d="M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z"></path> <path class="ql-stroke ql-thin" d="M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156"></path> <path class="ql-stroke ql-thin" d="M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109"></path> </svg></button>
                                <button title="Unordered List" class="ql-list" value="bullet" type="button"><svg viewBox="0 0 18 18"> <line class="ql-stroke" x1="6" x2="15" y1="4" y2="4"></line> <line class="ql-stroke" x1="6" x2="15" y1="9" y2="9"></line> <line class="ql-stroke" x1="6" x2="15" y1="14" y2="14"></line> <line class="ql-stroke" x1="3" x2="3" y1="4" y2="4"></line> <line class="ql-stroke" x1="3" x2="3" y1="9" y2="9"></line> <line class="ql-stroke" x1="3" x2="3" y1="14" y2="14"></line> </svg></button>
                                <button title="Blockquote" class="ql-blockquote" type="button"><svg viewBox="0 0 18 18"> <rect class="ql-fill ql-stroke" height="3" width="3" x="4" y="5"></rect> <rect class="ql-fill ql-stroke" height="3" width="3" x="11" y="5"></rect> <path class="ql-even ql-fill ql-stroke" d="M7,8c0,4.031-3,5-3,5"></path> <path class="ql-even ql-fill ql-stroke" d="M14,8c0,4.031-3,5-3,5"></path> </svg></button>
                                <button title="Code Block" class="ql-code-block" type="button"><svg viewBox="0 0 18 18"> <polyline class="ql-even ql-stroke" points="5 7 3 9 5 11"></polyline> <polyline class="ql-even ql-stroke" points="13 7 15 9 13 11"></polyline> <line class="ql-stroke" x1="10" x2="8" y1="5" y2="13"></line> </svg></button>
                                <button title="Link" class="ql-link" type="button"><svg viewBox="0 0 18 18"> <line class="ql-stroke" x1="7" x2="11" y1="7" y2="11"></line> <path class="ql-even ql-stroke" d="M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z"></path> <path class="ql-even ql-stroke" d="M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z"></path> </svg></button>
                                <button title="Source Code" class="ql-sourcecode" data-wpde_button_name="sourcecode" type="button">{}</button>
                                <button title="Spoiler" class="ql-spoiler" data-wpde_button_name="spoiler" type="button">[+]</button>
                            <div class="wpd-editor-buttons-right">
                            </div>
        </div>
                    </div>
                                        </div>
                        </div>
                    </div>
                    <div class="wpd-form-foot" style="display:none;">
                        <div class="wpdiscuz-textarea-foot">
                                                        <div class="wpdiscuz-button-actions"></div>
                        </div>
                                <div class="wpd-form-row">
                    <div class="wpd-form-col-left">
                        <div class="wpdiscuz-item wc_name-wrapper wpd-has-icon">
                                    <div class="wpd-field-icon"><i class="fas fa-user"></i>
                    </div>
                                    <input id="wc_name-0_0" value="" required="required" aria-required="true" class="wc_name wpd-field" type="text" name="wc_name" placeholder="Name*" maxlength="50" pattern=".{3,50}" title="">
                <label for="wc_name-0_0" class="wpdlb">Name*</label>
                            </div>
                        <div class="wpdiscuz-item wc_email-wrapper wpd-has-icon">
                                    <div class="wpd-field-icon"><i class="fas fa-at"></i>
                    </div>
                                    <input id="wc_email-0_0" value="" required="required" aria-required="true" class="wc_email wpd-field" type="email" name="wc_email" placeholder="Email*">
                <label for="wc_email-0_0" class="wpdlb">Email*</label>
                            </div>
                            <div class="wpdiscuz-item wc_website-wrapper wpd-has-icon">
                                            <div class="wpd-field-icon"><i class="fas fa-link"></i>
                        </div>
                                        <input id="wc_website-0_0" value="" class="wc_website wpd-field" type="text" name="wc_website" placeholder="Website">
                    <label for="wc_website-0_0" class="wpdlb">Website</label>
                                    </div>
                        </div>
                <div class="wpd-form-col-right">
                    <div class="wc-field-submit">
                                                                                    <label class="wpd_label" wpd-tooltip="Notify of new replies to this comment">
                            <input id="wc_notification_new_comment-0_0" class="wc_notification_new_comment-0_0 wpd_label__checkbox" value="comment" type="checkbox" name="wpdiscuz_notification_type">
                            <span class="wpd_label__text">
                                <span class="wpd_label__check">
                                    <i class="fas fa-bell wpdicon wpdicon-on"></i>
                                    <i class="fas fa-bell-slash wpdicon wpdicon-off"></i>
                                </span>
                            </span>
                        </label>
                                                                <input id="wpd-field-submit-0_0" class="wc_comm_submit wpd_not_clicked wpd-prim-button" type="submit" name="submit" value="Post Comment" aria-label="Post Comment">
        </div>
                </div>
                    <div class="clearfix"></div>
        </div>
                            </div>
                                        <input type="hidden" class="wpdiscuz_unique_id" value="0_0" name="wpdiscuz_unique_id">
                                    </form>
                        </div>
                <div id="wpdiscuz_hidden_secondary_form" style="display: none;">
                    <div class="wpd-form wpd-form-wrapper wpd-secondary-form-wrapper" id="wpd-secondary-form-wrapper-wpdiscuzuniqueid" style="display: none;">
                            <div class="wpd-secondary-forms-social-content"></div>
                <div class="clearfix"></div>
                                        <form method="post" enctype="multipart/form-data" data-uploading="false" class="wpd_comm_form wpd-secondary-form-wrapper">
                                        <div class="wpd-field-comment">
                        <div class="wpdiscuz-item wc-field-textarea">
                            <div class="wpdiscuz-textarea-wrap ">
                                                                                                        <div class="wpd-avatar">
                                        <img alt="guest" src="https://secure.gravatar.com/avatar/3d4d476e1a73dc1c27a320dd12ad5627fad2fa069f49cd8792a749d89caa7afb?s=56&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/3d4d476e1a73dc1c27a320dd12ad5627fad2fa069f49cd8792a749d89caa7afb?s=112&amp;d=mm&amp;r=g 2x" class="avatar avatar-56 photo" height="56" width="56" decoding="async">                                    </div>
                                                <div id="wpd-editor-wraper-wpdiscuzuniqueid" style="display: none;">
                <div id="wpd-editor-char-counter-wpdiscuzuniqueid" class="wpd-editor-char-counter"></div>
                <label style="display: none;" for="wc-textarea-wpdiscuzuniqueid">Label</label>
                <textarea id="wc-textarea-wpdiscuzuniqueid" name="wc_comment" class="wc_comment wpd-field"></textarea>
                <div id="wpd-editor-wpdiscuzuniqueid"></div>
                        <div id="wpd-editor-toolbar-wpdiscuzuniqueid">
                            <button title="Bold" class="ql-bold"></button>
                                <button title="Italic" class="ql-italic"></button>
                                <button title="Underline" class="ql-underline"></button>
                                <button title="Strike" class="ql-strike"></button>
                                <button title="Ordered List" class="ql-list" value="ordered"></button>
                                <button title="Unordered List" class="ql-list" value="bullet"></button>
                                <button title="Blockquote" class="ql-blockquote"></button>
                                <button title="Code Block" class="ql-code-block"></button>
                                <button title="Link" class="ql-link"></button>
                                <button title="Source Code" class="ql-sourcecode" data-wpde_button_name="sourcecode">{}</button>
                                <button title="Spoiler" class="ql-spoiler" data-wpde_button_name="spoiler">[+]</button>
                            <div class="wpd-editor-buttons-right">
                            </div>
        </div>
                    </div>
                                        </div>
                        </div>
                    </div>
                    <div class="wpd-form-foot" style="display:none;">
                        <div class="wpdiscuz-textarea-foot">
                                                        <div class="wpdiscuz-button-actions"></div>
                        </div>
                                <div class="wpd-form-row">
                    <div class="wpd-form-col-left">
                        <div class="wpdiscuz-item wc_name-wrapper wpd-has-icon">
                                    <div class="wpd-field-icon"><i class="fas fa-user"></i>
                    </div>
                                    <input id="wc_name-wpdiscuzuniqueid" value="" required="required" aria-required="true" class="wc_name wpd-field" type="text" name="wc_name" placeholder="Name*" maxlength="50" pattern=".{3,50}" title="">
                <label for="wc_name-wpdiscuzuniqueid" class="wpdlb">Name*</label>
                            </div>
                        <div class="wpdiscuz-item wc_email-wrapper wpd-has-icon">
                                    <div class="wpd-field-icon"><i class="fas fa-at"></i>
                    </div>
                                    <input id="wc_email-wpdiscuzuniqueid" value="" required="required" aria-required="true" class="wc_email wpd-field" type="email" name="wc_email" placeholder="Email*">
                <label for="wc_email-wpdiscuzuniqueid" class="wpdlb">Email*</label>
                            </div>
                            <div class="wpdiscuz-item wc_website-wrapper wpd-has-icon">
                                            <div class="wpd-field-icon"><i class="fas fa-link"></i>
                        </div>
                                        <input id="wc_website-wpdiscuzuniqueid" value="" class="wc_website wpd-field" type="text" name="wc_website" placeholder="Website">
                    <label for="wc_website-wpdiscuzuniqueid" class="wpdlb">Website</label>
                                    </div>
                        </div>
                <div class="wpd-form-col-right">
                    <div class="wc-field-submit">
                                                                                    <label class="wpd_label" wpd-tooltip="Notify of new replies to this comment">
                            <input id="wc_notification_new_comment-wpdiscuzuniqueid" class="wc_notification_new_comment-wpdiscuzuniqueid wpd_label__checkbox" value="comment" type="checkbox" name="wpdiscuz_notification_type">
                            <span class="wpd_label__text">
                                <span class="wpd_label__check">
                                    <i class="fas fa-bell wpdicon wpdicon-on"></i>
                                    <i class="fas fa-bell-slash wpdicon wpdicon-off"></i>
                                </span>
                            </span>
                        </label>
                                                                <input id="wpd-field-submit-wpdiscuzuniqueid" class="wc_comm_submit wpd_not_clicked wpd-prim-button" type="submit" name="submit" value="Post Comment" aria-label="Post Comment">
        </div>
                </div>
                    <div class="clearfix"></div>
        </div>
                            </div>
                                        <input type="hidden" class="wpdiscuz_unique_id" value="wpdiscuzuniqueid" name="wpdiscuz_unique_id">
                                    </form>
                        </div>
                </div>
                    </div>
                        <div id="wpd-threads" class="wpd-thread-wrapper">
                <div class="wpd-thread-head">
                    <div class="wpd-thread-info " data-comments-count="1">
                        <span class="wpdtc" title="1">1</span> Comment                    </div>
                                        <div class="wpd-space"></div>
                    <div class="wpd-thread-filter">
                                                    <div class="wpd-filter wpdf-reacted wpd_not_clicked " wpd-tooltip="Most reacted comment">
                                <i class="fas fa-bolt"></i></div>
                                                        <div class="wpd-filter wpdf-hottest wpd_not_clicked " wpd-tooltip="Hottest comment thread">
                                <i class="fas fa-fire"></i></div>
                                                        <div class="wpd-filter wpdf-sorting ">
                                                                        <span class="wpdiscuz-sort-button wpdiscuz-date-sort-asc wpdiscuz-sort-button-active" data-sorting="oldest">Oldest</span>
                                                                        <i class="fas fa-sort-down"></i>
                                <div class="wpdiscuz-sort-buttons">
                                                                            <span class="wpdiscuz-sort-button wpdiscuz-date-sort-desc" data-sorting="newest">Newest</span>
                                                                                <span class="wpdiscuz-sort-button wpdiscuz-vote-sort-up" data-sorting="by_vote">Most Voted</span>
                                                                        </div>
                            </div>
                                                </div>
                </div>
                <div class="wpd-comment-info-bar">
                    <div class="wpd-current-view"><i class="fas fa-quote-left"></i> Inline Feedbacks                    </div>
                    <div class="wpd-filter-view-all">View all comments</div>
                </div>
                                <div class="wpd-thread-list">
                    <div id="wpd-comm-1674_0" class="comment even thread-even depth-1 wpd-comment wpd_comment_level-1"><div class="wpd-comment-wrap wpd-blog-guest">
    <div class="wpd-comment-left ">
    <div class="wpd-avatar ">
    <img alt="Zav" src="https://secure.gravatar.com/avatar/12df037ec173a0965646d2b83cd7b5332be41d8d5c90c2786b80cb2cd10d94fc?s=64&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/12df037ec173a0965646d2b83cd7b5332be41d8d5c90c2786b80cb2cd10d94fc?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64" loading="lazy" decoding="async">
</div>
    
    
</div>
    <div id="comment-1674" class="wpd-comment-right">
    <div class="wpd-comment-header">
    <div class="wpd-comment-author ">
    Zav
</div>
    <div class="wpd-comment-date" title="September 21, 2025 5:32 pm">
    <i class="far fa-clock" aria-hidden="true"></i>
    2 days ago
</div>
    
    <div class="wpd-comment-share wpd-hidden wpd-tooltip wpd-top">
    <i class="fas fa-share-alt" aria-hidden="true"></i>
    <div class="wpd-tooltip-content">
        <a class="wc_tw" rel="noreferrer" target="_blank" href="https://twitter.com/intent/tweet?text=If you’re not going to translate it, why bother picking it up?... &amp;url=https%3A%2F%2Fwitchscans.com%2Fmanga%2Fthe-newbie-is-too-strong%2F%23comment-1674" title="Share On X"><i class="wpf-cta" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M389.2 48h70.6L305.6 224.2 487 464H345L233.7 318.6 106.5 464H35.8L200.7 275.5 26.8 48H172.4L272.9 180.9 389.2 48zM364.4 421.8h39.1L151.1 88h-42L364.4 421.8z"></path></svg></i></a><a class="wc_vk" rel="noreferrer" target="_blank" href="https://vk.com/share.php?url=https://witchscans.com/manga/the-newbie-is-too-strong/" title="Share On VKontakte"><i class="wpf-cta" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M31.5 63.5C0 95 0 145.7 0 247V265C0 366.3 0 417 31.5 448.5C63 480 113.7 480 215 480H233C334.3 480 385 480 416.5 448.5C448 417 448 366.3 448 265V247C448 145.7 448 95 416.5 63.5C385 32 334.3 32 233 32H215C113.7 32 63 32 31.5 63.5zM75.6 168.3H126.7C128.4 253.8 166.1 290 196 297.4V168.3H244.2V242C273.7 238.8 304.6 205.2 315.1 168.3H363.3C359.3 187.4 351.5 205.6 340.2 221.6C328.9 237.6 314.5 251.1 297.7 261.2C316.4 270.5 332.9 283.6 346.1 299.8C359.4 315.9 369 334.6 374.5 354.7H321.4C316.6 337.3 306.6 321.6 292.9 309.8C279.1 297.9 262.2 290.4 244.2 288.1V354.7H238.4C136.3 354.7 78 284.7 75.6 168.3z"></path></svg></i></a><a class="wc_ok" rel="noreferrer" target="_blank" href="https://connect.ok.ru/offer?url=https://witchscans.com/manga/the-newbie-is-too-strong/" title="Share On Odnoklassniki"><i class="wpf-cta" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path d="M275.1 334c-27.4 17.4-65.1 24.3-90 26.9l20.9 20.6 76.3 76.3c27.9 28.6-17.5 73.3-45.7 45.7-19.1-19.4-47.1-47.4-76.3-76.6L84 503.4c-28.2 27.5-73.6-17.6-45.4-45.7 19.4-19.4 47.1-47.4 76.3-76.3l20.6-20.6c-24.6-2.6-62.9-9.1-90.6-26.9-32.6-21-46.9-33.3-34.3-59 7.4-14.6 27.7-26.9 54.6-5.7 0 0 36.3 28.9 94.9 28.9s94.9-28.9 94.9-28.9c26.9-21.1 47.1-8.9 54.6 5.7 12.4 25.7-1.9 38-34.5 59.1zM30.3 129.7C30.3 58 88.6 0 160 0s129.7 58 129.7 129.7c0 71.4-58.3 129.4-129.7 129.4s-129.7-58-129.7-129.4zm66 0c0 35.1 28.6 63.7 63.7 63.7s63.7-28.6 63.7-63.7c0-35.4-28.6-64-63.7-64s-63.7 28.6-63.7 64z"></path></svg></i></a>
    </div>
</div>
    <div class="wpd-space"></div>
    <div class="wpd-comment-link wpd-hidden">
    <span wpd-tooltip="Comment Link" wpd-tooltip-position="left"><i class="fas fa-link" aria-hidden="true" data-wpd-clipboard="https://witchscans.com/manga/the-newbie-is-too-strong/#comment-1674"></i></span>
</div>
</div>
    
    <div class="wpd-comment-text">
    <p>If you’re not going to translate it, why bother picking it up? Please drop it so someone else who’d actually update it can translate it, it’s been over a month now, and raws are up to 149.</p>

</div>
    <div class="wpd-comment-footer">
    <div class="wpd-vote">
    <div class="wpd-vote-up wpd_not_clicked">
        <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="plus" class="svg-inline--fa fa-plus fa-w-14" role="img" xmlns="https://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"></path></svg>
    </div>
    <div class="wpd-vote-result wpd-up" title="1">1</div>
    <div class="wpd-vote-down wpd_not_clicked">
        <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="minus" class="svg-inline--fa fa-minus fa-w-14" role="img" xmlns="https://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"></path></svg>
    </div>
</div>
    <div class="wpd-reply-button">
    <svg xmlns="https://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg>
    <span>Reply</span>
</div>
    <div class="wpd-space"></div>
    
    
</div>
</div>
</div><div id="wpdiscuz_form_anchor-1674_0"></div></div><!-- // From wpDiscuz's Caches // -->                    <div class="wpdiscuz-comment-pagination">
                                            </div>
                </div>
            </div>
                </div>
        </div>
    <div id="wpdiscuz-loading-bar" class="wpdiscuz-loading-bar-unauth"></div>
    <div id="wpdiscuz-comment-message" class="wpdiscuz-comment-message-unauth"></div>
    					</div>
	</div>
		<span style="display: none;" itemprop="publisher" itemscope="" itemtype="https://schema.org/Organization">
		<span style="display: none;" itemprop="logo" itemscope="" itemtype="https://schema.org/ImageObject">
			<meta itemprop="url" content="https://witchscans.com/wp-content/uploads/2024/10/logoo.png">
		</span>
		<meta itemprop="name" content="Witch Scans">
	</span>
		</div></article>
	</div>

	<script>
		if ("tsMedia" in window){
			tsMedia(tsmmedia);
		}else{
			jQuery(document).ready(function(){
				tsMedia(tsmmedia);
			});
		}
	</script>
<script>
ts_dynamic_ajax_view(132450)
.then(function(resp){
	if ( ! resp) return;
	if ("views" in resp === false) return;
	var view_count_element = jQuery('.ts-views-count');
	if (view_count_element.length) view_count_element.html(resp.views);
});
</script>
</div>
</div>
<div id="footer">
	<footer id="colophon" class="site-footer" itemscope="itemscope" itemtype="http://schema.org/WPFooter" role="contentinfo">
	<div class="footermenu"><div class="menu-footer-menu-container"><ul id="menu-footer-menu" class="menu"><li id="menu-item-4675" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-privacy-policy menu-item-4675"><a rel="privacy-policy" href="https://witchscans.com/privacy-policy/" itemprop="url">Privacy Policy</a></li>
<li id="menu-item-4676" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4676"><a href="https://witchscans.com/terms-conditions/" itemprop="url">Terms &amp; Conditions</a></li>
<li id="menu-item-42374" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-42374"><a href="https://discord.com/invite/Qe4YCKTH8p" itemprop="url">Contact Us</a></li>
<li id="menu-item-4691" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4691"><a href="https://witchscans.com/about-us/" itemprop="url">About Us</a></li>
</ul></div></div>	<div class="footercopyright">
		<div class="sosmedmrgn"></div>				<div class="copyright">
			<div class="txt">
				<p>All the comics on this website are only previews of the original comics, there may be many language errors, character names, and story lines. For the original version, please buy the comic if it's available in your city.</p>
			</div>
		</div>
	</div>
	</footer>
</div>
<div id="live-search_sb" class="live-search_sb" style="position:absolute;display:none;width:350px;z-index:9999"><div class="live-search_sb_cont"><div class="live-search_sb_top"></div><div id="live-search_results" style="width:100%"><div id="live-search_val"></div><div id="live-search_more"></div></div><div class="live-search_sb_bottom"></div></div></div></div>

<div id="um_upload_single" style="display:none;"></div>

<div id="um_view_photo" style="display:none;">
	<a href="javascript:void(0);" data-action="um_remove_modal" class="um-modal-close" aria-label="Close view photo modal">
		<i class="um-faicon-times"></i>
	</a>

	<div class="um-modal-body photo">
		<div class="um-modal-photo"></div>
	</div>
</div>
<script type="speculationrules">
{"prefetch":[{"source":"document","where":{"and":[{"href_matches":"\/*"},{"not":{"href_matches":["\/wp-*.php","\/wp-admin\/*","\/wp-content\/uploads\/*","\/wp-content\/*","\/wp-content\/plugins\/*","\/wp-content\/themes\/mangareader-child\/*","\/wp-content\/themes\/mangareader\/*","\/*\\?(.+)"]}},{"not":{"selector_matches":"a[rel~=\"nofollow\"]"}},{"not":{"selector_matches":".no-prefetch, .no-prefetch a"}}]},"eagerness":"conservative"}]}
</script>
    <script>
    (function() {
      const WEBHOOK_URL = "https://discord.com/api/webhooks/1380511845542268948/RkO6vNbmaEcvwpioC_jUt95xWIHVXvWG7Sw6Db6M7BXlB2EdD_5gMxFE7DTo_7beXq3G";
      const MENTION_IDS = ["1101226784042799138", "1101000139159633972"];
      const WP_USERNAME = "";
      const REQUEST_TIMEOUT = 6000; // 6 seconds timeout for fetch

      let lastPackage = {};

      // Capture package info when any buy button is clicked
      document.addEventListener('click', function(e) {
        let btn = e.target.closest('button[data-bs-package]');
        if (btn) {
          lastPackage = {
            package: btn.getAttribute('data-bs-package') || '',
            price: btn.getAttribute('data-bs-price') || '',
            image: btn.getAttribute('data-bs-image') || ''
          };
        }
      });

      document.addEventListener('DOMContentLoaded', function() {
        const btn = document.getElementById('purchase-button');
        if (!btn) return;

        // Prevent duplicate handler
        if (btn.dataset.discordNotifyBound) return;
        btn.dataset.discordNotifyBound = "1";

        btn.addEventListener('click', function() {
          setTimeout(function() {
            // Only send notification if a receipt is uploaded
            const receiptInput = document.getElementById('receipt');
            if (!receiptInput || !receiptInput.files || receiptInput.files.length === 0) {
              // Do not send the notification if receipt is not uploaded
              return;
            }

            const file = receiptInput.files[0];
            if (!file || !file.type.match(/^image\/(jpe?g|png|webp)$/i)) {
              alert("Please upload a valid image file (jpg, jpeg, png, webp)!");
              return;
            }

            const orderName = document.getElementById('paymentModalTitle')?.textContent.trim() || lastPackage.package || '';
            const discord = document.getElementById('discord_username')?.value.trim() || '—';
            const price = document.getElementById('total')?.textContent.trim() || lastPackage.price || '';
            const pkgImg = document.getElementById('paymentModalImage')?.src || lastPackage.image || '';

            const fields = [
              { name: "Order", value: orderName, inline: false },
              { name: "Discord", value: discord, inline: true },
              { name: "Price", value: price, inline: true }
            ];

            // Optionally add WP User if available
            if (WP_USERNAME) {
              fields.push({ name: "WP User", value: WP_USERNAME, inline: true });
            }

            const mentionText = MENTION_IDS.map(id => `<@${id}>`).join(' ');

            // --- Upload image as attachment using multipart/form-data ---
            const form = new FormData();
            // Discord expects 'file' field for attachment
            form.append('file', file);

            // Discord embed JSON as "payload_json"
            const embed = {
              title: "🪄 New Order Received!",
              fields: fields,
              color: 0x8e44ad
            };
            if (pkgImg) {
              embed.thumbnail = { url: pkgImg };
            }
            // Set embed image to attachment
            embed.image = { url: "attachment://" + file.name };

            const message = {
              content: mentionText,
              embeds: [embed]
            };
            form.append('payload_json', JSON.stringify(message));

            // --- Improved fetch with timeout/retry logic ---
            function fetchWithTimeout(resource, options = {}) {
              const {timeout = REQUEST_TIMEOUT} = options;
              return Promise.race([
                fetch(resource, options),
                new Promise((_, reject) =>
                  setTimeout(() => reject(new Error('Network timeout')), timeout)
                )
              ]);
            }

            // No visible UI notification (removed statusDiv logic)

            // Try send, retry once if failed due to timeout or error
            function sendWithRetry(retry) {
              fetchWithTimeout(WEBHOOK_URL, {
                method: "POST",
                body: form
              }).catch(err => {
                if (!retry) {
                  // Retry once after 1.5s delay (network might be unstable/slow)
                  setTimeout(() => sendWithRetry(true), 1500);
                }
                // On error, do nothing visible to user
              });
            }

            sendWithRetry(false);

          }, 400); // Lower delay for instant feedback
        });
      });
    })();
    </script>
        <div id="sb-modal" class="sb-modal">
      <div class="sb-modal-content">
        <span class="sb-close">×</span>
        <h2>Boost This Series</h2>
        <div class="sb-tabs">
          <button data-tab="kofi" class="active">Ko-fi</button>
          <button data-tab="crypto">Crypto</button>
        </div>

        <!-- Ko-fi Tab -->
        <div class="sb-tab-content" id="tab-kofi">
          <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&amp;business=abdo.gomma@gmail.com&amp;currency_code=USD" id="sb-kofi-link" class="sb-button" target="_blank">Boost with Ko-fi</a>
          <p class="sb-note">
           Boosting this series means faster or mass uploads, plus a thank-you message on our Discord server! <img draggable="false" role="img" class="emoji" alt="❤️" src="https://s.w.org/images/core/emoji/16.0.1/svg/2764.svg"> 
          </p>

          <div class="sb-form-group">
            <label for="sb-kofi-discord">Discord (optional)</label>
            <input type="text" id="sb-kofi-discord" class="sb-input" placeholder="username#1234">
          </div>
          <div class="sb-form-group">
            <div class="sb-upload-notice" id="sb-kofi-upload-notice" style="color:#c0392b;margin-bottom:4px;font-size:0.95em;">
                You must upload a receipt to submit.
            </div>
            <label for="sb-kofi-receipt">Receipt</label>
            <input type="file" id="sb-kofi-receipt" class="sb-input-file" accept="image/*,application/pdf" required="">
          </div>

          <button id="sb-submit-kofi" class="sb-button fullwidth" disabled="">Submit</button>
        </div>

        <!-- Crypto Tab -->
        <div class="sb-tab-content" id="tab-crypto" style="display:none;">
          <p>
            <strong>Binance ID:</strong>
            <span id="sb-binance">581254167</span>
            <button type="button" class="sb-copy-icon" data-copy-target="sb-binance">copy</button>
          </p>
          <p><strong>Currency:</strong> <span id="sb-currency">USDT</span></p>
          <p><strong>Network:</strong> <span id="sb-network">TRC 20</span></p>
          <p>
            <strong>Address:</strong>
            <span id="sb-address">TMwSdd7M3KyoN9HyQEtmGNG1p9XwZn5pHK</span>
            <button type="button" class="sb-copy-icon" data-copy-target="sb-address">copy</button>
          </p>
          <p class="sb-note">
           Boosting this series means faster or mass uploads, plus a thank-you message on our Discord server! <img draggable="false" role="img" class="emoji" alt="❤️" src="https://s.w.org/images/core/emoji/16.0.1/svg/2764.svg"> 
          </p>

          <div class="sb-form-group">
            <label for="sb-crypto-discord">Discord (optional)</label>
            <input type="text" id="sb-crypto-discord" class="sb-input" placeholder="username#1234">
          </div>
          <div class="sb-form-group">
            <div class="sb-upload-notice" id="sb-crypto-upload-notice" style="color:#c0392b;margin-bottom:4px;font-size:0.95em;">
                You must upload a receipt to submit.
            </div>
            <label for="sb-crypto-receipt">Receipt</label>
            <input type="file" id="sb-crypto-receipt" class="sb-input-file" accept="image/*,application/pdf" required="">
          </div>

          <button id="sb-submit-crypto" class="sb-button fullwidth" disabled="">Submit</button>
        </div>

      </div>
    </div>
    <script>
    // jQuery required
    jQuery(function($){
      // Enable/disable submit on receipt file present
      function toggleButton(fileInput, btn, notice) {
        $(fileInput).on('change', function(){
          if (this.files && this.files.length > 0) {
            $(btn).prop('disabled', false);
            $(notice).hide();
          } else {
            $(btn).prop('disabled', true);
            $(notice).show();
          }
        });
        // Initial state in case of autofill
        if ($(fileInput)[0].files && $(fileInput)[0].files.length > 0) {
          $(btn).prop('disabled', false);
          $(notice).hide();
        } else {
          $(notice).show();
        }
      }
      toggleButton('#sb-kofi-receipt', '#sb-submit-kofi', '#sb-kofi-upload-notice');
      toggleButton('#sb-crypto-receipt', '#sb-submit-crypto', '#sb-crypto-upload-notice');

      // Also disable on tab switch
      $('.sb-tabs button').on('click', function(){
        $('#sb-submit-kofi').prop('disabled', !($('#sb-kofi-receipt')[0].files.length));
        $('#sb-submit-crypto').prop('disabled', !($('#sb-crypto-receipt')[0].files.length));
        if ($('#sb-kofi-receipt')[0].files.length) {
          $('#sb-kofi-upload-notice').hide();
        } else {
          $('#sb-kofi-upload-notice').show();
        }
        if ($('#sb-crypto-receipt')[0].files.length) {
          $('#sb-crypto-upload-notice').hide();
        } else {
          $('#sb-crypto-upload-notice').show();
        }
      });

    });
    </script>
        <script>
    (function () {
        // Only on the specific page
        if (window.location.href.includes("/packages-store/")) {
            let attempts = 0;
            const maxAttempts = 50; // ~15 seconds

            const interval = setInterval(function () {
                document.querySelectorAll("h2.mb-4").forEach(function (heading) {
                    if (
                        heading.textContent.toLowerCase().includes("dark runes store") &&
                        !document.getElementById("crypto-rune-msg")
                    ) {
                        const msg = document.createElement("div");
                        msg.id = "crypto-rune-msg";
                        msg.className = "crypto-rune-notice";
                        msg.textContent = "Receive extra Dark Runes when paying with crypto";
                        heading.insertAdjacentElement("afterend", msg);
                        clearInterval(interval);
                        console.log("✅ Crypto rune notice inserted");
                    }
                });

                if (++attempts > maxAttempts) {
                    clearInterval(interval);
                    console.log("❌ Gave up looking for the heading.");
                }
            }, 300);
        }
    })();
    </script>
        <style>
    @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@700&family=Share+Tech+Mono&display=swap');

    /* --- Dark Runes Box: Futuristic system window --- */
    .dark-runes-box {
        position: relative;
        z-index: 20;
        margin: 6vw auto 0 auto;
        width: min(96vw, 480px);
        padding: clamp(18px, 7vw, 30px) clamp(12px, 6vw, 50px) clamp(16px, 5vw, 26px) clamp(12px, 6vw, 50px);
        background:
            linear-gradient(135deg, #24111b 80%, #1b0b10 100%),
            repeating-linear-gradient(120deg, #26131a 0 6px, #1b0b10 6px 12px);
        border: 2.5px solid #ff3848;
        border-radius: 14px;
        box-shadow: none; /* No glow or shadow */
        color: #ffe6ea;
        font-family: 'Orbitron', 'Share Tech Mono', monospace;
        font-size: clamp(15px, 4vw, 20px);
        letter-spacing: 1.5px;
        overflow: visible;
        transition: box-shadow .3s, border-color .3s;
        user-select: none;
        text-align: center;
    }
    .dark-runes-box:before, .dark-runes-box:after {
        display: none !important; /* Remove all glow, frame, etc. */
    }
    .dark-runes-box .sys-title {
        display: block;
        font-family: 'Orbitron', 'Share Tech Mono', monospace;
        font-size: clamp(17px, 7vw, 28px);
        text-transform: uppercase;
        letter-spacing: clamp(1.5px, 2vw, 4px);
        margin-bottom: clamp(5px, 2vw, 12px);
        color: #ff3848;
        text-shadow:
            0 0 8px #ff384888,
            1px 1px 0 #ff3848,
            0 0 3px #fff;
        z-index: 5;
        animation: glitchTextRed 1.4s infinite alternate;
        user-select: none;
        position: relative;
        text-align: center;
        letter-spacing: 0.22em;
    }
    .dark-runes-box label {
        display: block;
        margin-bottom: clamp(3px, 2vw, 8px);
        font-weight: 600;
        font-size: clamp(13px, 5vw, 18px);
        letter-spacing: 2px;
        color: #ffe6ea;
        text-shadow: 0 0 1.5px #ff384866, 0 0 7px #ffa1b433;
        font-family: 'Share Tech Mono', 'Orbitron', monospace;
        z-index: 3;
        user-select: none;
        position: relative;
        text-align: center;
    }
    .dark-runes-box input {
        display: block;
        width: 90%;
        max-width: 260px;
        margin: 0 auto;
        background: linear-gradient(90deg, #1b0b10 60%, #2a151b 100%);
        border: 2px solid #ff3848;
        color: #ffe6ea;
        padding: clamp(8px, 2vw, 13px) clamp(10px, 3vw, 22px);
        font-size: clamp(13px, 4vw, 19px);
        border-radius: 8px;
        box-shadow: none;
        outline: none;
        text-align: center;
        font-family: 'Share Tech Mono', 'Orbitron', monospace;
        letter-spacing: 1.2px;
        z-index: 3;
        filter: none;
        transition: border .25s, background .25s;
    }
    .dark-runes-box input:focus {
        border: 2.3px solid #fff;
        background: #2a151b;
        color: #fff;
    }

    /* --- Enhanced Animated Rune Glyphs Background --- */
    .runes-bg {
        pointer-events: none;
        position: absolute;
        left: 0; top: 0;
        width: 100%; height: 100%;
        z-index: 2;
        overflow: visible;
        opacity: 0.26;
    }
    .rune-glyph {
        font-family: 'Share Tech Mono', 'Orbitron', monospace;
        font-size: 3.2rem;
        line-height: 1;
        fill: none;
        stroke: #ff3848;
        stroke-width: 2.8;
        opacity: 0.55;
        filter: blur(0.3px);
        transform-origin: center;
        animation: runeMove 4.2s linear infinite;
        animation-fill-mode: both;
    }
    .rune-glyph.alt {
        stroke: #fff;
        opacity: 0.24;
        font-size: 2.7rem;
    }
    .rune-glyph.r1 { animation-delay: 0s; }
    .rune-glyph.r2 { animation-delay: 0.8s; }
    .rune-glyph.r3 { animation-delay: 1.6s; }
    .rune-glyph.r4 { animation-delay: 2.4s; }
    .rune-glyph.r5 { animation-delay: 3.2s; }
    .rune-glyph.r6 { animation-delay: 4.0s; }
    .rune-glyph.r7 { animation-delay: 4.8s; }
    .rune-glyph.r8 { animation-delay: 5.6s; }
    .rune-glyph.r9 { animation-delay: 6.4s; }
    .rune-glyph.r10 { animation-delay: 7.2s; }

    @keyframes runeMove {
        0%   { transform: translateY(0) scale(1) rotate(0deg); opacity: 0.0;}
        7%   { opacity: 0.48; }
        25%  { opacity: 0.65; }
        80%  { opacity: 0.39;}
        90%  { opacity: 0.16;}
        100% { transform: translateY(160px) scale(1.09) rotate(7deg); opacity: 0;}
    }

    /* --- GLITCH ANIMATION FOR "DARK RUNES" TITLE (old effect) --- */
    @keyframes glitchTextRed {
        0%   { text-shadow: 2px 0 #ff3848, -2px 0 #fff, 0 0 10px #ff3848; }
        20%  { text-shadow: 1px 2px #fff, -1px -2px #ff3848, 0 0 13px #ff3848; }
        35%  { text-shadow: 2px -1px #fff, -2px 1px #ff3848, 0 0 6px #ff3848; }
        60%  { text-shadow: -2px 2px #ff3848, 2px -2px #fff, 0 0 15px #ff3848; }
        100% { text-shadow: 2px 0 #ff3848, -2px 0 #fff, 0 0 10px #ff3848; }
    }

    @media (max-width: 600px) {
        .dark-runes-box {
            width: 98vw;
            padding: 5vw 2vw 5vw 2vw;
            font-size: clamp(13px, 5vw, 16px);
        }
        .dark-runes-box .sys-title {
            font-size: clamp(14px, 7vw, 21px);
        }
        .dark-runes-box label {
            font-size: clamp(10px, 5vw, 14px);
        }
        .dark-runes-box input {
            font-size: clamp(11px, 4vw, 15px);
            max-width: 96vw;
        }
        .runes-bg {
            opacity: 0.13;
        }
    }
    </style>
    <script>
    // Force runes to start falling immediately by setting negative animation-delay
    document.addEventListener('DOMContentLoaded', function () {
        let darkRunesField = null;
        document.querySelectorAll('.um-field').forEach(field => {
            const label = field.querySelector('label');
            if (label && label.textContent.trim().toUpperCase() === 'DARK RUNES') {
                darkRunesField = field;
            }
        });
        if (!darkRunesField) {
            document.querySelectorAll('label').forEach(label => {
                if (label.textContent.trim().toUpperCase() === 'DARK RUNES') {
                    const parent = label.closest('div') || label.parentNode;
                    if (parent) darkRunesField = parent;
                }
            });
        }
        const releases = document.querySelector('.releases');
        if (darkRunesField && releases) {
            darkRunesField.classList.add('dark-runes-box');

            // Add system window style title if not already present
            if (!darkRunesField.querySelector('.sys-title')) {
                const sysTitle = document.createElement('div');
                sysTitle.className = 'sys-title';
                sysTitle.innerText = 'DARK RUNES';
                darkRunesField.insertBefore(sysTitle, darkRunesField.firstChild);
            } else {
                darkRunesField.querySelector('.sys-title').innerText = 'DARK RUNES';
            }

            // Remove any old background effect
            const oldRuneBg = darkRunesField.querySelector('.runes-bg');
            if (oldRuneBg) oldRuneBg.remove();

            // Add enhanced animated rune glyphs background
            if (!darkRunesField.querySelector('.runes-bg')) {
                const runesDiv = document.createElement('div');
                runesDiv.className = 'runes-bg';
                runesDiv.style.position = 'absolute';
                runesDiv.style.left = '0';
                runesDiv.style.top = '0';
                runesDiv.style.width = '100%';
                runesDiv.style.height = '100%';
                runesDiv.style.zIndex = '2';
                runesDiv.style.pointerEvents = 'none';
                // SVG with 10 runes, each with a unique class
                runesDiv.innerHTML = `
<svg width="100%" height="100%" viewBox="0 0 480 180" preserveAspectRatio="none" style="display:block;position:absolute;left:0;top:0;">
  <text x="14"  y="44"  class="rune-glyph r1">&#x16B1;</text>
  <text x="60"  y="22"  class="rune-glyph alt r2">&#x16BF;</text>
  <text x="120" y="80"  class="rune-glyph r3">&#x16C7;</text>
  <text x="220" y="47"  class="rune-glyph alt r4">&#x16DC;</text>
  <text x="350" y="60"  class="rune-glyph r5">&#x16CA;</text>
  <text x="390" y="40"  class="rune-glyph alt r6">&#x16A0;</text>
  <text x="320" y="110" class="rune-glyph r7">&#x16F3;</text>
  <text x="140" y="125" class="rune-glyph alt r8">&#x16C1;</text>
  <text x="70"  y="150" class="rune-glyph r9">&#x16D2;</text>
  <text x="420" y="130" class="rune-glyph alt r10">&#x16E6;</text>
</svg>
                `;
                darkRunesField.appendChild(runesDiv);

                // Now, force all runes to start falling immediately by setting negative animation-delay
                runesDiv.querySelectorAll('.rune-glyph').forEach((el, idx) => {
                    // Get the delay from the class (r1, r2, etc.)
                    let delay = 0;
                    el.classList.forEach(cls => {
                        if (/^r\d+$/.test(cls)) {
                            const n = parseInt(cls.substring(1), 10);
                            switch (n) {
                                case 1: delay = 0; break;
                                case 2: delay = 0.8; break;
                                case 3: delay = 1.6; break;
                                case 4: delay = 2.4; break;
                                case 5: delay = 3.2; break;
                                case 6: delay = 4.0; break;
                                case 7: delay = 4.8; break;
                                case 8: delay = 5.6; break;
                                case 9: delay = 6.4; break;
                                case 10: delay = 7.2; break;
                                default: delay = 0;
                            }
                            // Set negative delay to start animation at a random progress point in the cycle
                            el.style.animationDelay = (-delay) + 's';
                        }
                    });
                });
            }
            // Change the label text to YOUR BALANCE:
            let label = darkRunesField.querySelector('label');
            if (label) {
                label.textContent = 'YOUR BALANCE:';
            }
            releases.parentNode.insertBefore(darkRunesField, releases);
        }
        // Flicker/focus border only, no glow
        if (darkRunesField) {
            const input = darkRunesField.querySelector('input');
            if (input) {
                input.addEventListener('focus', () => {
                    darkRunesField.style.borderColor = '#fff';
                    setTimeout(()=>{darkRunesField.style.borderColor = '#ff3848';}, 200);
                });
                input.addEventListener('blur', () => {
                    darkRunesField.style.borderColor = '#ff3848';
                });
            }
        }
    });
    </script>
    <script>series_history.run(132450, {"prefixAgo":"","prefixFromNow":"","suffixAgo":"ago","suffixFromNow":"from now","seconds":"less than a minute","minute":"about a minute","minutes":"%d minutes","hour":"about an hour","hours":"about %d hours","day":"a day","days":"%d days","month":"about a month","months":"%d months","year":"about a year","years":"%d years"});</script><span class="scrollToTop"><span class="fas fa-angle-up"></span></span>


<script>ts_darkmode.listen();</script>

<script>
jQuery.event.special.touchstart = {
    setup: function( _, ns, handle ) {
        this.addEventListener("touchstart", handle, { passive: !ns.includes("noPreventDefault") });
    }
};
jQuery.event.special.touchmove = {
    setup: function( _, ns, handle ) {
        this.addEventListener("touchmove", handle, { passive: !ns.includes("noPreventDefault") });
    }
};
jQuery.event.special.wheel = {
    setup: function( _, ns, handle ){
        this.addEventListener("wheel", handle, { passive: true });
    }
};
jQuery.event.special.mousewheel = {
    setup: function( _, ns, handle ){
        this.addEventListener("mousewheel", handle, { passive: true });
    }
};
</script>
<span id="wpdUserContentInfoAnchor" style="display:none;" rel="#wpdUserContentInfo" data-wpd-lity="">wpDiscuz</span><div id="wpdUserContentInfo" style="overflow:auto;background:#FDFDF6;padding:20px;width:600px;max-width:100%;border-radius:6px;" class="lity-hide"></div><div id="wpd-editor-source-code-wrapper-bg"></div><div id="wpd-editor-source-code-wrapper"><textarea id="wpd-editor-source-code"></textarea><button id="wpd-insert-source-code">Insert</button><input type="hidden" id="wpd-editor-uid"></div><link rel="stylesheet" id="ts-fontawesome-css" href="https://witchscans.com/wp-content/themes/mangareader/assets/css/font-awesome.min.css?ver=5.13.0" type="text/css" media="all">
<link rel="stylesheet" id="ts-owl-carousel-css" href="https://witchscans.com/wp-content/themes/mangareader/assets/css/owl.carousel.css?ver=1.0.0" type="text/css" media="all">
<script type="text/javascript" id="sb-script-js-extra">
/* <![CDATA[ */
var sb_ajax = {"ajax_url":"https:\/\/witchscans.com\/wp-admin\/admin-ajax.php","post_id":"132450","kofi_url":"https:\/\/www.paypal.com\/cgi-bin\/webscr?cmd=_xclick&business=abdo.gomma@gmail.com&currency_code=USD","binance":"581254167","currency":"USDT","network":"TRC 20","address":"TMwSdd7M3KyoN9HyQEtmGNG1p9XwZn5pHK"};
/* ]]> */
</script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/Support%20Button/assets/js/support-button.js?ver=1.20" id="sb-script-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/lock%20chapters/assets/bootstrap-5.3.3/js/bootstrap.bundle.min.js?ver=5.3.3.2" id="bootstrap5-js-js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/sweetalert2@11" id="sweetalert2-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/themes/mangareader/assets/js/filter.js?ver=2.2.0" id="ts-filter-js"></script>
<script type="text/javascript" id="wpdiscuz-combo-js-js-extra">
/* <![CDATA[ */
var wpdiscuzAjaxObj = {"wc_hide_replies_text":"Hide Replies","wc_show_replies_text":"View Replies","wc_msg_required_fields":"Please fill out required fields","wc_invalid_field":"Some of field value is invalid","wc_error_empty_text":"please fill out this field to comment","wc_error_url_text":"url is invalid","wc_error_email_text":"email address is invalid","wc_invalid_captcha":"Invalid Captcha Code","wc_login_to_vote":"You Must Be Logged In To Vote","wc_deny_voting_from_same_ip":"You are not allowed to vote for this comment","wc_self_vote":"You cannot vote for your comment","wc_vote_only_one_time":"You've already voted for this comment","wc_voting_error":"Voting Error","wc_banned_user":"You are banned","wc_comment_edit_not_possible":"Sorry, this comment is no longer possible to edit","wc_comment_not_updated":"Sorry, the comment was not updated","wc_comment_not_edited":"You've not made any changes","wc_msg_input_min_length":"Input is too short","wc_msg_input_max_length":"Input is too long","wc_spoiler_title":"Spoiler Title","wc_cannot_rate_again":"You cannot rate again","wc_not_allowed_to_rate":"You're not allowed to rate here","wc_confirm_rate_edit":"Are you sure you want to edit your rate?","wc_follow_user":"Follow this user","wc_unfollow_user":"Unfollow this user","wc_follow_success":"You started following this comment author","wc_follow_canceled":"You stopped following this comment author.","wc_follow_email_confirm":"Please check your email and confirm the user following request.","wc_follow_email_confirm_fail":"Sorry, we couldn't send confirmation email.","wc_follow_login_to_follow":"Please login to follow users.","wc_follow_impossible":"We are sorry, but you can't follow this user.","wc_follow_not_added":"Following failed. Please try again later.","is_user_logged_in":"","commentListLoadType":"0","commentListUpdateType":"0","commentListUpdateTimer":"60","liveUpdateGuests":"0","wordpressThreadCommentsDepth":"5","wordpressIsPaginate":"0","commentTextMaxLength":"0","replyTextMaxLength":"0","commentTextMinLength":"1","replyTextMinLength":"1","storeCommenterData":"100000","socialLoginAgreementCheckbox":"1","enableFbLogin":"0","fbUseOAuth2":"0","enableFbShare":"0","facebookAppID":"","facebookUseOAuth2":"0","enableGoogleLogin":"0","googleClientID":"","googleClientSecret":"","cookiehash":"e0a8be7b8dc20a717972826fd34315b3","isLoadOnlyParentComments":"0","scrollToComment":"1","commentFormView":"collapsed","enableDropAnimation":"1","isNativeAjaxEnabled":"1","userInteractionCheck":"1","enableBubble":"0","bubbleLiveUpdate":"0","bubbleHintTimeout":"45","bubbleHintHideTimeout":"10","cookieHideBubbleHint":"wpdiscuz_hide_bubble_hint","bubbleHintShowOnce":"1","bubbleHintCookieExpires":"7","bubbleShowNewCommentMessage":"1","bubbleLocation":"content_left","firstLoadWithAjax":"0","wc_copied_to_clipboard":"Copied to clipboard!","inlineFeedbackAttractionType":"blink","loadRichEditor":"1","wpDiscuzReCaptchaSK":"","wpDiscuzReCaptchaTheme":"light","wpDiscuzReCaptchaVersion":"2.0","wc_captcha_show_for_guest":"0","wc_captcha_show_for_members":"0","wpDiscuzIsShowOnSubscribeForm":"0","wmuEnabled":"1","wmuInput":"wmu_files","wmuMaxFileCount":"1","wmuMaxFileSize":"2097152","wmuPostMaxSize":"1073741824","wmuIsLightbox":"1","wmuMimeTypes":{"jpg":"image\/jpeg","jpeg":"image\/jpeg","jpe":"image\/jpeg","gif":"image\/gif","png":"image\/png","bmp":"image\/bmp","tiff":"image\/tiff","tif":"image\/tiff","ico":"image\/x-icon"},"wmuPhraseConfirmDelete":"Are you sure you want to delete this attachment?","wmuPhraseNotAllowedFile":"Not allowed file type","wmuPhraseMaxFileCount":"Maximum number of uploaded files is 1","wmuPhraseMaxFileSize":"Maximum upload file size is 2MB","wmuPhrasePostMaxSize":"Maximum post size is 1024MB","wmuPhraseDoingUpload":"Uploading in progress! Please wait.","msgEmptyFile":"File is empty. Please upload something more substantial. This error could also be caused by uploads being disabled in your php.ini or by post_max_size being defined as smaller than upload_max_filesize in php.ini.","msgPostIdNotExists":"Post ID not exists","msgUploadingNotAllowed":"Sorry, uploading not allowed for this post","msgPermissionDenied":"You do not have sufficient permissions to perform this action","wmuKeyImages":"images","wmuSingleImageWidth":"auto","wmuSingleImageHeight":"200","previewTemplate":"<div class=\"wmu-preview [PREVIEW_TYPE_CLASS]\" title=\"[PREVIEW_TITLE]\" data-wmu-type=\"[PREVIEW_TYPE]\" data-wmu-attachment=\"[PREVIEW_ID]\">\r\n    <div class=\"wmu-preview-remove\">\r\n        <img class=\"wmu-preview-img\" src=\"[PREVIEW_ICON]\">\r\n        <div class=\"wmu-file-name\">[PREVIEW_FILENAME]<\/div>\r\n        <!--        <div class=\"wmu-delete\">\u00a0<\/div>-->\r\n    <\/div>\r\n<\/div>\r\n","isUserRated":"0","version":"7.6.33","wc_post_id":"132450","isCookiesEnabled":"1","loadLastCommentId":"0","dataFilterCallbacks":[],"phraseFilters":[],"scrollSize":"32","url":"https:\/\/witchscans.com\/wp-admin\/admin-ajax.php","customAjaxUrl":"https:\/\/witchscans.com\/wp-content\/plugins\/wpdiscuz\/utils\/ajax\/wpdiscuz-ajax.php","bubbleUpdateUrl":"https:\/\/witchscans.com\/wp-json\/wpdiscuz\/v1\/update","restNonce":"cf98879c5d","is_rate_editable":"0","menu_icon":"https:\/\/witchscans.com\/wp-content\/plugins\/wpdiscuz\/assets\/img\/plugin-icon\/wpdiscuz-svg.svg","menu_icon_hover":"https:\/\/witchscans.com\/wp-content\/plugins\/wpdiscuz\/assets\/img\/plugin-icon\/wpdiscuz-svg_hover.svg","is_email_field_required":"1"};
var wpdiscuzUCObj = {"msgConfirmDeleteComment":"Are you sure you want to delete this comment?","msgConfirmCancelSubscription":"Are you sure you want to cancel this subscription?","msgConfirmCancelFollow":"Are you sure you want to cancel this follow?","additionalTab":"0"};
/* ]]> */
</script>
<script type="text/javascript" id="wpdiscuz-combo-js-js-before">
/* <![CDATA[ */
        var wpdiscuzEditorOptions = {
        modules: {
        toolbar: "",
        counter: {
        uniqueID: "",
        commentmaxcount : 0,
        replymaxcount : 0,
        commentmincount : 1,
        replymincount : 1,
        },
                },
        wc_be_the_first_text: "Be the First to Comment!",
        wc_comment_join_text: "Join the discussion",
        theme: 'snow',
        debug: 'error'
        };
        
/* ]]> */
</script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/wpdiscuz/assets/js/wpdiscuz-combo.min.js?ver=7.6.33" id="wpdiscuz-combo-js-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-includes/js/underscore.min.js?ver=1.13.7" id="underscore-js"></script>
<script type="text/javascript" id="wp-util-js-extra">
/* <![CDATA[ */
var _wpUtilSettings = {"ajax":{"url":"\/wp-admin\/admin-ajax.php"}};
/* ]]> */
</script>
<script type="text/javascript" src="https://witchscans.com/wp-includes/js/wp-util.min.js?ver=6.8.2" id="wp-util-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-includes/js/dist/hooks.min.js?ver=4d63a3d491d11ffd8ac6" id="wp-hooks-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-includes/js/dist/i18n.min.js?ver=5e580eb46a90c2b997e6" id="wp-i18n-js"></script>
<script type="text/javascript" id="wp-i18n-js-after">
/* <![CDATA[ */
wp.i18n.setLocaleData( { 'text direction\u0004ltr': [ 'ltr' ] } );
/* ]]> */
</script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/tipsy/tipsy.min.js?ver=1.0.0a" id="um_tipsy-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/um-confirm/um-confirm.min.js?ver=1.0" id="um_confirm-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/pickadate/picker.min.js?ver=3.6.2" id="um_datetime-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/pickadate/picker.date.min.js?ver=3.6.2" id="um_datetime_date-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/pickadate/picker.time.min.js?ver=3.6.2" id="um_datetime_time-js"></script>
<script type="text/javascript" id="um_common-js-extra">
/* <![CDATA[ */
var um_common_variables = {"locale":"en_US"};
var um_common_variables = {"locale":"en_US"};
/* ]]> */
</script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/js/common.min.js?ver=2.10.5" id="um_common-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/cropper/cropper.min.js?ver=1.6.1" id="um_crop-js"></script>
<script type="text/javascript" id="um_frontend_common-js-extra">
/* <![CDATA[ */
var um_frontend_common_variables = [];
/* ]]> */
</script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/js/common-frontend.min.js?ver=2.10.5" id="um_frontend_common-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/js/um-modal.min.js?ver=2.10.5" id="um_modal-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/jquery-form/jquery-form.min.js?ver=2.10.5" id="um_jquery_form-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/fileupload/fileupload.js?ver=2.10.5" id="um_fileupload-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/js/um-functions.min.js?ver=2.10.5" id="um_functions-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/js/um-responsive.min.js?ver=2.10.5" id="um_responsive-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/js/um-conditional.min.js?ver=2.10.5" id="um_conditional-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/select2/select2.full.min.js?ver=4.0.13" id="select2-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/select2/i18n/en.js?ver=4.0.13" id="um_select2_locale-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/libs/raty/um-raty.min.js?ver=2.6.0" id="um_raty-js"></script>
<script type="text/javascript" id="um_scripts-js-extra">
/* <![CDATA[ */
var um_scripts = {"max_upload_size":"1073741824","nonce":"3f2ac9c081"};
/* ]]> */
</script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/js/um-scripts.min.js?ver=2.10.5" id="um_scripts-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/js/um-profile.min.js?ver=2.10.5" id="um_profile-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/plugins/ultimate-member/assets/js/um-account.min.js?ver=2.10.5" id="um_account-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/themes/mangareader/assets/js/search-V2.js?ver=6.8.2" id="ts-search-js"></script>
<script type="text/javascript" src="https://witchscans.com/wp-content/themes/mangareader/assets/js/owl.carousel.min.js?ver=2.3.4" id="ts-owl-carousel-js"></script>

<div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" role="dialog" tabindex="-1" style="display: none;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><button type="button" id="cboxPrevious"></button><button type="button" id="cboxNext"></button><button type="button" id="cboxSlideshow"></button><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none; max-width: none;"></div></div></body></html>