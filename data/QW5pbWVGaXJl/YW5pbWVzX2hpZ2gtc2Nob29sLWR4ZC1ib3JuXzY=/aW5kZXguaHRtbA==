<html lang="pt-br" data-fp="scjptlmy59q">

<head>
  <style class="vjs-styles-defaults">
    .video-js {
      width: 300px;
      height: 150px;
    }

    .vjs-fluid {
      padding-top: 56.25%
    }
  </style>
  <meta charset="utf-8">
  <meta name="theme-color" content="#1A1A1A">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="shortcut icon" href="https://animefire.vip/img/icons/favicon.ico" type="image/x-icon">
  <link rel="manifest" href="https://animefire.vip/manifest.json">
  <link rel="apple-touch-icon" href="https://animefire.vip/img/icons/favicon-192x192.png">
  <title>Assistir High School DxD BorN - Episódio 6 - Segundo Semestre Começou! - AnimeFire</title>
  <meta name="description"
    content="Assistir High School DxD BorN - Episódio 6 - Segundo Semestre Começou! - legendado online em HD, ou baixe o episódio se preferir">
  <link rel="canonical" href="https://animefire.vip/animes/high-school-dxd-born/6">
  <link rel="preload" as="font" type="font/woff2" href="https://animefire.vip/fonts/quicksand-v12-latin-300.woff2"
    crossorigin="">
  <link rel="preload" as="font" type="font/woff2" href="https://animefire.vip/fonts/quicksand-v12-latin-regular.woff2"
    crossorigin="">
  <link rel="preload" as="font" type="font/woff2" href="https://animefire.vip/fonts/koho-v3-latin-regular.woff2"
    crossorigin="">
  <link rel="preload" as="font" type="font/woff2" href="https://animefire.vip/fonts/montserrat-v14-latin-200.woff2"
    crossorigin="">
  <link rel="preload" as="font" type="font/woff2" href="https://animefire.vip/fonts/montserrat-v14-latin-regular.woff2"
    crossorigin="">
  <link rel="stylesheet" as="style" href="https://animefire.vip/css/style.css?v=216">
  <link rel="stylesheet" as="style" href="https://animefire.vip/css/style_2.css?v=217">
  <link rel="stylesheet" as="style" href="https://animefire.vip/css/videojs.css?v=210">
  <meta name="robots" content="index,follow">
  <meta name="googlebot" content="index,follow">
  <meta property="og:url" content="https://animefire.vip/animes/high-school-dxd-born/6">
  <meta property="og:title"
    content="Assistir High School DxD BorN - Episódio 6 - Segundo Semestre Começou! - AnimeFire">
  <meta property="og:description"
    content="Assistir High School DxD BorN - Episódio 6 - Segundo Semestre Começou! - legendado online em HD, ou baixe o episódio se preferir">
  <meta property="og:locale" content="pt_BR">
  <meta name="twitter:card" content="summary_large_image">
  <meta property="og:site_name" content="AnimeFire">
  <meta property="og:type" content="article">
  <meta property="article:section" content="Animes">
  <meta property="article:published_time" content="2019-12-11 14:28:36">
  <meta property="article:modified_time" content="2019-12-11 14:28:36">
  <meta property="og:image" content="https://animefire.vip/img/video/high-school-dxd-born/6.jpg">
  <meta property="og:image:secure_url" content="https://animefire.vip/img/video/high-school-dxd-born/6.jpg">
  <script
    type="application/ld+json"> {"@context": "https://schema.org", "@type": "WebSite", "@id": "https://animefire.vip/#website", "url": "https://animefire.vip", "name": "AnimeFire", "inLanguage": "pt-BR", "description": "Assista animes novos e antigos, Legendados ou Dublados, aqui você encontra diversos tipos de animes, e em ótima qualidade! Você também pode baixar!", "potentialAction": {"@type": "SearchAction", "target": "https://animefire.vip/pesquisar/{search_term_string}", "query-input": "required name=search_term_string"} } </script>
  <script
    type="application/ld+json"> {"@context": "https://schema.org", "@type": "WebPage", "@id": "#webpage", "url": "https://animefire.vip/animes/high-school-dxd-born/6", "name": "Assistir High School DxD BorN - Episódio 6 - Segundo Semestre Come&ccedil;ou! - AnimeFire", "isPartOf": {"@id": "https://animefire.vip/#website"}, "inLanguage": "pt-BR", "datePublished": "2019-12-11 14:28:36-03:00", "dateModified": "2019-12-11 14:28:36-03:00", "description": "Assistir High School DxD BorN - Epis&oacute;dio 6 - Segundo Semestre Come&ccedil;ou! - legendado online em HD, ou baixe o epis&oacute;dio se preferir"} </script>
  <style>
    @media(min-width: 830px) {
      body {
        background-image: url("https://animefire.vip/img/lt/bg.webp");
        background-size: 100%
      }
    }
  </style>
  <style>
    @media(max-width:829px) {
      body {
        background-image: url("https://animefire.vip/img/lt/bgM.webp");
        background-size: 100%
      }
    }

    .cd-top {
      background: url("https://animefire.vip/img/icons/cd-top-arrow.svg") center 50% no-repeat #2A2A2A;
    }
  </style>
  <meta name="a.validate.01" content="e3c41d5f98540c66a8accc6265b0cb00d180">
  <script src="/js/blockadblock.3-2-1.min.js?v=1" type="text/javascript"></script>
  <script type="text/javascript" src="//storyblizzard.com/34/77/6e/34776e7010b8b3a6156072a69687b7d9.js"></script>
</head>

<body>
  <nav class="navbar navbar-expand-lg navbar-dark"> <a class="navbar-brand" href="https://animefire.vip"> <img
        src="https://animefire.vip/img/lt/logo.webp" alt="AnimeFire"
        oncontextmenu="if (!window.__cfRLUnblockHandlers) return false; return false"
        ondragstart="if (!window.__cfRLUnblockHandlers) return false; return false"> </a> <button class="navbar-toggler"
      type="button" style="border:none;outline-color: transparent;" data-toggle="collapse"
      data-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false"
      aria-label="Toggle navigation"> <span class="navbar-toggler-icon"></span> <span
        class="text-white bubble_notification d-none"></span> </button>
    <div class="collapse navbar-collapse" id="navbarTogglerDemo01" style="width:100%">
      <ul class="navbar-nav mr-auto textoNavbar dropMenuHoverColor">
        <li class="nav-item dropdown pr-2 navbarItem "> <a class="nav-link dropdown-toggle" href="#"
            id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Animes </a>
          <div class="dropdown-menu">
            <div class="divDMLinks"> <a class="dropdown-item" href="https://animefire.vip/em-lancamento">Em
                lançamento</a> <a class="dropdown-item" href="https://animefire.vip/top-animes">Top Animes</a> <a
                class="dropdown-item" href="https://animefire.vip/lista-de-animes-legendados">Legendados</a> <a
                class="dropdown-item" href="https://animefire.vip/lista-de-animes-dublados">Dublados</a> <a
                class="dropdown-item" rel="noopener noreferrer" target="_blank"
                href="https://anichart.net">Calendário</a> </div>
          </div>
        </li>
        <li class="nav-item dropdown pr-2 navbarItem "> <a class="nav-link dropdown-toggle" href="#"
            id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Filmes </a>
          <div class="dropdown-menu">
            <div class="divDMLinks"> <a class="dropdown-item"
                href="https://animefire.vip/lista-de-filmes-legendados">Legendados</a> <a class="dropdown-item"
                href="https://animefire.vip/lista-de-filmes-dublados">Dublados</a> </div>
          </div>
        </li>
        <li class="nav-item dropdown pr-2 navbarItem"> <a class="nav-link dropdown-toggle" href="#" role="button"
            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Gênero </a>
          <div class="dropdown-menu dropdown-menu-fk dmGenero">
            <div class="divDMLinks"> <a class="dropdown-item"
                href="https://animefire.vip/genero/acao"><span>Ação</span></a> <a class="dropdown-item"
                href="https://animefire.vip/genero/artes-marciais">Artes Marciais</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/aventura">Aventura</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/comedia">Comédia</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/demonios">Demônios</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/drama">Drama</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/ecchi">Ecchi</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/espaco">Espaço</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/esporte">Esporte</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/fantasia">Fantasia</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/ficcao-cientifica">Ficção Científica</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/harem">Harém</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/horror">Horror</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/jogos">Jogos</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/josei">Josei</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/magia">Magia</a> </div>
            <div class="divDMLinks"> <a class="dropdown-item" href="https://animefire.vip/genero/mecha">Mecha</a> <a
                class="dropdown-item" href="https://animefire.vip/genero/misterio">Mistério</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/militar">Militar</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/musical">Musical</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/parodia">Paródia</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/psicologico">Psicológico</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/romance">Romance</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/seinen">Seinen</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/shoujo-ai">Shoujo-ai</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/shounen">Shounen</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/slice-of-life">Slice of Life</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/sobrenatural">Sobrenatural</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/suspense">Suspense</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/superpoder">Superpoder</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/vampiros">Vampiros</a> <a class="dropdown-item"
                href="https://animefire.vip/genero/vida-escolar">Vida Escolar</a> </div>
          </div>
        </li>
        <li class="nav-item dropdown pr-2 navbarItem"> <a class="nav-link dropdown-toggle" href="#" role="button"
            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Temporadas </a>
          <div class="dropdown-menu">
            <div class="divDMLinks"> <a class="dropdown-item" href="https://animefire.vip/temporada/outono">Outono</a>
              <a class="dropdown-item" href="https://animefire.vip/temporada/inverno">Inverno</a> <a
                class="dropdown-item" href="https://animefire.vip/temporada/primavera">Primavera</a> <a
                class="dropdown-item" href="https://animefire.vip/temporada/verao">Verão</a> </div>
          </div>
        </li>
        <li class="nav-item dropdown pr-2 navbarItem"> <a class="nav-link dropdown-toggle" href="#" role="button"
            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Mais </a>
          <div class="dropdown-menu">
            <div class="divDMLinks"> <a class="dropdown-item" href="https://animefire.vip/pedidos">Pedidos</a> <a
                class="dropdown-item" href="https://animefire.vip/sugestoes">Sugestões</a> <a class="dropdown-item"
                href="https://animefire.vip/notificacoes">Notificações</a> <a class="dropdown-item"
                href="https://animefire.vip/regras">Regras</a> </div>
          </div>
        </li>
      </ul>
      <ul class="navbar-nav textoEntrarM dropMenuHoverColor">
        <li class="nav-item pr-2 navbarItem "> <a class="nav-link" href="/verify/index">Entrar | Cadastrar</a> </li>
      </ul>
      <div class="col-sm-12 col-md-12 col-xl-3 divSeachEntrar divSeachEntrar_trans div_search_anmt mb-2 mt-3 bg-dark">
        <form action="/proc/search" method="post">
          <div class="input-group divSearch"> <input style="box-shadow: none" class="form-control searchInput"
              id="cxnome" name="search_string" type="text" placeholder="Escreva o nome do anime" aria-label="Search"
              autocomplete="off" required=""> <button id="btn_search_form" type="button" name="pesquisar"
              class="input-group-append button"> <img class="lupaS" alt=""
                src="https://animefire.vip/img/icons/lupa.png"> </button> <button id="btn_search_close" type="button"
              class="d-none input-group-append button"> <span class="quicksand300 text-white">X</span> </button> </div>
        </form>
        <div id="search_result"></div>
      </div>
      <ul class="navbar-nav textoEntrarDesk dropMenuHoverColor ml-2">
        <li class="nav-item navbarItem"> <a class="nav-link" href="/verify/index">Entrar | Cadastrar</a> </li>
      </ul>
    </div>
  </nav>
  <div id="sub_modal" class="bg-dark mt-2" style="top: 0px; z-index: 4; display: flex; opacity: 1;">
    <div class="d-flex justify-content-center" style="width:40%"> <img id="nekog" class="lazy"
        src="https://animefire.vip/img/lt/nekog.webp" data-src="https://animefire.vip/img/lt/nekog.webp"> </div>
    <div id="sub_buttons" class="pt-2">
      <h6 class="quicksand400 text-white pr-2">Oie ツ, quer ser notificado sempre que um episódio novo for lançado?</h6>
      <div class="d-flex"> <button type="button" id="block" class="btn btn-outline-light mr-2">Não</button> <button
          type="button" id="grant" class="btn btn-outline-info">Sim, eu quero</button> </div>
    </div>
  </div>
  <div id="body-content">
    <div id="videojs-fs">
      <div style="height:100vh;padding:0;display:none;background-color:#1A1A1A;background-image:url('')">
        <img id="loading_video" src="https://animefire.vip/img/icons/loading_2.gif">
      </div>
    </div>
    <input type="hidden" id="total_videos" value="12">
    <div class="container mt-5">
      <div class="row">
        <div class="col-12 col-lg-8-5" style="background-color:#1A1A1A">
          <div class="row ml-1 ml-md-0 mr-1">
            <div class="col-lg-12">
              <div id="div_video" itemprop="video" itemscope="" itemtype="http://schema.org/VideoObject">

                <style>
                  #ext-link {
                    color: #fff !important;
                  }
                </style>
                <h1 itemprop="name" class="sectionVideoEpTitle text-white">High School DxD BorN - Episódio 6 - Segundo
                  Semestre Começou!</h1>
                <meta itemprop="duration" content="T24M30S">
                <meta itemprop="thumbnailUrl" content="https://animefire.vip/img/video/high-school-dxd-born/6.jpg">
                <meta itemprop="contentURL" content="https://animefire.vip/animes/high-school-dxd-born/6">
                <meta itemprop="uploadDate" content="2019-12-11T14:12:36-03:00">
                <meta itemprop="description"
                  content="Assistir High School DxD BorN - Episódio 6 - Segundo Semestre Começou! - legendado online em HD, ou baixe o episódio se preferir">
                <div id="div_loading_video" style="display: none;">
                  <img id="loading_video" src="https://animefire.vip/img/lt/loading.gif">
                </div>
                <div id="main_div_video" class="d-none" style="display: block;">
                  <div id="btn_skip_video" class="text-white quicksand400 d-none position-absolute"
                    style="z-index:1;background-color:rgb(74, 74, 74);padding:9px 6px 7px 6px;right:0px;bottom:64px;cursor:pointer;border-radius:3px 0 0 3px;opacity:0.7;font-size:16px;">
                    <span class="mx-1"></span>
                    <div class="vjs-icon-skip-video"></div>
                  </div>
                  <div id="video_menu" class="text-white quicksand400 d-none position-absolute"
                    style="z-index:2;background-color:#1A1A1A;right:10px;bottom:44px;border-radius:3px;width:287px;font-size:15px">
                    <div id="video-menu-1" class="py-2">
                      <div id="autoplay" class="p-3 d-flex justify-content-between" style="height:47px">
                        <div>Reprodução automática</div>
                        <input id="autoplay-toggle" class="ios-checkox" type="checkbox"
                          style="display:block !important;margin-top:-4px">
                      </div>
                      <div id="video-rate" class="p-3 d-flex justify-content-between">
                        Velocidade
                        <div class="d-flex">
                          <div id="rate-selected">Normal</div>
                          <div
                            style="background-image: url(https://animefire.vip/img/icons/angle-right.png);background-size: contain;height:100%;width:9px;background-repeat: no-repeat;background-position:center;margin-left: 8px;">
                          </div>
                        </div>
                      </div>
                      <div id="video-quality" class="p-3 d-flex justify-content-between">
                        Qualidade
                        <div class="d-flex">
                          <div id="quality-selected"></div>
                          <div
                            style="background-image: url(https://animefire.vip/img/icons/angle-right.png);background-size: contain;height:100%;width:9px;background-repeat: no-repeat;background-position:center;margin-left: 8px;">
                          </div>
                        </div>
                      </div>
                    </div>
                    <div id="video-menu-2" class="py-2 d-none">
                      <div id="v-rate-menu" class="d-none">
                        <div id="back-rate-menu" class="p-3 d-flex" style="cursor:pointer">
                          <div
                            style="background-image: url(https://animefire.vip/img/icons/angle-left.png);background-size: contain; width: 9px;background-repeat: no-repeat;background-position: center;margin-right: 8px;">
                          </div>
                          Velocidade
                        </div>
                        <hr>
                        <div class="d-grid">
                          <span class="v-rate p-3">2.25x</span>
                          <span class="v-rate p-3">1.75x</span>
                          <span class="v-rate p-3">1.25x</span>
                          <span class="v-rate p-3 text-gray">Normal</span>
                          <span class="v-rate p-3">0.50x</span>
                        </div>
                      </div>
                      <div id="quality-menu" class="d-none">
                        <div id="back-quality-menu" class="p-3 d-flex" style="cursor:pointer">
                          <div
                            style="background-image: url(https://animefire.vip/img/icons/angle-left.png);background-size: contain; width: 9px;background-repeat: no-repeat;background-position: center;margin-right: 8px;">
                          </div>
                          Qualidade
                        </div>
                        <hr>
                        <div id="video-qualities" class="d-flex" style="flex-direction:column-reverse"></div>
                      </div>
                    </div>
                  </div>
                  <div style="position: relative;padding-bottom: 56.25%;height: 0;overflow: hidden;">
                    <iframe style="position: absolute;width: 100%; height: 100%;top: 0;right: 0;left: 0;"
                      src="https://www.blogger.com/video.g?token=AD6v5dyFCdymX5aXo4f9wEiuIw70t2K1kGkPOxx_6DhEJq8toSV8Elg1sOwLyWKgNJSzmxUa9IZDsi3av8PoAVVSgnAGkhRPQ9rn9_lUzaXYMB_4AtBsFSC1zlg1VMCBNa38m5_jUssv"
                      gesture="media" allow="encrypted-media" allowfullscreen="" frameborder="0"></iframe>
                  </div>

                </div>
              </div>
            </div>
          </div>
          <style>
            @media(min-width:921px) {
              #a45456 {
                display: none
              }

              #a98754 {
                display: flex;
                justify-content: center
              }
            }
          </style>
          <style>
            @media(max-width:920px) {
              #a45456 {
                display: flex;
                justify-content: center;
                margin-top: -26px;
              }

              #a98754 {
                display: none
              }
            }
          </style>
          <div class="tag_form div-video-user-btns d-flex">
            <div class="animeInfo mx-1 mb-2 divBtnFormEp">
              <button class="btnSub" type="button" name="assistir_mais_tarde_video">
                Assistir mais tarde
                <span><img alt="" class="clockPageEp" src="/img/icons/clock.png"></span>
              </button>
              <span class="ml-1 text-gray"> - </span>
            </div>
            <div class="animeInfo mx-1 mb-2 divBtnFormEp">
              <button class="btnSub" type="button" name="favoritar_video">
                Favorito
                <span><img alt="" class="starImgPageEp" src="/img/icons/star.png"></span>
              </button>
            </div>
          </div>
          <div id="video_pagination" class="divFrameBTM">
            <div>
              <nav aria-label="Page navigation example">
                <ul class="pagination paginationEp ml-1 mr-1">
                  <li class="page-item">
                    <a class="page-link" href="5">
                      <img alt="" class="seta-left" src="https://animefire.vip/img/icons/angle-left.png">
                      <span class="ant">ANTERIOR</span>
                    </a>
                  </li>
                  <li class="page-item">
                    <a class="page-link"
                      onclick="if (!window.__cfRLUnblockHandlers) return false; TogetherJS(this); return false;">
                      <img alt="Grupo" class="grupo" src="https://animefire.vip/img/icons/grupo.png">
                    </a>
                  </li>
                  <li class="page-item">
                    <a id="dw" class="page-link" rel="noopener nofollow" target="_blank"
                      href="https://animefire.vip/download/high-school-dxd-born/6?1696107019">
                      <img alt="download" class="lista" src="https://animefire.vip/img/icons/dwl.png">
                    </a>
                  </li>
                  <li class="page-item">
                    <a class="page-link" href="https://animefire.vip/animes/high-school-dxd-born-todos-os-episodios">
                      <img alt="lista completa" class="lista" src="https://animefire.vip/img/icons/list.png">
                    </a>
                  </li>
                  <li class="page-item">
                    <a class="page-link" href="7">
                      <span class="prox">PRÓXIMO</span>
                      <img alt="" class="seta-right" src="https://animefire.vip/img/icons/angle-right.png">
                    </a>
                  </li>
                </ul>
              </nav>
            </div>
          </div>
          <div id="a45456">
            <script data-cfasync="false" type="text/javascript"
              src="https://www.onclickalgo.com/a/display.php?r=2844027"></script>
          </div>
          <div class="divInformacoes text-white ml-1 ml-sm-0 mr-1">
            <div class="divInformacoesTitle">
              <h5 class="informacoesTitle">Informações:</h5>
            </div>
            <ul style="padding-left:10px">
              <li>
                <h6>Publicado Dia: 11/12/2019 </h6>
                <div id="div_report_video" class="d-none">
                  <form id="form_report_video" class="px-3 pt-2" method="post">
                    <input class="nome" type="hidden" name="nome" value="High School DxD BorN">
                    <input type="hidden" name="numero" value="ep: 6">
                    <input type="hidden" name="audio" value="Legendado">
                    <span class="text-white">Descreva o erro:</span>
                    <textarea class="mt-2" name="descricao" maxlength="200" autocomplete="off"
                      style="width:100%"></textarea>
                    <h6 class="text-white mb-0">Dê o máximo de detalhes para que possamos descobrir a causa do erro, se
                      o vídeo não carregar tente recarregar a página</h6>
                  </form>
                  <div class="my-3 d-flex justify-content-center">
                    <button type="button" id="fechar_report_video" class="btn btn-outline-danger mr-3">Fechar</button>
                    <button type="button" id="enviar_report_video" class="btn btn-outline-info">Enviar</button>
                  </div>
                </div>
                <h6 class="reportErroEp">Reportar Erro: <span class="text-red span_report_video"
                    style="cursor:pointer;">Clique Aqui</span></h6>
              </li>
              <li>
                <div>
                  <p id="video_sinopse" style="font-size:14px;padding-top:6px" class="mr-1">
                    Sinopse:
                    O Imperador Dragão Vermelho, Issei Hyoudou, e o Clube de Pesquisa Oculta estão de volta em ação
                    quando as férias de verão chegam para os estudantes da Kuoh Academy. Após a briga com o inimigo
                    jurado de Issei, Vali e a Brigada do Caos, fica claro o quão inexperiente a equipe de Rias Gremory
                    é. Como resultado, ela e Azazel lideram o clube em um intenso regime de treinamento no submundo para
                    prepará-los para os desafios que estão por vir.
                    Enquanto eles amadurecem lentamente em equipe, Issei se encontrará novamente em situações íntimas
                    com as garotas do Clube de Pesquisa Oculta. Enquanto isso, seus adversários se tornam mais fortes e
                    numerosos à medida que reúnem suas forças. E com o aparecimento repentino de Loki, o Deus Maligno da
                    Mitologia Nórdica, o palco está preparado para lutas épicas e demônios perversamente poderosos na
                    High School DxD BorN !
                  </p>
                </div>
              </li>
            </ul>
          </div>
          <div class="texto-white main_cmt d-flex ml-1 ml-sm-0 justify-content-between mr-2">
            <h4 id="comentarios" class="quicksand400 infAn cmtFont text-white"> <img alt="Comentários" class="cmtImg"
                src="https://animefire.vip/img/icons/cmt.png"> Comentários: </h4> <a id="cmt_side"
              href="https://animefire.vip/verify/index" class="username-cmt-logged quicksand400">Entrar <img
                style="margin-top:-2px" class="login_cmt transitioning_src"
                src="https://animefire.vip/img/icons/login.png"
                data-src="https://animefire.vip/img/icons/login.png"></a>
          </div>
          <div class="mainDivComents ml-1 ml-sm-0">
            <div class="d-flex cmtar_div">
              <div>
                <img id="avatar_cmt" class="pic_cmt" src="/img/lt/avatar_default.jpg">
              </div>
              <div style="width:100%" class="mr-2 div-textarea d-grid">
                <textarea maxlength="2000" placeholder="Deixe um comentário..." aria-label="comentar" id="textarea_cmt"
                  class="cmtar_text"></textarea>
                <div class="div_send_cmt d-none">
                  <button type="button" name="send_cmt" id="send_cmt" disabled="">Você precisa de uma conta para poder
                    comentar</button>
                  <input type="file" name="cmt_share_img" class="d-none cmt_share_img_input">
                  <button type="button" class="cmt_share_img"
                    style="background:transparent;border:none;outline:none;padding:0 0 0 3px;cursor:pointer">
                    <img src="https://animefire.vip/img/icons/picture.png" style="height:23px;margin:8px">
                  </button>
                  <button type="button" class="add_spoiler"
                    style="background:transparent;border:none;outline:none;padding:0 0 0 3px;cursor:pointer">
                    <svg style="height:20px;margin:8px;opacity:0.7;" xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 640 512">
                      <path fill="currentColor"
                        d="M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z">
                      </path>
                    </svg>
                  </button>
                </div>
              </div>
            </div>
            <div class="d-flex justify-content-between mt-2">
              <div style="margin-top:7px">
                <h6 class="quicksand400 text-white"><span id="cmt_count">51</span> Comentários</h6>
              </div>
              <div class="sel"><span class="sel__placeholder" data-placeholder="Ordenar por">Ordenar por</span>
                <div class="sel__box"><span class="sel__box__options">Principais comentários</span><span
                    class="sel__box__options">Mais recentes</span><span class="sel__box__options">Mais antigos</span>
                </div>
                <select class="d-none" style="display: none;">
                  <option value="" disabled="">Ordenar por</option>
                  <option value="Mais curtidos">Principais comentários</option>
                  <option value="Mais recentes">Mais recentes</option>
                  <option value="Mais antigos">Mais antigos</option>
                </select>
              </div>
            </div>
            <div class="cmts">
              <input id="ct_ol_cmt" type="hidden" value="51">
              <div class="mt-3 sub-div-cmts d-none" style="display: block;">
                <div id="cmt-99439" class="cmt d-flex mb-3"> <img class="pic_cmt transitioning_src"
                    src="https://animefire.vip/img/avatar/small_7.jpg"
                    data-src="https://animefire.vip/img/avatar/small_7.jpg"> <input class="input_cmt_count"
                    type="hidden" value="99439">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/953354735"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">ph10</a> <span class="text-gray"> • <span
                            class="span-time-cmt">2 anos atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">eu qria ser esse
                            cara f</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1"></span> <span
                            class="pt_lk_cmt"></span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px">
                      <div class="d-flex ml-2">
                        <div class="d-flex ver_replys">
                          <div class="arrow-down mr-2"></div>
                          <div class="text-white quicksand400" style="font-size:14px;cursor:pointer">Ver resposta</div>
                        </div>
                      </div>
                    </div> <img class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-14958" class="cmt d-flex mb-3"> <img class="pic_cmt transitioning_src"
                    src="https://animefire.vip/uploads/avatar/19341974/small_7227031_2735940_1594336369.webp"
                    data-src="https://animefire.vip/uploads/avatar/19341974/small_7227031_2735940_1594336369.webp">
                  <input class="input_cmt_count" type="hidden" value="14958">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/19341974"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">Ermeson</a> <span class="text-gray"> •
                          <span class="span-time-cmt">3 anos atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">Top tirando essas
                            coisas estranhas no episódio</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1"></span> <span
                            class="pt_lk_cmt"></span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px">
                      <div class="d-flex ml-2">
                        <div class="d-flex ver_replys">
                          <div class="arrow-down mr-2"></div>
                          <div class="text-white quicksand400" style="font-size:14px;cursor:pointer">Ver 2 respostas
                          </div>
                        </div>
                      </div>
                    </div> <img class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-449533" class="cmt d-flex mb-3"> <img class="pic_cmt transitioning_src"
                    src="https://animefire.vip/uploads/avatar/89445899/small_9222416_9734109_1636769792.webp"
                    data-src="https://animefire.vip/uploads/avatar/89445899/small_9222416_9734109_1636769792.webp">
                  <input class="input_cmt_count" type="hidden" value="449533">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/89445899"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">Henrique emanuel</a> <span
                          class="text-gray"> • <span class="span-time-cmt">1 ano atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">quedo do Ddraig o
                            issei e foda ta fodase com o parceiro kkkkkkkkk mais continua sendo top demais</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1"></span> <span
                            class="pt_lk_cmt"></span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px"></div> <img
                      class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-350036" class="cmt d-flex mb-3"> <img class="pic_cmt lazy" src=""
                    data-src="https://animefire.vip/uploads/avatar/961698909/small_8121684_4019085_1664215846.webp">
                  <input class="input_cmt_count" type="hidden" value="350036">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/961698909"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">Rayan</a> <span class="text-gray"> •
                          <span class="span-time-cmt">1 ano atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">boraaaa</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1"></span> <span
                            class="pt_lk_cmt"></span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px"></div> <img
                      class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-62614" class="cmt d-flex mb-3"> <img class="pic_cmt lazy" src=""
                    data-src="https://animefire.vip/uploads/avatar/43689432/small_3964599_2334237_1598057759.webp">
                  <input class="input_cmt_count" type="hidden" value="62614">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/43689432"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">XxTiroriTxX</a> <span class="text-gray">
                          • <span class="span-time-cmt">2 anos atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">aaaaaaaaaaaaahh q
                            vida boa da poha krl ele dorme sempre com umas minas peladas e da sorte de pegar uns peito
                            aaaaaa</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1">2</span> <span
                            class="pt_lk_cmt"> • </span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px"></div> <img
                      class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-417070" class="cmt d-flex mb-3"> <img class="pic_cmt lazy" src=""
                    data-src="https://animefire.vip/uploads/avatar/717010661/small_7222252_8157012_1681381963.webp">
                  <input class="input_cmt_count" type="hidden" value="417070">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/717010661"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">TheChosenOne-ドジ</a> <span
                          class="text-gray"> • <span class="span-time-cmt">1 ano atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">pqp essa loli me
                            deixa doido. e fica sem calcinha ainda -__-</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1"></span> <span
                            class="pt_lk_cmt"></span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px"></div> <img
                      class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-216548" class="cmt d-flex mb-3"> <img class="pic_cmt lazy" src=""
                    data-src="https://animefire.vip/uploads/avatar/510821291/small_2734399_1923830_1639534766.webp">
                  <input class="input_cmt_count" type="hidden" value="216548">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/510821291"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">Gogeta</a> <span class="text-gray"> •
                          <span class="span-time-cmt">2 anos atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">20:00 O Som de fundo
                            jkkk</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1"></span> <span
                            class="pt_lk_cmt"></span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px"></div> <img
                      class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-14548" class="cmt d-flex mb-3"> <img class="pic_cmt lazy" src=""
                    data-src="https://animefire.vip/uploads/avatar/681570104/small_4349196_2161264_1594504734.webp">
                  <input class="input_cmt_count" type="hidden" value="14548">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/681570104"
                          class="usr_name_cmt quicksand400" style="overflow:hidden;height:19px;margin-right:6px">anime
                          fire</a> <span class="text-gray"> • <span class="span-time-cmt">3 anos atrás</span></span>
                      </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">NOSA</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1">1</span> <span
                            class="pt_lk_cmt"> • </span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px"></div> <img
                      class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-104116" class="cmt d-flex mb-3"> <img class="pic_cmt lazy" src=""
                    data-src="https://animefire.vip/uploads/avatar/87467458/small_3937442_9636932_1605950652.webp">
                  <input class="input_cmt_count" type="hidden" value="104116">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/87467458"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">allisson orochi</a> <span
                          class="text-gray"> • <span class="span-time-cmt">2 anos atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">Kkkk coitado do
                            dragão</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1">1</span> <span
                            class="pt_lk_cmt"> • </span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px"></div> <img
                      class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-34529" class="cmt d-flex mb-3"> <img class="pic_cmt lazy" src=""
                    data-src="https://animefire.vip/uploads/avatar/859736218/small_3358852_8206378_1598202879.webp">
                  <input class="input_cmt_count" type="hidden" value="34529">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/859736218"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">Guru-Guru(Tobi-Branco)</a> <span
                          class="text-gray"> • <span class="span-time-cmt">3 anos atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">KKKKKKK O CARA
                            ENTROU PARA A HISTORIA DOS HEROIS E FICOU CONHECIDO COMO DRAGÃO DOS PEITOS KKAKAAKAKAKA</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1">3</span> <span
                            class="pt_lk_cmt"> • </span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px"></div> <img
                      class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-413141" class="cmt d-flex mb-3"> <img class="pic_cmt lazy" src=""
                    data-src="https://animefire.vip/uploads/avatar/647066476/small_9178272_7638783_1675402793.webp">
                  <input class="input_cmt_count" type="hidden" value="413141">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/647066476"
                          class="usr_name_cmt quicksand400" style="overflow:hidden;height:19px;margin-right:6px">kichiro
                          otaku</a> <span class="text-gray"> • <span class="span-time-cmt">1 ano atrás</span></span>
                      </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">Um dia eli vai
                            consegui fazê S3X0</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1"></span> <span
                            class="pt_lk_cmt"></span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px"></div> <img
                      class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-21031" class="cmt d-flex mb-3"> <img class="pic_cmt lazy" src=""
                    data-src="https://animefire.vip/uploads/avatar/789185442/small_4765329_6071974_1588614865.webp">
                  <input class="input_cmt_count" type="hidden" value="21031">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/789185442"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">Charles</a> <span class="text-gray"> •
                          <span class="span-time-cmt">3 anos atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">Nossa mesmo!!!.....
                            kkkkkkkkk...... Fico pensando se ele fica com todas elas na cama literalmente, bom vejo que
                            todas que aparecem com ele, estão sem sutiã né?.... Não vou negar que também adoro seios, da
                            de conta de todos eles, acho que em animes mesmo isso, kkkkkkk....</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1"></span> <span
                            class="pt_lk_cmt"></span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px">
                      <div class="d-flex ml-2">
                        <div class="d-flex ver_replys">
                          <div class="arrow-down mr-2"></div>
                          <div class="text-white quicksand400" style="font-size:14px;cursor:pointer">Ver 33 respostas
                          </div>
                        </div>
                      </div>
                    </div> <img class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-216542" class="cmt d-flex mb-3"> <img class="pic_cmt lazy" src=""
                    data-src="https://animefire.vip/uploads/avatar/510821291/small_2734399_1923830_1639534766.webp">
                  <input class="input_cmt_count" type="hidden" value="216542">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/510821291"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">Gogeta</a> <span class="text-gray"> •
                          <span class="span-time-cmt">2 anos atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">EPISÓDIO 6 - SEGUNDO
                            SEMESTRE COMEÇOU!</p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1"></span> <span
                            class="pt_lk_cmt"></span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px"></div> <img
                      class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-365226" class="cmt d-flex mb-3"> <img class="pic_cmt lazy" src=""
                    data-src="https://animefire.vip/uploads/avatar/24339373/small_7343130_9911769_1646520260.webp">
                  <input class="input_cmt_count" type="hidden" value="365226">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/24339373"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">PierCech</a> <span class="text-gray"> •
                          <span class="span-time-cmt">1 ano atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px">Bom demais </p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1"></span> <span
                            class="pt_lk_cmt"></span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px"></div> <img
                      class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
                <div id="cmt-547398" class="cmt d-flex mb-3"> <img class="pic_cmt lazy" src=""
                    data-src="https://animefire.vip/uploads/avatar/464694704/small_8324204_3328747_1666813919.webp">
                  <input class="input_cmt_count" type="hidden" value="547398">
                  <div class="ml-2 box_cmt d-block">
                    <div class="box-info d-flex justify-content-between">
                      <div class="d-flex"> <a href="https://animefire.vip/users/464694704"
                          class="usr_name_cmt quicksand400"
                          style="overflow:hidden;height:19px;margin-right:6px">raphaツ</a> <span class="text-gray"> •
                          <span class="span-time-cmt">1 ano atrás</span></span> </div>
                      <div class="div_cmt_exl" style="cursor:pointer"> </div>
                    </div>
                    <div class="main_cmt_div" style="margin-top:6px">
                      <div class="div_main_cmt">
                        <div class="div_cmt_p_tag">
                          <p onselectstart="return false" onmousedown="return false" class="text-white p_tag_cmt"
                            style="white-space:break-spaces;word-break:break-word;line-height:20px"> esta é a sexta vez
                            q tou a ver esta serie
                            e sempre tenho odio desse demónio q quer casar com a asia
                            pqp deixa a minha feria demónio em paz garai </p>
                        </div>
                      </div>
                      <div class="cmt-menu mt-1 d-flex">
                        <h6 class="h6_like mr-2"> <span class="curtir_cmt" style="color:gray;opacity:1"></span> <span
                            class="pt_lk_cmt"></span> <img class="curtir_cmt mr-1"
                            src="https://animefire.vip/img/icons/like.png"> <span class="span_cmt_like">Curtir</span>
                        </h6>
                        <h6 class="h6_reply"><img class="reply_cmt mr-1"
                            src="https://animefire.vip/img/icons/reply.png">Responder</h6>
                      </div>
                    </div>
                    <div class="mt-1 div_reply pb-2 d-none"> <textarea maxlength="2000"
                        class="textarea_reply"></textarea>
                      <div class="div_send_reply"> </div>
                    </div>
                    <div class="cmt_div_reply_apd" style="margin-left:-.5rem;margin-top:7px"></div> <img
                      class="loading_reply d-none" src="https://animefire.vip/img/icons/loading_2.gif"
                      style="height:21px">
                  </div>
                </div>
              </div>
              <img class="my-4 cmt_loading transitioning_src" src="https://animefire.vip/img/icons/loading_2.gif"
                data-src="https://animefire.vip/img/icons/loading_2.gif" alt="Carregando comentários..."
                style="display: none;">
              <div id="load_more_cmts" class="justify-content-center d-none" style="display: flex;"><button
                  type="button" class="btn_carregar_mais text-gray">Carregar mais</button><img width="22px"
                  class="cmt_load_more_loading d-none lazy" src="" data-src="/img/icons/loading_2.gif"></div>
            </div>
          </div>
        </div>
        <style type="text/css">
          @media(min-width:921px) {
            .divSection3 {
              min-height: 317px
            }
          }
        </style>
        <div class="col-12 col-lg-4-5">
          <div class="divSection3 col-lg-12">
            <div>
              <h3 class="section text-white mb-1 ml-2 mr-2 ml-lg-0 mr-lg-0">Publicidade</h3>
              <div id="a98754">
                <script async="" data-cfasync="false" data-domain="ardslediana.com" data-height="250"
                  data-id="dl-banner-300-250"
                  data-image="//neetoutoo.com/contents/s/aa/84/a9/575265dfd979fc3dbfe4b3ce86/0618920392177.png"
                  data-width="300" data-zone="6142337" src="//desgolurkom.com/btag.min.js"></script>
              </div>
            </div>
          </div>
          <div class="divSection7 div_prox_eps d-none col-lg-12">
            <div>
              <h2 class="section text-white mb-1 ml-2 mr-2 ml-lg-0 mr-lg-0">Próximos episódios</h2>
              <div style="min-height: 236.81px">
                <div class="col-12 col-sm-6 col-md-4 col-lg-12 divCardUltimosEpsHome"
                  title="High School DxD BorN - Episódio 7 - A Noite Antes Da Batalha!">
                  <article class="card cardUltimosEps" style="height:185px"> <a
                      href="https://animefire.vip/animes/high-school-dxd-born/7"> <img
                        class="card-img-top imgAnimesUltimosEps transitioning_src"
                        src="https://animefire.vip/img/video/high-school-dxd-born/7.webp?v=5"
                        data-src="https://animefire.vip/img/video/high-school-dxd-born/7.webp?v=5"
                        alt="High School DxD BorN - Episódio 7 - A Noite Antes Da Batalha!"
                        ondragstart="if (!window.__cfRLUnblockHandlers) return false; return false"
                        oncontextmenu="if (!window.__cfRLUnblockHandlers) return false; return false">
                      <div class="text-block-ep">
                        <h3 class="animeTitle">High School DxD BorN - Episódio 7 - A Noite Antes Da Batalha!</h3>
                      </div>
                    </a> </article>
                  <div class="mb-1 pb-1"> <span class="numEp">Episódio 7</span></div>
                </div>
                <div class="col-12 col-sm-6 col-md-4 col-lg-12 divCardUltimosEpsHome"
                  title="High School DxD BorN - Episódio 8 - Nós Salvaremos Ásia!">
                  <article class="card cardUltimosEps" style="height:185px"> <a
                      href="https://animefire.vip/animes/high-school-dxd-born/8"> <img
                        class="card-img-top imgAnimesUltimosEps transitioning_src transitioning_src"
                        src="https://animefire.vip/img/video/high-school-dxd-born/8.webp?v=5"
                        data-src="https://animefire.vip/img/video/high-school-dxd-born/8.webp?v=5"
                        alt="High School DxD BorN - Episódio 8 - Nós Salvaremos Ásia!"
                        ondragstart="if (!window.__cfRLUnblockHandlers) return false; return false"
                        oncontextmenu="if (!window.__cfRLUnblockHandlers) return false; return false">
                      <div class="text-block-ep">
                        <h3 class="animeTitle">High School DxD BorN - Episódio 8 - Nós Salvaremos Ásia!</h3>
                      </div>
                    </a> </article>
                  <div class="mb-1 pb-1"> <span class="numEp">Episódio 8</span></div>
                </div>
                <div class="col-12 col-sm-6 col-md-4 col-lg-12 divCardUltimosEpsHome"
                  title="High School DxD BorN - Episódio 9 - Dragão Dos Dragões">
                  <article class="card cardUltimosEps" style="height:185px"> <a
                      href="https://animefire.vip/animes/high-school-dxd-born/9"> <img
                        class="card-img-top imgAnimesUltimosEps transitioning_src transitioning_src"
                        src="https://animefire.vip/img/video/high-school-dxd-born/9.webp?v=5"
                        data-src="https://animefire.vip/img/video/high-school-dxd-born/9.webp?v=5"
                        alt="High School DxD BorN - Episódio 9 - Dragão Dos Dragões"
                        ondragstart="if (!window.__cfRLUnblockHandlers) return false; return false"
                        oncontextmenu="if (!window.__cfRLUnblockHandlers) return false; return false">
                      <div class="text-block-ep">
                        <h3 class="animeTitle">High School DxD BorN - Episódio 9 - Dragão Dos Dragões</h3>
                      </div>
                    </a> </article>
                  <div class="mb-1 pb-1"> <span class="numEp">Episódio 9</span></div>
                </div>
                <div class="col-12 col-sm-6 col-md-4 col-lg-12 divCardUltimosEpsHome"
                  title="High School DxD BorN - Episódio 10 - O Clube De Ocultismo Desaparece!?">
                  <article class="card cardUltimosEps" style="height:185px"> <a
                      href="https://animefire.vip/animes/high-school-dxd-born/10"> <img
                        class="card-img-top imgAnimesUltimosEps transitioning_src"
                        src="https://animefire.vip/img/video/high-school-dxd-born/10.webp?v=5"
                        data-src="https://animefire.vip/img/video/high-school-dxd-born/10.webp?v=5"
                        alt="High School DxD BorN - Episódio 10 - O Clube De Ocultismo Desaparece!?"
                        ondragstart="if (!window.__cfRLUnblockHandlers) return false; return false"
                        oncontextmenu="if (!window.__cfRLUnblockHandlers) return false; return false">
                      <div class="text-block-ep">
                        <h3 class="animeTitle">High School DxD BorN - Episódio 10 - O Clube De Ocultismo Desaparece!?
                        </h3>
                      </div>
                    </a> </article>
                  <div class="mb-1 pb-1"> <span class="numEp">Episódio 10</span></div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="no-logged-popup d-none text-white py-1">
      <div class="ml-2">
        Aviso
        <img src="https://animefire.vip/img/icons/closePC.png" class="close-popup float-right mr-2">
      </div>
      <div class="quicksand300 pb-3 pt-2 mt-1 text-center" style="background-color:#2A2A2A;border-radius:3px;">
        Você precisa estar logado.
        <a href="https://animefire.vip/verify/index" style="color:#21D3FF">Clique aqui</a>
      </div>
    </div>


  </div> <button id="btnOpenPC" style="opacity:.5" type="button"></button>
  <div id="divPchat">
    <div id="divClosePC"> <button type="button" id="btnClosePC"></button> </div>
    <div id="mainDivMSGs">
      <div id="chat-regras" class="d-none justify-content-center mr-3"
        style="height: 100%; background-image: url(https://animefire.vip/img/lt/bg_chat_regras.png); background-repeat: no-repeat; background-position: center bottom; background-size: auto 60%;">
        <div style="margin-top: 35px;">
          <h6 style="max-width: 400px" class="quicksand400 text-white text-center">Olá, seja bem-vindo ao chat global.
            Por favor leia as regras antes de usar o chat: <a class="text-gray" href="https://animefire.vip/regras"
              target="_blank">Regras</a> </h6>
          <div class="d-flex justify-content-center"> <button id="pc-chat-regras-lidas"
              class="btn btn-outline-light mt-2">Ok, entendi.</button> </div>
        </div>
      </div>
      <div id="div_msgs_pc" class="d-flex" style="flex-direction:column;height:100%"> </div>
    </div>
    <form id="formPublicChat" method="post">
      <div id="divPchatFooter" style="bottom:0"> <img id="avatarPC" class="d-none"
          src="https://animefire.vip/img/lt/avatar_default.jpg"> <input id="inputUSPC" type="hidden" value="Default">
        <textarea maxlength="300" placeholder="Digite uma mensagem..." name="PCmsg" id="textAreaPC"
          style="padding:6px !important"></textarea> <input type="file" name="pc_img_share" class="d-none pc_img_share">
        <div class="d-grid"> <button type="button" name="PCimgShare" id="PCimgShare"
            class="btn btn-outline-info mt-0"></button> <button type="button" name="PCytShare" id="PCytShare"
            class="btn btn-outline-info"></button> </div>
        <div class="d-grid"> <button type="button" id="PC_add_spoiler" class="btn btn-outline-info"
            style="margin-left:0.4rem;width:36px;"> <svg style="height:16px;margin:0 0 0 -4px;opacity:0.7;"
              xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512">
              <path fill="currentColor"
                d="M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z">
              </path>
            </svg> </button> </div>
        <div class="d-flex"> <button type="button" id="btnEnviarPchat" class="btn btn-outline-info mt-0"></button>
        </div>
      </div>
    </form>
  </div>
  <style>
    #b2t {
      bottom: 58px !important
    }
  </style>
  <footer class="page-footer font-small teal mt-4 bgFooter">
    <div class="container">
      <div class="row d-flex divBgFooter">
        <div class="col-md-12 text-white small divParceiros">
          <div class="parceiros mt-4">
            <h4>Parceiros</h4>
            <div class="divParceiro pt-4">
              <ul style="padding-left:0;text-align:left;list-style:none">
                <li class="pb-2"> <img class="mr-1 pb-1" alt="" width="10" height="12"
                    src="https://animefire.vip/img/icons/setaDR.png"><a class="parceiro" href="https://superflixhd.net"
                    rel="noopener" target="_blank">SuperFlix HD</a> </li>
                <li class="pb-2"> <img class="mr-1 pb-1" alt="" width="10" height="12"
                    src="https://animefire.vip/img/icons/setaDR.png"><a class="parceiro" href="https://mangavibe.top"
                    rel="noopener" target="_blank">MangaVibe</a> </li>
                <li class="pb-2"> <img class="mr-1 pb-1" alt="" width="10" height="12"
                    src="https://animefire.vip/img/icons/setaDR.png"><a class="parceiro" href="https://baixar.club/"
                    rel="noopener" target="_blank">Baixar.Club</a> </li>
                <li class="pb-2"> <img class="mr-1 pb-1" alt="" width="10" height="12"
                    src="https://animefire.vip/img/icons/setaDR.png"><a class="parceiro"
                    href="https://assistirserie.org" rel="noopener" target="_blank">Assistir Série</a> </li>
                <li class="pb-2"> <img class="mr-1 pb-1" alt="" width="10" height="12"
                    src="https://animefire.vip/img/icons/setaDR.png"><a class="parceiro"
                    href="https://www.megaseriesonline2.top/" rel="noopener" target="_blank">Mega Series Online</a>
                </li>
              </ul>
              <ul style="padding-left:40px;text-align:left;list-style:none">
                <li class="pb-2"> <img class="mr-1 pb-1" alt="" width="10" height="12"
                    src="https://animefire.vip/img/icons/setaDR.png"><a class="parceiro" href="https://supertorrent.net"
                    rel="noopener" target="_blank">Filmes Torrent</a> </li>
                <li class="pb-2"> <img class="mr-1 pb-1" alt="" width="10" height="12"
                    src="https://animefire.vip/img/icons/setaDR.png"><a class="parceiro" href="https://pobreflix.com/"
                    rel="noopener" target="_blank">Pobreflix</a> </li>
                <li class="pb-2"> <img class="mr-1 pb-1" alt="" width="10" height="12"
                    src="https://animefire.vip/img/icons/setaDR.png"><a class="parceiro"
                    href="https://playseries.online" rel="noopener" target="_blank">Play Séries</a> </li>
                <li class="pb-2"> <img class="mr-1 pb-1" alt="" width="10" height="12"
                    src="https://animefire.vip/img/icons/setaDR.png"><a class="parceiro" href="https://maxseries.top/"
                    rel="noopener" target="_blank">Max Séries</a> </li>
                <li class="pb-2"> <img class="mr-1 pb-1" alt="" width="10" height="12"
                    src="https://animefire.vip/img/icons/setaDR.png"><a class="parceiro" href="https://topflix.one"
                    rel="noopener" target="_blank">TopFlix</a> </li>
              </ul>
            </div>
          </div>
          <div class="divCopy px-2 px-sm-0 mt-4 mt-md-0 col-12"> © 2023 AnimeFire - Todos os Direitos Reservados - <a
              style="text-decoration:underline" href="https://animefire.vip/politica-de-privacidade"> Política de
              Privacidade </a> - <a style="text-decoration: underline;" href="https://animefire.vip/dmca"> DMCA </a>
          </div>
          <p class="text-center mt-1 mb-1 mx-2">Este site não hospeda nenhum vídeo em seu servidor. Todo conteúdo é
            provido de terceiros não afiliados.</p>
        </div>
      </div>
    </div>
  </footer>
  <script
    type="text/javascript"> var site_url = 'https://animefire.vip', site_name = 'animefire', dynamic_cache = 'dynamic-cache'; var cdn_storage = 'https://animefire.vip'; </script>
  <script src="https://animefire.vip/js/af.js?v=5057" type="text/javascript"></script>
  <script src="https://animefire.vip/js/player/video.js?v=5000" type="text/javascript"></script>
  <script src="https://animefire.vip/js/player/main.js?v=5023" type="text/javascript"></script>
  <script src="https://togetherjs.com/togetherjs-min.js" defer="" type="text/javascript"></script>
  <script src="https://animefire.vip/js/cmt.js?v=5036" defer="" type="text/javascript"></script>
  <script src="https://animefire.vip/js/pc-chat.js?v=11" defer="" type="text/javascript"></script>
  <script data-cfasync="false"
    type="text/javascript">(function ($, document) { for ($._Eu = $.BD; $._Eu < $.Fo; $._Eu += $.y) { switch ($._Eu) { case $.Fl: !function (r) { for ($._E = $.BD; $._E < $.Cf; $._E += $.y) { switch ($._E) { case $.CB: u.m = r, u.c = e, u.d = function (n, t, r) { u.o(n, t) || Object[$.e](n, t, $.$($.BF, !$.y, $.Ck, !$.BD, $.Ch, r)); }, u.n = function (n) { for ($._C = $.BD; $._C < $.CB; $._C += $.y) { switch ($._C) { case $.y: return u.d(t, $.Ca, t), t; break; case $.BD: var t = n && n[$.Cc] ? function () { return n[$.Ci]; } : function () { return n; }; break; } } }, u.o = function (n, t) { return Object[$.CF][$.CJ][$.Bz](n, t); }, u.p = $.Bu, u(u.s = $.Bx); break; case $.y: function u(n) { for ($._B = $.BD; $._B < $.Cf; $._B += $.y) { switch ($._B) { case $.CB: return r[n][$.Bz](t[$.Bw], t, t[$.Bw], u), t.l = !$.BD, t[$.Bw]; break; case $.y: var t = e[n] = $.$($.CC, n, $.CE, !$.y, $.Bw, $.$()); break; case $.BD: if (e[n]) return e[n][$.Bw]; break; } } } break; case $.BD: var e = $.$(); break; } } }([function (n, t, r) { for ($._g = $.BD; $._g < $.Cf; $._g += $.y) { switch ($._g) { case $.CB: t.e = 6246193, t.a = 6246192, t.v = 5, t.w = 0, t.h = 15, t.y = 1, t._ = true, t.g = g[$.Jw](b('eyJhZGJsb2NrIjp7fSwiZXhjbHVkZXMiOiIifQ==')), t.O = 1, t.k = 'Ly92YWl0b3Rvby5uZXQvNS82MjQ2MTkz', t.A = 2, t.S = $.Iq * 1692780228, t.P = 'V2@%YSU2B]G~', t.M = 'ugh', t.T = 'isve6xaevk3', t.B = 'w21cjjps', t.N = 'v4k', t.I = '7ooq2ruak3o', t.C = '_izwwdo', t.R = '_fgybbqj'; break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)); break; case $.BD: $.Cr; break; } } }, function (n, t, e) { for ($._DI = $.BD; $._DI < $.DC; $._DI += $.y) { switch ($._DI) { case $.Cf: function w() { for ($._DH = $.BD; $._DH < $.CB; $._DH += $.y) { switch ($._DH) { case $.y: t[$.Ih](s.J, $.Gr + ($.BD, f.Z)()), t[$.Ii](s.$, c.Q[d.O]), t[$.Il] = function () { if ($.ad === t[$.bJ]) { for ($._DA = $.BD; $._DA < $.CB; $._DA += $.y) { switch ($._DA) { case $.y: n[$.l](function (n) { for ($._Bb = $.BD; $._Bb < $.CB; $._Bb += $.y) { switch ($._Bb) { case $.y: u[r] = e; break; case $.BD: var t = n[$.Gv]($.dy), r = t[$.cj]()[$.eF](), e = t[$.Bt]($.dy); break; } } }), u[s.W] ? (l = !$.BD, ($.BD, a.nn)(u[s.W])) : u[s.tn] && ($.BD, a.nn)(u[s.tn]); break; case $.BD: var n = t[$.cr]()[$.dd]()[$.Gv](new RegExp($.dz, $.Bu)), u = $.$(); break; } } } }, t[$.Ij](); break; case $.BD: var t = new window[$.Jj](); break; } } } break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t[$.Di] = function () { return $.Jt + d.e + $.bh; }, t.z = function () { return $.Jz + d.e; }, t.D = function () { return ($.BD, a.H)(); }, t.F = function () { return [($.BD, u.L)(o.G[$.Ds], o[$.Go][$.Ds]), ($.BD, u.L)(o[$.Er][$.Ds], o[$.Go][$.Ds])][$.Bt]($.bp); }, t.V = function () { for ($._Bd = $.BD; $._Bd < $.CB; $._Bd += $.y) { switch ($._Bd) { case $.y: n.id = i.U, window[$.JI](n, $.Jv); break; case $.BD: var n = $.$(), t = r(function () { ($.BD, f.X)() && (v(t), w()); }, $.Jk); break; } } }, t.Y = w, t.K = function () { return new Promise(function (t, e) { var u = $.BD, i = r(function () { for ($._CH = $.BD; $._CH < $.CB; $._CH += $.y) { switch ($._CH) { case $.y: n ? (v(i), l && (($.BD, f[$.Dq])(), t(n)), t()) : $.Fo <= u && (v(i), e()), u += $.y; break; case $.BD: var n = ($.BD, a.H)(); break; } } }, $.Jk); }); }; break; case $.CB: var u = e($.CB), i = e($.Cf), o = e($.Fk), c = e($.Fl), f = e($.Fm), a = e($.Fn), d = e($.BD), s = e($.Fo), l = !$.y; break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._CJ = $.BD; $._CJ < $.Ft; $._CJ += $.y) { switch ($._CJ) { case $.Cf: function a(n) { for ($._Bk = $.BD; $._Bk < $.CB; $._Bk += $.y) { switch ($._Bk) { case $.y: return e <= t && t <= u ? t - e : o <= t && t <= c ? t - o + i : $.BD; break; case $.BD: var t = n[$.Bv]()[$.bC]($.BD); break; } } } break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t[$.Dj] = a, t[$.o] = d, t.rn = function (n, u) { return n[$.Gv]($.Bu)[$.aa](function (n, t) { for ($._BF = $.BD; $._BF < $.CB; $._BF += $.y) { switch ($._BF) { case $.y: return d(e); break; case $.BD: var r = (u + $.y) * (t + $.y), e = (a(n) + r) % f; break; } } })[$.Bt]($.Bu); }, t.en = function (n, u) { return n[$.Gv]($.Bu)[$.aa](function (n, t) { for ($._Bf = $.BD; $._Bf < $.CB; $._Bf += $.y) { switch ($._Bf) { case $.y: return d(e); break; case $.BD: var r = u[t % (u[$.Gp] - $.y)], e = (a(n) + a(r)) % f; break; } } })[$.Bt]($.Bu); }, t.L = function (n, c) { return n[$.Gv]($.Bu)[$.aa](function (n, t) { for ($._Ba = $.BD; $._Ba < $.CB; $._Ba += $.y) { switch ($._Ba) { case $.y: return d(o); break; case $.BD: var r = c[t % (c[$.Gp] - $.y)], e = a(r), u = a(n), i = u - e, o = i < $.BD ? i + f : i; break; } } })[$.Bt]($.Bu); }; break; case $.DC: function d(n) { return n <= $.Fl ? k[$.o](n + e) : n <= $.ck ? k[$.o](n + o - i) : k[$.o](e); } break; case $.CB: var e = $.Ct, u = $.Cu, i = u - e + $.y, o = $.Cv, c = $.Cw, f = c - o + $.y + i; break; case $.BD: $.Cr; break; } } }, function (t, r, u) { for ($._Cz = $.BD; $._Cz < $.Ft; $._Cz += $.y) { switch ($._Cz) { case $.Cf: r.cn = f[$.Bn]()[$.Bv]($.By)[$.CA]($.CB), r.in = f[$.Bn]()[$.Bv]($.By)[$.CA]($.CB), r.U = f[$.Bn]()[$.Bv]($.By)[$.CA]($.CB), r.un = f[$.Bn]()[$.Bv]($.By)[$.CA]($.CB); break; case $.y: Object[$.e](r, $.Cc, $.$($.Ik, !$.BD)), r.un = r.U = r.in = r.cn = r.fn = r.an = void $.BD; break; case $.DC: c && (c[$.B](a, function t(r) { c[$.C](a, t), [($.BD, i.dn)(n[$.cs]), ($.BD, i.sn)(window[$.bB][$.t]), ($.BD, i.vn)(new e()), ($.BD, i.ln)(window[$.br][$.bx]), ($.BD, i.wn)(n[$.cx] || n[$.do])][$.l](function (t) { for ($._Ch = $.BD; $._Ch < $.CB; $._Ch += $.y) { switch ($._Ch) { case $.y: q(function () { for ($._Cb = $.BD; $._Cb < $.CB; $._Cb += $.y) { switch ($._Cb) { case $.y: n.id = r[$.av], n[$.Ik] = t, window[$.JI](n, $.Jv), ($.BD, o[$.Dl])($.eq + t); break; case $.BD: var n = $.$(); break; } } }, n); break; case $.BD: var n = m($.Fo * f[$.Bn](), $.Fo); break; } } }); }), c[$.B](d, function n(t) { for ($._BI = $.BD; $._BI < $.Ft; $._BI += $.y) { switch ($._BI) { case $.Cf: var e = window[$.br][$.bx], u = new window[$.Jj](); break; case $.y: var r = $.$(); break; case $.DC: u[$.Ih]($.Hy, e), u[$.Il] = function () { r[$.Da] = u[$.cr](), window[$.JI](r, $.Jv); }, u[$.Gn] = function () { r[$.Da] = $.cG, window[$.JI](r, $.Jv); }, u[$.Ij](); break; case $.CB: r.id = t[$.av]; break; case $.BD: c[$.C](d, n); break; } } })); break; case $.CB: var i = u($.Fp), o = u($.DC), c = $.Cs != typeof document ? document[$.a] : null, a = r.an = $.Jd, d = r.fn = $.Je; break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._Bc = $.BD; $._Bc < $.Cf; $._Bc += $.y) { switch ($._Bc) { case $.CB: var e = []; break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t[$.Dk] = function () { return e; }, t[$.Dl] = function (n) { e[$.CA](-$.y)[$.ar]() !== n && e[$.ah](n); }; break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._F = $.BD; $._F < $.Cf; $._F += $.y) { switch ($._F) { case $.CB: t.hn = $.Hm, t.mn = $.Hn, t.yn = $.Ho, t._n = $.Hp, t.bn = $.BD, t.pn = $.y, t.gn = $.CB, t.jn = $.Hq; break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)); break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._Dd = $.BD; $._Dd < $.Cf; $._Dd += $.y) { switch ($._Dd) { case $.CB: var u = r($.CB), v = r($.Fm), l = r($.BD), f = t.On = new j($.aC, $.Bu), i = ($.Cs != typeof document ? document : $.$($.a, null))[$.a], w = $.Cx, y = $.Cy, _ = $.Cz, b = $.DA; break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t.On = void $.BD, t.kn = function (e, u, i) { for ($._Bz = $.BD; $._Bz < $.CB; $._Bz += $.y) { switch ($._Bz) { case $.y: return e[$.Ds] = o[c], e[$.Gp] = o[$.Gp], function (n) { for ($._Bm = $.BD; $._Bm < $.CB; $._Bm += $.y) { switch ($._Bm) { case $.y: if (t === u) for (; r--;)c = (c += i) >= o[$.Gp] ? $.BD : c, e[$.Ds] = o[c]; break; case $.BD: var t = n && n[$.am] && n[$.am].id, r = n && n[$.am] && n[$.am][$.Ik]; break; } } }; break; case $.BD: var o = e[$.Es][$.Gv](f)[$.af](function (n) { return !f[$.Jf](n); }), c = $.BD; break; } } }, t[$.Dm] = function (d, s) { return function (n) { for ($._DE = $.BD; $._DE < $.CB; $._DE += $.y) { switch ($._DE) { case $.y: if (t === s) try { for ($._Ck = $.BD; $._Ck < $.CB; $._Ck += $.y) { switch ($._Ck) { case $.y: d[$.Dr] = m(a / l.y, $.Fo) + $.y, d[$.Du] = d[$.Du] ? d[$.Du] : new e(i)[$.cI](), d[$.Ds] = ($.BD, v[$.Do])(c + l.P); break; case $.BD: var u = d[$.Du] ? new e(d[$.Du])[$.Bv]() : r[$.Gv](w)[$.cv](function (n) { return n[$.es]($.ev); }), i = u[$.Gv](y)[$.ar](), o = new e(i)[$.dg]()[$.Gv](_), c = o[$.cj](), f = o[$.cj]()[$.Gv](b), a = f[$.cj](); break; } } } catch (n) { d[$.Ds] = $.cG; } break; case $.BD: var t = n && n[$.am] && n[$.am].id, r = n && n[$.am] && n[$.am][$.Da]; break; } } }; }, t.An = function (n, t) { for ($._e = $.BD; $._e < $.CB; $._e += $.y) { switch ($._e) { case $.y: r[$.av] = n, i[$.F](r); break; case $.BD: var r = new Event(t); break; } } }, t.Sn = function (r, n) { return h[$.Cg](null, $.$($.Gp, n))[$.aa](function (n, t) { return ($.BD, u.rn)(r, t); })[$.Bt]($.eg); }; break; case $.BD: $.Cr; break; } } }, function (n, t, u) { for ($._Dl = $.BD; $._Dl < $.Fl; $._Dl += $.y) { switch ($._Dl) { case $.Fm: function b(n, t) { return n + (m[$.Ds] = $.az * m[$.Ds] % $.bv, m[$.Ds] % (t - n)); } break; case $.Cf: function w(n) { for ($._Bw = $.BD; $._Bw < $.CB; $._Bw += $.y) { switch ($._Bw) { case $.y: return h[$.JH](n); break; case $.BD: if (h[$.JG](n)) { for ($._Bp = $.BD; $._Bp < $.CB; $._Bp += $.y) { switch ($._Bp) { case $.y: return r; break; case $.BD: for (var t = $.BD, r = h(n[$.Gp]); t < n[$.Gp]; t++)r[t] = n[t]; break; } } } break; } } } break; case $.Fr: !function t() { for ($._Dh = $.BD; $._Dh < $.Ft; $._Dh += $.y) { switch ($._Dh) { case $.Cf: var u = r(function () { if ($.Bu !== m[$.Ds]) { for ($._Dc = $.BD; $._Dc < $.Cf; $._Dc += $.y) { switch ($._Dc) { case $.CB: m[$.Dt] = !$.BD, m[$.Ds] = $.Bu; break; case $.y: try { for ($._DF = $.BD; $._DF < $.CB; $._DF += $.y) { switch ($._DF) { case $.y: q(function () { if (!_) { for ($._Bx = $.BD; $._Bx < $.CB; $._Bx += $.y) { switch ($._Bx) { case $.y: m[$.Du] += n, t(), ($.BD, i.xn)(), ($.BD, d.V)(); break; case $.BD: var n = new e()[$.cI]() - y[$.cI](); break; } } } }, $.cd); break; case $.BD: if (h(m[$.Dr])[$.dn]($.BD)[$.l](function (n) { for ($._Cy = $.BD; $._Cy < $.Cf; $._Cy += $.y) { switch ($._Cy) { case $.CB: h(t)[$.dn]($.BD)[$.l](function (n) { m[$.Bn] += k[$.o](b($.Cv, $.Cw)); }); break; case $.y: var t = b($.Fr, $.GF); break; case $.BD: m[$.Bn] = $.Bu; break; } } }), ($.BD, a.qn)()) return; break; } } } catch (n) { } break; case $.BD: if (v(u), window[$.C]($.Gm, n), $.cG === m[$.Ds]) return void (m[$.Dt] = !$.BD); break; } } } }, $.Jk); break; case $.y: y = new e(); break; case $.DC: window[$.B]($.Gm, n); break; case $.CB: var n = ($.BD, o[$.Dm])(m, c.U); break; case $.BD: m[$.Dt] = !$.y; break; } } }(); break; case $.Ft: m[$.Bn] = $.Bu, m[$.Dr] = $.Bu, m[$.Ds] = $.Bu, m[$.Dt] = void $.BD, m[$.Du] = null, m[$.Dv] = ($.BD, s.L)(l.M, l.T); break; case $.CB: var i = u($.Fn), o = u($.Fq), c = u($.Cf), a = u($.Fr), d = u($.y), s = u($.CB), l = u($.BD); break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t[$.Dn] = void $.BD, t[$.Do] = function (n) { return n[$.Gv]($.Bu)[$.bj](function (n, t) { return (n << $.Ft) - n + t[$.bC]($.BD) & $.bv; }, $.BD); }, t.Z = function () { return [m[$.Bn], m[$.Dv]][$.Bt]($.bp); }, t[$.Dp] = function () { for ($._CI = $.BD; $._CI < $.CB; $._CI += $.y) { switch ($._CI) { case $.y: return [][$.an](w(h(n)))[$.aa](function (n) { return t[f[$.Bn]() * t[$.Gp] | $.BD]; })[$.Bt]($.Bu); break; case $.BD: var t = [][$.an](w($.bl)), n = $.DC + ($.ag * f[$.Bn]() | $.BD); break; } } }, t.X = function () { return m[$.Dt]; }, t[$.Dq] = function () { _ = !$.BD; }; break; case $.Fq: var y = new e(), _ = !$.y; break; case $.DC: var m = t[$.Dn] = $.$(); break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._De = $.BD; $._De < $.Cf; $._De += $.y) { switch ($._De) { case $.CB: var e = r($.Fs), u = r($.Fl), i = r($.Ft), o = r($.BD), c = r($.DC), f = r($.Fu); break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t[$.Dw] = function (n) { for ($._s = $.BD; $._s < $.CB; $._s += $.y) { switch ($._s) { case $.y: return d[$.aB] = f, d[$.ai] = a, d; break; case $.BD: var t = document[$.k], r = document[$.c] || $.$(), e = window[$.ba] || t[$.bt] || r[$.bt], u = window[$.bb] || t[$.bu] || r[$.bu], i = t[$.bc] || r[$.bc] || $.BD, o = t[$.bd] || r[$.bd] || $.BD, c = n[$.bA](), f = c[$.aB] + (e - i), a = c[$.ai] + (u - o), d = $.$(); break; } } }, t[$.Dx] = function (n) { for ($._j = $.BD; $._j < $.CB; $._j += $.y) { switch ($._j) { case $.y: return h[$.CF][$.CA][$.Bz](t); break; case $.BD: var t = document[$.E](n); break; } } }, t[$.Dy] = function n(t, r) { for ($._k = $.BD; $._k < $.Cf; $._k += $.y) { switch ($._k) { case $.CB: return n(t[$.Cj], r); break; case $.y: if (t[$.aq] === r) return t; break; case $.BD: if (!t) return null; break; } } }, t[$.Dz] = function (n) { for ($._DJ = $.BD; $._DJ < $.DC; $._DJ += $.y) { switch ($._DJ) { case $.Cf: return !$.y; break; case $.y: for (; n[$.Cj];)r[$.ah](n[$.Cj]), n = n[$.Cj]; break; case $.CB: for (var e = $.BD; e < t[$.Gp]; e++)for (var u = $.BD; u < r[$.Gp]; u++)if (t[e] === r[u]) return !$.BD; break; case $.BD: var t = (o.g[$.ce] || $.Bu)[$.Gv]($.Hp)[$.af](function (n) { return n; })[$.aa](function (n) { return [][$.CA][$.Bz](document[$.E](n)); })[$.bj](function (n, t) { return n[$.an](t); }, []), r = [n]; break; } } }, t.Pn = function () { for ($._BG = $.BD; $._BG < $.CB; $._BG += $.y) { switch ($._BG) { case $.y: t.sd = f.En, t[$.aj] = c[$.Dk], t[$.ak] = o.I, t[$.al] = o.B, t[$.Er] = o.N, ($.BD, e.Tn)(n, i.hn, o.e, o.S, o.a, t); break; case $.BD: var n = $.ao + ($.y === o.A ? $.ca : $.cb) + $.cp + u.Mn[o.O], t = $.$(); break; } } }, t.Bn = function () { for ($._y = $.BD; $._y < $.CB; $._y += $.y) { switch ($._y) { case $.y: return ($.BD, e[$.EB])(n, o.a) || ($.BD, e[$.EB])(n, o.e); break; case $.BD: var n = u.Nn[o.O]; break; } } }, t.qn = function () { for ($._m = $.BD; $._m < $.CB; $._m += $.y) { switch ($._m) { case $.y: return ($.BD, e[$.EB])(n, o.a); break; case $.BD: var n = u.Nn[o.O]; break; } } }, t.In = function () { return !u.Nn[o.O]; }, t.Cn = function () { for ($._Cg = $.BD; $._Cg < $.Cf; $._Cg += $.y) { switch ($._Cg) { case $.CB: try { document[$.k][$.q](r), [$.f, $.h, $.g, $.BI][$.l](function (t) { try { window[t]; } catch (n) { delete window[t], window[t] = r[$.x][t]; } }), document[$.k][$.bI](r); } catch (n) { } break; case $.y: r[$.m][$.v] = $.BD, r[$.m][$.t] = $.BB, r[$.m][$.s] = $.BB, r[$.i] = $.n; break; case $.BD: var r = document[$.A]($.Bs); break; } } }; break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._H = $.BD; $._H < $.Fl; $._H += $.y) { switch ($._H) { case $.Fm: var v = t.Q = $.$(); break; case $.Cf: var e = t.zn = $.y, u = t.Dn = $.CB, i = (t.Hn = $.Cf, t.Fn = $.DC), o = t.Ln = $.Ft, c = t.Gn = $.Cf, f = t.Vn = $.Fq, a = t.Xn = $.Fm, d = t.Mn = $.$(); break; case $.Fr: v[e] = $.Gj, v[u] = $.Gk, v[i] = $.Gl, v[o] = $.Gl, v[c] = $.Gl; break; case $.Ft: var s = t.Nn = $.$(); break; case $.CB: t.Rn = $.y; break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)); break; case $.Fq: s[e] = $.Gg, s[a] = $.Gh, s[c] = $.Gi, s[u] = $.Gf; break; case $.DC: d[e] = $.GJ, d[i] = $.Ga, d[o] = $.Gb, d[c] = $.Gc, d[f] = $.Gd, d[a] = $.Ge, d[u] = $.Gf; break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._G = $.BD; $._G < $.Cf; $._G += $.y) { switch ($._G) { case $.CB: t.Un = $.Hr, t.Yn = $.Hs, t.Kn = $.Ht, t.Jn = $.Hu, t.Zn = $.Hv, t.$n = $.Hw, t.Qn = $.Hx, t.J = $.Hy, t.Wn = $.Hz, t.$ = $.IA, t.W = $.IB, t.tn = $.IC; break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)); break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._Eb = $.BD; $._Eb < $.Fr; $._Eb += $.y) { switch ($._Eb) { case $.Fm: v[$.l](function (n) { for ($._By = $.BD; $._By < $.DC; $._By += $.y) { switch ($._By) { case $.Cf: try { n[d] = n[d] || []; } catch (n) { } break; case $.y: var t = n[$.z][$.k][$.bi].fp; break; case $.CB: n[t] = n[t] || []; break; case $.BD: n[$.z][$.k][$.bi].fp || (n[$.z][$.k][$.bi].fp = f[$.Bn]()[$.Bv]($.By)[$.CA]($.CB)); break; } } }); break; case $.Cf: s && s[$.Gn] && (e = s[$.Gn]); break; case $.Ft: function o(n, e) { return n && e ? v[$.l](function (n) { for ($._Cc = $.BD; $._Cc < $.Cf; $._Cc += $.y) { switch ($._Cc) { case $.CB: try { n[d] = n[d][$.af](function (n) { for ($._Bh = $.BD; $._Bh < $.CB; $._Bh += $.y) { switch ($._Bh) { case $.y: return t || r; break; case $.BD: var t = n[$.bD] !== n, r = n[$.bE] !== e; break; } } }); } catch (n) { } break; case $.y: n[t] = n[t][$.af](function (n) { for ($._Bg = $.BD; $._Bg < $.CB; $._Bg += $.y) { switch ($._Bg) { case $.y: return t || r; break; case $.BD: var t = n[$.bD] !== n, r = n[$.bE] !== e; break; } } }); break; case $.BD: var t = n[$.z][$.k][$.bi].fp; break; } } }) : (l[$.l](function (e) { v[$.l](function (n) { for ($._EA = $.BD; $._EA < $.Cf; $._EA += $.y) { switch ($._EA) { case $.CB: try { n[d] = n[d][$.af](function (n) { for ($._Dr = $.BD; $._Dr < $.CB; $._Dr += $.y) { switch ($._Dr) { case $.y: return t || r; break; case $.BD: var t = n[$.bD] !== e[$.bD], r = n[$.bE] !== e[$.bE]; break; } } }); } catch (n) { } break; case $.y: n[t] = n[t][$.af](function (n) { for ($._Dn = $.BD; $._Dn < $.CB; $._Dn += $.y) { switch ($._Dn) { case $.y: return t || r; break; case $.BD: var t = n[$.bD] !== e[$.bD], r = n[$.bE] !== e[$.bE]; break; } } }); break; case $.BD: var t = n[$.z][$.k][$.bi].fp; break; } } }); }), u[$.l](function (n) { window[n] = !$.y; }), u = [], l = [], null); } break; case $.CB: var d = $.DB, s = document[$.a], v = [window], u = [], l = [], e = function () { }; break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t.Tn = function (n, t, r) { for ($._CF = $.BD; $._CF < $.Cf; $._CF += $.y) { switch ($._CF) { case $.CB: try { for ($._Br = $.BD; $._Br < $.CB; $._Br += $.y) { switch ($._Br) { case $.y: a[$.bD] = n, a[$.Ey] = t, a[$.bE] = r, a[$.bF] = f ? f[$.bF] : u, a[$.bG] = o, a[$.bH] = e, (a[$.bf] = i) && i[$.ci] && (a[$.ci] = i[$.ci]), l[$.ah](a), v[$.l](function (n) { for ($._BC = $.BD; $._BC < $.Cf; $._BC += $.y) { switch ($._BC) { case $.CB: try { n[d][$.ah](a); } catch (n) { } break; case $.y: n[t][$.ah](a); break; case $.BD: var t = n[$.z][$.k][$.bi].fp || d; break; } } }); break; case $.BD: var c = window[$.z][$.k][$.bi].fp || d, f = window[c][$.af](function (n) { return n[$.bE] === r && n[$.bF]; })[$.cj](), a = $.$(); break; } } } catch (n) { } break; case $.y: try { o = s[$.i][$.Gv]($.Ja)[$.CB]; } catch (n) { } break; case $.BD: var e = $.Cf < arguments[$.Gp] && void $.BD !== arguments[$.Cf] ? arguments[$.Cf] : $.BD, u = $.DC < arguments[$.Gp] && void $.BD !== arguments[$.DC] ? arguments[$.DC] : $.BD, i = arguments[$.Ft], o = void $.BD; break; } } }, t.nt = function (n) { u[$.ah](n), window[n] = !$.BD; }, t[$.EA] = o, t[$.EB] = function (n, t) { for ($._CG = $.BD; $._CG < $.CB; $._CG += $.y) { switch ($._CG) { case $.y: return !$.y; break; case $.BD: for (var r = c(), e = $.BD; e < r[$.Gp]; e++)if (r[e][$.bE] === t && r[e][$.bD] === n) return !$.BD; break; } } }, t[$.EC] = c, t[$.ED] = function () { try { o(), e(), e = function () { }; } catch (n) { } }, t.tt = function (e, t) { v[$.aa](function (n) { for ($._Bt = $.BD; $._Bt < $.CB; $._Bt += $.y) { switch ($._Bt) { case $.y: return r[$.af](function (n) { return -$.y < e[$.Ju](n[$.bE]); }); break; case $.BD: var t = n[$.z][$.k][$.bi].fp || d, r = n[t] || []; break; } } })[$.bj](function (n, t) { return n[$.an](t); }, [])[$.l](function (n) { try { n[$.bf].sd(t); } catch (n) { } }); }; break; case $.Fq: function c() { for ($._Dm = $.BD; $._Dm < $.Cf; $._Dm += $.y) { switch ($._Dm) { case $.CB: return u; break; case $.y: try { for ($._Da = $.BD; $._Da < $.CB; $._Da += $.y) { switch ($._Da) { case $.y: for (t = $.BD; t < v[$.Gp]; t++)r(t); break; case $.BD: var r = function (n) { for (var o = v[n][d] || [], t = function (i) { $.BD < u[$.af](function (n) { for ($._BJ = $.BD; $._BJ < $.CB; $._BJ += $.y) { switch ($._BJ) { case $.y: return e && u; break; case $.BD: var t = n[$.bD], r = n[$.bE], e = t === o[i][$.bD], u = r === o[i][$.bE]; break; } } })[$.Gp] || u[$.ah](o[i]); }, r = $.BD; r < o[$.Gp]; r++)t(r); }; break; } } } catch (n) { } break; case $.BD: for (var u = [], n = function (n) { for (var t = v[n][$.z][$.k][$.bi].fp, o = v[n][t] || [], r = function (i) { $.BD < u[$.af](function (n) { for ($._BH = $.BD; $._BH < $.CB; $._BH += $.y) { switch ($._BH) { case $.y: return e && u; break; case $.BD: var t = n[$.bD], r = n[$.bE], e = t === o[i][$.bD], u = r === o[i][$.bE]; break; } } })[$.Gp] || u[$.ah](o[i]); }, e = $.BD; e < o[$.Gp]; e++)r(e); }, t = $.BD; t < v[$.Gp]; t++)n(t); break; } } } break; case $.DC: try { for (var i = v[$.CA](-$.y)[$.ar](); i && i !== i[$.aB] && i[$.aB][$.bB][$.t];)v[$.ah](i[$.aB]), i = i[$.aB]; } catch (n) { } break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._Dk = $.BD; $._Dk < $.Fl; $._Dk += $.y) { switch ($._Dk) { case $.Fm: function b() { for ($._I = $.BD; $._I < $.CB; $._I += $.y) { switch ($._I) { case $.y: return n[$.m][$.s] = $.BB, n[$.m][$.t] = $.BB, n[$.m][$.v] = $.BD, n; break; case $.BD: var n = document[$.A]($.Bs); break; } } } break; case $.Cf: function u(n) { return n && n[$.Cc] ? n : $.$($.Ci, n); } break; case $.Fr: function o() { s && i[$.l](function (n) { return n(s); }); } break; case $.Ft: function y() { for ($._Dj = $.BD; $._Dj < $.CB; $._Dj += $.y) { switch ($._Dj) { case $.y: return $.Gr + s + $.Ja + r + $.Ja; break; case $.BD: var n = [$.Gy, $.Br, $.Gz, $.HA, $.HB, $.HC, $.HD, $.HE], e = [$.HF, $.HG, $.HH, $.HI, $.HJ], t = [$.Ha, $.Hb, $.Hc, $.Hd, $.He, $.Hf, $.Hg, $.Hh, $.Hi, $.Hj, $.Hk, $.Hl], r = n[f[$.ap](f[$.Bn]() * n[$.Gp])][$.CD](new RegExp($.Gy, $.CH), function () { for ($._CD = $.BD; $._CD < $.CB; $._CD += $.y) { switch ($._CD) { case $.y: return t[n]; break; case $.BD: var n = f[$.ap](f[$.Bn]() * t[$.Gp]); break; } } })[$.CD](new RegExp($.Br, $.CH), function () { for ($._Df = $.BD; $._Df < $.CB; $._Df += $.y) { switch ($._Df) { case $.y: return ($.Bu + t + f[$.ap](f[$.Bn]() * r))[$.CA](-$.y * t[$.Gp]); break; case $.BD: var n = f[$.ap](f[$.Bn]() * e[$.Gp]), t = e[n], r = f[$.eI]($.Fo, t[$.Gp]); break; } } }); break; } } } break; case $.CB: var e = u(r($.Ir)), d = u(r($.GF)); break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t[$.EE] = y, t.rt = function () { return y()[$.CA]($.BD, -$.y) + $.cH; }, t[$.EF] = function () { for ($._r = $.BD; $._r < $.CB; $._r += $.y) { switch ($._r) { case $.y: return $.Gr + s + $.Ja + n + $.bm; break; case $.BD: var n = f[$.Bn]()[$.Bv]($.By)[$.CA]($.CB); break; } } }, t.et = _, t.ut = b, t.En = function (n) { for ($._J = $.BD; $._J < $.CB; $._J += $.y) { switch ($._J) { case $.y: s = n, o(); break; case $.BD: if (!n) return; break; } } }, t[$.EG] = o, t.D = function () { return s; }, t.it = function (n) { i[$.ah](n), s && n(s); }, t.ot = function (u, i) { for ($._DD = $.BD; $._DD < $.DC; $._DD += $.y) { switch ($._DD) { case $.Cf: return window[$.B]($.Gm, function n(t) { for ($._Cx = $.BD; $._Cx < $.CB; $._Cx += $.y) { switch ($._Cx) { case $.y: if (r === f) if (null === t[$.am][r]) { for ($._Cd = $.BD; $._Cd < $.CB; $._Cd += $.y) { switch ($._Cd) { case $.y: e[r] = i ? $.$($.ef, $.ee, $.De, u, $.er, d[$.Ci][$.aD][$.br][$.bx]) : u, a[$.x][$.JI](e, $.Jv), c = w, o[$.l](function (n) { return n(); }); break; case $.BD: var e = $.$(); break; } } } else a[$.Cj][$.bI](a), window[$.C]($.Gm, n), c = h; break; case $.BD: var r = Object[$.dG](t[$.am])[$.ar](); break; } } }), a[$.i] = n, (document[$.c] || document[$.k])[$.q](a), c = l, t.ct = function () { return c === h; }, t.ft = function (n) { return $.Fe != typeof n ? null : c === h ? n() : o[$.ah](n); }, t; break; case $.y: var o = [], c = v, n = y(), f = _(n), a = b(); break; case $.CB: function t() { for ($._BD = $.BD; $._BD < $.CB; $._BD += $.y) { switch ($._BD) { case $.y: return null; break; case $.BD: if (c === h) { for ($._BA = $.BD; $._BA < $.CB; $._BA += $.y) { switch ($._BA) { case $.y: d[$.Ci][$.aD][$.br][$.bx] = n; break; case $.BD: if (c = m, !i) return ($.BD, e[$.Ci])(n, $.dw); break; } } } break; } } } break; case $.BD: if (!s) return null; break; } } }; break; case $.Fq: function _(n) { return n[$.Gv]($.Ja)[$.CA]($.Cf)[$.Bt]($.Ja)[$.Gv]($.Bu)[$.bj](function (n, t, r) { for ($._Bj = $.BD; $._Bj < $.CB; $._Bj += $.y) { switch ($._Bj) { case $.y: return n + t[$.bC]($.BD) * e; break; case $.BD: var e = f[$.eI](r + $.y, $.Fm); break; } } }, $.dh)[$.Bv]($.By); } break; case $.DC: var s = void $.BD, v = $.BD, l = $.y, w = $.CB, h = $.Cf, m = $.DC, i = []; break; case $.BD: $.Cr; break; } } }, function (n, r, e) { for ($._En = $.BD; $._En < $.Fs; $._En += $.y) { switch ($._En) { case $.Fl: function S(n, t, r, e) { for ($._Cs = $.BD; $._Cs < $.Cf; $._Cs += $.y) { switch ($._Cs) { case $.CB: return ($.BD, f.bt)(o, n, t, r, e)[$.bn](function (n) { return ($.BD, v.mt)(s.e, u), n; })[$.eH](function (n) { throw ($.BD, v.yt)(s.e, u, o), n; }); break; case $.y: var u = $.Io, i = ($.BD, w[$.Dp])(), o = $.Gr + ($.BD, a.D)() + $.Ja + i + $.cq; break; case $.BD: ($.BD, l[$.Dl])($.aJ); break; } } } break; case $.DC: p.c = k, p.p = A; break; case $.Fm: function k(n, t) { for ($._Cq = $.BD; $._Cq < $.Cf; $._Cq += $.y) { switch ($._Cq) { case $.CB: return ($.BD, f.ht)(u, t)[$.bn](function (n) { return ($.BD, v.mt)(s.e, r), n; })[$.eH](function (n) { throw ($.BD, v.yt)(s.e, r, u), n; }); break; case $.y: var r = $.Im, e = ($.BD, w[$.Dp])(), u = $.Gr + ($.BD, a.D)() + $.Ja + e + $.ct + c(n); break; case $.BD: ($.BD, l[$.Dl])($.aH); break; } } } break; case $.Cf: var m = new j($.Fy, $.CC), y = new j($.Fz), _ = new j($.GA), b = [$.Fd, s.e[$.Bv]($.By)][$.Bt]($.Bu), p = $.$(); break; case $.Fr: function A(n, t) { for ($._Cr = $.BD; $._Cr < $.Cf; $._Cr += $.y) { switch ($._Cr) { case $.CB: return ($.BD, f._t)(u, t)[$.bn](function (n) { return ($.BD, v.mt)(s.e, r), n; })[$.eH](function (n) { throw ($.BD, v.yt)(s.e, r, u), n; }); break; case $.y: var r = $.In, e = ($.BD, w[$.Dp])(), u = $.Gr + ($.BD, a.D)() + $.Ja + e + $.cu + c(n); break; case $.BD: ($.BD, l[$.Dl])($.aI); break; } } } break; case $.Ft: var g = [p.x = S, p.f = q]; break; case $.CB: var u, f = e($.Fv), o = e($.Fu), a = e($.y), d = e($.Fo), s = e($.BD), v = e($.Fw), l = e($.DC), w = e($.Fm), i = e($.Fx), h = (u = i) && u[$.Cc] ? u : $.$($.Ci, u); break; case $.y: Object[$.e](r, $.Cc, $.$($.Ik, !$.BD)), r.at = function (n) { for ($._v = $.BD; $._v < $.CB; $._v += $.y) { switch ($._v) { case $.y: return $.Gr + ($.BD, a.D)() + $.Ja + t + $.de + r; break; case $.BD: var t = ($.BD, w[$.Dp])(), r = c(O(n)); break; } } }, r.dt = k, r.st = A, r.vt = S, r.lt = q, r.wt = function (n, r, e, u) { for ($._El = $.BD; $._El < $.DC; $._El += $.y) { switch ($._El) { case $.Cf: return ($.BD, l[$.Dl])(e + $.DA + n), function n(r, e, u, i, o) { for ($._Eg = $.BD; $._Eg < $.CB; $._Eg += $.y) { switch ($._Eg) { case $.y: return i && i !== d.$n ? c ? c(e, u, i, o)[$.bn](function (n) { return n; })[$.eH](function () { return n(r, e, u, i, o); }) : S(e, u, i, o) : c ? p[c](e, u || $.fG)[$.bn](function (n) { return t[b] = c, n; })[$.eH](function () { return n(r, e, u, i, o); }) : new h[$.Ci](function (n, t) { return t(); }); break; case $.BD: var c = r[$.cj](); break; } } }(i, n, r, e, u)[$.bn](function (n) { return n && n[$.Da] ? n : $.$($.bJ, $.ad, $.Da, n); }); break; case $.y: var i = (e = e ? e[$.cJ]() : $.Bu) && e !== d.$n ? [][$.an](g) : (o = [t[b]][$.an](Object[$.dG](p)), o[$.af](function (n, t) { return n && o[$.Ju](n) === t; })); break; case $.CB: var o; break; case $.BD: n = O(n); break; } } }; break; case $.Fo: function q(n, t, r, e) { for ($._Ct = $.BD; $._Ct < $.Cf; $._Ct += $.y) { switch ($._Ct) { case $.CB: return ($.BD, f.pt)(i, n, t, r, e)[$.bn](function (n) { return ($.BD, v.mt)(s.e, u), n; })[$.eH](function (n) { throw ($.BD, v.yt)(s.e, u, i), n; }); break; case $.y: var u = $.Ip, i = ($.BD, o.rt)(); break; case $.BD: ($.BD, l[$.Dl])($.ae), ($.BD, o.En)(($.BD, a.D)()); break; } } } break; case $.Fq: function O(n) { return m[$.Jf](n) ? n : y[$.Jf](n) ? $.cl + n : _[$.Jf](n) ? $.Gr + window[$.br][$.eb] + n : window[$.br][$.bx][$.Gv]($.Ja)[$.CA]($.BD, -$.y)[$.an](n)[$.Bt]($.Ja); } break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._i = $.BD; $._i < $.Ft; $._i += $.y) { switch ($._i) { case $.Cf: var o = l || i[$.Ci]; break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)); break; case $.DC: t[$.Ci] = o; break; case $.CB: var e, u = r($.GB), i = (e = u) && e[$.Cc] ? e : $.$($.Ci, e); break; case $.BD: $.Cr; break; } } }, function (n, t, e) { for ($._Ec = $.BD; $._Ec < $.Fm; $._Ec += $.y) { switch ($._Ec) { case $.Ft: function u() { var o = r(function () { if (($.BD, d.qn)()) v(o); else if (j) { for ($._DB = $.BD; $._DB < $.CB; $._DB += $.y) { switch ($._DB) { case $.y: v(o); break; case $.BD: try { for ($._Co = $.BD; $._Co < $.DC; $._Co += $.y) { switch ($._Co) { case $.Cf: g !== i && (g = i, ($.BD, m.tt)([l.e, l.a], g)); break; case $.y: j = $.Bu, b[$.Es] = e, y[$.Es] = r, _[$.Es] = ($.BD, w.Sn)(u, s.jn), [y, _, b][$.l](function (n) { ($.BD, w.kn)(n, a.in, p); }); break; case $.CB: var i = [($.BD, f.L)(y[$.Ds], _[$.Ds]), ($.BD, f.L)(b[$.Ds], _[$.Ds])][$.Bt]($.bp); break; case $.BD: var n = j[$.Gv](w.On)[$.af](function (n) { return !w.On[$.Jf](n); }), t = c(n, $.Cf), r = t[$.BD], e = t[$.y], u = t[$.CB]; break; } } } catch (n) { } break; } } } }, $.Jk); } break; case $.CB: var c = function (n, t) { for ($._EH = $.BD; $._EH < $.Cf; $._EH += $.y) { switch ($._EH) { case $.CB: throw new TypeError($.Jg); break; case $.y: if (Symbol[$.Js] in Object(n)) return function (n, t) { for ($._ED = $.BD; $._ED < $.Cf; $._ED += $.y) { switch ($._ED) { case $.CB: return r; break; case $.y: try { for (var o, c = n[Symbol[$.Js]](); !(e = (o = c[$.ek]())[$.ep]) && (r[$.ah](o[$.Ik]), !t || r[$.Gp] !== t); e = !$.BD); } catch (n) { u = !$.BD, i = n; } finally { try { !e && c[$.fI] && c[$.fI](); } finally { if (u) throw i; } } break; case $.BD: var r = [], e = !$.BD, u = !$.y, i = void $.BD; break; } } }(n, t); break; case $.BD: if (h[$.JG](n)) return n; break; } } }; break; case $.Cf: t.xn = u, t.H = function () { return g; }, t.nn = function (n) { n && (j = n); }; break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)); break; case $.Fq: u(); break; case $.DC: var f = e($.CB), a = e($.Cf), d = e($.Fr), s = e($.Ft), l = e($.BD), w = e($.Fq), m = e($.Fs), y = $.$(), _ = $.$(), b = $.$(), p = $.y, g = $.Bu, j = $.Bu; break; case $.BD: $.Cr; break; } } }, function (t, r, e) { for ($._DC = $.BD; $._DC < $.Ft; $._DC += $.y) { switch ($._DC) { case $.Cf: function o() { for ($._Bu = $.BD; $._Bu < $.CB; $._Bu += $.y) { switch ($._Bu) { case $.y: try { u[$.A] = t[$.A]; } catch (n) { for ($._Bi = $.BD; $._Bi < $.CB; $._Bi += $.y) { switch ($._Bi) { case $.y: u[$.A] = r && r[$.di][$.A]; break; case $.BD: var r = [][$.cv][$.Bz](t[$.J]($.Bs), function (n) { return $.n === n[$.i]; }); break; } } } break; case $.BD: var t = u[$.Jb]; break; } } } break; case $.y: Object[$.e](r, $.Cc, $.$($.Ik, !$.BD)); break; case $.DC: $.Cs != typeof window && (u[$.aD] = window, void $.BD !== window[$.bB] && (u[$.by] = window[$.bB])), $.Cs != typeof document && (u[$.Jb] = document, u[$.aE] = document[i]), void $.BD !== n && (u[$.JC] = n), o(), u[$.EH] = function () { for ($._Bo = $.BD; $._Bo < $.CB; $._Bo += $.y) { switch ($._Bo) { case $.y: try { for ($._z = $.BD; $._z < $.CB; $._z += $.y) { switch ($._z) { case $.y: return n[$.Cn][$.q](t), t[$.Cj] !== n[$.Cn] ? !$.y : (t[$.Cj][$.bI](t), u[$.aD] = window[$.aB], u[$.Jb] = u[$.aD][$.z], o(), !$.BD); break; case $.BD: var n = window[$.aB][$.z], t = n[$.A]($.be); break; } } } catch (n) { return !$.y; } break; case $.BD: if (!window[$.aB]) return null; break; } } }, u[$.EI] = function () { try { return u[$.Jb][$.a][$.Cj] !== u[$.Jb][$.Cn] && (u[$.dj] = u[$.Jb][$.a][$.Cj], u[$.dj][$.m][$.r] && $.Hi !== u[$.dj][$.m][$.r] || (u[$.dj][$.m][$.r] = $.eu), !$.BD); } catch (n) { return !$.y; } }, r[$.Ci] = u; break; case $.CB: var u = $.$(), i = $.Gq[$.Gv]($.Bu)[$.Jy]()[$.Bt]($.Bu); break; case $.BD: $.Cr; break; } } }, function (Tl, Ul) { for ($._Be = $.BD; $._Be < $.DC; $._Be += $.y) { switch ($._Be) { case $.Cf: Tl[$.Bw] = Vl; break; case $.y: Vl = function () { return this; }(); break; case $.CB: try { Vl = Vl || Function($.Jx)() || eval($.bk); } catch (n) { $.dJ == typeof window && (Vl = window); } break; case $.BD: var Vl; break; } } }, function (n, t, r) { for ($._CE = $.BD; $._CE < $.CB; $._CE += $.y) { switch ($._CE) { case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t[$.Ci] = function (n) { try { return n[$.Gv]($.Ja)[$.CB][$.Gv]($.bp)[$.CA](-$.CB)[$.Bt]($.bp)[$.eF](); } catch (n) { return $.Bu; } }; break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._Db = $.BD; $._Db < $.Fq; $._Db += $.y) { switch ($._Db) { case $.Ft: ($.BD, u.Pn)(), window[o.C] = y, window[o.R] = y, q(y, i.mn), ($.BD, s.An)(c.U, c.fn), ($.BD, s.An)(c.cn, c.an), ($.BD, f[$.Ci])(); break; case $.CB: function m(n) { return n && n[$.Cc] ? n : $.$($.Ci, n); } break; case $.Cf: function y(n) { return ($.BD, u.Bn)() ? null : (($.BD, a[$.Dl])($.cn), ($.BD, u.Cn)(), _(n)); } break; case $.y: var e = r($.y), u = r($.Fr), i = r($.Ft), o = r($.BD), c = r($.Cf), f = m(r($.Is)), a = r($.DC), d = r($.GC), s = r($.Fq), v = r($.Fm), l = m(r($.It)), w = r($.Fl), h = r($.Fs); break; case $.DC: function _(r) { return ($.BD, v.X)() ? (($.BD, e.Y)(), window[i.yn] = d.wt, ($.BD, e.K)()[$.bn](function (n) { for ($._Cv = $.BD; $._Cv < $.CB; $._Cv += $.y) { switch ($._Cv) { case $.y: ($.BD, l[$.Ci])(o.O, r)[$.bn](function () { ($.BD, h.tt)([o.e, o.a], ($.BD, e.D)()); }); break; case $.BD: if (n && o.O === w.zn) { for ($._Cm = $.BD; $._Cm < $.CB; $._Cm += $.y) { switch ($._Cm) { case $.y: return t[$.i] = $.dH + n + $.ex + o.e, void (document[$.c] || document[$.k])[$.q](t); break; case $.BD: var t = document[$.A]($.be); break; } } } break; } } })) : q(_, $.Jk); } break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._Di = $.BD; $._Di < $.DC; $._Di += $.y) { switch ($._Di) { case $.Cf: function d(n, t) { try { for ($._BE = $.BD; $._BE < $.CB; $._BE += $.y) { switch ($._BE) { case $.y: return n[$.Ju](r) + o; break; case $.BD: var r = n[$.af](function (n) { return -$.y < n[$.Ju](t); })[$.cj](); break; } } } catch (n) { return $.BD; } } break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t.dn = function (n) { for ($._h = $.BD; $._h < $.CB; $._h += $.y) { switch ($._h) { case $.y: return $.y; break; case $.BD: { for ($._f = $.BD; $._f < $.CB; $._f += $.y) { switch ($._f) { case $.y: if (i[$.Jf](n)) return $.CB; break; case $.BD: if (u[$.Jf](n)) return $.Cf; break; } } } break; } } }, t.sn = function (n) { return d(c, n); }, t.vn = function (n) { return d(f, n[$.bg]()); }, t.wn = function (n) { return d(a, n); }, t.ln = function (n) { return n[$.Gv]($.Ja)[$.CA]($.y)[$.af](function (n) { return n; })[$.cj]()[$.Gv]($.bp)[$.CA](-$.CB)[$.Bt]($.bp)[$.eF]()[$.Gv]($.Bu)[$.bj](function (n, t) { return n + ($.BD, e[$.Dj])(t); }, $.BD) % $.Fq + $.y; }; break; case $.CB: var e = r($.CB), u = new j($.GD, $.CC), i = new j($.GE, $.CC), o = $.CB, c = [[$.EJ], [$.Ea, $.Eb, $.Ec], [$.Ed, $.Ee], [$.Ef, $.Eg, $.Eh], [$.Ei, $.Ej]], f = [[$.Ek], [-$.Ff], [-$.Fg], [-$.Fh, -$.Fi], [$.El, $.Ec, -$.Ek, -$.Fj]], a = [[$.Em], [$.En], [$.Eo], [$.Ep], [$.Eq]]; break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._l = $.BD; $._l < $.Fq; $._l += $.y) { switch ($._l) { case $.Ft: f[$.Es] = ($.BD, i.Sn)(o.I, d), a[$.Es] = o.N, window[$.B]($.Gm, ($.BD, i.kn)(f, e.cn, u.jn)), window[$.B]($.Gm, ($.BD, i.kn)(a, e.cn, $.y)); break; case $.CB: var e = r($.Cf), u = r($.Ft), i = r($.Fq), o = r($.BD), c = t.G = $.$(), f = t[$.Go] = $.$(), a = t[$.Er] = $.$(); break; case $.Cf: c[$.Es] = o.B, window[$.B]($.Gm, ($.BD, i.kn)(c, e.cn, $.y)); break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t[$.Er] = t[$.Go] = t.G = void $.BD; break; case $.DC: var d = c[$.Gp] * u.jn; break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._BB = $.BD; $._BB < $.Cf; $._BB += $.y) { switch ($._BB) { case $.CB: var e, u = r($.GF), i = (e = u) && e[$.Cc] ? e : $.$($.Ci, e); break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t[$.Ci] = function (n, t, r) { for ($._u = $.BD; $._u < $.DC; $._u += $.y) { switch ($._u) { case $.Cf: return e[$.Cj][$.bI](e), u; break; case $.y: e[$.m][$.s] = $.BB, e[$.m][$.t] = $.BB, e[$.m][$.v] = $.BD, e[$.i] = $.n, (i[$.Ci][$.Jb][$.c] || i[$.Ci][$.aE])[$.q](e); break; case $.CB: var u = e[$.x][$.Ih][$.Bz](i[$.Ci][$.aD], n, t, r); break; case $.BD: var e = i[$.Ci][$.Jb][$.A]($.Bs); break; } } }; break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._Dw = $.BD; $._Dw < $.Ft; $._Dw += $.y) { switch ($._Dw) { case $.Cf: function i(n) { for ($._Du = $.BD; $._Du < $.CB; $._Du += $.y) { switch ($._Du) { case $.y: i !== l && i !== w || (t === h ? (d[$.cA] = m, d[$.da] = v.O, d[$.cE] = v.e, d[$.db] = v.a) : t !== y || !o || f && !a || (d[$.cA] = _, d[$.cC] = o, ($.BD, s.wt)(r, c, u, e)[$.bn](function (n) { for ($._DG = $.BD; $._DG < $.CB; $._DG += $.y) { switch ($._DG) { case $.y: t[$.cA] = p, t[$.bz] = r, t[$.cC] = o, t[$.am] = n, g(i, t); break; case $.BD: var t = $.$(); break; } } })[$.eH](function (n) { for ($._Do = $.BD; $._Do < $.CB; $._Do += $.y) { switch ($._Do) { case $.y: t[$.cA] = b, t[$.bz] = r, t[$.cC] = o, t[$.cG] = n && n[$.Gm], g(i, t); break; case $.BD: var t = $.$(); break; } } })), d[$.cA] && g(i, d)); break; case $.BD: var r = n && n[$.am] && n[$.am][$.bz], t = n && n[$.am] && n[$.am][$.cA], e = n && n[$.am] && n[$.am][$.c], u = n && n[$.am] && n[$.am][$.cB], i = n && n[$.am] && n[$.am][$.JJ], o = n && n[$.am] && n[$.am][$.cC], c = n && n[$.am] && n[$.am][$.cD], f = n && n[$.am] && n[$.am][$.cE], a = f === v.e || f === v.a, d = $.$(); break; } } } break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t[$.Ci] = function () { for ($._x = $.BD; $._x < $.CB; $._x += $.y) { switch ($._x) { case $.y: window[$.B]($.Gm, i); break; case $.BD: try { (e = new x(l))[$.B]($.Gm, i), (u = new x(w))[$.B]($.Gm, i); } catch (n) { } break; } } }; break; case $.DC: function g(n, t) { for ($._o = $.BD; $._o < $.CB; $._o += $.y) { switch ($._o) { case $.y: window[$.JI](t, $.Jv); break; case $.BD: switch (t[$.JJ] = n) { case w: u[$.JI](t); break; case l: default: e[$.JI](t); }break; } } } break; case $.CB: var s = r($.GC), v = r($.BD), l = $.DD, w = $.DE, h = $.DF, m = $.DG, y = $.DH, _ = $.DI, b = $.DJ, p = $.Da, e = void $.BD, u = void $.BD; break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._Eh = $.BD; $._Eh < $.Fm; $._Eh += $.y) { switch ($._Eh) { case $.Ft: function S(n) { return y(b(n)[$.Gv]($.Bu)[$.aa](function (n) { return $.cw + ($.HG + n[$.bC]($.BD)[$.Bv]($.GF))[$.CA](-$.CB); })[$.Bt]($.Bu)); } break; case $.CB: var j = $.Fe == typeof Symbol && $.aA == typeof Symbol[$.Js] ? function (n) { return typeof n; } : function (n) { return n && $.Fe == typeof Symbol && n[$.em] === Symbol && n !== Symbol[$.CF] ? $.aA : typeof n; }; break; case $.Cf: t.ht = function (n, o) { return new v[$.Ci](function (e, u) { for ($._EC = $.BD; $._EC < $.CB; $._EC += $.y) { switch ($._EC) { case $.y: i[$.bx] = n, i[$.cg] = O.jt, i[$.cA] = O.Ot, i[$.ch] = O.kt, document[$.Cn][$.co](i, document[$.Cn][$.Ce]), i[$.Il] = function () { for ($._Dx = $.BD; $._Dx < $.CB; $._Dx += $.y) { switch ($._Dx) { case $.y: var t, r; break; case $.BD: try { for ($._Dp = $.BD; $._Dp < $.CB; $._Dp += $.y) { switch ($._Dp) { case $.y: i[$.Cj][$.bI](i), o === A.Zn ? e(x(n)) : e(S(n)); break; case $.BD: var n = (t = i[$.bx], ((r = h[$.CF][$.CA][$.Bz](document[$.en])[$.af](function (n) { return n[$.bx] === t; })[$.ar]()[$.fB])[$.BD][$.fC][$.es]($.fE) ? r[$.BD][$.m][$.fH] : r[$.CB][$.m][$.fH])[$.CA]($.y, -$.y)); break; } } } catch (n) { u(); } break; } } }, i[$.Gn] = function () { i[$.Cj][$.bI](i), u(); }; break; case $.BD: var i = document[$.A](O.gt); break; } } }); }, t._t = function (t, w) { return new v[$.Ci](function (v, n) { for ($._Ef = $.BD; $._Ef < $.CB; $._Ef += $.y) { switch ($._Ef) { case $.y: l[$.ch] = $.cm, l[$.i] = t, l[$.Il] = function () { for ($._Ea = $.BD; $._Ea < $.Fm; $._Ea += $.y) { switch ($._Ea) { case $.Ft: var d = c(i[$.Bt]($.Bu)[$.ea]($.BD, u)), s = w === A.Zn ? x(d) : S(d); break; case $.CB: var t = n[$.dr]($.dv); break; case $.Cf: t[$.df](l, $.BD, $.BD); break; case $.y: n[$.s] = l[$.s], n[$.t] = l[$.t]; break; case $.Fq: return v(s); break; case $.DC: for (var r = t[$.ds]($.BD, $.BD, l[$.s], l[$.t]), e = r[$.am], u = e[$.CA]($.BD, $.Fu)[$.af](function (n, t) { return (t + $.y) % $.DC; })[$.Jy]()[$.bj](function (n, t, r) { return n + t * f[$.eI]($.fA, r); }, $.BD), i = [], o = $.Fu; o < e[$.Gp]; o++)if ((o + $.y) % $.DC) { for ($._EG = $.BD; $._EG < $.CB; $._EG += $.y) { switch ($._EG) { case $.y: (w === A.Zn || $.GI <= a) && i[$.ah](k[$.o](a)); break; case $.BD: var a = e[o]; break; } } } break; case $.BD: var n = document[$.A]($.du); break; } } }, l[$.Gn] = function () { return n(); }; break; case $.BD: var l = new Image(); break; } } }); }, t.bt = function (u, i) { for ($._Dz = $.BD; $._Dz < $.CB; $._Dz += $.y) { switch ($._Dz) { case $.y: return new v[$.Ci](function (t, r) { for ($._Dt = $.BD; $._Dt < $.CB; $._Dt += $.y) { switch ($._Dt) { case $.y: if (e[$.Ih](a, u), e[$.cD] = f, e[$.cc] = !$.BD, e[$.Ii](A.Un, c(o(i))), e[$.Il] = function () { for ($._Cu = $.BD; $._Cu < $.CB; $._Cu += $.y) { switch ($._Cu) { case $.y: n[$.bJ] = e[$.bJ], n[$.Da] = f === A.Jn ? g[$.ec](e[$.Da]) : e[$.Da], $.BD <= [$.ad, $.dk][$.Ju](e[$.bJ]) ? t(n) : r(new Error($.eA + e[$.bJ] + $.cp + e[$.ed] + $.eh + i)); break; case $.BD: var n = $.$(); break; } } }, e[$.Gn] = function () { r(new Error($.eA + e[$.bJ] + $.cp + e[$.ed] + $.eh + i)); }, a === A.Qn) { for ($._Dq = $.BD; $._Dq < $.CB; $._Dq += $.y) { switch ($._Dq) { case $.y: e[$.Ii](A.Yn, A.Kn), e[$.Ij](n); break; case $.BD: var n = $.dJ === (void $.BD === d ? $.Cs : j(d)) ? g[$.ec](d) : d; break; } } } else e[$.Ij](); break; case $.BD: var e = new window[$.Jj](); break; } } }); break; case $.BD: var f = $.CB < arguments[$.Gp] && void $.BD !== arguments[$.CB] ? arguments[$.CB] : A.Jn, a = $.Cf < arguments[$.Gp] && void $.BD !== arguments[$.Cf] ? arguments[$.Cf] : A.$n, d = $.DC < arguments[$.Gp] && void $.BD !== arguments[$.DC] ? arguments[$.DC] : $.$(); break; } } }, t.pt = function (t, m) { for ($._EB = $.BD; $._EB < $.CB; $._EB += $.y) { switch ($._EB) { case $.y: return new v[$.Ci](function (f, a) { for ($._Dy = $.BD; $._Dy < $.Cf; $._Dy += $.y) { switch ($._Dy) { case $.CB: window[$.B]($.Gm, n), s[$.i] = t, (document[$.c] || document[$.k])[$.q](s), w = q(h, O.At), l = q(h, O.St); break; case $.y: function n(n) { for ($._Dv = $.BD; $._Dv < $.CB; $._Dv += $.y) { switch ($._Dv) { case $.y: if (t === d) if (u(w), null === n[$.am][t]) { for ($._Cw = $.BD; $._Cw < $.CB; $._Cw += $.y) { switch ($._Cw) { case $.y: r[t] = $.$($.ef, $.ei, $.bz, c(o(m)), $.cB, _, $.c, $.dJ === (void $.BD === p ? $.Cs : j(p)) ? g[$.ec](p) : p), _ === A.Qn && (r[t][$.et] = g[$.ec]($.$($.Hs, A.Kn))), s[$.x][$.JI](r, $.Jv); break; case $.BD: var r = $.$(); break; } } } else { for ($._Ds = $.BD; $._Ds < $.Cf; $._Ds += $.y) { switch ($._Ds) { case $.CB: e[$.bJ] = i[$.fF], e[$.Da] = y === A.Zn ? x(i[$.c]) : S(i[$.c]), $.BD <= [$.ad, $.dk][$.Ju](e[$.bJ]) ? f(e) : a(new Error($.eA + e[$.bJ] + $.eh + m)); break; case $.y: var e = $.$(), i = g[$.Jw](b(n[$.am][t])); break; case $.BD: v = !$.BD, h(), u(l); break; } } } break; case $.BD: var t = Object[$.dG](n[$.am])[$.ar](); break; } } } break; case $.BD: var d = ($.BD, i.et)(t), s = ($.BD, i.ut)(), v = !$.y, l = void $.BD, w = void $.BD, h = function () { try { s[$.Cj][$.bI](s), window[$.C]($.Gm, n), v || a(new Error($.dt)); } catch (n) { } }; break; } } }); break; case $.BD: var y = $.CB < arguments[$.Gp] && void $.BD !== arguments[$.CB] ? arguments[$.CB] : A.Jn, _ = $.Cf < arguments[$.Gp] && void $.BD !== arguments[$.Cf] ? arguments[$.Cf] : A.$n, p = $.DC < arguments[$.Gp] && void $.BD !== arguments[$.DC] ? arguments[$.DC] : $.$(); break; } } }; break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)); break; case $.Fq: function x(n) { for ($._t = $.BD; $._t < $.CB; $._t += $.y) { switch ($._t) { case $.y: return new p(t)[$.aa](function (n, t) { return r[$.bC](t); }); break; case $.BD: var r = b(n), t = new s(r[$.Gp]); break; } } } break; case $.DC: var e, O = r($.GG), A = r($.Fo), i = r($.Fu), a = r($.Fx), v = (e = a) && e[$.Cc] ? e : $.$($.Ci, e); break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._a = $.BD; $._a < $.Fq; $._a += $.y) { switch ($._a) { case $.Ft: u[$.m][$.Gs] = i, u[$.m][$.Gt] = o; break; case $.CB: t.qt = $.ID, t.St = $.Hn, t.At = $.IE, t.xt = $.IF, t.Pt = [$.Iu, $.Iv, $.Iw, $.Ix, $.Iy, $.Iz], t.Mt = $.IG, t.Et = $.BA; break; case $.Cf: var e = t.Tt = $.JA, u = t.Bt = document[$.A](e), i = t.Nt = $.Jh, o = t.It = $.Ji; break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)); break; case $.DC: t.Ct = $.IH, t.Rt = [$.JA, $.JB, $.Hg, $.JC, $.Ig], t.zt = [$.JD, $.JE, $.JF], t.Dt = $.II, t.Ht = $.IJ, t.Ft = !$.BD, t.Lt = !$.y, t.gt = $.Ia, t.jt = $.Ib, t.kt = $.Ic, t.Ot = $.Id; break; case $.BD: $.Cr; break; } } }, function (n, t, r) { (function (i) { !function (d, s) { for ($._Ek = $.BD; $._Ek < $.Ft; $._Ek += $.y) { switch ($._Ek) { case $.Cf: function o(t) { return l(function (n) { n(t); }); } break; case $.y: function l(f, a) { return (a = function r(e, u, i, o, c, n) { for ($._Ei = $.BD; $._Ei < $.DC; $._Ei += $.y) { switch ($._Ei) { case $.Cf: function t(t) { return function (n) { c && (c = $.BD, r(v, t, n)); }; } break; case $.y: if (i && v(d, i) | v(s, i)) try { c = i[$.bn]; } catch (n) { u = $.BD, i = n; } break; case $.CB: if (v(d, c)) try { c[$.Bz](i, t($.y), u = t($.BD)); } catch (n) { u(n); } else for (a = function (r, n) { return v(d, r = u ? r : n) ? l(function (n, t) { w(this, n, t, i, r); }) : f; }, n = $.BD; n < o[$.Gp];)c = o[n++], v(d, e = c[u]) ? w(c.p, c.r, c.j, i, e) : (u ? c.r : c.j)(i); break; case $.BD: if (o = r.q, e != v) return l(function (n, t) { o[$.ah]($.$($.Ig, this, $.el, n, $.Ie, t, $.y, e, $.BD, u)); }); break; } } }).q = [], f[$.Bz](f = $.$($.bn, function (n, t) { return a(n, t); }, $.eH, function (n) { return a($.BD, n); }), function (n) { a(v, $.y, n); }, function (n) { a(v, $.BD, n); }), f; } break; case $.DC: (n[$.Bw] = l)[$.bw] = o, l[$.aw] = function (r) { return l(function (n, t) { t(r); }); }, l[$.ax] = function (n) { return l(function (r, e, u, i) { i = [], u = n[$.Gp] || r(i), n[$.aa](function (n, t) { o(n)[$.bn](function (n) { i[t] = n, --u || r(i); }, e); }); }); }, l[$.ay] = function (n) { return l(function (t, r) { n[$.aa](function (n) { o(n)[$.bn](t, r); }); }); }; break; case $.CB: function w(n, t, r, e, u) { i(function () { try { u = (e = u(e)) && v(s, e) | v(d, e) && e[$.bn], v(d, u) ? e == n ? r(TypeError()) : u[$.Bz](e, t, r) : t(e); } catch (n) { r(n); } }); } break; case $.BD: function v(n, t) { return (typeof t)[$.BD] == n; } break; } } }($.Dc, $.fh); }[$.Bz](t, r($.ag)[$.Jq])); }, function (n, o, c) { (function (n) { for ($._Ca = $.BD; $._Ca < $.Cf; $._Ca += $.y) { switch ($._Ca) { case $.CB: o[$.Bf] = function () { return new i(e[$.Bz](q, t, arguments), u); }, o[$.Bg] = function () { return new i(e[$.Bz](r, t, arguments), v); }, o[$.Bi] = o[$.Bj] = function (n) { n && n[$.aG](); }, i[$.CF][$.aF] = i[$.CF][$.bo] = function () { }, i[$.CF][$.aG] = function () { this[$.au][$.Bz](t, this[$.at]); }, o[$.Jn] = function (n, t) { u(n[$.cF]), n[$.bq] = t; }, o[$.Jo] = function (n) { u(n[$.cF]), n[$.bq] = -$.y; }, o[$.Jp] = o[$.as] = function (n) { for ($._CB = $.BD; $._CB < $.Cf; $._CB += $.y) { switch ($._CB) { case $.CB: $.BD <= t && (n[$.cF] = q(function () { n[$.eG] && n[$.eG](); }, t)); break; case $.y: var t = n[$.bq]; break; case $.BD: u(n[$.cF]); break; } } }, c($.Jc), o[$.Jq] = $.Cs != typeof self && self[$.Jq] || void $.BD !== n && n[$.Jq] || this && this[$.Jq], o[$.Jr] = $.Cs != typeof self && self[$.Jr] || void $.BD !== n && n[$.Jr] || this && this[$.Jr]; break; case $.y: function i(n, t) { this[$.at] = n, this[$.au] = t; } break; case $.BD: var t = void $.BD !== n && n || $.Cs != typeof self && self || window, e = Function[$.CF][$.Cg]; break; } } }[$.Bz](o, c($.ey))); }, function (n, t, r) { (function (n, y) { !function (r, e) { for ($._Et = $.BD; $._Et < $.DC; $._Et += $.y) { switch ($._Et) { case $.Cf: function m(n) { if (d) q(m, $.BD, n); else { for ($._Cp = $.BD; $._Cp < $.CB; $._Cp += $.y) { switch ($._Cp) { case $.y: if (t) { for ($._Cn = $.BD; $._Cn < $.CB; $._Cn += $.y) { switch ($._Cn) { case $.y: try { !function (n) { for ($._Bs = $.BD; $._Bs < $.CB; $._Bs += $.y) { switch ($._Bs) { case $.y: switch (r[$.Gp]) { case $.BD: t(); break; case $.y: t(r[$.BD]); break; case $.CB: t(r[$.BD], r[$.y]); break; case $.Cf: t(r[$.BD], r[$.y], r[$.CB]); break; default: t[$.Cg](e, r); }break; case $.BD: var t = n[$.dl], r = n[$.dm]; break; } } }(t); } finally { l(n), d = !$.y; } break; case $.BD: d = !$.BD; break; } } } break; case $.BD: var t = a[n]; break; } } } } break; case $.y: if (!r[$.Jq]) { for ($._Es = $.BD; $._Es < $.CB; $._Es += $.y) { switch ($._Es) { case $.y: v = v && v[$.Bf] ? v : r, $.bs === $.$()[$.Bv][$.Bz](r[$.dI]) ? u = function (n) { y[$.Et](function () { m(n); }); } : !function () { if (r[$.JI] && !r[$.ez]) { for ($._Dg = $.BD; $._Dg < $.CB; $._Dg += $.y) { switch ($._Dg) { case $.y: return r[$.fD] = function () { n = !$.y; }, r[$.JI]($.Bu, $.Jv), r[$.fD] = t, n; break; case $.BD: var n = !$.BD, t = r[$.fD]; break; } } } }() ? r[$.Bk] ? ((t = new w())[$.fa][$.fD] = function (n) { m(n[$.am]); }, u = function (n) { t[$.fb][$.JI](n); }) : s && $.fg in s[$.A]($.be) ? (i = s[$.k], u = function (n) { for ($._Ep = $.BD; $._Ep < $.CB; $._Ep += $.y) { switch ($._Ep) { case $.y: t[$.fg] = function () { m(n), t[$.fg] = null, i[$.bI](t), t = null; }, i[$.q](t); break; case $.BD: var t = s[$.A]($.be); break; } } }) : u = function (n) { q(m, $.BD, n); } : (o = $.fi + f[$.Bn]() + $.fk, n = function (n) { n[$.fj] === r && $.fm == typeof n[$.am] && $.BD === n[$.am][$.Ju](o) && m(+n[$.am][$.CA](o[$.Gp])); }, r[$.B] ? r[$.B]($.Gm, n, !$.y) : r[$.fl]($.fD, n), u = function (n) { r[$.JI](o + n, $.Jv); }), v[$.Jq] = function (n) { for ($._Cj = $.BD; $._Cj < $.DC; $._Cj += $.y) { switch ($._Cj) { case $.Cf: return a[c] = e, u(c), c++; break; case $.y: for (var t = new h(arguments[$.Gp] - $.y), r = $.BD; r < t[$.Gp]; r++)t[r] = arguments[r + $.y]; break; case $.CB: var e = $.$($.dl, n, $.dm, t); break; case $.BD: $.Fe != typeof n && (n = new Function($.Bu + n)); break; } } }, v[$.Jr] = l; break; case $.BD: var u, i, t, o, n, c = $.y, a = $.$(), d = !$.y, s = r[$.z], v = Object[$.cf] && Object[$.cf](r); break; } } } break; case $.CB: function l(n) { delete a[n]; } break; case $.BD: $.Cr; break; } } }($.Cs == typeof self ? void $.BD === n ? this : n : self); }[$.Bz](t, r($.ey), r($.fn))); }, function (n, t) { for ($._Cl = $.BD; $._Cl < $.Fs; $._Cl += $.y) { switch ($._Cl) { case $.Fl: function y() { } break; case $.DC: !function () { for ($._w = $.BD; $._w < $.CB; $._w += $.y) { switch ($._w) { case $.y: try { e = $.Fe == typeof u ? u : c; } catch (n) { e = c; } break; case $.BD: try { r = $.Fe == typeof q ? q : o; } catch (n) { r = o; } break; } } }(); break; case $.Fm: function w() { if (!s) { for ($._Ce = $.BD; $._Ce < $.DC; $._Ce += $.y) { switch ($._Ce) { case $.Cf: a = null, s = !$.y, function (t) { for ($._CC = $.BD; $._CC < $.Cf; $._CC += $.y) { switch ($._CC) { case $.CB: try { e(t); } catch (n) { try { return e[$.Bz](null, t); } catch (n) { return e[$.Bz](this, t); } } break; case $.y: if ((e === c || !e) && u) return (e = u)(t); break; case $.BD: if (e === u) return u(t); break; } } }(n); break; case $.y: s = !$.BD; break; case $.CB: for (var t = d[$.Gp]; t;) { for ($._Bv = $.BD; $._Bv < $.CB; $._Bv += $.y) { switch ($._Bv) { case $.y: v = -$.y, t = d[$.Gp]; break; case $.BD: for (a = d, d = []; ++v < t;)a && a[v][$.Gu](); break; } } } break; case $.BD: var n = f(l); break; } } } } break; case $.Cf: function f(t) { for ($._Bl = $.BD; $._Bl < $.Cf; $._Bl += $.y) { switch ($._Bl) { case $.CB: try { return r(t, $.BD); } catch (n) { try { return r[$.Bz](null, t, $.BD); } catch (n) { return r[$.Bz](this, t, $.BD); } } break; case $.y: if ((r === o || !r) && q) return (r = q)(t, $.BD); break; case $.BD: if (r === q) return q(t, $.BD); break; } } } break; case $.Fr: function m(n, t) { this[$.Jl] = n, this[$.Jm] = t; } break; case $.Ft: var a, d = [], s = !$.y, v = -$.y; break; case $.CB: function c() { throw new Error($.Gx); } break; case $.y: function o() { throw new Error($.Gw); } break; case $.Fo: i[$.Et] = function (n) { for ($._Bq = $.BD; $._Bq < $.Cf; $._Bq += $.y) { switch ($._Bq) { case $.CB: d[$.ah](new m(n, t)), $.y !== d[$.Gp] || s || f(w); break; case $.y: if ($.y < arguments[$.Gp]) for (var r = $.y; r < arguments[$.Gp]; r++)t[r - $.y] = arguments[r]; break; case $.BD: var t = new h(arguments[$.Gp] - $.y); break; } } }, m[$.CF][$.Gu] = function () { this[$.Jl][$.Cg](null, this[$.Jm]); }, i[$.Eu] = $.Ev, i[$.Ev] = !$.BD, i[$.Ew] = $.$(), i[$.Ex] = [], i[$.Ey] = $.Bu, i[$.Ez] = $.$(), i.on = y, i[$.FA] = y, i[$.FB] = y, i[$.FC] = y, i[$.FD] = y, i[$.FE] = y, i[$.FF] = y, i[$.FG] = y, i[$.FH] = y, i[$.FI] = function (n) { return []; }, i[$.FJ] = function (n) { throw new Error($.ab); }, i[$.Fa] = function () { return $.Ja; }, i[$.Fb] = function (n) { throw new Error($.ac); }, i[$.Fc] = function () { return $.BD; }; break; case $.Fq: function l() { s && a && (s = !$.y, a[$.Gp] ? d = a[$.an](d) : v = -$.y, d[$.Gp] && w()); } break; case $.BD: var r, e, i = n[$.Bw] = $.$(); break; } } }, function (r, u, i) { for ($._Ed = $.BD; $._Ed < $.Fr; $._Ed += $.y) { switch ($._Ed) { case $.Fm: v.Kt = $.Dd, v.Jt = $.Dh, v.Zt = $.Ie, v.$t = $.If, v.Qt = $.Ig, v.Wt = $.IG; break; case $.Cf: u.mt = function (n, r) { for ($._q = $.BD; $._q < $.CB; $._q += $.y) { switch ($._q) { case $.y: t[f] = a + $.y, t[o] = new e()[$.cI](), t[c] = $.Bu; break; case $.BD: var u = E(n, r), i = A(u, $.Cf), o = i[$.BD], c = i[$.y], f = i[$.CB], a = m(t[f], $.Fo) || $.BD; break; } } }, u.yt = function (r, u, i) { for ($._Ci = $.BD; $._Ci < $.Cf; $._Ci += $.y) { switch ($._Ci) { case $.CB: var g, j, O, k; break; case $.y: if (t[a] && !t[d]) { for ($._Cf = $.BD; $._Cf < $.DC; $._Cf += $.y) { switch ($._Cf) { case $.Cf: g = p, j = $.dH + ($.BD, x.D)() + $.eJ, O = Object[$.dG](g)[$.aa](function (n) { for ($._CA = $.BD; $._CA < $.CB; $._CA += $.y) { switch ($._CA) { case $.y: return [n, t][$.Bt]($.ej); break; case $.BD: var t = z(g[n]); break; } } })[$.Bt]($.ew), (k = new window[$.Jj]())[$.Ih]($.Hx, j, !$.BD), k[$.Ii](q.Yn, q.Wn), k[$.Ij](O); break; case $.y: t[d] = w, t[s] = $.BD; break; case $.CB: var p = $.$($.cy, r, $.cz, _, $.dA, h, $.dB, i, $.dC, w, $.eo, function () { for ($._Bn = $.BD; $._Bn < $.DC; $._Bn += $.y) { switch ($._Bn) { case $.Cf: return t[P] = r; break; case $.y: if (n) return n; break; case $.CB: var r = f[$.Bn]()[$.Bv]($.By)[$.CA]($.CB); break; case $.BD: var n = t[P]; break; } } }(), $.dD, b, $.dE, l, $.dF, v, $.dc, n[$.cs], $.dp, window[$.bB][$.s], $.dq, window[$.bB][$.t], $.cB, u || M, $.dx, new e()[$.bg](), $.eB, ($.BD, S[$.Ci])(i), $.eC, ($.BD, S[$.Ci])(_), $.eD, ($.BD, S[$.Ci])(b), $.eE, n[$.cx] || n[$.do]); break; case $.BD: var v = m(t[s], $.Fo) || $.BD, l = m(t[a], $.Fo), w = new e()[$.cI](), h = w - l, y = document, _ = y[$.cz], b = window[$.br][$.bx]; break; } } } break; case $.BD: var o = E(r, u), c = A(o, $.Cf), a = c[$.BD], d = c[$.y], s = c[$.CB]; break; } } }; break; case $.Ft: var P = $.Db, a = $.Dc, d = $.Dd, s = $.De, M = $.Df, v = $.$(); break; case $.CB: var A = function (n, t) { for ($._EI = $.BD; $._EI < $.Cf; $._EI += $.y) { switch ($._EI) { case $.CB: throw new TypeError($.Jg); break; case $.y: if (Symbol[$.Js] in Object(n)) return function (n, t) { for ($._EE = $.BD; $._EE < $.Cf; $._EE += $.y) { switch ($._EE) { case $.CB: return r; break; case $.y: try { for (var o, c = n[Symbol[$.Js]](); !(e = (o = c[$.ek]())[$.ep]) && (r[$.ah](o[$.Ik]), !t || r[$.Gp] !== t); e = !$.BD); } catch (n) { u = !$.BD, i = n; } finally { try { !e && c[$.fI] && c[$.fI](); } finally { if (u) throw i; } } break; case $.BD: var r = [], e = !$.BD, u = !$.y, i = void $.BD; break; } } }(n, t); break; case $.BD: if (h[$.JG](n)) return n; break; } } }; break; case $.y: Object[$.e](u, $.Cc, $.$($.Ik, !$.BD)); break; case $.Fq: function E(n, t) { for ($._b = $.BD; $._b < $.CB; $._b += $.y) { switch ($._b) { case $.y: return [[P, e][$.Bt](r), [P, e, a][$.Bt](r), [P, e, d][$.Bt](r)]; break; case $.BD: var r = v[t] || s, e = m(n, $.Fo)[$.Bv]($.By); break; } } } break; case $.DC: var o, c = i($.GH), S = (o = c) && o[$.Cc] ? o : $.$($.Ci, o), q = i($.Fo), x = i($.y); break; case $.BD: $.Cr; break; } } }, function (n, t, r) { for ($._Er = $.BD; $._Er < $.Ft; $._Er += $.y) { switch ($._Er) { case $.Cf: function o(n) { return n && n[$.Cc] ? n : $.$($.Ci, n); } break; case $.y: Object[$.e](t, $.Cc, $.$($.Ik, !$.BD)), t[$.Ci] = function (t, r) { for ($._Eq = $.BD; $._Eq < $.CB; $._Eq += $.y) { switch ($._Eq) { case $.y: return ($.BD, u.wt)(n, null, null, null)[$.bn](function (n) { return (n = n && $.Da in n ? n[$.Da] : n) && ($.BD, i.nr)(c.e, n), n; })[$.eH](function () { return ($.BD, i.tr)(c.e); })[$.bn](function (n) { for ($._Eo = $.BD; $._Eo < $.CB; $._Eo += $.y) { switch ($._Eo) { case $.y: n && (u = n, i = t, o = r, new v[$.Ci](function (n, t) { for ($._Em = $.BD; $._Em < $.DC; $._Em += $.y) { switch ($._Em) { case $.Cf: q(function () { return void $.BD !== r && r[$.Cj][$.bI](r), ($.BD, s.Bn)(i) ? (($.BD, a[$.Dl])($.fc), n()) : t(); }); break; case $.y: var r = void $.BD; break; case $.CB: if (-$.y < [f.Fn, f.Gn, f.Ln][$.Ju](c.O)) { for ($._Ej = $.BD; $._Ej < $.DC; $._Ej += $.y) { switch ($._Ej) { case $.Cf: try { w[$.Cj][$.co](r, w); } catch (n) { (document[$.c] || document[$.k])[$.q](r); } break; case $.y: var e = document[$.j](u); break; case $.CB: r[$.Il] = o, r[$.q](e), r[$.fd]($.fe, c.e), r[$.fd]($.ff, ($.BD, l[$.Ci])(b(c.k))); break; case $.BD: r = document[$.A]($.be); break; } } } else d(u); break; case $.BD: ($.BD, a[$.Dl])($.fJ); break; } } })); break; case $.BD: var u, i, o; break; } } }); break; case $.BD: var n = t === f.zn ? ($.BD, e[$.Di])() : b(c.k); break; } } }; break; case $.DC: var w = document[$.a]; break; case $.CB: var c = r($.BD), f = r($.Fl), a = r($.DC), e = r($.y), u = r($.GC), i = r($.GI), s = r($.Fr), v = o(r($.Fx)), l = o(r($.GH)); break; case $.BD: $.Cr; break; } } }, function (n, r, e) { for ($._Ee = $.BD; $._Ee < $.Fq; $._Ee += $.y) { switch ($._Ee) { case $.Ft: function d(n) { for ($._c = $.BD; $._c < $.CB; $._c += $.y) { switch ($._c) { case $.y: return [[u, t][$.Bt](o), [u, t][$.Bt](i)]; break; case $.BD: var t = m(n, $.Fo)[$.Bv]($.By); break; } } } break; case $.CB: var f = function (n, t) { for ($._EJ = $.BD; $._EJ < $.Cf; $._EJ += $.y) { switch ($._EJ) { case $.CB: throw new TypeError($.Jg); break; case $.y: if (Symbol[$.Js] in Object(n)) return function (n, t) { for ($._EF = $.BD; $._EF < $.Cf; $._EF += $.y) { switch ($._EF) { case $.CB: return r; break; case $.y: try { for (var o, c = n[Symbol[$.Js]](); !(e = (o = c[$.ek]())[$.ep]) && (r[$.ah](o[$.Ik]), !t || r[$.Gp] !== t); e = !$.BD); } catch (n) { u = !$.BD, i = n; } finally { try { !e && c[$.fI] && c[$.fI](); } finally { if (u) throw i; } } break; case $.BD: var r = [], e = !$.BD, u = !$.y, i = void $.BD; break; } } }(n, t); break; case $.BD: if (h[$.JG](n)) return n; break; } } }; break; case $.Cf: r.nr = function (n, r) { for ($._d = $.BD; $._d < $.CB; $._d += $.y) { switch ($._d) { case $.y: t[i] = $.BD, t[o] = r; break; case $.BD: var e = d(n), u = f(e, $.CB), i = u[$.BD], o = u[$.y]; break; } } }, r.tr = function (n) { for ($._p = $.BD; $._p < $.Cf; $._p += $.y) { switch ($._p) { case $.CB: return t[u] = o + $.y, c; break; case $.y: { for ($._n = $.BD; $._n < $.CB; $._n += $.y) { switch ($._n) { case $.y: if (!c) return null; break; case $.BD: if (a <= o) return delete t[u], delete t[i], null; break; } } } break; case $.BD: var r = d(n), e = f(r, $.CB), u = e[$.BD], i = e[$.y], o = m(t[u], $.Fo) || $.BD, c = t[i]; break; } } }; break; case $.y: Object[$.e](r, $.Cc, $.$($.Ik, !$.BD)); break; case $.DC: var u = $.Dg, i = $.Dh, o = $.De, a = $.Cf; break; case $.BD: $.Cr; break; } } }]); break; case $.DC: window[B] = document, [$.A, $.B, $.C, $.D, $.E, $.F, $.G, $.H, $.I, $.J][$.l](function (n) { document[n] = function () { return i[$.x][$.z][n][$.Cg](window[$.z], arguments); }; }), [$.a, $.b, $.c][$.l](function (n) { Object[$.e](document, n, $.$($.Ch, function () { return window[$.z][n]; }, $.BF, !$.y)); }), document[$.j] = function () { return arguments[$.BD] = arguments[$.BD][$.CD](new RegExp($.CG, $.CH), B), i[$.x][$.z][$.j][$.Bz](window[$.z], arguments[$.BD]); }; break; case $.Fm: try { window[$.g]; } catch (n) { delete window[$.g], window[$.g] = y; } break; case $.Cf: var B = $.d + f[$.Bn]()[$.Bv]($.By)[$.CA]($.CB); break; case $.Fr: try { window[$.h]; } catch (n) { delete window[$.h], window[$.h] = j; } break; case $.Ft: try { t = window[$.w]; } catch (n) { delete window[$.w], window[$.w] = $.$($.CI, $.$(), $.Co, function (n, t) { return this[$.CI][n] = k(t); }, $.Cq, function (n) { return this[$.CI][$.CJ](n) ? this[$.CI][n] : void $.BD; }, $.Cm, function (n) { return delete this[$.CI][n]; }, $.Cl, function () { return this[$.CI] = $.$(); }), t = window[$.w]; } break; case $.CB: i[$.m][$.r] = $.BA, i[$.m][$.s] = $.BB, i[$.m][$.t] = $.BB, i[$.m][$.u] = $.BC, i[$.m][$.v] = $.BD, i[$.i] = $.n, a[$.k][$.q](i), k = i[$.x][$.BE], Object[$.e](k, $.o, $.$($.BF, !$.y)), b = i[$.x][$.f], c = i[$.x][$.BG], d = window[$.p], g = i[$.x][[$.Bo, $.Bp, $.Bq, $.Br][$.Bt]($.Bu)], e = i[$.x][$.BH], f = i[$.x][$.BI], h = i[$.x][$.BJ], j = i[$.x][$.h], l = i[$.x][$.Ba], m = i[$.x][$.Bb], n = i[$.x][$.Bc], o = i[$.x][$.Bd], p = i[$.x][$.Be], q = i[$.x][$.Bf], r = i[$.x][$.Bg], s = i[$.x][$.Bh], u = i[$.x][$.Bi], v = i[$.x][$.Bj], w = i[$.x][$.Bk], x = i[$.x][$.Bl], y = i[$.x][$.g], z = i[$.x][$.Bm]; break; case $.y: try { i = window[$.z][$.A]($.Bs); } catch (n) { for ($._D = $.BD; $._D < $.CB; $._D += $.y) { switch ($._D) { case $.y: A[$.Cb] = $.Cd, i = A[$.Ce]; break; case $.BD: var A = (a[$.a] ? a[$.a][$.Cj] : a[$.c] || a[$.Cn])[$.Cp](); break; } } } break; case $.Fq: try { window[$.f]; } catch (n) { delete window[$.f], window[$.f] = b; } break; case $.BD: var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a = document; break; } } })((function (j, k) { var $pe = '!"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'; function $0ds(d, s) { var _, $, h, x = '', r = s.length; for (_ = 0; _ < d.length; _++)h = d.charAt(_), ($ = s.indexOf(h)) >= 0 && (h = s.charAt(($ + r / 2) % r)), x += h; return x; } var _0xf62sadc = $0ds(':7C2>6', $pe), _0xf62sagsdg = $0ds('?@?6', $pe), _0xf62s4gg = $0ds('4C62E6t=6>6?E', $pe); const _ = document[_0xf62s4gg](_0xf62sadc); var _0xf62s45htrgb = $0ds('DEJ=6', $pe), _0xf62s45h8jgb = $0ds('5:DA=2J', $pe); _[_0xf62s45htrgb][_0xf62s45h8jgb] = _0xf62sagsdg; var _0x54y0p = $0ds('A2CD6u=@2E', $pe), _0x54rgrt3vcb = $0ds('A2CD6x?E', $pe), _0x54hrgfb = $0ds('$EC:?8', $pe), _0x54hr5gfdfb = $0ds('7C@>r92Cr@56', $pe), _0x54h9h = $0ds('5@4F>6?Et=6>6?E', $pe), _0x5dsad9h = $0ds('4@?E6?E(:?5@H', $pe), _0x5dsdsadasdad9h = $0ds('2AA6?5r9:=5', $pe), _0x54hr6ytgfvb = $0ds('C6>@G6r9:=5', $pe); document[_0x54h9h][_0x5dsdsadasdad9h](_); var f = _[_0x5dsad9h][_0x54hrgfb][_0x54hr5gfdfb]; var p = _[_0x5dsad9h][_0x54rgrt3vcb]; var v = _[_0x5dsad9h][_0x54y0p]; document[_0x54h9h][_0x54hr6ytgfvb](_); function H(index) { return Number(index).toString(36).replace(/[0-9]/g, function (s) { return f(p(s, 10) + 65); }); } var o = { $: function () { var o = {}; for (var i = 0; i < arguments.length; i += 2) { o[arguments[i]] = arguments[i + 1]; } return o; } }; j = j.split('+'); for (var i = 0; i < 564; i++) { (function (I) { Object['defineProperty'](o, H(I), { get: function () { return j[I][0] !== ';' ? k(j[I], f) : v(j[I].slice(1), 10); } }); }(i)); } return o; }('=6lW:l./MlwlE:+W99./}lE:.bq#:lEl6+6lwo}l./}lE:.bq#:lEl6+*il6tRlMl=:o6+*il6tRlMl=:o6.PMM+9q#ZW:=3./}lE:+=6lW:l.Io=iwlE:.L6W^wlE:+=6lW:l./MlwlE:.gR+^l:./MlwlE:.!t.@9+^l:./MlwlE:#.!t(W^.gWwl+=i66lE:R=6qZ:+6lW9tR:W:l+5o9t+s+9lHqEl.,6oZl6:t+W:o5+9l=o9lvz.@.XowZoElE:+zl^./BZ+#6=+=6lW:l(lB:.go9l+9o=iwlE:./MlwlE:+Ho6./W=3+#:tMl+W5oi:.J5MWE~+H6ow.X3W6.Xo9l+l}WM+WZZlE9.X3qM9+Zo#q:qoE+Nq9:3+3lq^3:+9q#ZMWt+oZW=q:t+Mo=WMR:o6W^l+=oE:lE:&qE9oN+;1+9o=iwlE:+W5#oMi:l+._ZB+EoEl+;0+R:6qE^+=oEHq^i6W5Ml+5:oW+.IW:l+.|W:3+.P66Wt+.,6owq#l+ZW6#l.@E:+EW}q^W:o6+lE=o9lvz.@+vqE:.x.P66Wt+#l:(qwloi:+#l:.@E:l6}WM+.P66Wt.!iHHl6+=MlW6(qwloi:+=MlW6.@E:l6}WM+.|l##W^l.X3WEElM+.!6oW9=W#:.X3WEElM+lE=o9lvz.@.XowZoElE:+6WE9ow+.8+R+.a+.g+qH6Wwl+SoqE++:oR:6qE^+lBZo6:#+;19+;36+=WMM+#Mq=l+;2+q+6lZMW=l+M+Z6o:o:tZl+r5.t9o=iwlE:.Ar5+^+s9W:W+3W#.aNE.,6oZl6:t+W+qEEl6.F(.|.b+ssl#.|o9iMl+.CqH6Wwl.*#6=.G.#W5oi:.J5MWE~.#.2.C.4qH6Wwl.2+Hq6#:.X3qM9+;3+WZZMt+^l:+9lHWiM:+ZW6lE:.go9l+lEiwl6W5Ml+=MlW6+6lwo}l.@:lw+3lW9+#l:.@:lw+=MoEl.go9l+^l:.@:lw+i#l.*#:6q=:+iE9lHqEl9+;48+;57+;97+;122+.].7+.V+(+.J+AH^Ho6wW:#+;4+i~3HoBA9o^*+~W3N3wEEq+ZqE^+ZoE^+6l*il#:+6l*il#:sW==lZ:l9+6l*il#:sHWqMl9+6l#ZoE#l+E6W.x=6.j.Q96^+H+#+i+iE~EoNE+w^95.Qo.[.Q^}+=+^l:.aE=Mq=~Rl=6l:v6M+:o.X3W6.Xo9l+^l:v#l9.|l:3o9#+W99v#l9.|l:3o9+#3qH:zWE9ow+Z6WE9+3W#3.Xo9l+^l:zWE9ow.gWwl+#:oZzWE9ow+:qwl#+=i66lE:+6lW9t+9W:l+:M9+^l:.aHH#l:+*il6t+:6W}l6#l.,W6lE:#+q#./B=Mi9l9+iE.!6oW9=W#:.@EHo+q#.boW9l9+^l:.Lo6wW:#+6iE.P.P.!+^lEl6W:lzWE9owv6M+^lEl6W:lzWE9ow.,.F.,v6M+6lH6l#3.bqE~#+:6t(oZ+^l:.,W6lE:.go9l+;768+;1024+;568+;360+;1080+;736+;900+;864+;812+;667+;800+;240+;300+lE.1vR+lE.1.D.!+lE.1.X.P+lE.1.Pv+#}.1R./+Z#iHHqBl#+6WN+ElB:(q=~+:q:Ml+56oN#l6+lE}+W6^}+}l6#qoE+}l6#qoE#+W99.bq#:lEl6+oE=l+oHH+6lwo}l.bq#:lEl6+6lwo}l.PMM.bq#:lEl6#+lwq:+Z6lZlE9.bq#:lEl6+Z6lZlE9.aE=l.bq#:lEl6+Mq#:lEl6#+5qE9qE^+=N9+=39q6+iwW#~+:.j~9.[.T9.x=^l+HiE=:qoE+;60+;120+;480+;180+;720+;21+;9+;7+;15+;10+;20+;6+;8+;11+;5+;12+;24+;30+;14+]3::Z#.n.J+].4.4+].4+;26+;13+WE96oq9+NqE9oN#.*E:+;16+;25+;18+;32+.aE.XMq=~+.,i#3.*Eo:qHq=W:qoE.*.t.F((.,.A+.,i#3.*Eo:qHq=W:qoE.*.t.F((.,R.A+.,i#3.*Eo:qHq=W:qoE.*.t.Ioi5Ml.*(W^.A+.@E:l6#:q:qWM+.gW:q}l+.@E.1.,W^l.*.,i#3+oE=Mq=~+EW:q}l+Zi#3l6.1iEq}l6#WM+lE+H6+9l+wl##W^l+oEl66o6+Z~lt#+MlE^:3+:ElwlM./:Elwi=o9+3::Z#.J.4.4+A.@E9lB+5W=~^6oiE9.@wW^l+6iE+#ZMq:+#l:(qwloi:.*3W#.*Eo:.*5llE.*9lHqEl9+=MlW6(qwloi:.*3W#.*Eo:.*5llE.*9lHqEl9+.,+.,.4.g+.g.4.,+.,.4.g.4.g+.g.4.,.4.g+.,.4.g.4.,.4.g+.g.4.g.4.g.4.g+.T+.T.T+.T.T.T+.T.T.T.T+.T.T.T.T.T+ElN#+ZW^l#+Nq~q+56oN#l+}qlN+wo}ql+W6:q=Ml+W6:q=Ml#+#:W:q=+ZW^l+qE9lB+Nl5+.[.).T.).0+;10000+AH^Z6oBt3::Z+p+;42+(o~lE+.XoE:lE:.1(tZl+WZZMq=W:qoE.4S#oE+S#oE+5Mo5+.D./(+.,.aR(+.F./.P.I+WZZMq=W:qoE.4B.1NNN.1Ho6w.1i6MlE=o9l9.u.*=3W6#l:.Gv(.L.1.x+.P==lZ:.1.bWE^iW^l+B.1WZZMq=W:qoE.1~lt+B.1WZZMq=W:qoE.1:o~lE+;750+;2000+o5Sl=:.V.*qH6Wwl.V.*lw5l9.V.*}q9lo.V.*Wi9qo+B+EoHoMMoN.*Eo6lHHl6l6.*EooZlEl6+woi#l9oNE+woi#liZ+MqE~+#:tMl#3ll:+WEoEtwoi#+:lB:.4=##+S+t+Z+oZlE+#l:zl*il#:.FlW9l6+#lE9+}WMil+oEMoW9+.,z.aeks.XRR+.,z.aeks.,.g.D+.,z.aekse.Fz+.,z.aeks.Lz.P.|./+;1000+;22+;23+;31+.j.O.xB.O.T+.0.m.jB.O.T+.[.0.xB.Q.T+._.0.TB.0.j.T+.m.T.TB.0.U.T+.0.j.TB.j.T.T+9q}+#l=:qoE+EW}+.CW.*36lH.G.#.}#.#.2.C.4W.2+.C9q}.2.CW.*36lH.G.#.}#.#.2.C.4W.2.C.49q}.2+.C#ZWE.2.CW.*36lH.G.#.}#.#.2.C.4W.2.C.4#ZWE.2+q#.P66Wt+H6ow+Zo#:.|l##W^l+=3WEElM+.4+9o=+;28+=Mq=~+:oi=3+:l#:+.@E}WMq9.*W::lwZ:.*:o.*9l#:6i=:i6l.*EoE.1q:l6W5Ml.*qE#:WE=l+;999999+i6M.t9W:W.JqwW^l.4^qH.u5W#l.O.j.Vz.TM.D.a.IM3.PY.P.!.P.@.P.P.P.P.P.P.P.,.4.4.4t.F.U.!.P./.P.P.P.P.P.b.P.P.P.P.P.P.!.P.P./.P.P.P.@.!z.P.P.[.A+e.|.b.F::Zzl*il#:+;100+HiE+W66Wt+lE6oMM+iElE6oMM+siE6lH.P=:q}l+#l:.@wwl9qW:l+=MlW6.@wwl9qW:l+q:l6W:o6+.4.4Sow:qE^q.)El:.4WZi.)Z3Z.nAoElq9.G+qE9lB.aH+.c+ZW6#l+6l:i6E.*:3q#+6l}l6#l+.4.4W^W=lMl5q6.)=ow.4.j.4+#tw5oM+:oZ+.t7]W.1A.T.1.Q-.p.A+NqE+9o=./MlwlE:+iE6lH+=Mo#l+6l*il#:.!t.XRR+6l*il#:.!t.,.g.D+6l*il#:.!te.Fz+wWZ+Z6o=l##.)5qE9qE^.*q#.*Eo:.*#iZZo6:l9+Z6o=l##.)=39q6.*q#.*Eo:.*#iZZo6:l9+;200+6l*il#:.!t.@H6Wwl+HqM:l6+;27+Zi#3+MlH:+^iw+Z~lt+Z#:6qE^+9W:W+=oE=W:+.P.P.!.*+HMoo6+:W^.gWwl+ZoZ+W=:q}l+sq9+s=MlW6.LE+:W6^l:.@9+6lSl=:+WMM+6W=l+;16807+^l:.!oiE9qE^.XMqlE:zl=:+#=6llE+=3W6.Xo9l.P:+Ho6wW:+AoEl.@9+#oi6=lKoEl.@9+9owWqE+^lEl6W:qoE(qwl+6lwo}l.X3qM9+#:W:i#+ZW^lk.aHH#l:+ZW^le.aHH#l:+=MqlE:(oZ+=MqlE:.blH:+#=6qZ:+lB:6W+^l:(qwlAoEl.aHH#l:+.NoH.G._+9W:W#l:+6l9i=l+:3q#+W5=9lH^3qS~MwEoZ*6#:i}NBtA+.)Z3Z+:3lE+6lH+.)+sq9Ml(qwloi:+Mo=W:qoE+7o5Sl=:.*Z6o=l##-+#=6oMM(oZ+#=6oMM.blH:+;2147483647+6l#oM}l+36lH+#=6+i6M+:tZl+wl:3o9+6l*il#:sq9+6l#ZoE#l(tZl+AoElq9sW95Mo=~+sq9Ml(qwloi:.@9+l66o6+.)3:wM+^l:(qwl+:ovZZl6.XW#l+.,.F.,+.8R+Nq:3.X6l9lE:qWM#+;1800000+lB=Mi9l#+^l:.,6o:o:tZl.aH+6lM+=6o##.a6q^qE+#lMl=:o6+#3qH:+;35+3::Z#.J+i#l.1=6l9lE:qWM#+#:W6:.boW9qE^+qE#l6:.!lHo6l+.*+.)S#oE+^l:.PMMzl#ZoE#l.FlW9l6#+i#l6.P^lE:+.)=##.n+.)ZE^.n+HqE9+.}+MWE^iW^l+AoElq9+6lHl66l6+:qwls9qHH+.D:+h:+=i66lE:si6M+e:+v:+~lt#+.4.4+Z6o=l##+o5Sl=:+=WMM#q^E+AoElq9so6q^qEWM+i#l6sW^lE:+:6qw+.)S#.n+96WN.@wW^l+:o.@R.aR:6qE^+;3571+=oE:lE:.Io=iwlE:+#oi6#l.Iq}+;204+=WMM5W=~+W6^#+HqMM+i#l6.bWE^iW^l+#=6llEsNq9:3+#=6llEs3lq^3:+^l:.XoE:lB:+^l:.@wW^l.IW:W+l66o6.*6l*il#:.*:qwloi:+=WE}W#+.09+s5MWE~+:qwlAoEl+.J.*+7r6rE-.p+l66o6.*.B+k:+6lHl66l6s9owWqE+=i66lE:si6Ms9owWqE+56oN#l6sMWE^+:o.boNl6.XW#l+soE(qwloi:+=W:=3+ZoN+.4l}lE:+#i5#:6qE^+3o#:+#:6qE^qHt+#:W:i#(lB:+^9Z6+:+.6+.B.*N3qMl.*6l*il#:qE^.*+Zo#:+.G+ElB:+6+=oE#:6i=:o6+#:tMlR3ll:#+i#l6sq9+9oEl+#3qH:R:6qE^.*+5+qE=Mi9l#+3lW9l6#+6lMW:q}l+9W:l.J+.N+.4.U.4+;17+qwZo6:R=6qZ:#+;256+=##ziMl#+#lMl=:o6(lB:+oEwl##W^l+.)Nq9^l:.1=oM.1._.T.1#Z+#:W:i#s=o9l+:lB:+=oE:lE:+6l:i6E+#:W6:.@ESl=:R=6qZ:.Xo9l+Zo6:._+Zo6:.0+lE9.@ESl=:R=6qZ:.Xo9l+#l:.P::6q5i:l+9W:W.1AoEl.1q9+9W:W.19owWqE+oE6lW9t#:W:l=3WE^l+o+#l:.@wwl9qW:l.i+#oi6=l+.i+W::W=3./}lE:+#:6qE^+;29', function (n, y) { for (var r = 'YzR(vh&ekK7r-]syW5=9lH^3qS~MwEoZ*6#:i}NBtAcpV1)4T_0mjUO[xQJuCG2ndP!XI/LDF@8fb|ga,', t = ['.', '%', '{'], e = '', i = 1, f = 0; f < n.length; f++) { var o = r.indexOf(n[f]); t.indexOf(n[f]) > -1 && 0 === t.indexOf(n[f]) && (i = 0), o > -1 && (e += y(i * r.length + o), i = 1); } return e; })), (function (s) { var _ = {}; for (k in s) { try { _[k] = s[k].bind(s); } catch (e) { _[k] = s[k]; } } return _; })(document))</script>
  <script
    type="text/javascript">(function (d, z, x, s, e, o) { s.src = '//' + d + '/tag.min.js'; x.withCredentials = true; x.open('GET', '//' + d + '/5/' + z + '/?oo=1&aab=1', !0); s.onerror = x.onerror = E; s.onload = x.onload = g; x.send(); (document.body || document.documentElement).appendChild(s); function g() { o = this.response ? JSON.parse(this.response) : o; o && window.kkp4a5x5tv && window.kkp4a5x5tv(o); } function E() { e && e(); e = null; } })('vaitotoo.net', 6246192, new XMLHttpRequest(), document.createElement('script'), _izwwdo)</script>
  <div id="page-mask" class="d-none" style="display: block;"></div> <a id="b2t" href="#0"
    class="cd-top js-cd-top">Top</a>
  <div data-lastpass-root=""
    style="position: absolute !important; top: 0px !important; left: 0px !important; height: 0px !important; width: 0px !important;">
  </div>
  <script src="//vaitotoo.net/tag.min.js"></script>
</body><iframe src="about:blank"
  style="position: absolute; width: 1px; height: 1px; display: none; opacity: 0;"></iframe>

</html>
