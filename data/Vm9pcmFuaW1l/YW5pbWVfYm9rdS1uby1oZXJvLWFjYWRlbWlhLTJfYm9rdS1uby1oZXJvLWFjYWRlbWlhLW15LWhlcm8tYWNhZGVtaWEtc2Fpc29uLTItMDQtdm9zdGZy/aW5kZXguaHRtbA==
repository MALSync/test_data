<html lang="en-US">

<head>
  <meta http-equiv="origin-trial"
    content="Az520Inasey3TAyqLyojQa8MnmCALSEU29yQFW8dePZ7xQTvSt73pHazLFTK5f7SyLUJSo2uKLesEtEa9aUYcgMAAACPeyJvcmlnaW4iOiJodHRwczovL2dvb2dsZS5jb206NDQzIiwiZmVhdHVyZSI6IkRpc2FibGVUaGlyZFBhcnR5U3RvcmFnZVBhcnRpdGlvbmluZyIsImV4cGlyeSI6MTcyNTQwNzk5OSwiaXNTdWJkb21haW4iOnRydWUsImlzVGhpcmRQYXJ0eSI6dHJ1ZX0=">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="profile" href="https://gmpg.org/xfn/11">
  <link rel="pingback" href="https://v5.voiranime.com/xmlrpc.php">
  <meta name="robots" content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1">

  <title>Boku no Hero Academia 2 - Boku no Hero Academia (My Hero Academia) (Saison 2) - 04 VOSTFR - 04 - Voiranime
  </title>
  <meta name="description"
    content="Seconde saison de Boku no Hero Academia Nous retrouvons Izuku et ses camarades suite à l'attaque de l'Alliance des super-vilains. A peine remis de leurs">
  <link rel="canonical"
    href="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/">
  <meta property="og:locale" content="en_US">
  <meta property="og:type" content="article">
  <meta property="og:title" content="Regarder gratuitement Boku no Hero Academia 2 en HD- Voiranime">
  <meta property="og:description"
    content="Seconde saison de Boku no Hero Academia Nous retrouvons Izuku et ses camarades suite à l'attaque de l'Alliance des super-vilains. A peine remis de leurs">
  <meta property="og:url"
    content="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/">
  <meta property="og:site_name" content="Voiranime">
  <meta property="og:image" content="https://v5.voiranime.com/wp-content/uploads/2020/01/thumb_5e0cd5cd9e780.png">
  <meta property="og:image:width" content="400">
  <meta property="og:image:height" content="567">
  <meta property="og:image:type" content="image/png">
  <meta name="twitter:card" content="summary_large_image">
  <script type="text/javascript" async=""
    src="https://www.gstatic.com/recaptcha/releases/MydHw_zggsxIJuhSbyOmPv5R/recaptcha__fr.js" crossorigin="anonymous"
    integrity="sha384-R3GuPkQfnBDTKTqDagSkRYZ5UmiIci7lo4SwWoJjewNpbhb3eObgcW5Y+wpU6Fke"></script>
  <script type="application/ld+json"
    class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"WebPage","@id":"https://v5.voiranime.com/anime/boku-no-hero-academia-2/","url":"https://v5.voiranime.com/anime/boku-no-hero-academia-2/","name":"Regarder gratuitement Boku no Hero Academia 2 en HD- Voiranime","isPartOf":{"@id":"https://v5.voiranime.com/#website"},"primaryImageOfPage":{"@id":"https://v5.voiranime.com/anime/boku-no-hero-academia-2/#primaryimage"},"image":{"@id":"https://v5.voiranime.com/anime/boku-no-hero-academia-2/#primaryimage"},"thumbnailUrl":"https://v5.voiranime.com/wp-content/uploads/2020/01/thumb_5e0cd5cd9e780.png","datePublished":"2020-01-01T18:20:16+00:00","dateModified":"2020-01-01T18:20:16+00:00","description":"Seconde saison de Boku no Hero Academia Nous retrouvons Izuku et ses camarades suite à l'attaque de l'Alliance des super-vilains. A peine remis de leurs","breadcrumb":{"@id":"https://v5.voiranime.com/anime/boku-no-hero-academia-2/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https://v5.voiranime.com/anime/boku-no-hero-academia-2/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https://v5.voiranime.com/anime/boku-no-hero-academia-2/#primaryimage","url":"https://v5.voiranime.com/wp-content/uploads/2020/01/thumb_5e0cd5cd9e780.png","contentUrl":"https://v5.voiranime.com/wp-content/uploads/2020/01/thumb_5e0cd5cd9e780.png","width":400,"height":567},{"@type":"BreadcrumbList","@id":"https://v5.voiranime.com/anime/boku-no-hero-academia-2/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https://v5.voiranime.com/"},{"@type":"ListItem","position":2,"name":"Manga","item":"https://v5.voiranime.com/anime/"},{"@type":"ListItem","position":3,"name":"Boku no Hero Academia 2"}]},{"@type":"WebSite","@id":"https://v5.voiranime.com/#website","url":"https://v5.voiranime.com/","name":"Voiranime","description":"LE MEILLEUR DE L&#039;ANIME EN HD","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https://v5.voiranime.com/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"}]}</script>

  <link rel="alternate" type="application/rss+xml" title="Voiranime » Feed" href="https://v5.voiranime.com/feed/">
  <link rel="alternate" type="application/rss+xml" title="Voiranime » Comments Feed"
    href="https://v5.voiranime.com/comments/feed/">
  <link rel="alternate" type="application/rss+xml" title="Voiranime » Boku no Hero Academia 2 Comments Feed"
    href="https://v5.voiranime.com/anime/boku-no-hero-academia-2/feed/">
  <script type="text/javascript">
    window._wpemojiSettings = { "baseUrl": "https:\/\/s.w.org\/images\/core\/emoji\/14.0.0\/72x72\/", "ext": ".png", "svgUrl": "https:\/\/s.w.org\/images\/core\/emoji\/14.0.0\/svg\/", "svgExt": ".svg", "source": { "concatemoji": "https:\/\/v5.voiranime.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.2.2" } };
    /*! This file is auto-generated */
    !function (e, a, t) { var n, r, o, i = a.createElement("canvas"), p = i.getContext && i.getContext("2d"); function s(e, t) { p.clearRect(0, 0, i.width, i.height), p.fillText(e, 0, 0); e = i.toDataURL(); return p.clearRect(0, 0, i.width, i.height), p.fillText(t, 0, 0), e === i.toDataURL() } function c(e) { var t = a.createElement("script"); t.src = e, t.defer = t.type = "text/javascript", a.getElementsByTagName("head")[0].appendChild(t) } for (o = Array("flag", "emoji"), t.supports = { everything: !0, everythingExceptFlag: !0 }, r = 0; r < o.length; r++)t.supports[o[r]] = function (e) { if (p && p.fillText) switch (p.textBaseline = "top", p.font = "600 32px Arial", e) { case "flag": return s("\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f", "\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f") ? !1 : !s("\ud83c\uddfa\ud83c\uddf3", "\ud83c\uddfa\u200b\ud83c\uddf3") && !s("\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f", "\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f"); case "emoji": return !s("\ud83e\udef1\ud83c\udffb\u200d\ud83e\udef2\ud83c\udfff", "\ud83e\udef1\ud83c\udffb\u200b\ud83e\udef2\ud83c\udfff") }return !1 }(o[r]), t.supports.everything = t.supports.everything && t.supports[o[r]], "flag" !== o[r] && (t.supports.everythingExceptFlag = t.supports.everythingExceptFlag && t.supports[o[r]]); t.supports.everythingExceptFlag = t.supports.everythingExceptFlag && !t.supports.flag, t.DOMReady = !1, t.readyCallback = function () { t.DOMReady = !0 }, t.supports.everything || (n = function () { t.readyCallback() }, a.addEventListener ? (a.addEventListener("DOMContentLoaded", n, !1), e.addEventListener("load", n, !1)) : (e.attachEvent("onload", n), a.attachEvent("onreadystatechange", function () { "complete" === a.readyState && t.readyCallback() })), (e = t.source || {}).concatemoji ? c(e.concatemoji) : e.wpemoji && e.twemoji && (c(e.twemoji), c(e.wpemoji))) }(window, document, window._wpemojiSettings);
  </script>
  <script src="https://v5.voiranime.com/wp-includes/js/wp-emoji-release.min.js?ver=6.2.2" type="text/javascript"
    defer=""></script>
  <style type="text/css">
    img.wp-smiley,
    img.emoji {
      display: inline !important;
      border: none !important;
      box-shadow: none !important;
      height: 1em !important;
      width: 1em !important;
      margin: 0 0.07em !important;
      vertical-align: -0.1em !important;
      background: none !important;
      padding: 0 !important;
    }
  </style>
  <link rel="stylesheet" id="wp-block-library-css"
    href="https://v5.voiranime.com/wp-includes/css/dist/block-library/style.min.css?ver=6.2.2" type="text/css"
    media="all">
  <style id="wp-block-library-theme-inline-css" type="text/css">
    .wp-block-audio figcaption {
      color: #555;
      font-size: 13px;
      text-align: center
    }

    .is-dark-theme .wp-block-audio figcaption {
      color: hsla(0, 0%, 100%, .65)
    }

    .wp-block-audio {
      margin: 0 0 1em
    }

    .wp-block-code {
      border: 1px solid #ccc;
      border-radius: 4px;
      font-family: Menlo, Consolas, monaco, monospace;
      padding: .8em 1em
    }

    .wp-block-embed figcaption {
      color: #555;
      font-size: 13px;
      text-align: center
    }

    .is-dark-theme .wp-block-embed figcaption {
      color: hsla(0, 0%, 100%, .65)
    }

    .wp-block-embed {
      margin: 0 0 1em
    }

    .blocks-gallery-caption {
      color: #555;
      font-size: 13px;
      text-align: center
    }

    .is-dark-theme .blocks-gallery-caption {
      color: hsla(0, 0%, 100%, .65)
    }

    .wp-block-image figcaption {
      color: #555;
      font-size: 13px;
      text-align: center
    }

    .is-dark-theme .wp-block-image figcaption {
      color: hsla(0, 0%, 100%, .65)
    }

    .wp-block-image {
      margin: 0 0 1em
    }

    .wp-block-pullquote {
      border-bottom: 4px solid;
      border-top: 4px solid;
      color: currentColor;
      margin-bottom: 1.75em
    }

    .wp-block-pullquote cite,
    .wp-block-pullquote footer,
    .wp-block-pullquote__citation {
      color: currentColor;
      font-size: .8125em;
      font-style: normal;
      text-transform: uppercase
    }

    .wp-block-quote {
      border-left: .25em solid;
      margin: 0 0 1.75em;
      padding-left: 1em
    }

    .wp-block-quote cite,
    .wp-block-quote footer {
      color: currentColor;
      font-size: .8125em;
      font-style: normal;
      position: relative
    }

    .wp-block-quote.has-text-align-right {
      border-left: none;
      border-right: .25em solid;
      padding-left: 0;
      padding-right: 1em
    }

    .wp-block-quote.has-text-align-center {
      border: none;
      padding-left: 0
    }

    .wp-block-quote.is-large,
    .wp-block-quote.is-style-large,
    .wp-block-quote.is-style-plain {
      border: none
    }

    .wp-block-search .wp-block-search__label {
      font-weight: 700
    }

    .wp-block-search__button {
      border: 1px solid #ccc;
      padding: .375em .625em
    }

    :where(.wp-block-group.has-background) {
      padding: 1.25em 2.375em
    }

    .wp-block-separator.has-css-opacity {
      opacity: .4
    }

    .wp-block-separator {
      border: none;
      border-bottom: 2px solid;
      margin-left: auto;
      margin-right: auto
    }

    .wp-block-separator.has-alpha-channel-opacity {
      opacity: 1
    }

    .wp-block-separator:not(.is-style-wide):not(.is-style-dots) {
      width: 100px
    }

    .wp-block-separator.has-background:not(.is-style-dots) {
      border-bottom: none;
      height: 1px
    }

    .wp-block-separator.has-background:not(.is-style-wide):not(.is-style-dots) {
      height: 2px
    }

    .wp-block-table {
      margin: 0 0 1em
    }

    .wp-block-table td,
    .wp-block-table th {
      word-break: normal
    }

    .wp-block-table figcaption {
      color: #555;
      font-size: 13px;
      text-align: center
    }

    .is-dark-theme .wp-block-table figcaption {
      color: hsla(0, 0%, 100%, .65)
    }

    .wp-block-video figcaption {
      color: #555;
      font-size: 13px;
      text-align: center
    }

    .is-dark-theme .wp-block-video figcaption {
      color: hsla(0, 0%, 100%, .65)
    }

    .wp-block-video {
      margin: 0 0 1em
    }

    .wp-block-template-part.has-background {
      margin-bottom: 0;
      margin-top: 0;
      padding: 1.25em 2.375em
    }
  </style>
  <link rel="stylesheet" id="classic-theme-styles-css"
    href="https://v5.voiranime.com/wp-includes/css/classic-themes.min.css?ver=6.2.2" type="text/css" media="all">
  <style id="global-styles-inline-css" type="text/css">
    body {
      --wp--preset--color--black: #000000;
      --wp--preset--color--cyan-bluish-gray: #abb8c3;
      --wp--preset--color--white: #ffffff;
      --wp--preset--color--pale-pink: #f78da7;
      --wp--preset--color--vivid-red: #cf2e2e;
      --wp--preset--color--luminous-vivid-orange: #ff6900;
      --wp--preset--color--luminous-vivid-amber: #fcb900;
      --wp--preset--color--light-green-cyan: #7bdcb5;
      --wp--preset--color--vivid-green-cyan: #00d084;
      --wp--preset--color--pale-cyan-blue: #8ed1fc;
      --wp--preset--color--vivid-cyan-blue: #0693e3;
      --wp--preset--color--vivid-purple: #9b51e0;
      --wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg, rgba(6, 147, 227, 1) 0%, rgb(155, 81, 224) 100%);
      --wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg, rgb(122, 220, 180) 0%, rgb(0, 208, 130) 100%);
      --wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg, rgba(252, 185, 0, 1) 0%, rgba(255, 105, 0, 1) 100%);
      --wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg, rgba(255, 105, 0, 1) 0%, rgb(207, 46, 46) 100%);
      --wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg, rgb(238, 238, 238) 0%, rgb(169, 184, 195) 100%);
      --wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg, rgb(74, 234, 220) 0%, rgb(151, 120, 209) 20%, rgb(207, 42, 186) 40%, rgb(238, 44, 130) 60%, rgb(251, 105, 98) 80%, rgb(254, 248, 76) 100%);
      --wp--preset--gradient--blush-light-purple: linear-gradient(135deg, rgb(255, 206, 236) 0%, rgb(152, 150, 240) 100%);
      --wp--preset--gradient--blush-bordeaux: linear-gradient(135deg, rgb(254, 205, 165) 0%, rgb(254, 45, 45) 50%, rgb(107, 0, 62) 100%);
      --wp--preset--gradient--luminous-dusk: linear-gradient(135deg, rgb(255, 203, 112) 0%, rgb(199, 81, 192) 50%, rgb(65, 88, 208) 100%);
      --wp--preset--gradient--pale-ocean: linear-gradient(135deg, rgb(255, 245, 203) 0%, rgb(182, 227, 212) 50%, rgb(51, 167, 181) 100%);
      --wp--preset--gradient--electric-grass: linear-gradient(135deg, rgb(202, 248, 128) 0%, rgb(113, 206, 126) 100%);
      --wp--preset--gradient--midnight: linear-gradient(135deg, rgb(2, 3, 129) 0%, rgb(40, 116, 252) 100%);
      --wp--preset--duotone--dark-grayscale: url('#wp-duotone-dark-grayscale');
      --wp--preset--duotone--grayscale: url('#wp-duotone-grayscale');
      --wp--preset--duotone--purple-yellow: url('#wp-duotone-purple-yellow');
      --wp--preset--duotone--blue-red: url('#wp-duotone-blue-red');
      --wp--preset--duotone--midnight: url('#wp-duotone-midnight');
      --wp--preset--duotone--magenta-yellow: url('#wp-duotone-magenta-yellow');
      --wp--preset--duotone--purple-green: url('#wp-duotone-purple-green');
      --wp--preset--duotone--blue-orange: url('#wp-duotone-blue-orange');
      --wp--preset--font-size--small: 13px;
      --wp--preset--font-size--medium: 20px;
      --wp--preset--font-size--large: 36px;
      --wp--preset--font-size--x-large: 42px;
      --wp--preset--spacing--20: 0.44rem;
      --wp--preset--spacing--30: 0.67rem;
      --wp--preset--spacing--40: 1rem;
      --wp--preset--spacing--50: 1.5rem;
      --wp--preset--spacing--60: 2.25rem;
      --wp--preset--spacing--70: 3.38rem;
      --wp--preset--spacing--80: 5.06rem;
      --wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);
      --wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);
      --wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);
      --wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);
      --wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);
    }

    :where(.is-layout-flex) {
      gap: 0.5em;
    }

    body .is-layout-flow>.alignleft {
      float: left;
      margin-inline-start: 0;
      margin-inline-end: 2em;
    }

    body .is-layout-flow>.alignright {
      float: right;
      margin-inline-start: 2em;
      margin-inline-end: 0;
    }

    body .is-layout-flow>.aligncenter {
      margin-left: auto !important;
      margin-right: auto !important;
    }

    body .is-layout-constrained>.alignleft {
      float: left;
      margin-inline-start: 0;
      margin-inline-end: 2em;
    }

    body .is-layout-constrained>.alignright {
      float: right;
      margin-inline-start: 2em;
      margin-inline-end: 0;
    }

    body .is-layout-constrained>.aligncenter {
      margin-left: auto !important;
      margin-right: auto !important;
    }

    body .is-layout-constrained> :where(:not(.alignleft):not(.alignright):not(.alignfull)) {
      max-width: var(--wp--style--global--content-size);
      margin-left: auto !important;
      margin-right: auto !important;
    }

    body .is-layout-constrained>.alignwide {
      max-width: var(--wp--style--global--wide-size);
    }

    body .is-layout-flex {
      display: flex;
    }

    body .is-layout-flex {
      flex-wrap: wrap;
      align-items: center;
    }

    body .is-layout-flex>* {
      margin: 0;
    }

    :where(.wp-block-columns.is-layout-flex) {
      gap: 2em;
    }

    .has-black-color {
      color: var(--wp--preset--color--black) !important;
    }

    .has-cyan-bluish-gray-color {
      color: var(--wp--preset--color--cyan-bluish-gray) !important;
    }

    .has-white-color {
      color: var(--wp--preset--color--white) !important;
    }

    .has-pale-pink-color {
      color: var(--wp--preset--color--pale-pink) !important;
    }

    .has-vivid-red-color {
      color: var(--wp--preset--color--vivid-red) !important;
    }

    .has-luminous-vivid-orange-color {
      color: var(--wp--preset--color--luminous-vivid-orange) !important;
    }

    .has-luminous-vivid-amber-color {
      color: var(--wp--preset--color--luminous-vivid-amber) !important;
    }

    .has-light-green-cyan-color {
      color: var(--wp--preset--color--light-green-cyan) !important;
    }

    .has-vivid-green-cyan-color {
      color: var(--wp--preset--color--vivid-green-cyan) !important;
    }

    .has-pale-cyan-blue-color {
      color: var(--wp--preset--color--pale-cyan-blue) !important;
    }

    .has-vivid-cyan-blue-color {
      color: var(--wp--preset--color--vivid-cyan-blue) !important;
    }

    .has-vivid-purple-color {
      color: var(--wp--preset--color--vivid-purple) !important;
    }

    .has-black-background-color {
      background-color: var(--wp--preset--color--black) !important;
    }

    .has-cyan-bluish-gray-background-color {
      background-color: var(--wp--preset--color--cyan-bluish-gray) !important;
    }

    .has-white-background-color {
      background-color: var(--wp--preset--color--white) !important;
    }

    .has-pale-pink-background-color {
      background-color: var(--wp--preset--color--pale-pink) !important;
    }

    .has-vivid-red-background-color {
      background-color: var(--wp--preset--color--vivid-red) !important;
    }

    .has-luminous-vivid-orange-background-color {
      background-color: var(--wp--preset--color--luminous-vivid-orange) !important;
    }

    .has-luminous-vivid-amber-background-color {
      background-color: var(--wp--preset--color--luminous-vivid-amber) !important;
    }

    .has-light-green-cyan-background-color {
      background-color: var(--wp--preset--color--light-green-cyan) !important;
    }

    .has-vivid-green-cyan-background-color {
      background-color: var(--wp--preset--color--vivid-green-cyan) !important;
    }

    .has-pale-cyan-blue-background-color {
      background-color: var(--wp--preset--color--pale-cyan-blue) !important;
    }

    .has-vivid-cyan-blue-background-color {
      background-color: var(--wp--preset--color--vivid-cyan-blue) !important;
    }

    .has-vivid-purple-background-color {
      background-color: var(--wp--preset--color--vivid-purple) !important;
    }

    .has-black-border-color {
      border-color: var(--wp--preset--color--black) !important;
    }

    .has-cyan-bluish-gray-border-color {
      border-color: var(--wp--preset--color--cyan-bluish-gray) !important;
    }

    .has-white-border-color {
      border-color: var(--wp--preset--color--white) !important;
    }

    .has-pale-pink-border-color {
      border-color: var(--wp--preset--color--pale-pink) !important;
    }

    .has-vivid-red-border-color {
      border-color: var(--wp--preset--color--vivid-red) !important;
    }

    .has-luminous-vivid-orange-border-color {
      border-color: var(--wp--preset--color--luminous-vivid-orange) !important;
    }

    .has-luminous-vivid-amber-border-color {
      border-color: var(--wp--preset--color--luminous-vivid-amber) !important;
    }

    .has-light-green-cyan-border-color {
      border-color: var(--wp--preset--color--light-green-cyan) !important;
    }

    .has-vivid-green-cyan-border-color {
      border-color: var(--wp--preset--color--vivid-green-cyan) !important;
    }

    .has-pale-cyan-blue-border-color {
      border-color: var(--wp--preset--color--pale-cyan-blue) !important;
    }

    .has-vivid-cyan-blue-border-color {
      border-color: var(--wp--preset--color--vivid-cyan-blue) !important;
    }

    .has-vivid-purple-border-color {
      border-color: var(--wp--preset--color--vivid-purple) !important;
    }

    .has-vivid-cyan-blue-to-vivid-purple-gradient-background {
      background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;
    }

    .has-light-green-cyan-to-vivid-green-cyan-gradient-background {
      background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;
    }

    .has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background {
      background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;
    }

    .has-luminous-vivid-orange-to-vivid-red-gradient-background {
      background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;
    }

    .has-very-light-gray-to-cyan-bluish-gray-gradient-background {
      background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;
    }

    .has-cool-to-warm-spectrum-gradient-background {
      background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;
    }

    .has-blush-light-purple-gradient-background {
      background: var(--wp--preset--gradient--blush-light-purple) !important;
    }

    .has-blush-bordeaux-gradient-background {
      background: var(--wp--preset--gradient--blush-bordeaux) !important;
    }

    .has-luminous-dusk-gradient-background {
      background: var(--wp--preset--gradient--luminous-dusk) !important;
    }

    .has-pale-ocean-gradient-background {
      background: var(--wp--preset--gradient--pale-ocean) !important;
    }

    .has-electric-grass-gradient-background {
      background: var(--wp--preset--gradient--electric-grass) !important;
    }

    .has-midnight-gradient-background {
      background: var(--wp--preset--gradient--midnight) !important;
    }

    .has-small-font-size {
      font-size: var(--wp--preset--font-size--small) !important;
    }

    .has-medium-font-size {
      font-size: var(--wp--preset--font-size--medium) !important;
    }

    .has-large-font-size {
      font-size: var(--wp--preset--font-size--large) !important;
    }

    .has-x-large-font-size {
      font-size: var(--wp--preset--font-size--x-large) !important;
    }

    .wp-block-navigation a:where(:not(.wp-element-button)) {
      color: inherit;
    }

    :where(.wp-block-columns.is-layout-flex) {
      gap: 2em;
    }

    .wp-block-pullquote {
      font-size: 1.5em;
      line-height: 1.6;
    }
  </style>
  <link rel="stylesheet" id="ct-shortcode-css"
    href="https://v5.voiranime.com/wp-content/plugins/madara-shortcodes/shortcodes/css/shortcodes.css?ver=6.2.2"
    type="text/css" media="all">
  <link rel="stylesheet" id="wp-pagenavi-css"
    href="https://v5.voiranime.com/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70" type="text/css"
    media="all">
  <link rel="stylesheet" id="fontawesome-css"
    href="https://v5.voiranime.com/wp-content/themes/madara/app/lib/fontawesome/web-fonts-with-css/css/all.min.css?ver=5.15.3"
    type="text/css" media="all">
  <link rel="stylesheet" id="bootstrap-css"
    href="https://v5.voiranime.com/wp-content/themes/madara/css/bootstrap.min.css?ver=4.3.1" type="text/css"
    media="all">
  <link rel="stylesheet" id="slick-css"
    href="https://v5.voiranime.com/wp-content/themes/madara/js/slick/slick.css?ver=1.9.0" type="text/css" media="all">
  <link rel="stylesheet" id="slick-theme-css"
    href="https://v5.voiranime.com/wp-content/themes/madara/js/slick/slick-theme.css?ver=6.2.2" type="text/css"
    media="all">
  <link rel="stylesheet" id="madara-css-child-css"
    href="https://v5.voiranime.com/wp-content/themes/madara/style.css?ver=6.2.2" type="text/css" media="all">
  <link rel="stylesheet" id="ionicons-css"
    href="https://v5.voiranime.com/wp-content/themes/madara/css/fonts/ionicons/css/ionicons.min.css?ver=4.5.10"
    type="text/css" media="all">
  <link rel="stylesheet" id="madara-icons-css"
    href="https://v5.voiranime.com/wp-content/themes/madara/css/fonts/ct-icon/ct-icon.css?ver=6.2.2" type="text/css"
    media="all">
  <link rel="stylesheet" id="loaders-css"
    href="https://v5.voiranime.com/wp-content/themes/madara/css/loaders.min.css?ver=6.2.2" type="text/css" media="all">
  <link rel="stylesheet" id="madara-css-css"
    href="https://v5.voiranime.com/wp-content/themes/madara-child-voiranime/style.css?ver=1.6.6" type="text/css"
    media="all">
  <style id="madara-css-inline-css" type="text/css">
    .c-blog__heading.style-2 i:after,
    .settings-page .nav-tabs-wrap ul.nav-tabs li.active:after {
      border-left-color: #2e2d34;
      border-right-color: #2e2d34;
    }

    .site-header .main-navigation.style-1,
    .widget-heading,
    .widget.background:after,
    .c-blog__heading.style-2 i,
    .tab-wrap .c-nav-tabs ul.c-tabs-content li.active a:after,
    .tab-wrap .c-nav-tabs ul.c-tabs-content li:hover a:after,
    .tab-wrap .c-nav-tabs ul.c-tabs-content li a:after,
    .related-heading.font-nav,
    .c-blog__heading.style-3,
    .settings-page .nav-tabs-wrap ul.nav-tabs li.active a,
    .off-canvas {
      background: -webkit-linear-gradient(left, #1a1920 20%, #2e2d34);
      background: -o-linear-gradient(right, #1a1920 20%, #2e2d34);
      background: -moz-linear-gradient(right, #1a1920 20%, #2e2d34);
      background: linear-gradient(to right, #1a1920 20%, #2e2d34);
      ;
    }

    .widget-heading:after,
    .related-heading.font-nav:after,
    .genres_wrap .c-blog__heading.style-3.active:after {
      border-top-color: #1a1920;
    }

    body.modal-open .modal .modal-content a:hover,
    .tab-wrap .c-nav-tabs ul.c-tabs-content li.active a,
    .tab-wrap .c-nav-tabs ul.c-tabs-content li:hover a,
    body.search.search-results .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-summary .post-content .post-content_item .summary-content:not(.release-year) a:hover,
    body.search.search-results .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-summary .post-content .post-content_item .summary-content.release-year a:hover,
    .c-blog-post .entry-header .entry-meta .post-on:before,
    .manga-slider .slider__container .slick-dots li.slick-active button:before,
    .manga-slider .slider__container .slick-dots li button:hover:before,
    body.manga-page .profile-manga .tab-summary .summary_content_wrap .summary_content .post-status .manga-action .count-comment .action_icon a i,
    body.manga-page .profile-manga .tab-summary .summary_content_wrap .summary_content .post-status .manga-action .add-bookmark .action_icon a i,
    body.manga-page .profile-manga .tab-summary .summary_content_wrap .summary_content .post-status .manga-action .count-comment .action_detail a i,
    body.manga-page .profile-manga .tab-summary .summary_content_wrap .summary_content .post-status .manga-action .add-bookmark .action_detail a i,
    body.manga-page .profile-manga .post-title a,
    body.manga-page .content-readmore:hover,
    body.text-ui-light.manga-page .content-readmore:hover,
    .genres_wrap .genres__collapse .genres ul li a:hover,
    .genres_wrap .genres__collapse .genres ul li a:hover:before,
    .c-blog-post .entry-header .entry-meta .post-on .posted-on a:hover,
    body.search .c-search-header__wrapper #search-advanced .search-advanced-form .form-group.checkbox-group .checkbox label:hover,
    .site-header .main-navigation .search-navigation .menu-search .open-search-main-menu,
    .c-btn.c-btn_style-2,
    body.search .c-search-header__wrapper .search-content .btn-search-adv,
    body.reading-manga .entry-header .entry-header_wrap .action-icon ul li a,
    body.reading-manga .c-select-bottom .entry-header_wrap .action-icon ul li a,
    .widget.c-released .released-item-wrap ul.list-released li a:hover,
    body.manga-page .profile-manga .post-title h1,
    .genres_wrap .genres__collapse #genres ul li:hover a,
    .genres_wrap .genres__collapse #genres ul li:hover a:before,
    input[type=checkbox]:checked+label:before,
    input[type=radio]:checked+label:before,
    .genres_wrap a.btn-genres,
    .c-breadcrumb .breadcrumb li a:hover,
    body.search.search-results .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-summary .post-content .post-content_item.mg_genres .summary-content,
    body.page .c-page-content .c-page .c-page__content .page-content-listing .page-listing-item .page-item-detail .item-summary .list-chapter .chapter-item .vol a:hover,
    #hover-infor .item_thumb .post-title a,
    body.manga-page .version-chap:before,
    body.manga-page .content-readmore:hover,
    body.manga-page .chapter-readmore:hover,
    .icon-load-info,
    .c-blog-post .entry-header .entry-meta .post-on .c-blog__date .post-category a:hover,
    .woocommerce ul.products li.product .price,
    .woocommerce div.entry-summary p.price,
    .woocommerce div.entry-summary form.cart .variations .label,
    .woocommerce div.entry-summary form.cart .quantity-text,
    .widget_product_categories .product-categories li a:hover,
    .woocommerce ul.products li.product h2:hover,
    .woocommerce .c-woo-breadcrumb a:hover,
    .site-header .c-sub-header-nav .c-sub-nav_wrap .c-modal_item .c-user_item .c-user_menu a:hover,
    .site-header .c-sub-header-nav .c-sub-nav_wrap .sub-nav_content .sub-nav_list li:hover>a,
    .settings-page .action i.ion-ios-close:hover:before,
    .settings-page .list-chapter .chapter-item a:hover,
    .settings-page .tabs-content-wrap .tab-group-item .tab-item .history-content .item-infor .chapter span a,
    .settings-page .nav-tabs-wrap ul.nav-tabs li:not(.active):hover a,
    .main-color,
    .site-header .c-sub-header-nav .c-sub-nav_wrap .sub-nav_content .sub-nav_list li.menu-item-has-children.active>a,
    .woocommerce .woocommerce-ordering:after,
    .text-ui-light .widget.c-popular .popular-item-wrap .popular-content .chapter-item .chapter a:hover,
    body.text-ui-light .settings-page .list-chapter .chapter-item .chapter a:hover,
    body.search.text-ui-light .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-meta .latest-chap .chapter a:hover {
      color: #1a1920;
    }

    .c-blog__heading.style-2 i:after {
      border-right-color: #1a1920 !important
    }

    body.page.text-ui-light .c-page-content .c-page .c-page__content .page-content-listing .page-listing-item .page-item-detail .item-summary .list-chapter .chapter-item .chapter a:hover,
    .text-ui-light .widget.c-popular .popular-item-wrap .popular-content .chapter-item .chapter a:hover,
    #hover-infor .item_thumb .post-title a {
      color: #FFFFFF
    }

    .navigation-ajax .load-ajax:not(.show-loading):hover,
    body.manga-page .page-content-listing.single-page .listing-chapters_wrap>ul.main.version-chap .sub-chap>li:before,
    .shortcode-manga-chapters .listing-chapters_wrap>ul.main.version-chap .sub-chap>li:before,
    .c-wg-button-wrap .btn:hover,
    body.manga-page .page-content-listing.single-page .listing-chapters_wrap ul.main.version-chap .wp-manga-chapter:before,
    .site-header .search-main-menu form input[type=submit],
    .form-submit input[type=submit],
    #comments.comments-area #respond.comment-respond .comment-form .form-submit #submit,
    .c-btn.c-btn_style-1,
    .settings-page input[type="submit"],
    .settings-page .remove-all #delete-bookmark-manga,
    body.manga-page .page-content-listing.single-page .listing-chapters_wrap>ul.main.version-chap li .wp-manga-chapter:before,
    .woocommerce ul.products li.product .button,
    .woocommerce span.onsale,
    .woocommerce .widget_price_filter .price_slider_amount .button:not(:hover),
    .woocommerce .woocommerce-pagination .page-numbers li span.current,
    .woocommerce .woocommerce-pagination .page-numbers li .prev:hover,
    .woocommerce .woocommerce-pagination .page-numbers li .next:hover,
    .woocommerce div.entry-summary form.cart .single_add_to_cart_button,
    .post-password-form input[name="Submit"] {
      background: #1a1920;
    }

    .navigation-ajax .load-ajax:not(.show-loading):hover,
    .popular-slider .slider__container .slider__item .slider__content .slider__content_item .chapter-item .chapter a:hover,
    body.search .c-search-header__wrapper .search-content .btn-search-adv.collapsed,
    .c-btn.c-btn_style-2,
    body.search .c-search-header__wrapper .search-content .btn-search-adv,
    .genres_wrap a.btn-genres,
    .wpcf7-validation-errors,
    .text-ui-light.woocommerce-page input[type="text"]:focus,
    .text-ui-light.woocommerce-page input[type="email"]:focus,
    .text-ui-light.woocommerce-page input[type="search"]:focus,
    .text-ui-light.woocommerce-page input[type="url"]:focus,
    .text-ui-light.woocommerce-page input[type="password"]:focus,
    .text-ui-light.woocommerce-page input[type="tel"]:focus,
    .text-ui-light.woocommerce-page .input-text:focus,
    .text-ui-light.woocommerce-page input[type="text"]:active,
    .text-ui-light.woocommerce-page input[type="email"]:active,
    .text-ui-light.woocommerce-page input[type="search"]:active,
    .text-ui-light.woocommerce-page input[type="url"]:active,
    .text-ui-light.woocommerce-page input[type="password"]:active,
    .text-ui-light.woocommerce-page input[type="tel"]:active,
    .text-ui-light.woocommerce-page .input-text:active,
    .text-ui-light.woocommerce-page input[type="text"]:hover,
    .text-ui-light.woocommerce-page input[type="email"]:hover,
    .text-ui-light.woocommerce-page input[type="search"]:hover,
    .text-ui-light.woocommerce-page input[type="url"]:hover,
    .text-ui-light.woocommerce-page input[type="password"]:hover,
    .text-ui-light.woocommerce-page input[type="tel"]:hover,
    .text-ui-light.woocommerce-page .input-text:hover,
    .text-ui-light.woocommerce-page select.orderby:hover {
      border-color: #1a1920;
    }

    .site-header .c-sub-header-nav .c-sub-nav_wrap .sub-nav_content .sub-nav_list>li.menu-item-has-children>ul.sub-menu,
    .site-header .c-sub-header-nav .c-sub-nav_wrap .c-modal_item .c-user_item .c-user_menu {
      border-bottom-color: #1a1920;
    }

    .widget.widget_tag_cloud .tag-cloud-link:hover,
    body.page .c-page-content .c-page .c-page__content .page-content-listing .page-listing-item .page-item-detail .item-summary .list-chapter .chapter-item .chapter:hover,
    .popular-slider .slider__container .slider__item .slider__content .slider__content_item .chapter-item .chapter a:hover,
    .widget.c-popular .popular-item-wrap .popular-content .chapter-item .chapter:hover,
    .site-footer .top-footer .wrap_social_account ul.social_account__item li a,
    .site-content .main-col .item-tags ul li a:hover,
    .popular-slider .slider__container .slick-arrow:hover,
    .widget.background.widget_tag_cloud .tag-cloud-link:hover,
    .wp-pagenavi a:hover,
    body.search.search-results .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-meta .latest-chap .chapter:hover,
    .go-to-top:hover,
    .widget.c-popular .widget-view-more,
    body.search .c-search-header__wrapper .search-content .search-form .search-submit,
    body.reading-manga .entry-header .select-pagination .nav-links .nav-next a:not(:hover),
    body.reading-manga .c-select-bottom .select-pagination .nav-links .nav-next a:not(:hover),
    body.reading-manga .entry-header .entry-header_wrap .action-icon ul li:hover a,
    body.reading-manga .c-select-bottom .entry-header_wrap .action-icon ul li:hover a,
    .widget.c-released .released-search form [type="submit"],
    body.manga-page .profile-manga .tab-summary .loader-inner>div,
    .wpcf7-submit,
    .woocommerce #respond input#submit.alt,
    .woocommerce a.button.alt,
    .woocommerce button.button.alt,
    .woocommerce input.button.alt,
    .woocommerce .woocommerce-cart-form .cart button.button,
    .woocommerce .cart input.button:not(:hover),
    #adult_modal .modal-footer .btn.btn-primary:not(:hover),
    body.reading-manga .entry-header .select-pagination .nav-links>* a,
    body.reading-manga .c-select-bottom .select-pagination .nav-links>* a,
    .settings-page .list-chapter .chapter-item .chapter:hover,
    body.modal-open .modal .modal-content .modal-body .login .submit .wp-submit:not(:hover),
    .settings-page .tabs-content-wrap .my_account_orders a.button.view,
    .main-bg,
    #madara-comments.comments-area #respond.comment-respond .comment-form .form-submit #submit,
    body.search .c-search-header__wrapper .search-content .btn-search-adv {
      background-color: #1a1920;
    }

    :root {
      --madara-main-color: #1a1920
    }

    body.search.search-results .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-meta .latest-chap .chapter:hover a,
    .wp-pagenavi a:hover {
      color: #FFF !important
    }

    .item-thumb .quick-chapter-link {
      background: #1a1920;
    }

    .page-content-listing.single-page li.wp-manga-chapter.unread a {
      color: #1a1920
    }

    a:not(.btn-link):hover,
    .c-breadcrumb .breadcrumb li a:hover,
    .tab-wrap .c-nav-tabs ul.c-tabs-content li.active a,
    .tab-wrap .c-nav-tabs ul.c-tabs-content li:hover a,
    .c-blog-post .entry-header .entry-meta .post-on .posted-on a:hover,
    .c-blog-post .entry-header .entry-meta .post-on .c-blog__date .post-category a:hover,
    body.manga-page .content-readmore:hover,
    body.text-ui-light.manga-page .content-readmore:hover,
    body.manga-page .chapter-readmore:hover,
    body.page .c-page-content .c-page .c-page__content .page-content-listing .page-listing-item .page-item-detail .item-summary .list-chapter .chapter-item .vol a:hover,
    .site-header .main-navigation.style-1 .search-navigation .search-navigation__wrap .link-adv-search a:hover,
    .woocommerce ul.products li.product h2:hover,
    .woocommerce .c-woo-breadcrumb a:hover,
    .genres_wrap .genres__collapse .genres ul li a:hover,
    .genres_wrap .genres__collapse .genres ul li a:hover:before,
    .widget.c-released .released-item-wrap ul.list-released li a:hover,
    body.search.search-results .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-summary .post-content .post-content_item .summary-content:not(.release-year) a:hover,
    body.search.search-results .search-wrap .tab-content-wrap .c-tabs-item .c-tabs-item__content .tab-summary .post-content .post-content_item .summary-content.release-year a:hover {
      color: #7289da;
    }

    .tab-wrap .c-nav-tabs ul.c-tabs-content li.active a:after,
    .tab-wrap .c-nav-tabs ul.c-tabs-content li:hover a:after,
    {
    background: #7289da;
    }

    .meta-item.rating .rating_current,
    .meta-item.rating .rating_current_half,
    body.manga-page .profile-manga .tab-summary .post-rating i.ion-ios-star,
    body.manga-page .profile-manga .tab-summary .post-rating i.ion-ios-star.rating_current,
    body.manga-page .profile-manga .tab-summary .post-rating i.ion-ios-star-half,
    body.manga-page .profile-manga .tab-summary .post-rating .user-rating i.ion-ios-star,
    body.manga-page .profile-manga .tab-summary .post-rating .post-total-rating i.ion-ios-star,
    body.manga-page .profile-manga .tab-summary .post-rating .post-total-rating i.ion-ios-star.rating_current,
    body.manga-page .profile-manga .tab-summary .post-rating .user-rating i.ion-ios-star,
    body.manga-page .profile-manga .tab-summary .post-rating .user-rating i.ion-ios-star.rating_current,
    .woocommerce .star-rating,
    .woocommerce .star-rating::before,
    body.manga-page .profile-manga .tab-summary .post-rating .post-total-rating i.ion-ios-star-half {
      color: #ff3c38;
    }

    #pageloader.spinners {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 99999;
      background: #222
    }

    p.madara-unyson {
      color: #FF0000;
    }

    .table.table-hover.list-bookmark tr:last-child td {
      text-align: center;
    }

    #adminmenu .wp-submenu li.current {
      display: none !important;
    }

    .show_tgmpa_version {
      float: right;
      padding: 0em 1.5em 0.5em 0;
    }

    .tgmpa>h2 {
      font-size: 23px;
      font-weight: 400;
      line-height: 29px;
      margin: 0;
      padding: 9px 15px 4px 0;
    }

    .update-php {
      width: 100%;
      height: 98%;
      min-height: 850px;
      padding-top: 1px;
    }

    .c-blog-post .entry-content .entry-content_wrap .read-container img.alignleft {
      margin: 10px 30px 10px 0 !important;
    }

    .c-blog-post .entry-content .entry-content_wrap .read-container img.alignright {
      margin: 10px 0px 10px 30px !important;
    }

    .read-container i.fas.fa-spinner.fa-spin {
      font-size: 31px;
      color: #888;
    }

    .c-blog-post .entry-content .entry-content_wrap .read-container img {
      cursor: pointer;
    }

    .choose-avatar .loading-overlay {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(255, 255, 255, 0.72);
      z-index: 1;
      display: none;
    }

    .choose-avatar .loading-overlay i.fas.fa-spinner {
      font-size: 40px;
      color: #ec3348;
    }

    .choose-avatar .loading-overlay .loading-icon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .choose-avatar.uploading .loading-overlay {
      display: block;
    }

    .site-header .c-sub-header-nav .entry-header {
      display: none;
      margin-bottom: 15px;
    }

    .site-header .c-sub-header-nav.sticky .entry-header {
      display: block;
    }

    .site-header .c-sub-header-nav.hide-sticky-menu.sticky .c-sub-nav_wrap {
      display: none;
    }

    .site-header .c-sub-header-nav.hide-sticky-menu .entry-header {
      margin-top: 15px;
    }

    body.page .c-page-content .c-page .c-page__content .page-content-listing .page-listing-item .page-item-detail .item-summary .list-chapter .chapter-item span.vol.font-meta {
      display: none
    }

    @media (max-width: 480px) {
      .c-blog-post .entry-content .entry-content_wrap .reading-content {
        margin-left: -15px;
        margin-right: -15px
      }
    }

    .settings-page table.list-bookmark>tbody tr td>div.mange-name:before {
      content: "Anime";
    }

    .settings-page table.list-bookmark>tbody tr td>div.action:before {
      content: "Modifier";
    }

    .settings-page table.list-bookmark>tbody tr td>div.post-on:before {
      content: "Mise à jour";
    }

    #madara-comments input#submit {
      color: #FFF
    }

    @media (max-width: 480px) {
      body.reading-manga .entry-header .select-view .c-selectpicker {
        max-width: 100% !important;
      }
    }
  </style>
  <link rel="stylesheet" id="lity-css"
    href="https://v5.voiranime.com/wp-content/plugins/madara-core/assets/css/lity.min.css?ver=6.2.2" type="text/css"
    media="all">
  <script type="text/javascript" src="https://v5.voiranime.com/wp-includes/js/jquery/jquery.min.js?ver=3.6.4"
    id="jquery-core-js"></script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.0"
    id="jquery-migrate-js"></script>
  <script type="text/javascript"
    src="https://v5.voiranime.com/wp-content/themes/madara-child-voiranime/assets/js/script.js?ver=1.1"
    id="child_manga_single-js"></script>
  <link rel="https://api.w.org/" href="https://v5.voiranime.com/wp-json/">
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://v5.voiranime.com/xmlrpc.php?rsd">
  <link rel="wlwmanifest" type="application/wlwmanifest+xml"
    href="https://v5.voiranime.com/wp-includes/wlwmanifest.xml">
  <meta name="generator" content="WordPress 6.2.2">
  <link rel="shortlink" href="https://v5.voiranime.com/?p=256">
  <link rel="alternate" type="application/json+oembed"
    href="https://v5.voiranime.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fv5.voiranime.com%2Fanime%2Fboku-no-hero-academia-2%2F">
  <link rel="alternate" type="text/xml+oembed"
    href="https://v5.voiranime.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fv5.voiranime.com%2Fanime%2Fboku-no-hero-academia-2%2F&amp;format=xml">

  <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-89GV8YH5X1"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());
    gtag('config', 'G-89GV8YH5X1');
  </script>
  <link rel="apple-touch-icon" sizes="120x120" href="/wp-content/uploads/fbrfg/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/wp-content/uploads/fbrfg/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/wp-content/uploads/fbrfg/favicon-16x16.png">
  <link rel="manifest" href="/wp-content/uploads/fbrfg/site.webmanifest">
  <link rel="mask-icon" href="/wp-content/uploads/fbrfg/safari-pinned-tab.svg" color="#5bbad5">
  <link rel="shortcut icon" href="/wp-content/uploads/fbrfg/favicon.ico">
  <meta name="msapplication-TileColor" content="#da532c">
  <meta name="msapplication-config" content="/wp-content/uploads/fbrfg/browserconfig.xml">
  <meta name="theme-color" content="#ffffff">
  <script type="application/ld+json">
						{
							"@context": "http://schema.org",
							"@type": "Article",
							"mainEntityOfPage": {
								"@type": "WebPage",
								"@id": "https://google.com/article"
							},
							"headline": "Boku no Hero Academia 2",
							"image": {
								"@type": "ImageObject",
								"url": "https://v5.voiranime.com/wp-content/uploads/2020/01/thumb_5e0cd5cd9e780.png",
								"height": 391,
								"width": 696							},
							"datePublished": "2020-01-01 18:20:16",
							"dateModified": "2020-01-01 18:20:16",
							"author": {
								"@type": "Person",
								"name": "voiranime"
							},
							"publisher": {
								"@type": "Organization",
								"name": "Voiranime",
								"logo": {
									"@type": "ImageObject",
									"url": "https://voiranime.com/wp-content/uploads/2019/12/vato.png"
								}
							},
							"description": "Boku no Hero Academia 2. Boku no Hero Academia (My Hero Academia) (Saison 2) - 04 VOSTFR - 04. Seconde saison de Boku no Hero Academia

Nous retrouvons Izuku et ses camarades suite à l&#039;attaque de l&#039;Alliance des super-vilains.

A peine remis de leurs émot"
						}
					</script>
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://v5.voiranime.com/wp-content/uploads/2020/01/thumb_5e0cd5cd9e780.png">
  <meta property="og:site_name" content="Voiranime">
  <meta property="fb:app_id" content="">
  <meta property="og:title"
    content="Boku no Hero Academia 2 - Boku no Hero Academia (My Hero Academia) (Saison 2) - 04 VOSTFR - 04 - Voiranime">
  <meta property="og:url"
    content="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/">
  <meta property="og:description" content="Boku no Hero Academia 2. Boku no Hero Academia (My Hero Academia) (Saison 2) - 04 VOSTFR - 04. Seconde saison de Boku no Hero Academia

Nous retrouvons Izuku et ses camarades suite à l'attaque de l'Alliance des super-vilains.

A peine remis de leurs émot">
  <meta name="twitter:card" content="summary">
  <meta name="twitter:site" content="@Voiranime">
  <meta name="twitter:title"
    content="Boku no Hero Academia 2 - Boku no Hero Academia (My Hero Academia) (Saison 2) - 04 VOSTFR - 04 - Voiranime">
  <meta name="twitter:description" content="Boku no Hero Academia 2. Boku no Hero Academia (My Hero Academia) (Saison 2) - 04 VOSTFR - 04. Seconde saison de Boku no Hero Academia

Nous retrouvons Izuku et ses camarades suite à l'attaque de l'Alliance des super-vilains.

A peine remis de leurs émot">
  <meta name="twitter:url"
    content="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/">
  <meta name="twitter:image" content="https://v5.voiranime.com/wp-content/uploads/2020/01/thumb_5e0cd5cd9e780.png">
  <meta name="description" content="Boku no Hero Academia 2. Boku no Hero Academia (My Hero Academia) (Saison 2) - 04 VOSTFR - 04. Seconde saison de Boku no Hero Academia

Nous retrouvons Izuku et ses camarades suite à l'attaque de l'Alliance des super-vilains.

A peine remis de leurs émot">
  <meta name="generator" content="Powered by Madara - A powerful manga, novel theme from Mangabooth.com">
  <style>
    .ai-viewports {
      --ai: 1;
    }

    .ai-viewport-3 {
      display: none !important;
    }

    .ai-viewport-2 {
      display: none !important;
    }

    .ai-viewport-1 {
      display: inherit !important;
    }

    .ai-viewport-0 {
      display: none !important;
    }

    @media (min-width: 768px) and (max-width: 979px) {
      .ai-viewport-1 {
        display: none !important;
      }

      .ai-viewport-2 {
        display: inherit !important;
      }
    }

    @media (max-width: 767px) {
      .ai-viewport-1 {
        display: none !important;
      }

      .ai-viewport-3 {
        display: inherit !important;
      }
    }
  </style>
  <style>
    .ai-close-button {
      background-size: 40px 40px;
      width: 40px;
      height: 40px;
      top: -13px;
      right: -11px;
    }
  </style>
  <style id="asp-basic">
    @keyframes aspAnFadeIn {
      0% {
        opacity: 0
      }

      50% {
        opacity: 0.6
      }

      100% {
        opacity: 1
      }
    }

    @-webkit-keyframes aspAnFadeIn {
      0% {
        opacity: 0
      }

      50% {
        opacity: 0.6
      }

      100% {
        opacity: 1
      }
    }

    @keyframes aspAnFadeOut {
      0% {
        opacity: 1
      }

      50% {
        opacity: 0.6
      }

      100% {
        opacity: 0
      }
    }

    @-webkit-keyframes aspAnFadeOut {
      0% {
        opacity: 1
      }

      50% {
        opacity: 0.6
      }

      100% {
        opacity: 0
      }
    }

    @keyframes aspAnFadeInDrop {
      0% {
        opacity: 0;
        transform: translate(0, -50px)
      }

      100% {
        opacity: 1;
        transform: translate(0, 0)
      }
    }

    @-webkit-keyframes aspAnFadeInDrop {
      0% {
        opacity: 0;
        transform: translate(0, -50px);
        -webkit-transform: translate(0, -50px)
      }

      100% {
        opacity: 1;
        transform: translate(0, 0);
        -webkit-transform: translate(0, 0)
      }
    }

    @keyframes aspAnFadeOutDrop {
      0% {
        opacity: 1;
        transform: translate(0, 0);
        -webkit-transform: translate(0, 0)
      }

      100% {
        opacity: 0;
        transform: translate(0, -50px);
        -webkit-transform: translate(0, -50px)
      }
    }

    @-webkit-keyframes aspAnFadeOutDrop {
      0% {
        opacity: 1;
        transform: translate(0, 0);
        -webkit-transform: translate(0, 0)
      }

      100% {
        opacity: 0;
        transform: translate(0, -50px);
        -webkit-transform: translate(0, -50px)
      }
    }

    div.ajaxsearchpro.asp_an_fadeIn,
    div.ajaxsearchpro.asp_an_fadeOut,
    div.ajaxsearchpro.asp_an_fadeInDrop,
    div.ajaxsearchpro.asp_an_fadeOutDrop {
      -webkit-animation-duration: 100ms;
      animation-duration: 100ms;
      -webkit-animation-fill-mode: forwards;
      animation-fill-mode: forwards
    }

    .asp_an_fadeIn,
    div.ajaxsearchpro.asp_an_fadeIn {
      animation-name: aspAnFadeIn;
      -webkit-animation-name: aspAnFadeIn
    }

    .asp_an_fadeOut,
    div.ajaxsearchpro.asp_an_fadeOut {
      animation-name: aspAnFadeOut;
      -webkit-animation-name: aspAnFadeOut
    }

    div.ajaxsearchpro.asp_an_fadeInDrop {
      animation-name: aspAnFadeInDrop;
      -webkit-animation-name: aspAnFadeInDrop
    }

    div.ajaxsearchpro.asp_an_fadeOutDrop {
      animation-name: aspAnFadeOutDrop;
      -webkit-animation-name: aspAnFadeOutDrop
    }

    div.ajaxsearchpro.asp_main_container {
      transition: width 130ms linear;
      -webkit-transition: width 130ms linear
    }

    asp_w_container,
    div.asp_w.ajaxsearchpro,
    div.asp_w.asp_r,
    div.asp_w.asp_s,
    div.asp_w.asp_sb,
    div.asp_w.asp_sb * {
      -webkit-box-sizing: content-box;
      -moz-box-sizing: content-box;
      -ms-box-sizing: content-box;
      -o-box-sizing: content-box;
      box-sizing: content-box;
      padding: 0;
      margin: 0;
      border: 0;
      border-radius: 0;
      text-transform: none;
      text-shadow: none;
      box-shadow: none;
      text-decoration: none;
      text-align: left;
      text-indent: initial;
      letter-spacing: normal;
      font-display: swap
    }

    div.asp_w_container div[id*=__original__] {
      display: none !important
    }

    div.asp_w.ajaxsearchpro {
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      -ms-box-sizing: border-box;
      -o-box-sizing: border-box;
      box-sizing: border-box
    }

    div.asp_w.asp_r,
    div.asp_w.asp_r * {
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -khtml-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none
    }

    div.asp_w.ajaxsearchpro input[type=text]::-ms-clear {
      display: none;
      width: 0;
      height: 0
    }

    div.asp_w.ajaxsearchpro input[type=text]::-ms-reveal {
      display: none;
      width: 0;
      height: 0
    }

    div.asp_w.ajaxsearchpro input[type="search"]::-webkit-search-decoration,
    div.asp_w.ajaxsearchpro input[type="search"]::-webkit-search-cancel-button,
    div.asp_w.ajaxsearchpro input[type="search"]::-webkit-search-results-button,
    div.asp_w.ajaxsearchpro input[type="search"]::-webkit-search-results-decoration {
      display: none
    }

    div.asp_w.ajaxsearchpro input[type="search"] {
      appearance: auto !important;
      -webkit-appearance: none !important
    }

    .clear {
      clear: both
    }

    .asp_clear {
      display: block !important;
      clear: both !important;
      margin: 0 !important;
      padding: 0 !important;
      width: auto !important;
      height: 0 !important
    }

    .hiddend {
      display: none !important
    }

    div.asp_w.ajaxsearchpro {
      width: 100%;
      height: auto;
      border-radius: 0;
      background: rgba(255, 255, 255, 0);
      overflow: hidden
    }

    div.asp_w.ajaxsearchpro.asp_non_compact {
      min-width: 200px
    }

    #asp_absolute_overlay {
      width: 0;
      height: 0;
      position: fixed;
      text-align: center;
      background: rgba(255, 255, 255, 0.5);
      top: 0;
      left: 0;
      display: block;
      z-index: 0;
      opacity: 0;
      transition: opacity 200ms linear;
      -webkit-transition: opacity 200ms linear
    }

    div.asp_m.ajaxsearchpro .proinput input:before,
    div.asp_m.ajaxsearchpro .proinput input:after,
    div.asp_m.ajaxsearchpro .proinput form:before,
    div.asp_m.ajaxsearchpro .proinput form:after {
      display: none
    }

    div.asp_w.ajaxsearchpro textarea:focus,
    div.asp_w.ajaxsearchpro input:focus {
      outline: none
    }

    div.asp_m.ajaxsearchpro .probox .proinput input::-ms-clear {
      display: none
    }

    div.asp_m.ajaxsearchpro .probox {
      width: auto;
      border-radius: 5px;
      background: #FFF;
      overflow: hidden;
      border: 1px solid #FFF;
      box-shadow: 1px 0 3px #CCC inset;
      display: -webkit-flex;
      display: flex;
      -webkit-flex-direction: row;
      flex-direction: row;
      direction: ltr;
      align-items: stretch;
      isolation: isolate
    }

    div.asp_m.ajaxsearchpro .probox .proinput {
      width: 1px;
      height: 100%;
      margin: 0 0 0 10px;
      padding: 0 5px;
      float: left;
      box-shadow: none;
      position: relative;
      flex: 1 1 auto;
      -webkit-flex: 1 1 auto;
      z-index: 0
    }

    div.asp_m.ajaxsearchpro .probox .proinput form {
      height: 100%;
      margin: 0 !important;
      padding: 0 !important
    }

    div.asp_m.ajaxsearchpro .probox .proinput input {
      height: 100%;
      width: 100%;
      border: 0;
      background: transparent;
      box-shadow: none;
      margin: -1px;
      padding: 0;
      left: 0;
      padding-top: 2px;
      min-width: 120px;
      min-height: unset;
      max-height: unset
    }

    div.asp_m.ajaxsearchpro .probox .proinput input.autocomplete {
      border: 0;
      background: transparent;
      width: 100%;
      box-shadow: none;
      margin: 0;
      padding: 0;
      left: 0
    }

    div.asp_m.ajaxsearchpro .probox .proinput.iepaddingfix {
      padding-top: 0
    }

    div.asp_m.ajaxsearchpro .probox .proloading,
    div.asp_m.ajaxsearchpro .probox .proclose,
    div.asp_m.ajaxsearchpro .probox .promagnifier,
    div.asp_m.ajaxsearchpro .probox .prosettings {
      width: 20px;
      height: 20px;
      min-width: unset;
      min-height: unset;
      background: none;
      background-size: 20px 20px;
      float: right;
      box-shadow: none;
      margin: 0;
      padding: 0;
      text-align: center;
      z-index: 1
    }

    div.asp_m.ajaxsearchpro button.promagnifier:focus-visible {
      box-shadow: inset 0 0 0 2px rgba(0, 0, 0, 0.4)
    }

    div.asp_m.ajaxsearchpro .probox .proloading,
    div.asp_m.ajaxsearchpro .probox .proclose {
      background-position: center center;
      display: none;
      background-size: auto;
      background-repeat: no-repeat;
      background-color: transparent
    }

    div.asp_m.ajaxsearchpro .probox .proloading {
      padding: 2px;
      box-sizing: border-box
    }

    div.asp_m.ajaxsearchpro .probox .proclose {
      position: relative;
      cursor: pointer;
      z-index: 2
    }

    div.asp_m.ajaxsearchpro .probox .promagnifier .innericon,
    div.asp_m.ajaxsearchpro .probox .prosettings .innericon,
    div.asp_m.ajaxsearchpro .probox .proclose .innericon {
      background-size: 20px 20px;
      background-position: center center;
      background-repeat: no-repeat;
      background-color: transparent;
      width: 100%;
      height: 100%;
      line-height: initial;
      text-align: center;
      overflow: hidden
    }

    div.asp_m.ajaxsearchpro .probox .promagnifier .innericon svg,
    div.asp_m.ajaxsearchpro .probox .prosettings .innericon svg,
    div.asp_m.ajaxsearchpro .probox .proloading svg {
      height: 100%;
      width: 22px;
      vertical-align: baseline;
      display: inline-block
    }

    div.asp_m.ajaxsearchpro .probox .proclose svg {
      background: #333;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      width: 20px;
      height: 20px;
      margin-top: -10px;
      left: 50%;
      margin-left: -10px;
      fill: #fefefe;
      padding: 4px;
      box-sizing: border-box;
      box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.9)
    }

    .opacityOne {
      opacity: 1
    }

    .opacityZero {
      opacity: 0
    }

    div.asp_w.asp_s [disabled].noUi-connect,
    div.asp_w.asp_s [disabled] .noUi-connect {
      background: #B8B8B8
    }

    div.asp_w.asp_s [disabled] .noUi-handle {
      cursor: not-allowed
    }

    div.asp_w.asp_r p.showmore {
      display: none;
      margin: 0
    }

    div.asp_w.asp_r.asp_more_res_loading p.showmore a,
    div.asp_w.asp_r.asp_more_res_loading p.showmore a span {
      color: transparent !important
    }

    @-webkit-keyframes shm-rot-simple {
      0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
        opacity: 1
      }

      50% {
        -webkit-transform: rotate(180deg);
        transform: rotate(180deg);
        opacity: 0.85
      }

      100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
        opacity: 1
      }
    }

    @keyframes shm-rot-simple {
      0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
        opacity: 1
      }

      50% {
        -webkit-transform: rotate(180deg);
        transform: rotate(180deg);
        opacity: 0.85
      }

      100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
        opacity: 1
      }
    }

    div.asp_w.asp_r div.asp_showmore_container {
      position: relative
    }

    div.asp_w.asp_r. div.asp_moreres_loader {
      display: none;
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      background: rgba(255, 255, 255, 0.2)
    }

    div.asp_w.asp_r.asp_more_res_loading div.asp_moreres_loader {
      display: block !important
    }

    div.asp_w.asp_r div.asp_moreres_loader-inner {
      height: 24px;
      width: 24px;
      animation: shm-rot-simple 0.8s infinite linear;
      -webkit-animation: shm-rot-simple 0.8s infinite linear;
      border: 4px solid #353535;
      border-right-color: transparent;
      border-radius: 50%;
      box-sizing: border-box;
      position: absolute;
      top: 50%;
      margin: -12px auto auto -12px;
      left: 50%
    }

    div.asp_hidden_data,
    div.asp_hidden_data * {
      display: none
    }

    div.asp_w.asp_r {
      display: none
    }

    div.asp_w.asp_r * {
      text-decoration: none;
      text-shadow: none
    }

    div.asp_w.asp_r .results {
      overflow: hidden;
      width: auto;
      height: 0;
      margin: 0;
      padding: 0
    }

    div.asp_w.asp_r .asp_nores {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      overflow: hidden;
      width: auto;
      height: auto;
      position: relative;
      z-index: 2
    }

    div.asp_w.asp_r .results .item {
      overflow: hidden;
      width: auto;
      margin: 0;
      padding: 3px;
      position: relative;
      background: #f4f4f4;
      border-left: 1px solid rgba(255, 255, 255, 0.6);
      border-right: 1px solid rgba(255, 255, 255, 0.4)
    }

    div.asp_w.asp_r .results .item,
    div.asp_w.asp_r .results .asp_group_header {
      animation-delay: 0s;
      animation-duration: 0.5s;
      animation-fill-mode: both;
      animation-timing-function: ease;
      backface-visibility: hidden;
      -webkit-animation-delay: 0s;
      -webkit-animation-duration: 0.5s;
      -webkit-animation-fill-mode: both;
      -webkit-animation-timing-function: ease;
      -webkit-backface-visibility: hidden
    }

    div.asp_w.asp_r .results .item .asp_image {
      overflow: hidden;
      background: transparent;
      padding: 0;
      float: left;
      background-position: center;
      background-size: cover;
      position: relative
    }

    div.asp_w.asp_r .results .asp_image canvas {
      display: none
    }

    div.asp_w.asp_r .results .asp_image .asp_item_canvas {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      margin: 0;
      width: 100%;
      height: 100%;
      z-index: 1;
      display: block;
      opacity: 1;
      background-position: inherit;
      background-size: inherit;
      transition: opacity 0.5s
    }

    div.asp_w.asp_r .results .item:hover .asp_image .asp_item_canvas,
    div.asp_w.asp_r .results figure:hover .asp_image .asp_item_canvas {
      opacity: 0
    }

    div.asp_w.asp_r a.asp_res_image_url,
    div.asp_w.asp_r a.asp_res_image_url:hover,
    div.asp_w.asp_r a.asp_res_image_url:focus,
    div.asp_w.asp_r a.asp_res_image_url:active {
      box-shadow: none !important;
      border: none !important;
      margin: 0 !important;
      padding: 0 !important;
      display: inline !important
    }

    div.asp_w.asp_r .results .item .asp_image_auto {
      width: auto !important;
      height: auto !important
    }

    div.asp_w.asp_r .results .item .asp_image img {
      width: 100%;
      height: 100%
    }

    div.asp_w.asp_r .results a span.overlap {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      z-index: 1
    }

    div.asp_w.asp_r .resdrg {
      height: auto
    }

    div.asp_w.ajaxsearchpro .asp_results_group {
      margin: 10px 0 0 0
    }

    div.asp_w.ajaxsearchpro .asp_results_group:first-of-type {
      margin: 0 !important
    }

    div.asp_w.asp_r.vertical .results .item:first-child {
      border-radius: 0
    }

    div.asp_w.asp_r.vertical .results .item:last-child {
      border-radius: 0;
      margin-bottom: 0
    }

    div.asp_w.asp_r.vertical .results .item:last-child:after {
      height: 0;
      margin: 0;
      width: 0
    }

    div.asp_w.asp_s.searchsettings {
      width: auto;
      height: auto;
      position: absolute;
      display: none;
      z-index: 11001;
      border-radius: 0 0 3px 3px;
      visibility: hidden;
      opacity: 0;
      overflow: visible
    }

    div.asp_w.asp_sb.searchsettings {
      display: none;
      visibility: hidden;
      direction: ltr;
      overflow: visible;
      position: relative;
      z-index: 1
    }

    div.asp_w.asp_sb.searchsettings .asp_sett_scroll::-webkit-scrollbar-thumb {
      background: transparent;
      border-radius: 5px;
      border: none
    }

    div.asp_w.asp_s.searchsettings form,
    div.asp_w.asp_sb.searchsettings form {
      display: flex;
      flex-wrap: wrap;
      margin: 0 0 12px 0 !important;
      padding: 0 !important
    }

    div.asp_w.asp_s.searchsettings .asp_option_inner,
    div.asp_w.asp_sb.searchsettings .asp_option_inner,
    div.asp_w.asp_sb.searchsettings input[type='text'] {
      margin: 2px 10px 0 10px;
      *padding-bottom: 10px
    }

    div.asp_w.asp_s.searchsettings input[type='text']:not(.asp_select2-search__field),
    div.asp_w.asp_sb.searchsettings input[type='text']:not(.asp_select2-search__field) {
      width: 86% !important;
      padding: 8px 6px !important;
      margin: 0 0 0 10px !important;
      background-color: #FAFAFA !important;
      font-size: 13px;
      border: none !important;
      line-height: 17px;
      height: 20px
    }

    div.asp_w.asp_s.searchsettings.ie78 .asp_option_inner,
    div.asp_w.asp_sb.searchsettings.ie78 .asp_option_inner {
      margin-bottom: 0 !important;
      padding-bottom: 0 !important
    }

    div.asp_w.asp_s.searchsettings div.asp_option_label,
    div.asp_w.asp_sb.searchsettings div.asp_option_label {
      font-size: 14px;
      line-height: 20px !important;
      margin: 0;
      width: 150px;
      text-shadow: none;
      padding: 0;
      min-height: 20px;
      border: none;
      background: transparent;
      float: none;
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none
    }

    div.asp_w.asp_s.searchsettings .asp_label,
    div.asp_w.asp_sb.searchsettings .asp_label {
      line-height: 24px !important;
      vertical-align: middle;
      display: inline-block;
      cursor: pointer
    }

    div.asp_w.asp_s.searchsettings input[type=radio],
    div.asp_w.asp_sb.searchsettings input[type=radio] {
      vertical-align: middle;
      margin: 0 6px 0 17px;
      display: inline-block;
      appearance: normal;
      -moz-appearance: normal;
      -webkit-appearance: radio
    }

    div.asp_w.asp_s.searchsettings .asp_option_inner input[type=checkbox],
    div.asp_w.asp_sb.searchsettings .asp_option_inner input[type=checkbox] {
      display: none !important
    }

    div.asp_w.asp_s.searchsettings.ie78 .asp_option_inner input[type=checkbox],
    div.asp_w.asp_sb.searchsettings.ie78 .asp_option_inner input[type=checkbox] {
      display: block
    }

    div.asp_w.asp_s.searchsettings.ie78 div.asp_option_label,
    div.asp_w.asp_sb.searchsettings.ie78 div.asp_option_label {
      float: right !important
    }

    div.asp_w.asp_s.searchsettings .asp_option_inner,
    div.asp_w.asp_sb.searchsettings .asp_option_inner {
      width: 17px;
      height: 17px;
      position: relative;
      flex-grow: 0;
      -webkit-flex-grow: 0;
      flex-shrink: 0;
      -webkit-flex-shrink: 0
    }

    div.asp_w.asp_sb.searchsettings .asp_option_inner {
      border-radius: 3px;
      background: rgb(66, 66, 66);
      box-shadow: none
    }

    div.asp_w.asp_s.searchsettings .asp_option_inner .asp_option_checkbox,
    div.asp_w.asp_sb.searchsettings .asp_option_inner .asp_option_checkbox {
      cursor: pointer;
      position: absolute;
      width: 17px;
      height: 17px;
      top: 0;
      padding: 0;
      border-radius: 2px;
      box-shadow: none;
      font-size: 0 !important;
      color: rgba(0, 0, 0, 0)
    }

    div.asp_w.asp_s.searchsettings.ie78 .asp_option_inner .asp_option_checkbox,
    div.asp_w.asp_sb.searchsettings.ie78 .asp_option_inner .asp_option_checkbox {
      display: none
    }

    div.asp_w.asp_s.searchsettings .asp_option_inner .asp_option_checkbox:before,
    div.asp_w.asp_sb.searchsettings .asp_option_inner .asp_option_checkbox:before {
      display: none !important
    }

    div.asp_w.asp_s.searchsettings .asp_option_inner .asp_option_checkbox:after,
    div.asp_w.asp_sb.searchsettings .asp_option_inner .asp_option_checkbox:after {
      opacity: 0;
      font-family: 'asppsicons2';
      content: "\e800";
      background: transparent;
      border-top: none;
      border-right: none;
      box-sizing: content-box;
      height: 100%;
      width: 100%;
      padding: 0 !important;
      position: absolute;
      top: 0;
      left: 0
    }

    div.asp_w.asp_s.searchsettings.ie78 .asp_option_inner .asp_option_checkbox:after,
    div.asp_w.asp_sb.searchsettings.ie78 .asp_option_inner .asp_option_checkbox:after {
      display: none
    }

    div.asp_w.asp_s.searchsettings .asp_option_inner .asp_option_checkbox:hover::after,
    div.asp_w.asp_sb.searchsettings .asp_option_inner .asp_option_checkbox:hover::after {
      opacity: 0.3
    }

    div.asp_w.asp_s.searchsettings .asp_option_inner input[type=checkbox]:checked~div:after,
    div.asp_w.asp_sb.searchsettings .asp_option_inner input[type=checkbox]:checked~div:after {
      opacity: 1
    }

    div.asp_w.asp_sb.searchsettings span.checked~div:after,
    div.asp_w.asp_s.searchsettings span.checked~div:after {
      opacity: 1 !important
    }

    div.asp_w.asp_s.searchsettings fieldset,
    div.asp_w.asp_sb.searchsettings fieldset {
      position: relative;
      float: left
    }

    div.asp_w.asp_s.searchsettings fieldset,
    div.asp_w.asp_sb.searchsettings fieldset {
      background: transparent;
      font-size: .9em;
      margin: 12px 0 0 !important;
      padding: 0 !important;
      width: 200px;
      min-width: 200px
    }

    div.asp_w.asp_sb.searchsettings fieldset:last-child {
      margin: 5px 0 0 !important
    }

    div.asp_w.asp_sb.searchsettings fieldset {
      margin: 10px 0 0
    }

    div.asp_w.asp_sb.searchsettings fieldset legend {
      padding: 0 0 0 10px;
      margin: 0;
      font-weight: normal;
      font-size: 13px
    }

    div.asp_w.asp_sb.searchsettings .asp_option,
    div.asp_w.asp_s.searchsettings .asp_option {
      display: flex;
      flex-direction: row;
      -webkit-flex-direction: row;
      align-items: flex-start;
      margin: 0 0 10px 0;
      cursor: pointer
    }

    div.asp_w.asp_s.searchsettings .asp_option.asp-o-last,
    div.asp_w.asp_s.searchsettings .asp_option:last-child {
      margin-bottom: 0
    }

    div.asp_w.asp_s.searchsettings fieldset .asp_option,
    div.asp_w.asp_s.searchsettings fieldset .asp_option_cat,
    div.asp_w.asp_sb.searchsettings fieldset .asp_option,
    div.asp_w.asp_sb.searchsettings fieldset .asp_option_cat {
      width: auto;
      max-width: none
    }

    div.asp_w.asp_s.searchsettings fieldset .asp_option_cat_level-1,
    div.asp_w.asp_sb.searchsettings fieldset .asp_option_cat_level-1 {
      margin-left: 12px
    }

    div.asp_w.asp_s.searchsettings fieldset .asp_option_cat_level-2,
    div.asp_w.asp_sb.searchsettings fieldset .asp_option_cat_level-2 {
      margin-left: 24px
    }

    div.asp_w.asp_s.searchsettings fieldset .asp_option_cat_level-3,
    div.asp_w.asp_sb.searchsettings fieldset .asp_option_cat_level-3 {
      margin-left: 36px
    }

    div.asp_w.asp_s.searchsettings fieldset div.asp_option_label,
    div.asp_w.asp_sb.searchsettings fieldset div.asp_option_label {
      width: 70%;
      display: block
    }

    div.asp_w.asp_s.searchsettings fieldset div.asp_option_label {
      width: auto;
      display: block;
      box-sizing: border-box
    }

    div.asp_w.asp_s.searchsettings fieldset .asp_option_cat_level-2 div.asp_option_label {
      padding-right: 12px
    }

    div.asp_w.asp_s.searchsettings fieldset .asp_option_cat_level-3 div.asp_option_label {
      padding-right: 24px
    }

    div.asp_w.asp_s select,
    div.asp_w.asp_sb select {
      width: 100%;
      max-width: 100%;
      border-radius: 0;
      padding: 5px !important;
      background: #f9f9f9;
      background-clip: padding-box;
      -webkit-box-shadow: none;
      box-shadow: none;
      margin: 0;
      border: none;
      color: #111;
      margin-bottom: 0 !important;
      box-sizing: border-box;
      line-height: initial;
      outline: none !important;
      font-family: Roboto, Helvetica;
      font-size: 14px;
      height: 34px;
      min-height: unset !important
    }

    div.asp_w.asp_s select[multiple],
    div.asp_w.asp_sb select[multiple] {
      background: #fff
    }

    div.asp_w.asp_s select:not([multiple]),
    div.asp_w.asp_sb select:not([multiple]) {
      overflow: hidden !important
    }

    div.asp_w.asp_s .asp-nr-container,
    div.asp_w.asp_sb .asp-nr-container {
      display: flex;
      gap: 8px;
      justify-content: space-between
    }

    div.ajaxsearchpro.searchsettings fieldset.asp_custom_f {
      margin-top: 9px
    }

    div.ajaxsearchpro.searchsettings fieldset legend {
      margin-bottom: 8px !important;
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none
    }

    div.ajaxsearchpro.searchsettings fieldset legend+div.asp_option_inner {
      margin-top: 0 !important
    }

    div.ajaxsearchpro.searchsettings .asp_sett_scroll>.asp_option_cat:first-child>.asp_option_inner {
      margin-top: 0 !important
    }

    div.ajaxsearchpro.searchsettings fieldset .asp_select_single,
    div.ajaxsearchpro.searchsettings fieldset .asp_select_multiple {
      padding: 0 10px
    }

    .asp_arrow_box {
      position: absolute;
      background: #444;
      padding: 12px;
      color: white;
      border-radius: 4px;
      font-size: 14px;
      max-width: 240px;
      display: none;
      z-index: 99999999999999999
    }

    .asp_arrow_box:after {
      top: 100%;
      left: 50%;
      border: solid transparent;
      content: " ";
      height: 0;
      width: 0;
      position: absolute;
      pointer-events: none;
      border-color: transparent;
      border-top-color: #444;
      border-width: 6px;
      margin-left: -6px
    }

    .asp_arrow_box.asp_arrow_box_bottom:after {
      bottom: 100%;
      top: unset;
      border-bottom-color: #444;
      border-top-color: transparent
    }

    .asp_two_column {
      margin: 8px 0 12px 0
    }

    .asp_two_column .asp_two_column_first,
    .asp_two_column .asp_two_column_last {
      width: 48%;
      padding: 1% 2% 1% 0;
      float: left;
      box-sizing: content-box
    }

    .asp_two_column .asp_two_column_last {
      padding: 1% 0 1% 2%
    }

    .asp_shortcodes_container {
      display: -webkit-flex;
      display: flex;
      -webkit-flex-wrap: wrap;
      flex-wrap: wrap;
      margin: -10px 0 12px -10px;
      box-sizing: border-box
    }

    .asp_shortcodes_container .asp_shortcode_column {
      -webkit-flex-grow: 0;
      flex-grow: 0;
      -webkit-flex-shrink: 1;
      flex-shrink: 1;
      min-width: 120px;
      padding: 10px 0 0 10px;
      flex-basis: 33%;
      -webkit-flex-basis: 33%;
      box-sizing: border-box
    }

    p.asp-try {
      color: #555;
      font-size: 14px;
      margin-top: 5px;
      line-height: 28px;
      font-weight: 300;
      visibility: hidden
    }

    p.asp-try a {
      color: #FFB556;
      margin-left: 10px;
      cursor: pointer;
      display: inline-block
    }

    .asp_ac_autocomplete,
    .asp_ac_autocomplete div,
    .asp_ac_autocomplete span {}

    .asp_ac_autocomplete {
      display: inline;
      position: relative;
      word-spacing: normal;
      text-transform: none;
      text-indent: 0;
      text-shadow: none;
      text-align: start
    }

    .asp_ac_autocomplete .asp_ac_autocomplete_dropdown {
      position: absolute;
      border: 1px solid #ccc;
      border-top-color: #d9d9d9;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      -webkit-box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      cursor: default;
      display: none;
      z-index: 1001;
      margin-top: -1px;
      background-color: #fff;
      min-width: 100%;
      overflow: auto
    }

    .asp_ac_autocomplete .asp_ac_autocomplete_hint {
      position: absolute;
      z-index: 1;
      color: #ccc !important;
      -webkit-text-fill-color: #ccc !important;
      text-fill-color: #ccc !important;
      overflow: hidden !important;
      white-space: pre !important
    }

    .asp_ac_autocomplete .asp_ac_autocomplete_hint span {
      color: transparent;
      opacity: 0.0
    }

    .asp_ac_autocomplete .asp_ac_autocomplete_dropdown>div {
      background: #fff;
      white-space: nowrap;
      cursor: pointer;
      line-height: 1.5em;
      padding: 2px 0 2px 0
    }

    .asp_ac_autocomplete .asp_ac_autocomplete_dropdown>div.active {
      background: #0097CF;
      color: #FFF
    }

    .rtl .asp_content,
    .rtl .asp_nores,
    .rtl .asp_content *,
    .rtl .asp_nores *,
    .rtl .searchsettings form {
      text-align: right !important;
      direction: rtl !important
    }

    .rtl .asp_nores>* {
      display: inline-block
    }

    .rtl .searchsettings .asp_option {
      flex-direction: row-reverse !important;
      -webkit-flex-direction: row-reverse !important
    }

    .rtl .asp_option {
      direction: ltr
    }

    .rtl .asp_label,
    .rtl .asp_option div.asp_option_label {
      text-align: right !important
    }

    .rtl .asp_label {
      max-width: 1000px !important;
      width: 100%;
      direction: rtl !important
    }

    .rtl .asp_label input[type=radio] {
      margin: 0 0 0 6px !important
    }

    .rtl .asp_option_cat_level-0 div.asp_option_label {
      font-weight: bold !important
    }

    .rtl fieldset .asp_option_cat_level-1 {
      margin-right: 12px !important;
      margin-left: 0
    }

    .rtl fieldset .asp_option_cat_level-2 {
      margin-right: 24px !important;
      margin-left: 0
    }

    .rtl fieldset .asp_option_cat_level-3 {
      margin-right: 36px !important;
      margin-left: 0
    }

    .rtl .searchsettings legend {
      text-align: right !important;
      display: block;
      width: 100%
    }

    .rtl .searchsettings input[type=text],
    .rtl .searchsettings select {
      direction: rtl !important;
      text-align: right !important
    }

    .rtl div.asp_w.asp_s.searchsettings form,
    .rtl div.asp_w.asp_sb.searchsettings form {
      flex-direction: row-reverse !important
    }

    .rtl div.horizontal.asp_r div.item {
      float: right !important
    }

    .rtl p.asp-try {
      direction: rtl;
      text-align: right;
      margin-right: 10px;
      width: auto !important
    }

    .asp_elementor_nores {
      text-align: center
    }

    .elementor-sticky__spacer .asp_w,
    .elementor-sticky__spacer .asp-try {
      visibility: hidden !important;
      opacity: 0 !important;
      z-index: -1 !important
    }
  </style>
  <style id="asp-instance-3">
    div[id*='ajaxsearchpro3_'] div.asp_loader,
    div[id*='ajaxsearchpro3_'] div.asp_loader * {
      box-sizing: border-box !important;
      margin: 0;
      padding: 0;
      box-shadow: none
    }

    div[id*='ajaxsearchpro3_'] div.asp_loader {
      box-sizing: border-box;
      display: flex;
      flex: 0 1 auto;
      flex-direction: column;
      flex-grow: 0;
      flex-shrink: 0;
      flex-basis: 28px;
      max-width: 100%;
      max-height: 100%;
      align-items: center;
      justify-content: center
    }

    div[id*='ajaxsearchpro3_'] div.asp_loader-inner {
      width: 100%;
      margin: 0 auto;
      text-align: center;
      height: 100%
    }

    @-webkit-keyframes ball-scale {
      0% {
        -webkit-transform: scale(0);
        transform: scale(0)
      }

      100% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: 0
      }
    }

    @keyframes ball-scale {
      0% {
        -webkit-transform: scale(0);
        transform: scale(0)
      }

      100% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: 0
      }
    }

    div[id*='ajaxsearchpro3_'] div.asp_ball-scale>div {
      background-color: rgb(5, 5, 5);
      border-radius: 100%;
      -webkit-animation-fill-mode: both;
      animation-fill-mode: both;
      display: inline-block;
      height: 100%;
      width: 100%;
      -webkit-animation: ball-scale 1s 0s ease-in-out infinite;
      animation: ball-scale 1s 0s ease-in-out infinite
    }

    div[id*='ajaxsearchprores3_'] .asp_res_loader div.asp_loader,
    div[id*='ajaxsearchprores3_'] .asp_res_loader div.asp_loader * {
      box-sizing: border-box !important;
      margin: 0;
      padding: 0;
      box-shadow: none
    }

    div[id*='ajaxsearchprores3_'] .asp_res_loader div.asp_loader {
      box-sizing: border-box;
      display: flex;
      flex: 0 1 auto;
      flex-direction: column;
      flex-grow: 0;
      flex-shrink: 0;
      flex-basis: 28px;
      max-width: 100%;
      max-height: 100%;
      align-items: center;
      justify-content: center
    }

    div[id*='ajaxsearchprores3_'] .asp_res_loader div.asp_loader-inner {
      width: 100%;
      margin: 0 auto;
      text-align: center;
      height: 100%
    }

    @-webkit-keyframes ball-scale {
      0% {
        -webkit-transform: scale(0);
        transform: scale(0)
      }

      100% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: 0
      }
    }

    @keyframes ball-scale {
      0% {
        -webkit-transform: scale(0);
        transform: scale(0)
      }

      100% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: 0
      }
    }

    div[id*='ajaxsearchprores3_'] .asp_res_loader div.asp_ball-scale>div {
      background-color: rgb(5, 5, 5);
      border-radius: 100%;
      -webkit-animation-fill-mode: both;
      animation-fill-mode: both;
      display: inline-block;
      height: 100%;
      width: 100%;
      -webkit-animation: ball-scale 1s 0s ease-in-out infinite;
      animation: ball-scale 1s 0s ease-in-out infinite
    }

    #ajaxsearchpro3_1 div.asp_loader,
    #ajaxsearchpro3_2 div.asp_loader,
    #ajaxsearchpro3_1 div.asp_loader *,
    #ajaxsearchpro3_2 div.asp_loader * {
      box-sizing: border-box !important;
      margin: 0;
      padding: 0;
      box-shadow: none
    }

    #ajaxsearchpro3_1 div.asp_loader,
    #ajaxsearchpro3_2 div.asp_loader {
      box-sizing: border-box;
      display: flex;
      flex: 0 1 auto;
      flex-direction: column;
      flex-grow: 0;
      flex-shrink: 0;
      flex-basis: 28px;
      max-width: 100%;
      max-height: 100%;
      align-items: center;
      justify-content: center
    }

    #ajaxsearchpro3_1 div.asp_loader-inner,
    #ajaxsearchpro3_2 div.asp_loader-inner {
      width: 100%;
      margin: 0 auto;
      text-align: center;
      height: 100%
    }

    @-webkit-keyframes ball-scale {
      0% {
        -webkit-transform: scale(0);
        transform: scale(0)
      }

      100% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: 0
      }
    }

    @keyframes ball-scale {
      0% {
        -webkit-transform: scale(0);
        transform: scale(0)
      }

      100% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: 0
      }
    }

    #ajaxsearchpro3_1 div.asp_ball-scale>div,
    #ajaxsearchpro3_2 div.asp_ball-scale>div {
      background-color: rgb(5, 5, 5);
      border-radius: 100%;
      -webkit-animation-fill-mode: both;
      animation-fill-mode: both;
      display: inline-block;
      height: 100%;
      width: 100%;
      -webkit-animation: ball-scale 1s 0s ease-in-out infinite;
      animation: ball-scale 1s 0s ease-in-out infinite
    }

    @-webkit-keyframes asp_an_fadeInDown {
      0% {
        opacity: 0;
        -webkit-transform: translateY(-20px)
      }

      100% {
        opacity: 1;
        -webkit-transform: translateY(0)
      }
    }

    @keyframes asp_an_fadeInDown {
      0% {
        opacity: 0;
        transform: translateY(-20px)
      }

      100% {
        opacity: 1;
        transform: translateY(0)
      }
    }

    .asp_an_fadeInDown {
      -webkit-animation-name: asp_an_fadeInDown;
      animation-name: asp_an_fadeInDown
    }

    div.asp_r.asp_r_3,
    div.asp_r.asp_r_3 *,
    div.asp_m.asp_m_3,
    div.asp_m.asp_m_3 *,
    div.asp_s.asp_s_3,
    div.asp_s.asp_s_3 * {
      -webkit-box-sizing: content-box;
      -moz-box-sizing: content-box;
      -ms-box-sizing: content-box;
      -o-box-sizing: content-box;
      box-sizing: content-box;
      border: 0;
      border-radius: 0;
      text-transform: none;
      text-shadow: none;
      box-shadow: none;
      text-decoration: none;
      text-align: left;
      letter-spacing: normal
    }

    div.asp_r.asp_r_3,
    div.asp_m.asp_m_3,
    div.asp_s.asp_s_3 {
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      -ms-box-sizing: border-box;
      -o-box-sizing: border-box;
      box-sizing: border-box
    }

    div.asp_r.asp_r_3,
    div.asp_r.asp_r_3 *,
    div.asp_m.asp_m_3,
    div.asp_m.asp_m_3 *,
    div.asp_s.asp_s_3,
    div.asp_s.asp_s_3 * {
      padding: 0;
      margin: 0
    }

    .wpdreams_clear {
      clear: both
    }

    .asp_w_container_3 {
      width: 100%
    }

    #ajaxsearchpro3_1,
    #ajaxsearchpro3_2,
    div.asp_m.asp_m_3 {
      width: 100%;
      height: auto;
      max-height: none;
      border-radius: 5px;
      background: #d1eaff;
      margin-top: 0;
      margin-bottom: 0;
      background-image: -moz-radial-gradient(center, ellipse cover, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -webkit-gradient(radial, center center, 0px, center center, 100%, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -webkit-radial-gradient(center, ellipse cover, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -o-radial-gradient(center, ellipse cover, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -ms-radial-gradient(center, ellipse cover, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: radial-gradient(ellipse at center, rgb(255, 255, 255), rgb(255, 255, 255));
      overflow: hidden;
      border: 2px inset rgb(255, 0, 0);
      border-radius: 10px 10px 10px 10px;
      box-shadow: none
    }

    #ajaxsearchpro3_1 .probox,
    #ajaxsearchpro3_2 .probox,
    div.asp_m.asp_m_3 .probox {
      margin: 6px;
      height: 32px;
      background: transparent;
      border: 0 none rgb(255, 255, 255);
      border-radius: 0;
      box-shadow: none
    }

    p[id*=asp-try-3] {
      color: rgb(85, 85, 85) !important;
      display: block
    }

    div.asp_main_container+[id*=asp-try-3] {
      width: 100%
    }

    p[id*=asp-try-3] a {
      color: rgb(255, 181, 86) !important
    }

    p[id*=asp-try-3] a:after {
      color: rgb(85, 85, 85) !important;
      display: inline;
      content: ','
    }

    p[id*=asp-try-3] a:last-child:after {
      display: none
    }

    #ajaxsearchpro3_1 .probox .proinput,
    #ajaxsearchpro3_2 .probox .proinput,
    div.asp_m.asp_m_3 .probox .proinput {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none;
      line-height: normal;
      flex-grow: 1;
      order: 5;
      -webkit-flex-grow: 1;
      -webkit-order: 5
    }

    #ajaxsearchpro3_1 .probox .proinput input.orig,
    #ajaxsearchpro3_2 .probox .proinput input.orig,
    div.asp_m.asp_m_3 .probox .proinput input.orig {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none;
      line-height: normal;
      border: 0;
      box-shadow: none;
      height: 32px;
      position: relative;
      z-index: 2;
      padding: 0 !important;
      padding-top: 2px !important;
      margin: -1px 0 0 -4px !important;
      width: 100%;
      background: transparent !important
    }

    #ajaxsearchpro3_1 .probox .proinput input.autocomplete,
    #ajaxsearchpro3_2 .probox .proinput input.autocomplete,
    div.asp_m.asp_m_3 .probox .proinput input.autocomplete {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none;
      line-height: normal;
      opacity: 0.25;
      height: 32px;
      display: block;
      position: relative;
      z-index: 1;
      padding: 0 !important;
      margin: -1px 0 0 -4px !important;
      margin-top: -32px !important;
      width: 100%;
      background: transparent !important
    }

    .rtl #ajaxsearchpro3_1 .probox .proinput input.orig,
    .rtl #ajaxsearchpro3_2 .probox .proinput input.orig,
    .rtl #ajaxsearchpro3_1 .probox .proinput input.autocomplete,
    .rtl #ajaxsearchpro3_2 .probox .proinput input.autocomplete,
    .rtl div.asp_m.asp_m_3 .probox .proinput input.orig,
    .rtl div.asp_m.asp_m_3 .probox .proinput input.autocomplete {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none;
      line-height: normal;
      direction: rtl;
      text-align: right
    }

    .rtl #ajaxsearchpro3_1 .probox .proinput,
    .rtl #ajaxsearchpro3_2 .probox .proinput,
    .rtl div.asp_m.asp_m_3 .probox .proinput {
      margin-right: 2px
    }

    .rtl #ajaxsearchpro3_1 .probox .proloading,
    .rtl #ajaxsearchpro3_1 .probox .proclose,
    .rtl #ajaxsearchpro3_2 .probox .proloading,
    .rtl #ajaxsearchpro3_2 .probox .proclose,
    .rtl div.asp_m.asp_m_3 .probox .proloading,
    .rtl div.asp_m.asp_m_3 .probox .proclose {
      order: 3
    }

    div.asp_m.asp_m_3 .probox .proinput input.orig::-webkit-input-placeholder {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      text-shadow: none;
      opacity: 0.85
    }

    div.asp_m.asp_m_3 .probox .proinput input.orig::-moz-placeholder {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      text-shadow: none;
      opacity: 0.85
    }

    div.asp_m.asp_m_3 .probox .proinput input.orig:-ms-input-placeholder {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      text-shadow: none;
      opacity: 0.85
    }

    div.asp_m.asp_m_3 .probox .proinput input.orig:-moz-placeholder {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      text-shadow: none;
      opacity: 0.85;
      line-height: normal !important
    }

    #ajaxsearchpro3_1 .probox .proinput input.autocomplete,
    #ajaxsearchpro3_2 .probox .proinput input.autocomplete,
    div.asp_m.asp_m_3 .probox .proinput input.autocomplete {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none;
      line-height: normal;
      border: 0;
      box-shadow: none
    }

    #ajaxsearchpro3_1 .probox .proloading,
    #ajaxsearchpro3_1 .probox .proclose,
    #ajaxsearchpro3_1 .probox .promagnifier,
    #ajaxsearchpro3_1 .probox .prosettings,
    #ajaxsearchpro3_2 .probox .proloading,
    #ajaxsearchpro3_2 .probox .proclose,
    #ajaxsearchpro3_2 .probox .promagnifier,
    #ajaxsearchpro3_2 .probox .prosettings,
    div.asp_m.asp_m_3 .probox .proloading,
    div.asp_m.asp_m_3 .probox .proclose,
    div.asp_m.asp_m_3 .probox .promagnifier,
    div.asp_m.asp_m_3 .probox .prosettings {
      width: 32px;
      height: 32px;
      flex: 0 0 32px;
      flex-grow: 0;
      order: 7;
      -webkit-flex: 0 0 32px;
      -webkit-flex-grow: 0;
      -webkit-order: 7
    }

    #ajaxsearchpro3_1 .probox .proclose svg,
    #ajaxsearchpro3_2 .probox .proclose svg,
    div.asp_m.asp_m_3 .probox .proclose svg {
      fill: rgb(254, 254, 254);
      background: rgb(51, 51, 51);
      box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.9)
    }

    #ajaxsearchpro3_1 .probox .proloading,
    #ajaxsearchpro3_2 .probox .proloading,
    div.asp_m.asp_m_3 .probox .proloading {
      width: 32px;
      height: 32px;
      min-width: 32px;
      min-height: 32px;
      max-width: 32px;
      max-height: 32px
    }

    #ajaxsearchpro3_1 .probox .proloading .asp_loader,
    #ajaxsearchpro3_2 .probox .proloading .asp_loader,
    div.asp_m.asp_m_3 .probox .proloading .asp_loader {
      width: 28px;
      height: 28px;
      min-width: 28px;
      min-height: 28px;
      max-width: 28px;
      max-height: 28px
    }

    #ajaxsearchpro3_1 .probox .promagnifier,
    #ajaxsearchpro3_2 .probox .promagnifier,
    div.asp_m.asp_m_3 .probox .promagnifier {
      width: auto;
      height: 32px;
      flex: 0 0 auto;
      order: 7;
      -webkit-flex: 0 0 auto;
      -webkit-order: 7
    }

    div.asp_m.asp_m_3 .probox .promagnifier:focus-visible {
      outline: black outset
    }

    #ajaxsearchpro3_1 .probox .promagnifier .innericon,
    #ajaxsearchpro3_2 .probox .promagnifier .innericon,
    div.asp_m.asp_m_3 .probox .promagnifier .innericon {
      display: block;
      width: 32px;
      height: 32px;
      float: right
    }

    #ajaxsearchpro3_1 .probox .promagnifier .asp_text_button,
    #ajaxsearchpro3_2 .probox .promagnifier .asp_text_button,
    div.asp_m.asp_m_3 .probox .promagnifier .asp_text_button {
      display: block;
      width: auto;
      height: 32px;
      float: right;
      margin: 0;
      padding: 0 10px 0 2px;
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(51, 51, 51);
      font-size: 15px;
      line-height: auto;
      text-shadow: none;
      line-height: 32px
    }

    #ajaxsearchpro3_1 .probox .promagnifier .innericon svg,
    #ajaxsearchpro3_2 .probox .promagnifier .innericon svg,
    div.asp_m.asp_m_3 .probox .promagnifier .innericon svg {
      fill: rgb(5, 5, 5)
    }

    #ajaxsearchpro3_1 .probox .prosettings .innericon svg,
    #ajaxsearchpro3_2 .probox .prosettings .innericon svg,
    div.asp_m.asp_m_3 .probox .prosettings .innericon svg {
      fill: rgb(5, 5, 5)
    }

    #ajaxsearchpro3_1 .probox .promagnifier,
    #ajaxsearchpro3_2 .probox .promagnifier,
    div.asp_m.asp_m_3 .probox .promagnifier {
      width: 32px;
      height: 32px;
      background: transparent;
      background-position: center center;
      background-repeat: no-repeat;
      order: 11;
      -webkit-order: 11;
      float: right;
      border: 0 solid rgb(255, 255, 255);
      border-radius: 0;
      box-shadow: -1px 1px 0 0 rgba(255, 255, 255, 0.64) inset;
      cursor: pointer;
      background-size: 100% 100%;
      background-position: center center;
      background-repeat: no-repeat;
      cursor: pointer
    }

    #ajaxsearchpro3_1 .probox .prosettings,
    #ajaxsearchpro3_2 .probox .prosettings,
    div.asp_m.asp_m_3 .probox .prosettings {
      width: 32px;
      height: 32px;
      background: transparent;
      background-position: center center;
      background-repeat: no-repeat;
      order: 10;
      -webkit-order: 10;
      float: right;
      border: 0 solid rgb(255, 255, 255);
      border-radius: 0;
      box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.64) inset;
      cursor: pointer;
      background-size: 100% 100%;
      align-self: flex-end
    }

    #ajaxsearchprores3_1,
    #ajaxsearchprores3_2,
    div.asp_r.asp_r_3 {
      position: absolute;
      z-index: 11000;
      width: auto;
      margin: 12px 0 0 0
    }

    #ajaxsearchprores3_1 .asp_nores,
    #ajaxsearchprores3_2 .asp_nores,
    div.asp_r.asp_r_3 .asp_nores {
      border: 0 solid rgb(0, 0, 0);
      border-radius: 0;
      box-shadow: 0 5px 5px -5px #dfdfdf;
      padding: 6px 12px 6px 12px;
      margin: 0;
      font-weight: normal;
      font-family: inherit;
      color: rgba(74, 74, 74, 1);
      font-size: 1rem;
      line-height: 1.2rem;
      text-shadow: none;
      font-weight: normal;
      background: rgb(255, 255, 255)
    }

    #ajaxsearchprores3_1 .asp_nores .asp_nores_kw_suggestions,
    #ajaxsearchprores3_2 .asp_nores .asp_nores_kw_suggestions,
    div.asp_r.asp_r_3 .asp_nores .asp_nores_kw_suggestions {
      color: rgba(234, 67, 53, 1);
      font-weight: normal
    }

    #ajaxsearchprores3_1 .asp_nores .asp_keyword,
    #ajaxsearchprores3_2 .asp_nores .asp_keyword,
    div.asp_r.asp_r_3 .asp_nores .asp_keyword {
      padding: 0 8px 0 0;
      cursor: pointer;
      color: rgba(20, 84, 169, 1);
      font-weight: bold
    }

    #ajaxsearchprores3_1 .asp_results_top,
    #ajaxsearchprores3_2 .asp_results_top,
    div.asp_r.asp_r_3 .asp_results_top {
      background: rgb(255, 255, 255);
      border: 1px none rgb(81, 81, 81);
      border-radius: 0;
      padding: 6px 12px 6px 12px;
      margin: 0 0 4px 0;
      text-align: center;
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(81, 81, 81);
      font-size: 13px;
      line-height: 16px;
      text-shadow: none
    }

    #ajaxsearchprores3_1 .results .item,
    #ajaxsearchprores3_2 .results .item,
    div.asp_r.asp_r_3 .results .item {
      height: auto;
      background: rgb(255, 255, 255)
    }

    #ajaxsearchprores3_1 .results .item.hovered,
    #ajaxsearchprores3_2 .results .item.hovered,
    div.asp_r.asp_r_3 .results .item.hovered {
      background-image: -moz-radial-gradient(center, ellipse cover, rgb(244, 244, 244), rgb(246, 246, 246));
      background-image: -webkit-gradient(radial, center center, 0px, center center, 100%, rgb(244, 244, 244), rgb(246, 246, 246));
      background-image: -webkit-radial-gradient(center, ellipse cover, rgb(244, 244, 244), rgb(246, 246, 246));
      background-image: -o-radial-gradient(center, ellipse cover, rgb(244, 244, 244), rgb(246, 246, 246));
      background-image: -ms-radial-gradient(center, ellipse cover, rgb(244, 244, 244), rgb(246, 246, 246));
      background-image: radial-gradient(ellipse at center, rgb(244, 244, 244), rgb(246, 246, 246))
    }

    #ajaxsearchprores3_1 .results .item .asp_image,
    #ajaxsearchprores3_2 .results .item .asp_image,
    div.asp_r.asp_r_3 .results .item .asp_image {
      background-size: cover;
      background-repeat: no-repeat
    }

    #ajaxsearchprores3_1 .results .item .asp_item_overlay_img,
    #ajaxsearchprores3_2 .results .item .asp_item_overlay_img,
    div.asp_r.asp_r_3 .results .item .asp_item_overlay_img {
      background-size: cover;
      background-repeat: no-repeat
    }

    #ajaxsearchprores3_1 .results .item .asp_content,
    #ajaxsearchprores3_2 .results .item .asp_content,
    div.asp_r.asp_r_3 .results .item .asp_content {
      overflow: hidden;
      background: transparent;
      margin: 0;
      padding: 0 10px
    }

    #ajaxsearchprores3_1 .results .item .asp_content h3,
    #ajaxsearchprores3_2 .results .item .asp_content h3,
    div.asp_r.asp_r_3 .results .item .asp_content h3 {
      margin: 0;
      padding: 0;
      display: inline-block;
      line-height: inherit;
      font-weight: bold;
      font-family: "Lato";
      color: rgb(20, 104, 169);
      font-size: 14px;
      line-height: 1.55em;
      text-shadow: none
    }

    #ajaxsearchprores3_1 .results .item .asp_content h3 a,
    #ajaxsearchprores3_2 .results .item .asp_content h3 a,
    div.asp_r.asp_r_3 .results .item .asp_content h3 a {
      margin: 0;
      padding: 0;
      line-height: inherit;
      display: block;
      font-weight: bold;
      font-family: "Lato";
      color: rgb(20, 104, 169);
      font-size: 14px;
      line-height: 1.55em;
      text-shadow: none
    }

    #ajaxsearchprores3_1 .results .item .asp_content h3 a:hover,
    #ajaxsearchprores3_2 .results .item .asp_content h3 a:hover,
    div.asp_r.asp_r_3 .results .item .asp_content h3 a:hover {
      font-weight: bold;
      font-family: "Lato";
      color: rgb(20, 104, 169);
      font-size: 14px;
      line-height: 1.55em;
      text-shadow: none
    }

    #ajaxsearchprores3_1 .results .item div.etc,
    #ajaxsearchprores3_2 .results .item div.etc,
    div.asp_r.asp_r_3 .results .item div.etc {
      padding: 0;
      font-size: 13px;
      line-height: 1.3em;
      margin-bottom: 6px
    }

    #ajaxsearchprores3_1 .results .item .etc .asp_author,
    #ajaxsearchprores3_2 .results .item .etc .asp_author,
    div.asp_r.asp_r_3 .results .item .etc .asp_author {
      padding: 0;
      font-weight: bold;
      font-family: "Open Sans";
      color: rgb(161, 161, 161);
      font-size: 11px;
      line-height: 13px;
      text-shadow: none
    }

    #ajaxsearchprores3_1 .results .item .etc .asp_date,
    #ajaxsearchprores3_2 .results .item .etc .asp_date,
    div.asp_r.asp_r_3 .results .item .etc .asp_date {
      margin: 0 0 0 10px;
      padding: 0;
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(173, 173, 173);
      font-size: 11px;
      line-height: 15px;
      text-shadow: none
    }

    #ajaxsearchprores3_1 .results .item div.asp_content,
    #ajaxsearchprores3_2 .results .item div.asp_content,
    div.asp_r.asp_r_3 .results .item div.asp_content {
      margin: 0;
      padding: 0;
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(74, 74, 74);
      font-size: 13px;
      line-height: 1.35em;
      text-shadow: none
    }

    #ajaxsearchprores3_1 span.highlighted,
    #ajaxsearchprores3_2 span.highlighted,
    div.asp_r.asp_r_3 span.highlighted {
      font-weight: bold;
      color: rgba(217, 49, 43, 1);
      background-color: rgba(238, 238, 238, 1)
    }

    #ajaxsearchprores3_1 p.showmore,
    #ajaxsearchprores3_2 p.showmore,
    div.asp_r.asp_r_3 p.showmore {
      text-align: center;
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(5, 94, 148);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none
    }

    #ajaxsearchprores3_1 p.showmore a,
    #ajaxsearchprores3_2 p.showmore a,
    div.asp_r.asp_r_3 p.showmore a {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(5, 94, 148);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none;
      padding: 10px 5px;
      margin: 0 auto;
      background: rgba(255, 255, 255, 1);
      display: block;
      text-align: center
    }

    #ajaxsearchprores3_1 .asp_res_loader,
    #ajaxsearchprores3_2 .asp_res_loader,
    div.asp_r.asp_r_3 .asp_res_loader {
      background: rgb(255, 255, 255);
      height: 200px;
      padding: 10px
    }

    #ajaxsearchprores3_1.isotopic .asp_res_loader,
    #ajaxsearchprores3_2.isotopic .asp_res_loader,
    div.asp_r.asp_r_3.isotopic .asp_res_loader {
      background: rgba(255, 255, 255, 0)
    }

    #ajaxsearchprores3_1 .asp_res_loader .asp_loader,
    #ajaxsearchprores3_2 .asp_res_loader .asp_loader,
    div.asp_r.asp_r_3 .asp_res_loader .asp_loader {
      height: 200px;
      width: 200px;
      margin: 0 auto
    }

    div.asp_s.asp_s_3.searchsettings,
    div.asp_s.asp_s_3.searchsettings,
    div.asp_s.asp_s_3.searchsettings {
      direction: ltr;
      padding: 0;
      background-image: -webkit-linear-gradient(185deg, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -moz-linear-gradient(185deg, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -o-linear-gradient(185deg, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -ms-linear-gradient(185deg, rgb(255, 255, 255) 0, rgb(255, 255, 255) 100%);
      background-image: linear-gradient(185deg, rgb(255, 255, 255), rgb(255, 255, 255));
      box-shadow: 1px 1px 0 1px rgb(5, 5, 5);
      ;
      max-width: 208px;
      z-index: 2
    }

    div.asp_s.asp_s_3.searchsettings.asp_s,
    div.asp_s.asp_s_3.searchsettings.asp_s,
    div.asp_s.asp_s_3.searchsettings.asp_s {
      z-index: 11001
    }

    #ajaxsearchprobsettings3_1.searchsettings,
    #ajaxsearchprobsettings3_2.searchsettings,
    div.asp_sb.asp_sb_3.searchsettings {
      max-width: none
    }

    div.asp_s.asp_s_3.searchsettings form,
    div.asp_s.asp_s_3.searchsettings form,
    div.asp_s.asp_s_3.searchsettings form {
      display: flex
    }

    div.asp_sb.asp_sb_3.searchsettings form,
    div.asp_sb.asp_sb_3.searchsettings form,
    div.asp_sb.asp_sb_3.searchsettings form {
      display: flex
    }

    #ajaxsearchprosettings3_1.searchsettings div.asp_option_label,
    #ajaxsearchprosettings3_2.searchsettings div.asp_option_label,
    #ajaxsearchprosettings3_1.searchsettings .asp_label,
    #ajaxsearchprosettings3_2.searchsettings .asp_label,
    div.asp_s.asp_s_3.searchsettings div.asp_option_label,
    div.asp_s.asp_s_3.searchsettings .asp_label {
      font-weight: bold;
      font-family: "Open Sans";
      color: rgb(43, 43, 43);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none
    }

    #ajaxsearchprosettings3_1.searchsettings .asp_option_inner .asp_option_checkbox,
    #ajaxsearchprosettings3_2.searchsettings .asp_option_inner .asp_option_checkbox,
    div.asp_sb.asp_sb_3.searchsettings .asp_option_inner .asp_option_checkbox,
    div.asp_s.asp_s_3.searchsettings .asp_option_inner .asp_option_checkbox {
      background-image: -webkit-linear-gradient(180deg, rgb(34, 34, 34), rgb(69, 72, 77));
      background-image: -moz-linear-gradient(180deg, rgb(34, 34, 34), rgb(69, 72, 77));
      background-image: -o-linear-gradient(180deg, rgb(34, 34, 34), rgb(69, 72, 77));
      background-image: -ms-linear-gradient(180deg, rgb(34, 34, 34) 0, rgb(69, 72, 77) 100%);
      background-image: linear-gradient(180deg, rgb(34, 34, 34), rgb(69, 72, 77))
    }

    #ajaxsearchprosettings3_1.searchsettings .asp_option_inner .asp_option_checkbox:after,
    #ajaxsearchprosettings3_2.searchsettings .asp_option_inner .asp_option_checkbox:after,
    #ajaxsearchprobsettings3_1.searchsettings .asp_option_inner .asp_option_checkbox:after,
    #ajaxsearchprobsettings3_2.searchsettings .asp_option_inner .asp_option_checkbox:after,
    div.asp_sb.asp_sb_3.searchsettings .asp_option_inner .asp_option_checkbox:after,
    div.asp_s.asp_s_3.searchsettings .asp_option_inner .asp_option_checkbox:after {
      font-family: 'asppsicons2';
      border: none;
      content: "\e800";
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      font-size: 11px;
      color: rgb(255, 255, 255);
      margin: 1px 0 0 0 !important;
      line-height: 17px;
      text-align: center;
      text-decoration: none;
      text-shadow: none
    }

    div.asp_sb.asp_sb_3.searchsettings .asp_sett_scroll,
    div.asp_s.asp_s_3.searchsettings .asp_sett_scroll {
      scrollbar-width: thin;
      scrollbar-color: rgba(0, 0, 0, 0.5) transparent
    }

    div.asp_sb.asp_sb_3.searchsettings .asp_sett_scroll::-webkit-scrollbar,
    div.asp_s.asp_s_3.searchsettings .asp_sett_scroll::-webkit-scrollbar {
      width: 7px
    }

    div.asp_sb.asp_sb_3.searchsettings .asp_sett_scroll::-webkit-scrollbar-track,
    div.asp_s.asp_s_3.searchsettings .asp_sett_scroll::-webkit-scrollbar-track {
      background: transparent
    }

    div.asp_sb.asp_sb_3.searchsettings .asp_sett_scroll::-webkit-scrollbar-thumb,
    div.asp_s.asp_s_3.searchsettings .asp_sett_scroll::-webkit-scrollbar-thumb {
      background: rgba(0, 0, 0, 0.5);
      border-radius: 5px;
      border: none
    }

    #ajaxsearchprosettings3_1.searchsettings .asp_sett_scroll,
    #ajaxsearchprosettings3_2.searchsettings .asp_sett_scroll,
    div.asp_s.asp_s_3.searchsettings .asp_sett_scroll {
      max-height: 220px;
      overflow: auto
    }

    #ajaxsearchprobsettings3_1.searchsettings .asp_sett_scroll,
    #ajaxsearchprobsettings3_2.searchsettings .asp_sett_scroll,
    div.asp_sb.asp_sb_3.searchsettings .asp_sett_scroll {
      max-height: 220px;
      overflow: auto
    }

    #ajaxsearchprosettings3_1.searchsettings fieldset,
    #ajaxsearchprosettings3_2.searchsettings fieldset,
    div.asp_s.asp_s_3.searchsettings fieldset {
      width: 200px;
      min-width: 200px;
      max-width: 10000px
    }

    #ajaxsearchprobsettings3_1.searchsettings fieldset,
    #ajaxsearchprobsettings3_2.searchsettings fieldset,
    div.asp_sb.asp_sb_3.searchsettings fieldset {
      width: 200px;
      min-width: 200px;
      max-width: 10000px
    }

    #ajaxsearchprosettings3_1.searchsettings fieldset legend,
    #ajaxsearchprosettings3_2.searchsettings fieldset legend,
    div.asp_s.asp_s_3.searchsettings fieldset legend {
      padding: 0 0 0 10px;
      margin: 0;
      background: transparent;
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(71, 71, 71);
      font-size: 13px;
      line-height: 15px;
      text-shadow: none
    }

    #ajaxsearchprores3_1.vertical,
    #ajaxsearchprores3_2.vertical,
    div.asp_r.asp_r_3.vertical {
      padding: 4px;
      background: rgb(255, 255, 255);
      border-radius: 3px;
      border: 2px solid rgb(5, 5, 5);
      border-radius: 3px 3px 3px 3px;
      box-shadow: none;
      visibility: hidden;
      display: none
    }

    #ajaxsearchprores3_1.vertical .results,
    #ajaxsearchprores3_2.vertical .results,
    div.asp_r.asp_r_3.vertical .results {
      max-height: none;
      overflow-x: hidden;
      overflow-y: auto
    }

    #ajaxsearchprores3_1.vertical .item,
    #ajaxsearchprores3_2.vertical .item,
    div.asp_r.asp_r_3.vertical .item {
      position: relative;
      box-sizing: border-box
    }

    #ajaxsearchprores3_1.vertical .item .asp_content h3,
    #ajaxsearchprores3_2.vertical .item .asp_content h3,
    div.asp_r.asp_r_3.vertical .item .asp_content h3 {
      display: inline
    }

    #ajaxsearchprores3_1.vertical .results .item .asp_content,
    #ajaxsearchprores3_2.vertical .results .item .asp_content,
    div.asp_r.asp_r_3.vertical .results .item .asp_content {
      overflow: hidden;
      width: auto;
      height: auto;
      background: transparent;
      margin: 0;
      padding: 8px
    }

    #ajaxsearchprores3_1.vertical .results .item .asp_image,
    #ajaxsearchprores3_2.vertical .results .item .asp_image,
    div.asp_r.asp_r_3.vertical .results .item .asp_image {
      width: 50px;
      height: 50px;
      margin: 2px 8px 0 0
    }

    #ajaxsearchprores3_1.vertical .asp_simplebar-scrollbar::before,
    #ajaxsearchprores3_2.vertical .asp_simplebar-scrollbar::before,
    div.asp_r.asp_r_3.vertical .asp_simplebar-scrollbar::before {
      background: transparent;
      background-image: -moz-radial-gradient(center, ellipse cover, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
      background-image: -webkit-gradient(radial, center center, 0px, center center, 100%, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
      background-image: -webkit-radial-gradient(center, ellipse cover, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
      background-image: -o-radial-gradient(center, ellipse cover, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
      background-image: -ms-radial-gradient(center, ellipse cover, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
      background-image: radial-gradient(ellipse at center, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))
    }

    #ajaxsearchprores3_1.vertical .results .item::after,
    #ajaxsearchprores3_2.vertical .results .item::after,
    div.asp_r.asp_r_3.vertical .results .item::after {
      display: block;
      position: absolute;
      bottom: 0;
      content: "";
      height: 1px;
      width: 100%;
      background: rgba(255, 255, 255, 0.55)
    }

    #ajaxsearchprores3_1.vertical .results .item.asp_last_item::after,
    #ajaxsearchprores3_2.vertical .results .item.asp_last_item::after,
    div.asp_r.asp_r_3.vertical .results .item.asp_last_item::after {
      display: none
    }

    .asp_spacer {
      display: none !important;
    }

    .asp_v_spacer {
      width: 100%;
      height: 0
    }

    #ajaxsearchprores3_1 .asp_group_header,
    #ajaxsearchprores3_2 .asp_group_header,
    div.asp_r.asp_r_3 .asp_group_header {
      background: #DDD;
      background: rgb(246, 246, 246);
      border-radius: 3px 3px 0 0;
      border-top: 1px solid rgb(248, 248, 248);
      border-left: 1px solid rgb(248, 248, 248);
      border-right: 1px solid rgb(248, 248, 248);
      margin: 0 0 -3px;
      padding: 7px 0 7px 10px;
      position: relative;
      z-index: 1000;
      min-width: 90%;
      flex-grow: 1;
      font-weight: bold;
      font-family: "Open Sans";
      color: rgb(5, 94, 148);
      font-size: 11px;
      line-height: 13px;
      text-shadow: none
    }

    #ajaxsearchprores3_1.vertical .results,
    #ajaxsearchprores3_2.vertical .results,
    div.asp_r.asp_r_3.vertical .results {
      scrollbar-width: thin;
      scrollbar-color: rgba(0, 0, 0, 0.5) rgb(255, 255, 255)
    }

    #ajaxsearchprores3_1.vertical .results::-webkit-scrollbar,
    #ajaxsearchprores3_2.vertical .results::-webkit-scrollbar,
    div.asp_r.asp_r_3.vertical .results::-webkit-scrollbar {
      width: 10px
    }

    #ajaxsearchprores3_1.vertical .results::-webkit-scrollbar-track,
    #ajaxsearchprores3_2.vertical .results::-webkit-scrollbar-track,
    div.asp_r.asp_r_3.vertical .results::-webkit-scrollbar-track {
      background: rgb(255, 255, 255);
      box-shadow: inset 0 0 12px 12px transparent;
      border: none
    }

    #ajaxsearchprores3_1.vertical .results::-webkit-scrollbar-thumb,
    #ajaxsearchprores3_2.vertical .results::-webkit-scrollbar-thumb,
    div.asp_r.asp_r_3.vertical .results::-webkit-scrollbar-thumb {
      background: transparent;
      box-shadow: inset 0 0 12px 12px rgba(0, 0, 0, 0);
      border: solid 2px transparent;
      border-radius: 12px
    }

    #ajaxsearchprores3_1.vertical:hover .results::-webkit-scrollbar-thumb,
    #ajaxsearchprores3_2.vertical:hover .results::-webkit-scrollbar-thumb,
    div.asp_r.asp_r_3.vertical:hover .results::-webkit-scrollbar-thumb {
      box-shadow: inset 0 0 12px 12px rgba(0, 0, 0, 0.5)
    }

    @media(hover:none), (max-width:500px) {

      #ajaxsearchprores3_1.vertical .results::-webkit-scrollbar-thumb,
      #ajaxsearchprores3_2.vertical .results::-webkit-scrollbar-thumb,
      div.asp_r.asp_r_3.vertical .results::-webkit-scrollbar-thumb {
        box-shadow: inset 0 0 12px 12px rgba(0, 0, 0, 0.5)
      }
    }
  </style>
  <style id="asp-instance-4">
    div[id*='ajaxsearchpro4_'] div.asp_loader,
    div[id*='ajaxsearchpro4_'] div.asp_loader * {
      box-sizing: border-box !important;
      margin: 0;
      padding: 0;
      box-shadow: none
    }

    div[id*='ajaxsearchpro4_'] div.asp_loader {
      box-sizing: border-box;
      display: flex;
      flex: 0 1 auto;
      flex-direction: column;
      flex-grow: 0;
      flex-shrink: 0;
      flex-basis: 28px;
      max-width: 100%;
      max-height: 100%;
      align-items: center;
      justify-content: center
    }

    div[id*='ajaxsearchpro4_'] div.asp_loader-inner {
      width: 100%;
      margin: 0 auto;
      text-align: center;
      height: 100%
    }

    @-webkit-keyframes ball-scale {
      0% {
        -webkit-transform: scale(0);
        transform: scale(0)
      }

      100% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: 0
      }
    }

    @keyframes ball-scale {
      0% {
        -webkit-transform: scale(0);
        transform: scale(0)
      }

      100% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: 0
      }
    }

    div[id*='ajaxsearchpro4_'] div.asp_ball-scale>div {
      background-color: rgb(5, 5, 5);
      border-radius: 100%;
      -webkit-animation-fill-mode: both;
      animation-fill-mode: both;
      display: inline-block;
      height: 100%;
      width: 100%;
      -webkit-animation: ball-scale 1s 0s ease-in-out infinite;
      animation: ball-scale 1s 0s ease-in-out infinite
    }

    div[id*='ajaxsearchprores4_'] .asp_res_loader div.asp_loader,
    div[id*='ajaxsearchprores4_'] .asp_res_loader div.asp_loader * {
      box-sizing: border-box !important;
      margin: 0;
      padding: 0;
      box-shadow: none
    }

    div[id*='ajaxsearchprores4_'] .asp_res_loader div.asp_loader {
      box-sizing: border-box;
      display: flex;
      flex: 0 1 auto;
      flex-direction: column;
      flex-grow: 0;
      flex-shrink: 0;
      flex-basis: 28px;
      max-width: 100%;
      max-height: 100%;
      align-items: center;
      justify-content: center
    }

    div[id*='ajaxsearchprores4_'] .asp_res_loader div.asp_loader-inner {
      width: 100%;
      margin: 0 auto;
      text-align: center;
      height: 100%
    }

    @-webkit-keyframes ball-scale {
      0% {
        -webkit-transform: scale(0);
        transform: scale(0)
      }

      100% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: 0
      }
    }

    @keyframes ball-scale {
      0% {
        -webkit-transform: scale(0);
        transform: scale(0)
      }

      100% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: 0
      }
    }

    div[id*='ajaxsearchprores4_'] .asp_res_loader div.asp_ball-scale>div {
      background-color: rgb(5, 5, 5);
      border-radius: 100%;
      -webkit-animation-fill-mode: both;
      animation-fill-mode: both;
      display: inline-block;
      height: 100%;
      width: 100%;
      -webkit-animation: ball-scale 1s 0s ease-in-out infinite;
      animation: ball-scale 1s 0s ease-in-out infinite
    }

    #ajaxsearchpro4_1 div.asp_loader,
    #ajaxsearchpro4_2 div.asp_loader,
    #ajaxsearchpro4_1 div.asp_loader *,
    #ajaxsearchpro4_2 div.asp_loader * {
      box-sizing: border-box !important;
      margin: 0;
      padding: 0;
      box-shadow: none
    }

    #ajaxsearchpro4_1 div.asp_loader,
    #ajaxsearchpro4_2 div.asp_loader {
      box-sizing: border-box;
      display: flex;
      flex: 0 1 auto;
      flex-direction: column;
      flex-grow: 0;
      flex-shrink: 0;
      flex-basis: 28px;
      max-width: 100%;
      max-height: 100%;
      align-items: center;
      justify-content: center
    }

    #ajaxsearchpro4_1 div.asp_loader-inner,
    #ajaxsearchpro4_2 div.asp_loader-inner {
      width: 100%;
      margin: 0 auto;
      text-align: center;
      height: 100%
    }

    @-webkit-keyframes ball-scale {
      0% {
        -webkit-transform: scale(0);
        transform: scale(0)
      }

      100% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: 0
      }
    }

    @keyframes ball-scale {
      0% {
        -webkit-transform: scale(0);
        transform: scale(0)
      }

      100% {
        -webkit-transform: scale(1);
        transform: scale(1);
        opacity: 0
      }
    }

    #ajaxsearchpro4_1 div.asp_ball-scale>div,
    #ajaxsearchpro4_2 div.asp_ball-scale>div {
      background-color: rgb(5, 5, 5);
      border-radius: 100%;
      -webkit-animation-fill-mode: both;
      animation-fill-mode: both;
      display: inline-block;
      height: 100%;
      width: 100%;
      -webkit-animation: ball-scale 1s 0s ease-in-out infinite;
      animation: ball-scale 1s 0s ease-in-out infinite
    }

    @-webkit-keyframes asp_an_fadeInDown {
      0% {
        opacity: 0;
        -webkit-transform: translateY(-20px)
      }

      100% {
        opacity: 1;
        -webkit-transform: translateY(0)
      }
    }

    @keyframes asp_an_fadeInDown {
      0% {
        opacity: 0;
        transform: translateY(-20px)
      }

      100% {
        opacity: 1;
        transform: translateY(0)
      }
    }

    .asp_an_fadeInDown {
      -webkit-animation-name: asp_an_fadeInDown;
      animation-name: asp_an_fadeInDown
    }

    div.asp_r.asp_r_4,
    div.asp_r.asp_r_4 *,
    div.asp_m.asp_m_4,
    div.asp_m.asp_m_4 *,
    div.asp_s.asp_s_4,
    div.asp_s.asp_s_4 * {
      -webkit-box-sizing: content-box;
      -moz-box-sizing: content-box;
      -ms-box-sizing: content-box;
      -o-box-sizing: content-box;
      box-sizing: content-box;
      border: 0;
      border-radius: 0;
      text-transform: none;
      text-shadow: none;
      box-shadow: none;
      text-decoration: none;
      text-align: left;
      letter-spacing: normal
    }

    div.asp_r.asp_r_4,
    div.asp_m.asp_m_4,
    div.asp_s.asp_s_4 {
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      -ms-box-sizing: border-box;
      -o-box-sizing: border-box;
      box-sizing: border-box
    }

    div.asp_r.asp_r_4,
    div.asp_r.asp_r_4 *,
    div.asp_m.asp_m_4,
    div.asp_m.asp_m_4 *,
    div.asp_s.asp_s_4,
    div.asp_s.asp_s_4 * {
      padding: 0;
      margin: 0
    }

    .wpdreams_clear {
      clear: both
    }

    .asp_w_container_4 {
      width: 100%
    }

    #ajaxsearchpro4_1,
    #ajaxsearchpro4_2,
    div.asp_m.asp_m_4 {
      width: 100%;
      height: auto;
      max-height: none;
      border-radius: 5px;
      background: #d1eaff;
      margin-top: 0;
      margin-bottom: 0;
      background-image: -moz-radial-gradient(center, ellipse cover, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -webkit-gradient(radial, center center, 0px, center center, 100%, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -webkit-radial-gradient(center, ellipse cover, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -o-radial-gradient(center, ellipse cover, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -ms-radial-gradient(center, ellipse cover, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: radial-gradient(ellipse at center, rgb(255, 255, 255), rgb(255, 255, 255));
      overflow: hidden;
      border: 2px inset rgb(114, 137, 217);
      border-radius: 10px 10px 10px 10px;
      box-shadow: none
    }

    #ajaxsearchpro4_1 .probox,
    #ajaxsearchpro4_2 .probox,
    div.asp_m.asp_m_4 .probox {
      margin: 6px;
      height: 32px;
      background: transparent;
      border: 0 none rgb(255, 255, 255);
      border-radius: 0;
      box-shadow: none
    }

    p[id*=asp-try-4] {
      color: rgb(85, 85, 85) !important;
      display: block
    }

    div.asp_main_container+[id*=asp-try-4] {
      width: 100%
    }

    p[id*=asp-try-4] a {
      color: rgb(255, 181, 86) !important
    }

    p[id*=asp-try-4] a:after {
      color: rgb(85, 85, 85) !important;
      display: inline;
      content: ','
    }

    p[id*=asp-try-4] a:last-child:after {
      display: none
    }

    #ajaxsearchpro4_1 .probox .proinput,
    #ajaxsearchpro4_2 .probox .proinput,
    div.asp_m.asp_m_4 .probox .proinput {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none;
      line-height: normal;
      flex-grow: 1;
      order: 5;
      -webkit-flex-grow: 1;
      -webkit-order: 5
    }

    #ajaxsearchpro4_1 .probox .proinput input.orig,
    #ajaxsearchpro4_2 .probox .proinput input.orig,
    div.asp_m.asp_m_4 .probox .proinput input.orig {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none;
      line-height: normal;
      border: 0;
      box-shadow: none;
      height: 32px;
      position: relative;
      z-index: 2;
      padding: 0 !important;
      padding-top: 2px !important;
      margin: -1px 0 0 -4px !important;
      width: 100%;
      background: transparent !important
    }

    #ajaxsearchpro4_1 .probox .proinput input.autocomplete,
    #ajaxsearchpro4_2 .probox .proinput input.autocomplete,
    div.asp_m.asp_m_4 .probox .proinput input.autocomplete {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none;
      line-height: normal;
      opacity: 0.25;
      height: 32px;
      display: block;
      position: relative;
      z-index: 1;
      padding: 0 !important;
      margin: -1px 0 0 -4px !important;
      margin-top: -32px !important;
      width: 100%;
      background: transparent !important
    }

    .rtl #ajaxsearchpro4_1 .probox .proinput input.orig,
    .rtl #ajaxsearchpro4_2 .probox .proinput input.orig,
    .rtl #ajaxsearchpro4_1 .probox .proinput input.autocomplete,
    .rtl #ajaxsearchpro4_2 .probox .proinput input.autocomplete,
    .rtl div.asp_m.asp_m_4 .probox .proinput input.orig,
    .rtl div.asp_m.asp_m_4 .probox .proinput input.autocomplete {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none;
      line-height: normal;
      direction: rtl;
      text-align: right
    }

    .rtl #ajaxsearchpro4_1 .probox .proinput,
    .rtl #ajaxsearchpro4_2 .probox .proinput,
    .rtl div.asp_m.asp_m_4 .probox .proinput {
      margin-right: 2px
    }

    .rtl #ajaxsearchpro4_1 .probox .proloading,
    .rtl #ajaxsearchpro4_1 .probox .proclose,
    .rtl #ajaxsearchpro4_2 .probox .proloading,
    .rtl #ajaxsearchpro4_2 .probox .proclose,
    .rtl div.asp_m.asp_m_4 .probox .proloading,
    .rtl div.asp_m.asp_m_4 .probox .proclose {
      order: 3
    }

    div.asp_m.asp_m_4 .probox .proinput input.orig::-webkit-input-placeholder {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      text-shadow: none;
      opacity: 0.85
    }

    div.asp_m.asp_m_4 .probox .proinput input.orig::-moz-placeholder {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      text-shadow: none;
      opacity: 0.85
    }

    div.asp_m.asp_m_4 .probox .proinput input.orig:-ms-input-placeholder {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      text-shadow: none;
      opacity: 0.85
    }

    div.asp_m.asp_m_4 .probox .proinput input.orig:-moz-placeholder {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      text-shadow: none;
      opacity: 0.85;
      line-height: normal !important
    }

    #ajaxsearchpro4_1 .probox .proinput input.autocomplete,
    #ajaxsearchpro4_2 .probox .proinput input.autocomplete,
    div.asp_m.asp_m_4 .probox .proinput input.autocomplete {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(0, 0, 0);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none;
      line-height: normal;
      border: 0;
      box-shadow: none
    }

    #ajaxsearchpro4_1 .probox .proloading,
    #ajaxsearchpro4_1 .probox .proclose,
    #ajaxsearchpro4_1 .probox .promagnifier,
    #ajaxsearchpro4_1 .probox .prosettings,
    #ajaxsearchpro4_2 .probox .proloading,
    #ajaxsearchpro4_2 .probox .proclose,
    #ajaxsearchpro4_2 .probox .promagnifier,
    #ajaxsearchpro4_2 .probox .prosettings,
    div.asp_m.asp_m_4 .probox .proloading,
    div.asp_m.asp_m_4 .probox .proclose,
    div.asp_m.asp_m_4 .probox .promagnifier,
    div.asp_m.asp_m_4 .probox .prosettings {
      width: 32px;
      height: 32px;
      flex: 0 0 32px;
      flex-grow: 0;
      order: 7;
      -webkit-flex: 0 0 32px;
      -webkit-flex-grow: 0;
      -webkit-order: 7
    }

    #ajaxsearchpro4_1 .probox .proclose svg,
    #ajaxsearchpro4_2 .probox .proclose svg,
    div.asp_m.asp_m_4 .probox .proclose svg {
      fill: rgb(254, 254, 254);
      background: rgb(51, 51, 51);
      box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.9)
    }

    #ajaxsearchpro4_1 .probox .proloading,
    #ajaxsearchpro4_2 .probox .proloading,
    div.asp_m.asp_m_4 .probox .proloading {
      width: 32px;
      height: 32px;
      min-width: 32px;
      min-height: 32px;
      max-width: 32px;
      max-height: 32px
    }

    #ajaxsearchpro4_1 .probox .proloading .asp_loader,
    #ajaxsearchpro4_2 .probox .proloading .asp_loader,
    div.asp_m.asp_m_4 .probox .proloading .asp_loader {
      width: 28px;
      height: 28px;
      min-width: 28px;
      min-height: 28px;
      max-width: 28px;
      max-height: 28px
    }

    #ajaxsearchpro4_1 .probox .promagnifier,
    #ajaxsearchpro4_2 .probox .promagnifier,
    div.asp_m.asp_m_4 .probox .promagnifier {
      width: auto;
      height: 32px;
      flex: 0 0 auto;
      order: 7;
      -webkit-flex: 0 0 auto;
      -webkit-order: 7
    }

    div.asp_m.asp_m_4 .probox .promagnifier:focus-visible {
      outline: black outset
    }

    #ajaxsearchpro4_1 .probox .promagnifier .innericon,
    #ajaxsearchpro4_2 .probox .promagnifier .innericon,
    div.asp_m.asp_m_4 .probox .promagnifier .innericon {
      display: block;
      width: 32px;
      height: 32px;
      float: right
    }

    #ajaxsearchpro4_1 .probox .promagnifier .asp_text_button,
    #ajaxsearchpro4_2 .probox .promagnifier .asp_text_button,
    div.asp_m.asp_m_4 .probox .promagnifier .asp_text_button {
      display: block;
      width: auto;
      height: 32px;
      float: right;
      margin: 0;
      padding: 0 10px 0 2px;
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(51, 51, 51);
      font-size: 15px;
      line-height: auto;
      text-shadow: none;
      line-height: 32px
    }

    #ajaxsearchpro4_1 .probox .promagnifier .innericon svg,
    #ajaxsearchpro4_2 .probox .promagnifier .innericon svg,
    div.asp_m.asp_m_4 .probox .promagnifier .innericon svg {
      fill: rgb(5, 5, 5)
    }

    #ajaxsearchpro4_1 .probox .prosettings .innericon svg,
    #ajaxsearchpro4_2 .probox .prosettings .innericon svg,
    div.asp_m.asp_m_4 .probox .prosettings .innericon svg {
      fill: rgb(5, 5, 5)
    }

    #ajaxsearchpro4_1 .probox .promagnifier,
    #ajaxsearchpro4_2 .probox .promagnifier,
    div.asp_m.asp_m_4 .probox .promagnifier {
      width: 32px;
      height: 32px;
      background: transparent;
      background-position: center center;
      background-repeat: no-repeat;
      order: 11;
      -webkit-order: 11;
      float: right;
      border: 0 solid rgb(255, 255, 255);
      border-radius: 0;
      box-shadow: -1px 1px 0 0 rgba(255, 255, 255, 0.64) inset;
      cursor: pointer;
      background-size: 100% 100%;
      background-position: center center;
      background-repeat: no-repeat;
      cursor: pointer
    }

    #ajaxsearchpro4_1 .probox .prosettings,
    #ajaxsearchpro4_2 .probox .prosettings,
    div.asp_m.asp_m_4 .probox .prosettings {
      width: 32px;
      height: 32px;
      background: transparent;
      background-position: center center;
      background-repeat: no-repeat;
      order: 10;
      -webkit-order: 10;
      float: right;
      border: 0 solid rgb(255, 255, 255);
      border-radius: 0;
      box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.64) inset;
      cursor: pointer;
      background-size: 100% 100%;
      align-self: flex-end
    }

    #ajaxsearchprores4_1,
    #ajaxsearchprores4_2,
    div.asp_r.asp_r_4 {
      position: absolute;
      z-index: 11000;
      width: auto;
      margin: 12px 0 0 0
    }

    #ajaxsearchprores4_1 .asp_nores,
    #ajaxsearchprores4_2 .asp_nores,
    div.asp_r.asp_r_4 .asp_nores {
      border: 0 solid rgb(0, 0, 0);
      border-radius: 0;
      box-shadow: 0 5px 5px -5px #dfdfdf;
      padding: 6px 12px 6px 12px;
      margin: 0;
      font-weight: normal;
      font-family: inherit;
      color: rgba(74, 74, 74, 1);
      font-size: 1rem;
      line-height: 1.2rem;
      text-shadow: none;
      font-weight: normal;
      background: rgb(255, 255, 255)
    }

    #ajaxsearchprores4_1 .asp_nores .asp_nores_kw_suggestions,
    #ajaxsearchprores4_2 .asp_nores .asp_nores_kw_suggestions,
    div.asp_r.asp_r_4 .asp_nores .asp_nores_kw_suggestions {
      color: rgba(234, 67, 53, 1);
      font-weight: normal
    }

    #ajaxsearchprores4_1 .asp_nores .asp_keyword,
    #ajaxsearchprores4_2 .asp_nores .asp_keyword,
    div.asp_r.asp_r_4 .asp_nores .asp_keyword {
      padding: 0 8px 0 0;
      cursor: pointer;
      color: rgba(20, 84, 169, 1);
      font-weight: bold
    }

    #ajaxsearchprores4_1 .asp_results_top,
    #ajaxsearchprores4_2 .asp_results_top,
    div.asp_r.asp_r_4 .asp_results_top {
      background: rgb(255, 255, 255);
      border: 1px none rgb(81, 81, 81);
      border-radius: 0;
      padding: 6px 12px 6px 12px;
      margin: 0 0 4px 0;
      text-align: center;
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(81, 81, 81);
      font-size: 13px;
      line-height: 16px;
      text-shadow: none
    }

    #ajaxsearchprores4_1 .results .item,
    #ajaxsearchprores4_2 .results .item,
    div.asp_r.asp_r_4 .results .item {
      height: auto;
      background: rgb(255, 255, 255)
    }

    #ajaxsearchprores4_1 .results .item.hovered,
    #ajaxsearchprores4_2 .results .item.hovered,
    div.asp_r.asp_r_4 .results .item.hovered {
      background-image: -moz-radial-gradient(center, ellipse cover, rgb(244, 244, 244), rgb(246, 246, 246));
      background-image: -webkit-gradient(radial, center center, 0px, center center, 100%, rgb(244, 244, 244), rgb(246, 246, 246));
      background-image: -webkit-radial-gradient(center, ellipse cover, rgb(244, 244, 244), rgb(246, 246, 246));
      background-image: -o-radial-gradient(center, ellipse cover, rgb(244, 244, 244), rgb(246, 246, 246));
      background-image: -ms-radial-gradient(center, ellipse cover, rgb(244, 244, 244), rgb(246, 246, 246));
      background-image: radial-gradient(ellipse at center, rgb(244, 244, 244), rgb(246, 246, 246))
    }

    #ajaxsearchprores4_1 .results .item .asp_image,
    #ajaxsearchprores4_2 .results .item .asp_image,
    div.asp_r.asp_r_4 .results .item .asp_image {
      background-size: cover;
      background-repeat: no-repeat
    }

    #ajaxsearchprores4_1 .results .item .asp_item_overlay_img,
    #ajaxsearchprores4_2 .results .item .asp_item_overlay_img,
    div.asp_r.asp_r_4 .results .item .asp_item_overlay_img {
      background-size: cover;
      background-repeat: no-repeat
    }

    #ajaxsearchprores4_1 .results .item .asp_content,
    #ajaxsearchprores4_2 .results .item .asp_content,
    div.asp_r.asp_r_4 .results .item .asp_content {
      overflow: hidden;
      background: transparent;
      margin: 0;
      padding: 0 10px
    }

    #ajaxsearchprores4_1 .results .item .asp_content h3,
    #ajaxsearchprores4_2 .results .item .asp_content h3,
    div.asp_r.asp_r_4 .results .item .asp_content h3 {
      margin: 0;
      padding: 0;
      display: inline-block;
      line-height: inherit;
      font-weight: bold;
      font-family: "Lato";
      color: rgb(20, 104, 169);
      font-size: 14px;
      line-height: 1.55em;
      text-shadow: none
    }

    #ajaxsearchprores4_1 .results .item .asp_content h3 a,
    #ajaxsearchprores4_2 .results .item .asp_content h3 a,
    div.asp_r.asp_r_4 .results .item .asp_content h3 a {
      margin: 0;
      padding: 0;
      line-height: inherit;
      display: block;
      font-weight: bold;
      font-family: "Lato";
      color: rgb(20, 104, 169);
      font-size: 14px;
      line-height: 1.55em;
      text-shadow: none
    }

    #ajaxsearchprores4_1 .results .item .asp_content h3 a:hover,
    #ajaxsearchprores4_2 .results .item .asp_content h3 a:hover,
    div.asp_r.asp_r_4 .results .item .asp_content h3 a:hover {
      font-weight: bold;
      font-family: "Lato";
      color: rgb(20, 104, 169);
      font-size: 14px;
      line-height: 1.55em;
      text-shadow: none
    }

    #ajaxsearchprores4_1 .results .item div.etc,
    #ajaxsearchprores4_2 .results .item div.etc,
    div.asp_r.asp_r_4 .results .item div.etc {
      padding: 0;
      font-size: 13px;
      line-height: 1.3em;
      margin-bottom: 6px
    }

    #ajaxsearchprores4_1 .results .item .etc .asp_author,
    #ajaxsearchprores4_2 .results .item .etc .asp_author,
    div.asp_r.asp_r_4 .results .item .etc .asp_author {
      padding: 0;
      font-weight: bold;
      font-family: "Open Sans";
      color: rgb(161, 161, 161);
      font-size: 11px;
      line-height: 13px;
      text-shadow: none
    }

    #ajaxsearchprores4_1 .results .item .etc .asp_date,
    #ajaxsearchprores4_2 .results .item .etc .asp_date,
    div.asp_r.asp_r_4 .results .item .etc .asp_date {
      margin: 0 0 0 10px;
      padding: 0;
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(173, 173, 173);
      font-size: 11px;
      line-height: 15px;
      text-shadow: none
    }

    #ajaxsearchprores4_1 .results .item div.asp_content,
    #ajaxsearchprores4_2 .results .item div.asp_content,
    div.asp_r.asp_r_4 .results .item div.asp_content {
      margin: 0;
      padding: 0;
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(74, 74, 74);
      font-size: 13px;
      line-height: 1.35em;
      text-shadow: none
    }

    #ajaxsearchprores4_1 span.highlighted,
    #ajaxsearchprores4_2 span.highlighted,
    div.asp_r.asp_r_4 span.highlighted {
      font-weight: bold;
      color: rgba(217, 49, 43, 1);
      background-color: rgba(238, 238, 238, 1)
    }

    #ajaxsearchprores4_1 p.showmore,
    #ajaxsearchprores4_2 p.showmore,
    div.asp_r.asp_r_4 p.showmore {
      text-align: center;
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(5, 94, 148);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none
    }

    #ajaxsearchprores4_1 p.showmore a,
    #ajaxsearchprores4_2 p.showmore a,
    div.asp_r.asp_r_4 p.showmore a {
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(5, 94, 148);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none;
      padding: 10px 5px;
      margin: 0 auto;
      background: rgba(255, 255, 255, 1);
      display: block;
      text-align: center
    }

    #ajaxsearchprores4_1 .asp_res_loader,
    #ajaxsearchprores4_2 .asp_res_loader,
    div.asp_r.asp_r_4 .asp_res_loader {
      background: rgb(255, 255, 255);
      height: 200px;
      padding: 10px
    }

    #ajaxsearchprores4_1.isotopic .asp_res_loader,
    #ajaxsearchprores4_2.isotopic .asp_res_loader,
    div.asp_r.asp_r_4.isotopic .asp_res_loader {
      background: rgba(255, 255, 255, 0)
    }

    #ajaxsearchprores4_1 .asp_res_loader .asp_loader,
    #ajaxsearchprores4_2 .asp_res_loader .asp_loader,
    div.asp_r.asp_r_4 .asp_res_loader .asp_loader {
      height: 200px;
      width: 200px;
      margin: 0 auto
    }

    div.asp_s.asp_s_4.searchsettings,
    div.asp_s.asp_s_4.searchsettings,
    div.asp_s.asp_s_4.searchsettings {
      direction: ltr;
      padding: 0;
      background-image: -webkit-linear-gradient(185deg, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -moz-linear-gradient(185deg, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -o-linear-gradient(185deg, rgb(255, 255, 255), rgb(255, 255, 255));
      background-image: -ms-linear-gradient(185deg, rgb(255, 255, 255) 0, rgb(255, 255, 255) 100%);
      background-image: linear-gradient(185deg, rgb(255, 255, 255), rgb(255, 255, 255));
      box-shadow: 1px 1px 0 1px rgb(5, 5, 5);
      ;
      max-width: 208px;
      z-index: 2
    }

    div.asp_s.asp_s_4.searchsettings.asp_s,
    div.asp_s.asp_s_4.searchsettings.asp_s,
    div.asp_s.asp_s_4.searchsettings.asp_s {
      z-index: 11001
    }

    #ajaxsearchprobsettings4_1.searchsettings,
    #ajaxsearchprobsettings4_2.searchsettings,
    div.asp_sb.asp_sb_4.searchsettings {
      max-width: none
    }

    div.asp_s.asp_s_4.searchsettings form,
    div.asp_s.asp_s_4.searchsettings form,
    div.asp_s.asp_s_4.searchsettings form {
      display: flex
    }

    div.asp_sb.asp_sb_4.searchsettings form,
    div.asp_sb.asp_sb_4.searchsettings form,
    div.asp_sb.asp_sb_4.searchsettings form {
      display: flex
    }

    #ajaxsearchprosettings4_1.searchsettings div.asp_option_label,
    #ajaxsearchprosettings4_2.searchsettings div.asp_option_label,
    #ajaxsearchprosettings4_1.searchsettings .asp_label,
    #ajaxsearchprosettings4_2.searchsettings .asp_label,
    div.asp_s.asp_s_4.searchsettings div.asp_option_label,
    div.asp_s.asp_s_4.searchsettings .asp_label {
      font-weight: bold;
      font-family: "Open Sans";
      color: rgb(43, 43, 43);
      font-size: 12px;
      line-height: 15px;
      text-shadow: none
    }

    #ajaxsearchprosettings4_1.searchsettings .asp_option_inner .asp_option_checkbox,
    #ajaxsearchprosettings4_2.searchsettings .asp_option_inner .asp_option_checkbox,
    div.asp_sb.asp_sb_4.searchsettings .asp_option_inner .asp_option_checkbox,
    div.asp_s.asp_s_4.searchsettings .asp_option_inner .asp_option_checkbox {
      background-image: -webkit-linear-gradient(180deg, rgb(34, 34, 34), rgb(69, 72, 77));
      background-image: -moz-linear-gradient(180deg, rgb(34, 34, 34), rgb(69, 72, 77));
      background-image: -o-linear-gradient(180deg, rgb(34, 34, 34), rgb(69, 72, 77));
      background-image: -ms-linear-gradient(180deg, rgb(34, 34, 34) 0, rgb(69, 72, 77) 100%);
      background-image: linear-gradient(180deg, rgb(34, 34, 34), rgb(69, 72, 77))
    }

    #ajaxsearchprosettings4_1.searchsettings .asp_option_inner .asp_option_checkbox:after,
    #ajaxsearchprosettings4_2.searchsettings .asp_option_inner .asp_option_checkbox:after,
    #ajaxsearchprobsettings4_1.searchsettings .asp_option_inner .asp_option_checkbox:after,
    #ajaxsearchprobsettings4_2.searchsettings .asp_option_inner .asp_option_checkbox:after,
    div.asp_sb.asp_sb_4.searchsettings .asp_option_inner .asp_option_checkbox:after,
    div.asp_s.asp_s_4.searchsettings .asp_option_inner .asp_option_checkbox:after {
      font-family: 'asppsicons2';
      border: none;
      content: "\e800";
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      font-size: 11px;
      color: rgb(255, 255, 255);
      margin: 1px 0 0 0 !important;
      line-height: 17px;
      text-align: center;
      text-decoration: none;
      text-shadow: none
    }

    div.asp_sb.asp_sb_4.searchsettings .asp_sett_scroll,
    div.asp_s.asp_s_4.searchsettings .asp_sett_scroll {
      scrollbar-width: thin;
      scrollbar-color: rgba(0, 0, 0, 0.5) transparent
    }

    div.asp_sb.asp_sb_4.searchsettings .asp_sett_scroll::-webkit-scrollbar,
    div.asp_s.asp_s_4.searchsettings .asp_sett_scroll::-webkit-scrollbar {
      width: 7px
    }

    div.asp_sb.asp_sb_4.searchsettings .asp_sett_scroll::-webkit-scrollbar-track,
    div.asp_s.asp_s_4.searchsettings .asp_sett_scroll::-webkit-scrollbar-track {
      background: transparent
    }

    div.asp_sb.asp_sb_4.searchsettings .asp_sett_scroll::-webkit-scrollbar-thumb,
    div.asp_s.asp_s_4.searchsettings .asp_sett_scroll::-webkit-scrollbar-thumb {
      background: rgba(0, 0, 0, 0.5);
      border-radius: 5px;
      border: none
    }

    #ajaxsearchprosettings4_1.searchsettings .asp_sett_scroll,
    #ajaxsearchprosettings4_2.searchsettings .asp_sett_scroll,
    div.asp_s.asp_s_4.searchsettings .asp_sett_scroll {
      max-height: 220px;
      overflow: auto
    }

    #ajaxsearchprobsettings4_1.searchsettings .asp_sett_scroll,
    #ajaxsearchprobsettings4_2.searchsettings .asp_sett_scroll,
    div.asp_sb.asp_sb_4.searchsettings .asp_sett_scroll {
      max-height: 220px;
      overflow: auto
    }

    #ajaxsearchprosettings4_1.searchsettings fieldset,
    #ajaxsearchprosettings4_2.searchsettings fieldset,
    div.asp_s.asp_s_4.searchsettings fieldset {
      width: 200px;
      min-width: 200px;
      max-width: 10000px
    }

    #ajaxsearchprobsettings4_1.searchsettings fieldset,
    #ajaxsearchprobsettings4_2.searchsettings fieldset,
    div.asp_sb.asp_sb_4.searchsettings fieldset {
      width: 200px;
      min-width: 200px;
      max-width: 10000px
    }

    #ajaxsearchprosettings4_1.searchsettings fieldset legend,
    #ajaxsearchprosettings4_2.searchsettings fieldset legend,
    div.asp_s.asp_s_4.searchsettings fieldset legend {
      padding: 0 0 0 10px;
      margin: 0;
      background: transparent;
      font-weight: normal;
      font-family: "Open Sans";
      color: rgb(71, 71, 71);
      font-size: 13px;
      line-height: 15px;
      text-shadow: none
    }

    #ajaxsearchprores4_1.vertical,
    #ajaxsearchprores4_2.vertical,
    div.asp_r.asp_r_4.vertical {
      padding: 4px;
      background: rgb(255, 255, 255);
      border-radius: 3px;
      border: 2px solid rgb(5, 5, 5);
      border-radius: 3px 3px 3px 3px;
      box-shadow: none;
      visibility: hidden;
      display: none
    }

    #ajaxsearchprores4_1.vertical .results,
    #ajaxsearchprores4_2.vertical .results,
    div.asp_r.asp_r_4.vertical .results {
      max-height: none;
      overflow-x: hidden;
      overflow-y: auto
    }

    #ajaxsearchprores4_1.vertical .item,
    #ajaxsearchprores4_2.vertical .item,
    div.asp_r.asp_r_4.vertical .item {
      position: relative;
      box-sizing: border-box
    }

    #ajaxsearchprores4_1.vertical .item .asp_content h3,
    #ajaxsearchprores4_2.vertical .item .asp_content h3,
    div.asp_r.asp_r_4.vertical .item .asp_content h3 {
      display: inline
    }

    #ajaxsearchprores4_1.vertical .results .item .asp_content,
    #ajaxsearchprores4_2.vertical .results .item .asp_content,
    div.asp_r.asp_r_4.vertical .results .item .asp_content {
      overflow: hidden;
      width: auto;
      height: auto;
      background: transparent;
      margin: 0;
      padding: 8px
    }

    #ajaxsearchprores4_1.vertical .results .item .asp_image,
    #ajaxsearchprores4_2.vertical .results .item .asp_image,
    div.asp_r.asp_r_4.vertical .results .item .asp_image {
      width: 50px;
      height: 50px;
      margin: 2px 8px 0 0
    }

    #ajaxsearchprores4_1.vertical .asp_simplebar-scrollbar::before,
    #ajaxsearchprores4_2.vertical .asp_simplebar-scrollbar::before,
    div.asp_r.asp_r_4.vertical .asp_simplebar-scrollbar::before {
      background: transparent;
      background-image: -moz-radial-gradient(center, ellipse cover, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
      background-image: -webkit-gradient(radial, center center, 0px, center center, 100%, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
      background-image: -webkit-radial-gradient(center, ellipse cover, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
      background-image: -o-radial-gradient(center, ellipse cover, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
      background-image: -ms-radial-gradient(center, ellipse cover, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
      background-image: radial-gradient(ellipse at center, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))
    }

    #ajaxsearchprores4_1.vertical .results .item::after,
    #ajaxsearchprores4_2.vertical .results .item::after,
    div.asp_r.asp_r_4.vertical .results .item::after {
      display: block;
      position: absolute;
      bottom: 0;
      content: "";
      height: 1px;
      width: 100%;
      background: rgba(255, 255, 255, 0.55)
    }

    #ajaxsearchprores4_1.vertical .results .item.asp_last_item::after,
    #ajaxsearchprores4_2.vertical .results .item.asp_last_item::after,
    div.asp_r.asp_r_4.vertical .results .item.asp_last_item::after {
      display: none
    }

    .asp_spacer {
      display: none !important;
    }

    .asp_v_spacer {
      width: 100%;
      height: 0
    }

    #ajaxsearchprores4_1 .asp_group_header,
    #ajaxsearchprores4_2 .asp_group_header,
    div.asp_r.asp_r_4 .asp_group_header {
      background: #DDD;
      background: rgb(246, 246, 246);
      border-radius: 3px 3px 0 0;
      border-top: 1px solid rgb(248, 248, 248);
      border-left: 1px solid rgb(248, 248, 248);
      border-right: 1px solid rgb(248, 248, 248);
      margin: 0 0 -3px;
      padding: 7px 0 7px 10px;
      position: relative;
      z-index: 1000;
      min-width: 90%;
      flex-grow: 1;
      font-weight: bold;
      font-family: "Open Sans";
      color: rgb(5, 94, 148);
      font-size: 11px;
      line-height: 13px;
      text-shadow: none
    }

    #ajaxsearchprores4_1.vertical .results,
    #ajaxsearchprores4_2.vertical .results,
    div.asp_r.asp_r_4.vertical .results {
      scrollbar-width: thin;
      scrollbar-color: rgba(0, 0, 0, 0.5) rgb(255, 255, 255)
    }

    #ajaxsearchprores4_1.vertical .results::-webkit-scrollbar,
    #ajaxsearchprores4_2.vertical .results::-webkit-scrollbar,
    div.asp_r.asp_r_4.vertical .results::-webkit-scrollbar {
      width: 10px
    }

    #ajaxsearchprores4_1.vertical .results::-webkit-scrollbar-track,
    #ajaxsearchprores4_2.vertical .results::-webkit-scrollbar-track,
    div.asp_r.asp_r_4.vertical .results::-webkit-scrollbar-track {
      background: rgb(255, 255, 255);
      box-shadow: inset 0 0 12px 12px transparent;
      border: none
    }

    #ajaxsearchprores4_1.vertical .results::-webkit-scrollbar-thumb,
    #ajaxsearchprores4_2.vertical .results::-webkit-scrollbar-thumb,
    div.asp_r.asp_r_4.vertical .results::-webkit-scrollbar-thumb {
      background: transparent;
      box-shadow: inset 0 0 12px 12px rgba(0, 0, 0, 0);
      border: solid 2px transparent;
      border-radius: 12px
    }

    #ajaxsearchprores4_1.vertical:hover .results::-webkit-scrollbar-thumb,
    #ajaxsearchprores4_2.vertical:hover .results::-webkit-scrollbar-thumb,
    div.asp_r.asp_r_4.vertical:hover .results::-webkit-scrollbar-thumb {
      box-shadow: inset 0 0 12px 12px rgba(0, 0, 0, 0.5)
    }

    @media(hover:none), (max-width:500px) {

      #ajaxsearchprores4_1.vertical .results::-webkit-scrollbar-thumb,
      #ajaxsearchprores4_2.vertical .results::-webkit-scrollbar-thumb,
      div.asp_r.asp_r_4.vertical .results::-webkit-scrollbar-thumb {
        box-shadow: inset 0 0 12px 12px rgba(0, 0, 0, 0.5)
      }
    }
  </style>
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="">
  <style>
    @font-face {
      font-family: 'Lato';
      font-style: normal;
      font-weight: 300;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/lato/v23/S6u9w4BMUTPHh7USSwiPHA.ttf) format('truetype');
    }

    @font-face {
      font-family: 'Lato';
      font-style: normal;
      font-weight: 400;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/lato/v23/S6uyw4BMUTPHjx4wWw.ttf) format('truetype');
    }

    @font-face {
      font-family: 'Lato';
      font-style: normal;
      font-weight: 700;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/lato/v23/S6u9w4BMUTPHh6UVSwiPHA.ttf) format('truetype');
    }

    @font-face {
      font-family: 'Open Sans';
      font-style: normal;
      font-weight: 300;
      font-stretch: normal;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/opensans/v34/memSYaGs126MiZpBA-UvWbX2vVnXBbObj2OVZyOOSr4dVJWUgsiH0B4gaVc.ttf) format('truetype');
    }

    @font-face {
      font-family: 'Open Sans';
      font-style: normal;
      font-weight: 400;
      font-stretch: normal;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/opensans/v34/memSYaGs126MiZpBA-UvWbX2vVnXBbObj2OVZyOOSr4dVJWUgsjZ0B4gaVc.ttf) format('truetype');
    }

    @font-face {
      font-family: 'Open Sans';
      font-style: normal;
      font-weight: 700;
      font-stretch: normal;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/opensans/v34/memSYaGs126MiZpBA-UvWbX2vVnXBbObj2OVZyOOSr4dVJWUgsg-1x4gaVc.ttf) format('truetype');
    }
  </style>
</head>

<body
  class="wp-manga-template-default single single-wp-manga postid-256 wp-embed-responsive wp-manga-page reading-manga keyboard-navigate page header-style-1 sticky-enabled sticky-style-1 is-sidebar text-ui-dark manga-reading-paged-style">
  <div class="wrap">
    <div class="body-wrap">
      <header class="site-header">
        <div class="c-header__top">
          <ul class="search-main-menu">
            <li>
              <div class="container">
                <div class="asp_w_container asp_w_container_4 asp_w_container_4_1" data-id="4">
                  <div
                    class="asp_w asp_m asp_m_4 asp_m_4_1 wpdreams_asp_sc wpdreams_asp_sc-4 ajaxsearchpro asp_main_container  asp_non_compact"
                    data-id="4" data-name="classic VOSTFR" data-instance="1" id="ajaxsearchpro4_1">
                    <div class="probox">
                      <div class="prosettings" style="display:none;" data-opened="0">
                        <div class="innericon">
                          <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 512 512">
                            <polygon transform="rotate(90 256 256)"
                              points="142.332,104.886 197.48,50 402.5,256 197.48,462 142.332,407.113 292.727,256">
                            </polygon>
                          </svg>
                        </div>
                      </div>
                      <div class="proinput">
                        <form role="search" action="#" autocomplete="off" aria-label="Search form">
                          <input type="search" class="orig" placeholder="Rechercher en VOSTFR..." name="phrase" value=""
                            aria-label="Search input" autocomplete="off">
                          <input type="text" class="autocomplete" name="phrase" value=""
                            aria-label="Search autocomplete input" aria-hidden="true" tabindex="-1" autocomplete="off"
                            disabled="">
                        </form>
                      </div>
                      <button class="promagnifier" aria-label="Search magnifier button">
                        <span class="asp_text_button hiddend">
                          Search </span>
                        <span class="innericon">
                          <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 512 512">
                            <path
                              d="M448.225 394.243l-85.387-85.385c16.55-26.08 26.146-56.986 26.146-90.094 0-92.99-75.652-168.64-168.643-168.64-92.988 0-168.64 75.65-168.64 168.64s75.65 168.64 168.64 168.64c31.466 0 60.94-8.67 86.176-23.734l86.14 86.142c36.755 36.754 92.355-18.783 55.57-55.57zm-344.233-175.48c0-64.155 52.192-116.35 116.35-116.35s116.353 52.194 116.353 116.35S284.5 335.117 220.342 335.117s-116.35-52.196-116.35-116.352zm34.463-30.26c34.057-78.9 148.668-69.75 170.248 12.863-43.482-51.037-119.984-56.532-170.248-12.862z">
                            </path>
                          </svg> </span>
                        <span class="asp_clear"></span>
                      </button>
                      <div class="proloading">
                        <div class="asp_loader">
                          <div class="asp_loader-inner asp_ball-scale">
                            <div></div>
                          </div>
                        </div>
                      </div>
                      <div class="proclose">
                        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                          x="0px" y="0px" width="512px" height="512px" viewBox="0 0 512 512"
                          enable-background="new 0 0 512 512" xml:space="preserve">
                          <polygon
                            points="438.393,374.595 319.757,255.977 438.378,137.348 374.595,73.607 255.995,192.225 137.375,73.622 73.607,137.352 192.246,255.983 73.622,374.625 137.352,438.393 256.002,319.734 374.652,438.378 ">
                          </polygon>
                        </svg>
                      </div>
                    </div>
                  </div>
                  <div class="asp_data_container" style="display:none !important;">
                    <div class="asp_init_data" style="display:none !important;" id="asp_init_id_4_1" data-asp-id="4"
                      data-asp-instance="1"
                      data-aspdata="eyJob21ldXJsIjoiaHR0cHM6XC9cL3Y1LnZvaXJhbmltZS5jb21cLyIsImlzX3Jlc3VsdHNfcGFnZSI6MCwicmVzdWx0c3R5cGUiOiJ2ZXJ0aWNhbCIsInJlc3VsdHNwb3NpdGlvbiI6ImhvdmVyIiwicmVzdWx0c1NuYXBUbyI6ImxlZnQiLCJyZXN1bHRzIjp7IndpZHRoIjoiYXV0byIsIndpZHRoX3RhYmxldCI6ImF1dG8iLCJ3aWR0aF9waG9uZSI6ImF1dG8ifSwiaXRlbXNjb3VudCI6NCwiY2hhcmNvdW50IjoyLCJoaWdobGlnaHQiOjAsImhpZ2hsaWdodFdob2xld29yZHMiOjEsInNpbmdsZUhpZ2hsaWdodCI6MCwic2Nyb2xsVG9SZXN1bHRzIjp7ImVuYWJsZWQiOjAsIm9mZnNldCI6MH0sImF1dG9jb21wbGV0ZSI6eyJlbmFibGVkIjoxLCJ0cmlnZ2VyX2NoYXJjb3VudCI6MCwiZ29vZ2xlT25seSI6MSwibGFuZyI6ImVuIiwibW9iaWxlIjoxfSwidHJpZ2dlciI6eyJkZWxheSI6MzAwLCJhdXRvY29tcGxldGVfZGVsYXkiOjMxMCwidXBkYXRlX2hyZWYiOjAsImZhY2V0IjoxLCJ0eXBlIjoxLCJjbGljayI6ImFqYXhfc2VhcmNoIiwiY2xpY2tfbG9jYXRpb24iOiJzYW1lIiwicmV0dXJuIjoibm90aGluZyIsInJldHVybl9sb2NhdGlvbiI6InNhbWUiLCJyZWRpcmVjdF91cmwiOiI/cz17cGhyYXNlfSZwb3N0X3R5cGU9d3AtbWFuZ2Emb3A9JmF1dGhvcj0mYXJ0aXN0PSZyZWxlYXNlPSZhZHVsdD0mdHlwZT0mbGFuZ3VhZ2U9IiwiZWxlbWVudG9yX3VybCI6Imh0dHBzOlwvXC92NS52b2lyYW5pbWUuY29tXC8/YXNwX2xzPXtwaHJhc2V9In0sIm92ZXJyaWRld3BkZWZhdWx0IjowLCJvdmVycmlkZV9tZXRob2QiOiJnZXQiLCJzZXR0aW5ncyI6eyJoaWRlQ2hpbGRyZW4iOjB9LCJzZXR0aW5nc2ltYWdlcG9zIjoicmlnaHQiLCJzZXR0aW5nc1Zpc2libGUiOjAsInNldHRpbmdzSGlkZU9uUmVzIjowLCJwcmVzY29udGFpbmVyaGVpZ2h0IjoiNDAwcHgiLCJjbG9zZU9uRG9jQ2xpY2siOjEsImZvY3VzT25QYWdlbG9hZCI6MCwiaXNvdG9waWMiOnsiaXRlbVdpZHRoIjoiMjAwcHgiLCJpdGVtV2lkdGhUYWJsZXQiOiIyMDBweCIsIml0ZW1XaWR0aFBob25lIjoiMjAwcHgiLCJpdGVtSGVpZ2h0IjoiMjAwcHgiLCJpdGVtSGVpZ2h0VGFibGV0IjoiMjAwcHgiLCJpdGVtSGVpZ2h0UGhvbmUiOiIyMDBweCIsInBhZ2luYXRpb24iOjEsInJvd3MiOjIsImd1dHRlciI6NSwic2hvd092ZXJsYXkiOjEsImJsdXJPdmVybGF5IjoxLCJoaWRlQ29udGVudCI6MX0sImxvYWRlckxvY2F0aW9uIjoiYXV0byIsInNob3dfbW9yZSI6eyJlbmFibGVkIjowLCJ1cmwiOiI/cz17cGhyYXNlfSIsImVsZW1lbnRvcl91cmwiOiJodHRwczpcL1wvdjUudm9pcmFuaW1lLmNvbVwvP2FzcF9scz17cGhyYXNlfSIsImFjdGlvbiI6ImFqYXgiLCJsb2NhdGlvbiI6InNhbWUiLCJpbmZpbml0ZSI6MX0sIm1vYmlsZSI6eyJ0cmlnZ2VyX29uX3R5cGUiOjEsImNsaWNrX2FjdGlvbiI6ImFqYXhfc2VhcmNoIiwicmV0dXJuX2FjdGlvbiI6Im5vdGhpbmciLCJjbGlja19hY3Rpb25fbG9jYXRpb24iOiJzYW1lIiwicmV0dXJuX2FjdGlvbl9sb2NhdGlvbiI6InNhbWUiLCJyZWRpcmVjdF91cmwiOiI/cz17cGhyYXNlfSZwb3N0X3R5cGU9d3AtbWFuZ2Emb3A9JmF1dGhvcj0mYXJ0aXN0PSZyZWxlYXNlPSZhZHVsdD0mdHlwZT0mbGFuZ3VhZ2U9IiwiZWxlbWVudG9yX3VybCI6Imh0dHBzOlwvXC92NS52b2lyYW5pbWUuY29tXC8/YXNwX2xzPXtwaHJhc2V9IiwibWVudV9zZWxlY3RvciI6IiNtZW51LXRvZ2dsZSIsImhpZGVfa2V5Ym9hcmQiOjEsImZvcmNlX3Jlc19ob3ZlciI6MCwiZm9yY2Vfc2V0dF9ob3ZlciI6MCwiZm9yY2Vfc2V0dF9zdGF0ZSI6Im5vbmUifSwiY29tcGFjdCI6eyJlbmFibGVkIjowLCJmb2N1cyI6MSwid2lkdGgiOiIxMDAlIiwid2lkdGhfdGFibGV0IjoiNDgwcHgiLCJ3aWR0aF9waG9uZSI6IjMyMHB4IiwiY2xvc2VPbk1hZ25pZmllciI6MSwiY2xvc2VPbkRvY3VtZW50IjowLCJwb3NpdGlvbiI6InN0YXRpYyIsIm92ZXJsYXkiOjB9LCJzYiI6eyJyZWRpcmVjdF9hY3Rpb24iOiJhamF4X3NlYXJjaCIsInJlZGlyZWN0X2xvY2F0aW9uIjoic2FtZSIsInJlZGlyZWN0X3VybCI6Ij9zPXtwaHJhc2V9IiwiZWxlbWVudG9yX3VybCI6Imh0dHBzOlwvXC92NS52b2lyYW5pbWUuY29tXC8/YXNwX2xzPXtwaHJhc2V9In0sInJiIjp7ImFjdGlvbiI6Im5vdGhpbmcifSwiYW5pbWF0aW9ucyI6eyJwYyI6eyJzZXR0aW5ncyI6eyJhbmltIjoiZmFkZWRyb3AiLCJkdXIiOjMwMH0sInJlc3VsdHMiOnsiYW5pbSI6ImZhZGVkcm9wIiwiZHVyIjozMDB9LCJpdGVtcyI6ImZhZGVJbkRvd24ifSwibW9iIjp7InNldHRpbmdzIjp7ImFuaW0iOiJmYWRlZHJvcCIsImR1ciI6MzAwfSwicmVzdWx0cyI6eyJhbmltIjoiZmFkZWRyb3AiLCJkdXIiOjMwMH0sIml0ZW1zIjoidm9pZGFuaW0ifX0sInNlbGVjdDIiOnsibm9yZXMiOiJObyByZXN1bHRzIG1hdGNoIn0sImRldGVjdFZpc2liaWxpdHkiOjAsImF1dG9wIjp7InN0YXRlIjoiZGlzYWJsZWQiLCJwaHJhc2UiOiIiLCJjb3VudCI6MTB9LCJ3b29TaG9wIjp7InVzZUFqYXgiOjAsInNlbGVjdG9yIjoiI21haW4iLCJ1cmwiOiIifSwidGF4QXJjaGl2ZSI6eyJ1c2VBamF4IjowLCJzZWxlY3RvciI6IiNtYWluIiwidXJsIjoiIn0sImNwdEFyY2hpdmUiOnsidXNlQWpheCI6MCwic2VsZWN0b3IiOiIjbWFpbiIsInVybCI6IiJ9LCJyZXNQYWdlIjp7InVzZUFqYXgiOjAsInNlbGVjdG9yIjoiI21haW4iLCJ0cmlnZ2VyX3R5cGUiOjEsInRyaWdnZXJfZmFjZXQiOjEsInRyaWdnZXJfbWFnbmlmaWVyIjowLCJ0cmlnZ2VyX3JldHVybiI6MH0sImZzc19sYXlvdXQiOiJmbGV4Iiwic2Nyb2xsQmFyIjp7Imhvcml6b250YWwiOnsiZW5hYmxlZCI6MX19LCJkaXZpIjp7ImJvZHljb21tZXJjZSI6MH0sInByZXZlbnRCb2R5U2Nyb2xsIjowLCJzdGF0aXN0aWNzIjowfQ==">
                    </div>
                    <div class="asp_hidden_data" style="display:none !important;">
                      <div class="asp_item_overlay">
                        <div class="asp_item_inner">
                          <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 512 512">
                            <path
                              d="M448.225 394.243l-85.387-85.385c16.55-26.08 26.146-56.986 26.146-90.094 0-92.99-75.652-168.64-168.643-168.64-92.988 0-168.64 75.65-168.64 168.64s75.65 168.64 168.64 168.64c31.466 0 60.94-8.67 86.176-23.734l86.14 86.142c36.755 36.754 92.355-18.783 55.57-55.57zm-344.233-175.48c0-64.155 52.192-116.35 116.35-116.35s116.353 52.194 116.353 116.35S284.5 335.117 220.342 335.117s-116.35-52.196-116.35-116.352zm34.463-30.26c34.057-78.9 148.668-69.75 170.248 12.863-43.482-51.037-119.984-56.532-170.248-12.862z">
                            </path>
                          </svg>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div id="__original__ajaxsearchprores4_1"
                    class="asp_w asp_r asp_r_4 asp_r_4_1 vertical ajaxsearchpro wpdreams_asp_sc wpdreams_asp_sc-4"
                    data-id="4" data-instance="1">
                    <div class="results">
                      <div class="resdrg">
                      </div>
                    </div>
                    <div class="asp_res_loader hiddend">
                      <div class="asp_loader">
                        <div class="asp_loader-inner asp_ball-scale">
                          <div></div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div id="__original__ajaxsearchprosettings4_1"
                    class="asp_w asp_ss asp_ss_4 asp_s asp_s_4 asp_s_4_1 wpdreams_asp_sc wpdreams_asp_sc-4 ajaxsearchpro searchsettings"
                    data-id="4" data-instance="1">
                    <form name="options" class="asp-fss-flex" aria-label="Search settings form" autocomplete="off">
                      <input type="hidden" name="current_page_id" value="256">
                      <input type="hidden" name="qtranslate_lang" value="0">
                      <input type="hidden" name="filters_changed" value="0">
                      <input type="hidden" name="filters_initial" value="1">
                      <fieldset class="asp_filter_generic asp_filter_id_2 asp_filter_n_1">
                        <legend>Generic filters</legend>
                        <div class="asp_option" tabindex="0">
                          <div class="asp_option_inner">
                            <input type="checkbox" value="exact" id="set_exact4_1" aria-label="Exact matches only"
                              name="asp_gen[]">
                            <div class="asp_option_checkbox"></div>
                          </div>
                          <div class="asp_option_label">
                            Exact matches only </div>
                        </div>
                        <div class="asp_option" tabindex="0">
                          <div class="asp_option_inner">
                            <input type="checkbox" value="title" id="set_title4_1" data-origvalue="1"
                              aria-label="Search in title" name="asp_gen[]" checked="checked">
                            <div class="asp_option_checkbox"></div>
                          </div>
                          <div class="asp_option_label">
                            Search in title </div>
                        </div>
                        <div class="asp_option" tabindex="0">
                          <div class="asp_option_inner">
                            <input type="checkbox" value="content" id="set_content4_1" data-origvalue="1"
                              aria-label="Search in content" name="asp_gen[]" checked="checked">
                            <div class="asp_option_checkbox"></div>
                          </div>
                          <div class="asp_option_label">
                            Search in content </div>
                        </div>
                        <div class="asp_option" tabindex="0">
                          <div class="asp_option_inner">
                            <input type="checkbox" value="excerpt" id="set_excerpt4_1" data-origvalue="1"
                              aria-label="Search in excerpt" name="asp_gen[]" checked="checked">
                            <div class="asp_option_checkbox"></div>
                          </div>
                          <div class="asp_option_label">
                            Search in excerpt </div>
                        </div>
                      </fieldset><input type="hidden" value="vf" data-origvalue="vf" id="aspf4_11[vf__1]"
                        name="aspf[vf__1]">
                      <div style="clear:both;"></div>
                    </form>
                  </div>
                </div>
                <div class="asp_w_container asp_w_container_3 asp_w_container_3_1" data-id="3">
                  <div
                    class="asp_w asp_m asp_m_3 asp_m_3_1 wpdreams_asp_sc wpdreams_asp_sc-3 ajaxsearchpro asp_main_container  asp_non_compact"
                    data-id="3" data-name="classic VF" data-instance="1" id="ajaxsearchpro3_1">
                    <div class="probox">
                      <div class="prosettings" style="display:none;" data-opened="0">
                        <div class="innericon">
                          <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 512 512">
                            <polygon transform="rotate(90 256 256)"
                              points="142.332,104.886 197.48,50 402.5,256 197.48,462 142.332,407.113 292.727,256">
                            </polygon>
                          </svg>
                        </div>
                      </div>
                      <div class="proinput">
                        <form role="search" action="#" autocomplete="off" aria-label="Search form">
                          <input type="search" class="orig" placeholder="Rechercher en VF..." name="phrase" value=""
                            aria-label="Search input" autocomplete="off">
                          <input type="text" class="autocomplete" name="phrase" value=""
                            aria-label="Search autocomplete input" aria-hidden="true" tabindex="-1" autocomplete="off"
                            disabled="">
                        </form>
                      </div>
                      <button class="promagnifier" aria-label="Search magnifier button">
                        <span class="asp_text_button hiddend">
                          Search </span>
                        <span class="innericon">
                          <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 512 512">
                            <path
                              d="M448.225 394.243l-85.387-85.385c16.55-26.08 26.146-56.986 26.146-90.094 0-92.99-75.652-168.64-168.643-168.64-92.988 0-168.64 75.65-168.64 168.64s75.65 168.64 168.64 168.64c31.466 0 60.94-8.67 86.176-23.734l86.14 86.142c36.755 36.754 92.355-18.783 55.57-55.57zm-344.233-175.48c0-64.155 52.192-116.35 116.35-116.35s116.353 52.194 116.353 116.35S284.5 335.117 220.342 335.117s-116.35-52.196-116.35-116.352zm34.463-30.26c34.057-78.9 148.668-69.75 170.248 12.863-43.482-51.037-119.984-56.532-170.248-12.862z">
                            </path>
                          </svg> </span>
                        <span class="asp_clear"></span>
                      </button>
                      <div class="proloading">
                        <div class="asp_loader">
                          <div class="asp_loader-inner asp_ball-scale">
                            <div></div>
                          </div>
                        </div>
                      </div>
                      <div class="proclose">
                        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                          x="0px" y="0px" width="512px" height="512px" viewBox="0 0 512 512"
                          enable-background="new 0 0 512 512" xml:space="preserve">
                          <polygon
                            points="438.393,374.595 319.757,255.977 438.378,137.348 374.595,73.607 255.995,192.225 137.375,73.622 73.607,137.352 192.246,255.983 73.622,374.625 137.352,438.393 256.002,319.734 374.652,438.378 ">
                          </polygon>
                        </svg>
                      </div>
                    </div>
                  </div>
                  <div class="asp_data_container" style="display:none !important;">
                    <div class="asp_init_data" style="display:none !important;" id="asp_init_id_3_1" data-asp-id="3"
                      data-asp-instance="1"
                      data-aspdata="eyJob21ldXJsIjoiaHR0cHM6XC9cL3Y1LnZvaXJhbmltZS5jb21cLyIsImlzX3Jlc3VsdHNfcGFnZSI6MCwicmVzdWx0c3R5cGUiOiJ2ZXJ0aWNhbCIsInJlc3VsdHNwb3NpdGlvbiI6ImhvdmVyIiwicmVzdWx0c1NuYXBUbyI6ImxlZnQiLCJyZXN1bHRzIjp7IndpZHRoIjoiYXV0byIsIndpZHRoX3RhYmxldCI6ImF1dG8iLCJ3aWR0aF9waG9uZSI6ImF1dG8ifSwiaXRlbXNjb3VudCI6NCwiY2hhcmNvdW50IjoyLCJoaWdobGlnaHQiOjAsImhpZ2hsaWdodFdob2xld29yZHMiOjEsInNpbmdsZUhpZ2hsaWdodCI6MCwic2Nyb2xsVG9SZXN1bHRzIjp7ImVuYWJsZWQiOjAsIm9mZnNldCI6MH0sImF1dG9jb21wbGV0ZSI6eyJlbmFibGVkIjoxLCJ0cmlnZ2VyX2NoYXJjb3VudCI6MCwiZ29vZ2xlT25seSI6MSwibGFuZyI6ImVuIiwibW9iaWxlIjoxfSwidHJpZ2dlciI6eyJkZWxheSI6MzAwLCJhdXRvY29tcGxldGVfZGVsYXkiOjMxMCwidXBkYXRlX2hyZWYiOjAsImZhY2V0IjoxLCJ0eXBlIjoxLCJjbGljayI6ImFqYXhfc2VhcmNoIiwiY2xpY2tfbG9jYXRpb24iOiJzYW1lIiwicmV0dXJuIjoibm90aGluZyIsInJldHVybl9sb2NhdGlvbiI6InNhbWUiLCJyZWRpcmVjdF91cmwiOiI/cz17cGhyYXNlfSZwb3N0X3R5cGU9d3AtbWFuZ2Emb3A9JmF1dGhvcj0mYXJ0aXN0PSZyZWxlYXNlPSZhZHVsdD0mdHlwZT0mbGFuZ3VhZ2U9IiwiZWxlbWVudG9yX3VybCI6Imh0dHBzOlwvXC92NS52b2lyYW5pbWUuY29tXC8/YXNwX2xzPXtwaHJhc2V9In0sIm92ZXJyaWRld3BkZWZhdWx0IjowLCJvdmVycmlkZV9tZXRob2QiOiJnZXQiLCJzZXR0aW5ncyI6eyJoaWRlQ2hpbGRyZW4iOjB9LCJzZXR0aW5nc2ltYWdlcG9zIjoicmlnaHQiLCJzZXR0aW5nc1Zpc2libGUiOjAsInNldHRpbmdzSGlkZU9uUmVzIjowLCJwcmVzY29udGFpbmVyaGVpZ2h0IjoiNDAwcHgiLCJjbG9zZU9uRG9jQ2xpY2siOjEsImZvY3VzT25QYWdlbG9hZCI6MCwiaXNvdG9waWMiOnsiaXRlbVdpZHRoIjoiMjAwcHgiLCJpdGVtV2lkdGhUYWJsZXQiOiIyMDBweCIsIml0ZW1XaWR0aFBob25lIjoiMjAwcHgiLCJpdGVtSGVpZ2h0IjoiMjAwcHgiLCJpdGVtSGVpZ2h0VGFibGV0IjoiMjAwcHgiLCJpdGVtSGVpZ2h0UGhvbmUiOiIyMDBweCIsInBhZ2luYXRpb24iOjEsInJvd3MiOjIsImd1dHRlciI6NSwic2hvd092ZXJsYXkiOjEsImJsdXJPdmVybGF5IjoxLCJoaWRlQ29udGVudCI6MX0sImxvYWRlckxvY2F0aW9uIjoiYXV0byIsInNob3dfbW9yZSI6eyJlbmFibGVkIjowLCJ1cmwiOiI/cz17cGhyYXNlfSIsImVsZW1lbnRvcl91cmwiOiJodHRwczpcL1wvdjUudm9pcmFuaW1lLmNvbVwvP2FzcF9scz17cGhyYXNlfSIsImFjdGlvbiI6ImFqYXgiLCJsb2NhdGlvbiI6InNhbWUiLCJpbmZpbml0ZSI6MX0sIm1vYmlsZSI6eyJ0cmlnZ2VyX29uX3R5cGUiOjEsImNsaWNrX2FjdGlvbiI6ImFqYXhfc2VhcmNoIiwicmV0dXJuX2FjdGlvbiI6Im5vdGhpbmciLCJjbGlja19hY3Rpb25fbG9jYXRpb24iOiJzYW1lIiwicmV0dXJuX2FjdGlvbl9sb2NhdGlvbiI6InNhbWUiLCJyZWRpcmVjdF91cmwiOiI/cz17cGhyYXNlfSZwb3N0X3R5cGU9d3AtbWFuZ2Emb3A9JmF1dGhvcj0mYXJ0aXN0PSZyZWxlYXNlPSZhZHVsdD0mdHlwZT0mbGFuZ3VhZ2U9IiwiZWxlbWVudG9yX3VybCI6Imh0dHBzOlwvXC92NS52b2lyYW5pbWUuY29tXC8/YXNwX2xzPXtwaHJhc2V9IiwibWVudV9zZWxlY3RvciI6IiNtZW51LXRvZ2dsZSIsImhpZGVfa2V5Ym9hcmQiOjEsImZvcmNlX3Jlc19ob3ZlciI6MCwiZm9yY2Vfc2V0dF9ob3ZlciI6MCwiZm9yY2Vfc2V0dF9zdGF0ZSI6Im5vbmUifSwiY29tcGFjdCI6eyJlbmFibGVkIjowLCJmb2N1cyI6MSwid2lkdGgiOiIxMDAlIiwid2lkdGhfdGFibGV0IjoiNDgwcHgiLCJ3aWR0aF9waG9uZSI6IjMyMHB4IiwiY2xvc2VPbk1hZ25pZmllciI6MSwiY2xvc2VPbkRvY3VtZW50IjowLCJwb3NpdGlvbiI6InN0YXRpYyIsIm92ZXJsYXkiOjB9LCJzYiI6eyJyZWRpcmVjdF9hY3Rpb24iOiJhamF4X3NlYXJjaCIsInJlZGlyZWN0X2xvY2F0aW9uIjoic2FtZSIsInJlZGlyZWN0X3VybCI6Ij9zPXtwaHJhc2V9IiwiZWxlbWVudG9yX3VybCI6Imh0dHBzOlwvXC92NS52b2lyYW5pbWUuY29tXC8/YXNwX2xzPXtwaHJhc2V9In0sInJiIjp7ImFjdGlvbiI6Im5vdGhpbmcifSwiYW5pbWF0aW9ucyI6eyJwYyI6eyJzZXR0aW5ncyI6eyJhbmltIjoiZmFkZWRyb3AiLCJkdXIiOjMwMH0sInJlc3VsdHMiOnsiYW5pbSI6ImZhZGVkcm9wIiwiZHVyIjozMDB9LCJpdGVtcyI6ImZhZGVJbkRvd24ifSwibW9iIjp7InNldHRpbmdzIjp7ImFuaW0iOiJmYWRlZHJvcCIsImR1ciI6MzAwfSwicmVzdWx0cyI6eyJhbmltIjoiZmFkZWRyb3AiLCJkdXIiOjMwMH0sIml0ZW1zIjoidm9pZGFuaW0ifX0sInNlbGVjdDIiOnsibm9yZXMiOiJObyByZXN1bHRzIG1hdGNoIn0sImRldGVjdFZpc2liaWxpdHkiOjAsImF1dG9wIjp7InN0YXRlIjoiZGlzYWJsZWQiLCJwaHJhc2UiOiIiLCJjb3VudCI6MTB9LCJ3b29TaG9wIjp7InVzZUFqYXgiOjAsInNlbGVjdG9yIjoiI21haW4iLCJ1cmwiOiIifSwidGF4QXJjaGl2ZSI6eyJ1c2VBamF4IjowLCJzZWxlY3RvciI6IiNtYWluIiwidXJsIjoiIn0sImNwdEFyY2hpdmUiOnsidXNlQWpheCI6MCwic2VsZWN0b3IiOiIjbWFpbiIsInVybCI6IiJ9LCJyZXNQYWdlIjp7InVzZUFqYXgiOjAsInNlbGVjdG9yIjoiI21haW4iLCJ0cmlnZ2VyX3R5cGUiOjEsInRyaWdnZXJfZmFjZXQiOjEsInRyaWdnZXJfbWFnbmlmaWVyIjowLCJ0cmlnZ2VyX3JldHVybiI6MH0sImZzc19sYXlvdXQiOiJmbGV4Iiwic2Nyb2xsQmFyIjp7Imhvcml6b250YWwiOnsiZW5hYmxlZCI6MX19LCJkaXZpIjp7ImJvZHljb21tZXJjZSI6MH0sInByZXZlbnRCb2R5U2Nyb2xsIjowLCJzdGF0aXN0aWNzIjowfQ==">
                    </div>
                    <div class="asp_hidden_data" style="display:none !important;">
                      <div class="asp_item_overlay">
                        <div class="asp_item_inner">
                          <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 512 512">
                            <path
                              d="M448.225 394.243l-85.387-85.385c16.55-26.08 26.146-56.986 26.146-90.094 0-92.99-75.652-168.64-168.643-168.64-92.988 0-168.64 75.65-168.64 168.64s75.65 168.64 168.64 168.64c31.466 0 60.94-8.67 86.176-23.734l86.14 86.142c36.755 36.754 92.355-18.783 55.57-55.57zm-344.233-175.48c0-64.155 52.192-116.35 116.35-116.35s116.353 52.194 116.353 116.35S284.5 335.117 220.342 335.117s-116.35-52.196-116.35-116.352zm34.463-30.26c34.057-78.9 148.668-69.75 170.248 12.863-43.482-51.037-119.984-56.532-170.248-12.862z">
                            </path>
                          </svg>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div id="__original__ajaxsearchprores3_1"
                    class="asp_w asp_r asp_r_3 asp_r_3_1 vertical ajaxsearchpro wpdreams_asp_sc wpdreams_asp_sc-3"
                    data-id="3" data-instance="1">
                    <div class="results">
                      <div class="resdrg">
                      </div>
                    </div>
                    <div class="asp_res_loader hiddend">
                      <div class="asp_loader">
                        <div class="asp_loader-inner asp_ball-scale">
                          <div></div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div id="__original__ajaxsearchprosettings3_1"
                    class="asp_w asp_ss asp_ss_3 asp_s asp_s_3 asp_s_3_1 wpdreams_asp_sc wpdreams_asp_sc-3 ajaxsearchpro searchsettings"
                    data-id="3" data-instance="1">
                    <form name="options" class="asp-fss-flex" aria-label="Search settings form" autocomplete="off">
                      <input type="hidden" name="current_page_id" value="256">
                      <input type="hidden" name="qtranslate_lang" value="0">
                      <input type="hidden" name="filters_changed" value="0">
                      <input type="hidden" name="filters_initial" value="1">
                      <fieldset class="asp_filter_generic asp_filter_id_2 asp_filter_n_1">
                        <legend>Generic filters</legend>
                        <div class="asp_option" tabindex="0">
                          <div class="asp_option_inner">
                            <input type="checkbox" value="exact" id="set_exact3_1" aria-label="Exact matches only"
                              name="asp_gen[]">
                            <div class="asp_option_checkbox"></div>
                          </div>
                          <div class="asp_option_label">
                            Exact matches only </div>
                        </div>
                        <div class="asp_option" tabindex="0">
                          <div class="asp_option_inner">
                            <input type="checkbox" value="title" id="set_title3_1" data-origvalue="1"
                              aria-label="Search in title" name="asp_gen[]" checked="checked">
                            <div class="asp_option_checkbox"></div>
                          </div>
                          <div class="asp_option_label">
                            Search in title </div>
                        </div>
                        <div class="asp_option" tabindex="0">
                          <div class="asp_option_inner">
                            <input type="checkbox" value="content" id="set_content3_1" data-origvalue="1"
                              aria-label="Search in content" name="asp_gen[]" checked="checked">
                            <div class="asp_option_checkbox"></div>
                          </div>
                          <div class="asp_option_label">
                            Search in content </div>
                        </div>
                        <div class="asp_option" tabindex="0">
                          <div class="asp_option_inner">
                            <input type="checkbox" value="excerpt" id="set_excerpt3_1" data-origvalue="1"
                              aria-label="Search in excerpt" name="asp_gen[]" checked="checked">
                            <div class="asp_option_checkbox"></div>
                          </div>
                          <div class="asp_option_label">
                            Search in excerpt </div>
                        </div>
                      </fieldset><input type="hidden" value="vf" data-origvalue="vf" id="aspf3_11[vf__1]"
                        name="aspf[vf__1]">
                      <div style="clear:both;"></div>
                    </form>
                  </div>
                </div>
              </div>
            </li>
          </ul>
          <div class="main-navigation style-1 ">
            <div class="container ">
              <div class="row">
                <div class="col-md-12">
                  <div class="main-navigation_wrap">
                    <div class="wrap_branding">
                      <a class="logo" href="https://v5.voiranime.com/" title="Voiranime">
                        <img class="img-responsive" src="https://voiranime.com/wp-content/uploads/2019/12/vato.png"
                          alt="Voiranime">
                      </a>
                    </div>
                    <div class="main-menu">
                      <ul class="nav navbar-nav main-navbar">
                        <li id="menu-item-915"
                          class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-915">
                          <a href="https://v5.voiranime.com/">ACCUEIL</a></li>
                        <li id="menu-item-48192"
                          class="menu-item menu-item-type-post_type menu-item-object-page menu-item-48192"><a
                            href="https://v5.voiranime.com/liste-danimes/">LISTE</a></li>
                        <li id="menu-item-88326"
                          class="menu-item menu-item-type-post_type menu-item-object-page menu-item-88326"><a
                            href="https://v5.voiranime.com/nouveaux-ajouts/">NOUVEAU</a></li>
                        <li id="menu-item-53504"
                          class="menu-item menu-item-type-post_type menu-item-object-page menu-item-53504"><a
                            href="https://v5.voiranime.com/prochainement/">BIENTOT</a></li>
                        <li id="menu-item-2061"
                          class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2061"><a
                            href="https://v5.voiranime.com/?s=&amp;post_type=wp-manga">RECHERCHE AV</a></li>
                        <li id="menu-item-92149"
                          class="menu-item menu-item-type-custom menu-item-object-custom menu-item-92149"><a
                            href="https://voirdrama.org/">VOIRDRAMA</a></li>
                      </ul>
                    </div>
                    <div class="search-navigation search-sidebar">
                      <div class="search-navigation__wrap">
                        <ul class="main-menu-search nav-menu">
                          <li class="menu-search">
                            <a href="javascript:;" class="open-search-main-menu"> <i class="icon ion-ios-search"></i>
                              <i class="icon ion-android-close"></i> </a>
                          </li>
                        </ul>
                      </div>
                    </div>
                    <div class="c-togle__menu">
                      <button type="button" class="menu_icon__open">
                        <span></span> <span></span> <span></span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="mobile-menu menu-collapse off-canvas">
          <div class="close-nav">
            <button class="menu_icon__close">
              <span></span> <span></span>
            </button>
          </div>
          <nav class="off-menu">
            <ul id="menu-main-menu-1" class="nav navbar-nav main-navbar">
              <li id="nav-menu-item-915"
                class="main-menu-item menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page menu-item-home">
                <a href="https://v5.voiranime.com/" class="menu-link  main-menu-link">ACCUEIL </a></li>
              <li id="nav-menu-item-48192"
                class="main-menu-item menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page"><a
                  href="https://v5.voiranime.com/liste-danimes/" class="menu-link  main-menu-link">LISTE </a></li>
              <li id="nav-menu-item-88326"
                class="main-menu-item menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page"><a
                  href="https://v5.voiranime.com/nouveaux-ajouts/" class="menu-link  main-menu-link">NOUVEAU </a></li>
              <li id="nav-menu-item-53504"
                class="main-menu-item menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page"><a
                  href="https://v5.voiranime.com/prochainement/" class="menu-link  main-menu-link">BIENTOT </a></li>
              <li id="nav-menu-item-2061"
                class="main-menu-item menu-item-depth-0 menu-item menu-item-type-custom menu-item-object-custom"><a
                  href="https://v5.voiranime.com/?s=&amp;post_type=wp-manga" class="menu-link  main-menu-link">RECHERCHE
                  AV </a></li>
              <li id="nav-menu-item-92149"
                class="main-menu-item menu-item-depth-0 menu-item menu-item-type-custom menu-item-object-custom"><a
                  href="https://voirdrama.org/" class="menu-link  main-menu-link">VOIRDRAMA </a></li>
            </ul>
          </nav>
          <div class="center"></div>
        </div>
        <div class="clone-header"></div>
        <div class=" c-sub-header-nav with-border  ">
          <div class="container ">
            <div class="c-sub-nav_wrap">
              <div class="sub-nav_content">
                <ul class="sub-nav_list list-inline second-menu">
                  <li id="menu-item-62593"
                    class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre current-wp-manga-ancestor current-menu-parent current-wp-manga-parent menu-item-62593">
                    <a href="https://v5.voiranime.com/anime-genre/action/">Action</a></li>
                  <li id="menu-item-62594"
                    class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre current-wp-manga-ancestor current-menu-parent current-wp-manga-parent menu-item-62594">
                    <a href="https://v5.voiranime.com/anime-genre/adventure/">Adventure</a></li>
                  <li id="menu-item-62595"
                    class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62595"><a
                      href="https://v5.voiranime.com/anime-genre/chinese/">Chinese</a></li>
                  <li id="menu-item-62596"
                    class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre current-wp-manga-ancestor current-menu-parent current-wp-manga-parent menu-item-62596">
                    <a href="https://v5.voiranime.com/anime-genre/comedy/">Comedy</a></li>
                  <li id="menu-item-62597"
                    class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62597"><a
                      href="https://v5.voiranime.com/anime-genre/drama/">Drama</a></li>
                  <li id="menu-item-62598"
                    class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62598"><a
                      href="https://v5.voiranime.com/anime-genre/ecchi/">Ecchi</a></li>
                  <li id="menu-item-62612"
                    class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children parent menu-item-62612">
                    <a href="#">Plus</a>
                    <ul class="sub-menu">
                      <li id="menu-item-62599"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62599"><a
                          href="https://v5.voiranime.com/anime-genre/fantasy/">Fantasy</a></li>
                      <li id="menu-item-62600"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62600"><a
                          href="https://v5.voiranime.com/anime-genre/horror/">Horror</a></li>
                      <li id="menu-item-62601"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62601"><a
                          href="https://v5.voiranime.com/anime-genre/mahou-shoujo/">Mahou Shoujo</a></li>
                      <li id="menu-item-62602"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62602"><a
                          href="https://v5.voiranime.com/anime-genre/mecha/">Mecha</a></li>
                      <li id="menu-item-62603"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62603"><a
                          href="https://v5.voiranime.com/anime-genre/music/">Music</a></li>
                      <li id="menu-item-62604"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62604"><a
                          href="https://v5.voiranime.com/anime-genre/mystery/">Mystery</a></li>
                      <li id="menu-item-62605"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62605"><a
                          href="https://v5.voiranime.com/anime-genre/psychological/">Psychological</a></li>
                      <li id="menu-item-62606"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62606"><a
                          href="https://v5.voiranime.com/anime-genre/romance/">Romance</a></li>
                      <li id="menu-item-62607"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62607"><a
                          href="https://v5.voiranime.com/anime-genre/sci-fi/">Sci-Fi</a></li>
                      <li id="menu-item-62608"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62608"><a
                          href="https://v5.voiranime.com/anime-genre/slice-of-life/">Slice of Life</a></li>
                      <li id="menu-item-62609"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62609"><a
                          href="https://v5.voiranime.com/anime-genre/sports/">Sports</a></li>
                      <li id="menu-item-62610"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62610"><a
                          href="https://v5.voiranime.com/anime-genre/supernatural/">Supernatural</a></li>
                      <li id="menu-item-62611"
                        class="menu-item menu-item-type-taxonomy menu-item-object-wp-manga-genre menu-item-62611"><a
                          href="https://v5.voiranime.com/anime-genre/thriller/">Thriller</a></li>
                    </ul>
                  </li>
                  <i class="mobile-icon icon ion-md-more"></i>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </header>
      <div class="ad c-ads custom-code container"></div>
      <div class="site-content">
        <div class="c-page-content style-1 reading-content-wrap chapter-type-video"
          data-site-url="https://v5.voiranime.com/">
          <div class="content-area">
            <div class="container">
              <div class="row">
                <div class="main-col col-md-12 col-sm-12 sidebar-hidden">

                  <div class="main-col-inner">
                    <div class="c-blog-post">
                      <div class="ad c-ads custom-code body-top-ads">
                        <div class="code-block code-block-2" style="margin: 8px 0; clear: both;">
                        </div>
                      </div>
                      <div class="entry-header header" id="manga-reading-nav-head" data-position="header"
                        data-chapter="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr" data-id="256">
                        <div class="wp-manga-nav">
                          <div class="entry-header_wrap">
                            <div class="c-breadcrumb-wrapper">
                              <div class="c-breadcrumb">
                                <ol class="breadcrumb">
                                  <li>
                                    <a href="https://v5.voiranime.com/">
                                      Home </a>
                                  </li>
                                  <li>
                                    <a href="https://v5.voiranime.com/anime/boku-no-hero-academia-2/">
                                      Boku no Hero Academia 2 </a>
                                  </li>
                                  <li class="active">
                                    Boku no Hero Academia (My Hero Academia) (Saison 2) - 04 VOSTFR - 04 </li>
                                </ol>
                              </div>
                              <div class="action-icon">
                                <ul class="action_list_icon list-inline">
                                </ul>
                              </div>
                            </div>
                          </div>
                          <div class="select-view">

                            <div class="c-selectpicker selectpicker_version">
                              <label>
                                <select class="selectpicker host-select">
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR myTV"
                                    value="LECTEUR myTV">LECTEUR myTV</option>
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR MOON"
                                    value="LECTEUR MOON">LECTEUR MOON</option>
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR SB"
                                    value="LECTEUR SB">LECTEUR SB</option>
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR VOE"
                                    value="LECTEUR VOE">LECTEUR VOE</option>
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR Stape"
                                    value="LECTEUR Stape">LECTEUR Stape</option>
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR FHD1"
                                    value="LECTEUR FHD1">LECTEUR FHD1</option>
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR YU"
                                    value="LECTEUR YU">LECTEUR YU</option>
                                </select> </label>
                            </div>


                            <div class="c-selectpicker selectpicker_chapter chapters_selectbox_holder" data-manga="256"
                              data-chapter="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr" data-vol="0"
                              data-type="content">
                              <label>
                                <select class="c-selectpicker selectpicker_chapter selectpicker single-chapter-select"
                                  style="" for="volume-id-0">
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-25-vostfr/">
                                    25</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-24-vostfr/">
                                    24</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-23-vostfr/">
                                    23</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-22-vostfr/">
                                    22</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-21-vostfr/">
                                    21</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-20-vostfr/">
                                    20</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-19-vostfr/">
                                    19</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-18-vostfr/">
                                    18</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-17-vostfr/">
                                    17</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-16-vostfr/">
                                    16</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-15-vostfr/">
                                    15</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-14-vostfr/">
                                    14</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-13-vostfr/">
                                    13</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-12-vostfr/">
                                    12</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-11-vostfr/">
                                    11</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-10-vostfr/">
                                    10</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-09-vostfr/">
                                    09</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-08-vostfr/">
                                    08</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-07-vostfr/">
                                    07</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-06-vostfr/">
                                    06</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-05-vostfr/">
                                    05</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/"
                                    selected="selected">04</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-03-vostfr/">
                                    03</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-02-vostfr/">
                                    02</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-01-vostfr/">
                                    01</option>
                                </select>
                              </label>
                            </div>
                            <a href="#chapter-video-frame" class="video-light" data-lity=""><i
                                class="fas fa-lightbulb"></i> <span class="text text-off">Light off</span> <span
                                class="text text-on">Light on</span></a>
                          </div>
                          <div class="select-pagination">
                            <div class="nav-links">
                              <div class="nav-previous "><a
                                  href="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-03-vostfr/"
                                  class="btn prev_page" title="03">Prev</a>
                              </div>
                              <div class="nav-next "><a
                                  href="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-05-vostfr/"
                                  class="btn next_page" title="05">Next</a></div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="entry-content">
                        <div class="entry-content_wrap">
                          <div class="read-container">

                            <div class="reading-content">
                              <input type="hidden" id="wp-manga-current-chap" data-id="4780"
                                value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr">
                              <div class="chapter-video-frame" id="chapter-video-frame">
                                <div class="chapter-video-content-validator">
                                  <script src="https://www.google.com/recaptcha/api.js?hl=fr"></script>
                                  <p></p>
                                  <form id="chapter-video-captcha-validator"
                                    action="https://v5.voiranime.com/wp-admin/admin-ajax.php"
                                    data-error-msg="Please check on reCaptcha">
                                    <p></p>
                                    <div class="g-recaptcha" data-sitekey="6Lfd5wobAAAAACjTkOIXohTrPz9RIhNwRqRq2_R9"
                                      data-callback="enableSubmitreCaptchaBtn"
                                      data-expired-callback="disableSubmitreCaptchaBtn"
                                      data-error-callback="disableSubmitreCaptchaBtn">
                                      <div style="width: 304px; height: 78px;">
                                        <div><iframe title="reCAPTCHA" width="304" height="78" role="presentation"
                                            name="a-azw00e7fw4ib" frameborder="0" scrolling="no"
                                            sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation"
                                            src="https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6Lfd5wobAAAAACjTkOIXohTrPz9RIhNwRqRq2_R9&amp;co=aHR0cHM6Ly92NS52b2lyYW5pbWUuY29tOjQ0Mw..&amp;hl=fr&amp;v=MydHw_zggsxIJuhSbyOmPv5R&amp;size=normal&amp;cb=ri0onqpittkc"></iframe>
                                        </div><textarea id="g-recaptcha-response" name="g-recaptcha-response"
                                          class="g-recaptcha-response"
                                          style="width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;"></textarea>
                                      </div><iframe style="display: none;"></iframe>
                                    </div>
                                    <p> <button class="btn" type="submit" disabled="">Valider</button></p>
                                    <div class="mt-4 text-center text-white">
                                      <p>By clicking “Valider”, you acknowledge that Popup ads will appear when you
                                        click the play button before the video starts</p>
                                    </div>
                                  </form>
                                  <p></p>
                                </div>
                              </div>
                              <script>
                                var thisChapterSources = { "LECTEUR myTV": "\t\t\t\t<div class=\"chapter-video-content-validator\">\n\t\t\t\t\t<script src=\"https:\/\/www.google.com\/recaptcha\/api.js?hl=fr\"><\/script>\n\t\t\t\t\t<form \n\t\t\t\t\t\tid=\"chapter-video-captcha-validator\"\n\t\t\t\t\t\taction=\"https:\/\/v5.voiranime.com\/wp-admin\/admin-ajax.php\"\n\t\t\t\t\t\tdata-error-msg=\"Please check on reCaptcha\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tclass=\"g-recaptcha\" \n\t\t\t\t\t\t\tdata-sitekey=\"6Lfd5wobAAAAACjTkOIXohTrPz9RIhNwRqRq2_R9\" \n\t\t\t\t\t\t\tdata-callback=\"enableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-expired-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-error-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<button class=\"btn\" type=\"submit\" disabled>Valider<\/button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"mt-4 text-center text-white\"><p>By clicking \"Valider\", you acknowledge that Popup ads will appear when you click the play button before the video starts<\/p><\/div>\n\t\t\t\t\t\t\t\t\t\t\t<\/form>\n\t\t\t\t<\/div>\n\t\t\t", "LECTEUR MOON": "\t\t\t\t<div class=\"chapter-video-content-validator\">\n\t\t\t\t\t<script src=\"https:\/\/www.google.com\/recaptcha\/api.js?hl=fr\"><\/script>\n\t\t\t\t\t<form \n\t\t\t\t\t\tid=\"chapter-video-captcha-validator\"\n\t\t\t\t\t\taction=\"https:\/\/v5.voiranime.com\/wp-admin\/admin-ajax.php\"\n\t\t\t\t\t\tdata-error-msg=\"Please check on reCaptcha\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tclass=\"g-recaptcha\" \n\t\t\t\t\t\t\tdata-sitekey=\"6Lfd5wobAAAAACjTkOIXohTrPz9RIhNwRqRq2_R9\" \n\t\t\t\t\t\t\tdata-callback=\"enableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-expired-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-error-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<button class=\"btn\" type=\"submit\" disabled>Valider<\/button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"mt-4 text-center text-white\"><p>By clicking \"Valider\", you acknowledge that Popup ads will appear when you click the play button before the video starts<\/p><\/div>\n\t\t\t\t\t\t\t\t\t\t\t<\/form>\n\t\t\t\t<\/div>\n\t\t\t", "LECTEUR SB": "\t\t\t\t<div class=\"chapter-video-content-validator\">\n\t\t\t\t\t<script src=\"https:\/\/www.google.com\/recaptcha\/api.js?hl=fr\"><\/script>\n\t\t\t\t\t<form \n\t\t\t\t\t\tid=\"chapter-video-captcha-validator\"\n\t\t\t\t\t\taction=\"https:\/\/v5.voiranime.com\/wp-admin\/admin-ajax.php\"\n\t\t\t\t\t\tdata-error-msg=\"Please check on reCaptcha\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tclass=\"g-recaptcha\" \n\t\t\t\t\t\t\tdata-sitekey=\"6Lfd5wobAAAAACjTkOIXohTrPz9RIhNwRqRq2_R9\" \n\t\t\t\t\t\t\tdata-callback=\"enableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-expired-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-error-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<button class=\"btn\" type=\"submit\" disabled>Valider<\/button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"mt-4 text-center text-white\"><p>By clicking \"Valider\", you acknowledge that Popup ads will appear when you click the play button before the video starts<\/p><\/div>\n\t\t\t\t\t\t\t\t\t\t\t<\/form>\n\t\t\t\t<\/div>\n\t\t\t", "LECTEUR VOE": "\t\t\t\t<div class=\"chapter-video-content-validator\">\n\t\t\t\t\t<script src=\"https:\/\/www.google.com\/recaptcha\/api.js?hl=fr\"><\/script>\n\t\t\t\t\t<form \n\t\t\t\t\t\tid=\"chapter-video-captcha-validator\"\n\t\t\t\t\t\taction=\"https:\/\/v5.voiranime.com\/wp-admin\/admin-ajax.php\"\n\t\t\t\t\t\tdata-error-msg=\"Please check on reCaptcha\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tclass=\"g-recaptcha\" \n\t\t\t\t\t\t\tdata-sitekey=\"6Lfd5wobAAAAACjTkOIXohTrPz9RIhNwRqRq2_R9\" \n\t\t\t\t\t\t\tdata-callback=\"enableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-expired-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-error-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<button class=\"btn\" type=\"submit\" disabled>Valider<\/button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"mt-4 text-center text-white\"><p>By clicking \"Valider\", you acknowledge that Popup ads will appear when you click the play button before the video starts<\/p><\/div>\n\t\t\t\t\t\t\t\t\t\t\t<\/form>\n\t\t\t\t<\/div>\n\t\t\t", "LECTEUR Stape": "\t\t\t\t<div class=\"chapter-video-content-validator\">\n\t\t\t\t\t<script src=\"https:\/\/www.google.com\/recaptcha\/api.js?hl=fr\"><\/script>\n\t\t\t\t\t<form \n\t\t\t\t\t\tid=\"chapter-video-captcha-validator\"\n\t\t\t\t\t\taction=\"https:\/\/v5.voiranime.com\/wp-admin\/admin-ajax.php\"\n\t\t\t\t\t\tdata-error-msg=\"Please check on reCaptcha\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tclass=\"g-recaptcha\" \n\t\t\t\t\t\t\tdata-sitekey=\"6Lfd5wobAAAAACjTkOIXohTrPz9RIhNwRqRq2_R9\" \n\t\t\t\t\t\t\tdata-callback=\"enableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-expired-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-error-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<button class=\"btn\" type=\"submit\" disabled>Valider<\/button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"mt-4 text-center text-white\"><p>By clicking \"Valider\", you acknowledge that Popup ads will appear when you click the play button before the video starts<\/p><\/div>\n\t\t\t\t\t\t\t\t\t\t\t<\/form>\n\t\t\t\t<\/div>\n\t\t\t", "LECTEUR FHD1": "\t\t\t\t<div class=\"chapter-video-content-validator\">\n\t\t\t\t\t<script src=\"https:\/\/www.google.com\/recaptcha\/api.js?hl=fr\"><\/script>\n\t\t\t\t\t<form \n\t\t\t\t\t\tid=\"chapter-video-captcha-validator\"\n\t\t\t\t\t\taction=\"https:\/\/v5.voiranime.com\/wp-admin\/admin-ajax.php\"\n\t\t\t\t\t\tdata-error-msg=\"Please check on reCaptcha\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tclass=\"g-recaptcha\" \n\t\t\t\t\t\t\tdata-sitekey=\"6Lfd5wobAAAAACjTkOIXohTrPz9RIhNwRqRq2_R9\" \n\t\t\t\t\t\t\tdata-callback=\"enableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-expired-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-error-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<button class=\"btn\" type=\"submit\" disabled>Valider<\/button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"mt-4 text-center text-white\"><p>By clicking \"Valider\", you acknowledge that Popup ads will appear when you click the play button before the video starts<\/p><\/div>\n\t\t\t\t\t\t\t\t\t\t\t<\/form>\n\t\t\t\t<\/div>\n\t\t\t", "LECTEUR YU": "\t\t\t\t<div class=\"chapter-video-content-validator\">\n\t\t\t\t\t<script src=\"https:\/\/www.google.com\/recaptcha\/api.js?hl=fr\"><\/script>\n\t\t\t\t\t<form \n\t\t\t\t\t\tid=\"chapter-video-captcha-validator\"\n\t\t\t\t\t\taction=\"https:\/\/v5.voiranime.com\/wp-admin\/admin-ajax.php\"\n\t\t\t\t\t\tdata-error-msg=\"Please check on reCaptcha\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tclass=\"g-recaptcha\" \n\t\t\t\t\t\t\tdata-sitekey=\"6Lfd5wobAAAAACjTkOIXohTrPz9RIhNwRqRq2_R9\" \n\t\t\t\t\t\t\tdata-callback=\"enableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-expired-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t\tdata-error-callback=\"disableSubmitreCaptchaBtn\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<button class=\"btn\" type=\"submit\" disabled>Valider<\/button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"mt-4 text-center text-white\"><p>By clicking \"Valider\", you acknowledge that Popup ads will appear when you click the play button before the video starts<\/p><\/div>\n\t\t\t\t\t\t\t\t\t\t\t<\/form>\n\t\t\t\t<\/div>\n\t\t\t" };
                                var defaultSources = { "mobile": "", "tablet": "" };
                                jQuery(document).ready(function ($) {
                                  $(document).on('change', 'select.host-select', function (e) {
                                    var selectHost = $(this).val();
                                    if (typeof thisChapterSources[selectHost] !== 'undefined') {
                                      e.preventDefault();
                                      e.stopImmediatePropagation();
                                      $('select.host-select').find(`option[value="${selectHost}"]`).prop('selected', true);
                                      $('.entry-content .reading-content .chapter-video-frame').html(thisChapterSources[selectHost]);
                                    }
                                  });
                                });
                              </script>
                            </div>
                            <div class="ad c-ads custom-code body-bottom-ads">
                              <div class="ai-viewport-1" data-insertion-position="prepend"
                                data-selector=".ai-insert-3-10033124" data-insertion-no-dbg=""
                                data-code="PGRpdiBjbGFzcz0nY29kZS1ibG9jayBjb2RlLWJsb2NrLTMnIHN0eWxlPSdtYXJnaW46IDhweCAwOyBjbGVhcjogYm90aDsnPgo8ZGl2IGNsYXNzPSdjb2RlLWJsb2NrIGNvZGUtYmxvY2stOCcgc3R5bGU9J21hcmdpbjogOHB4IDhweCA4cHggMDsgZmxvYXQ6IGxlZnQ7Jz4KPGRpdiBpZD0iYmdfMzI4OTI1NDEzX3ByZSI+PC9kaXY+CjxkaXYgaWQ9ImJnXzMyODkyNTQxMyI+PC9kaXY+CjxzY3JpcHQ+KGZ1bmN0aW9uICgpewp2YXIgdXJsQ0IgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKdmFyIHNjID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpOwpzYy5hc3luYyA9IHRydWU7c2MuZGVmZXIgPSB0cnVlOwpzYy5zcmMgPSAiLy9wbGF0Zm9ybS5iaWRnZWFyLmNvbS9hc3luYy5waHA/ZG9tYWluaWQ9MzI4OSZzaXplaWQ9MiZ6b25laWQ9NTQxMyZrPSIrdXJsQ0I7CnZhciBwciA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYmdfMzI4OTI1NDEzX3ByZSIpOwpwci5hcHBlbmRDaGlsZChzYyk7fSkoKTwvc2NyaXB0PjwvZGl2PgoKPGRpdiBjbGFzcz0nY29kZS1ibG9jayBjb2RlLWJsb2NrLTknIHN0eWxlPSdtYXJnaW46IDhweCA4cHggOHB4IDA7IGZsb2F0OiBsZWZ0Oyc+CjxkaXYgaWQ9ImJnXzMyODkxNjQ0NzBfcHJlIj48L2Rpdj4KPGRpdiBpZD0iYmdfMzI4OTE2NDQ3MCI+PC9kaXY+CjxzY3JpcHQ+KGZ1bmN0aW9uICgpewp2YXIgdXJsQ0IgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKQp2YXIgc2MgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7CnNjLmFzeW5jID0gdHJ1ZTtzYy5kZWZlciA9IHRydWU7CnNjLnNyYyA9ICIvL3BsYXRmb3JtLmJpZGdlYXIuY29tL2FzeW5jLnBocD9kb21haW5pZD0zMjg5JnNpemVpZD0xNiZ6b25laWQ9NDQ3MCZrPSIrdXJsQ0I7CnZhciBwciA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYmdfMzI4OTE2NDQ3MF9wcmUiKTsKcHIuYXBwZW5kQ2hpbGQoc2MpO30pKCk8L3NjcmlwdD48L2Rpdj4KCjxkaXYgY2xhc3M9J2NvZGUtYmxvY2sgY29kZS1ibG9jay0yMicgc3R5bGU9J21hcmdpbjogOHB4IDhweCA4cHggMDsgZmxvYXQ6IGxlZnQ7Jz4KPGNlbnRlcj4KIDxzY3JpcHQgYXN5bmMgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2EuZXhkeW5zcnYuY29tL2FkLXByb3ZpZGVyLmpzIj48L3NjcmlwdD4gCiA8aW5zIGNsYXNzPSJhZHNieWV4b2NsaWNrIiBkYXRhLXpvbmVpZD0iMzU2NTA2MyIgZGF0YS1rZXl3b3Jkcz0ia2V5d29yZHMiPjwvaW5zPiAKIDxzY3JpcHQ+KEFkUHJvdmlkZXIgPSB3aW5kb3cuQWRQcm92aWRlciB8fCBbXSkucHVzaCh7InNlcnZlIjoge319KTs8L3NjcmlwdD4KPC9jZW50ZXI+PC9kaXY+CjwvZGl2Pgo="
                                data-block="3"></div>
                              <div class="ai-viewport-2 ai-viewport-3" data-insertion-position="prepend"
                                data-selector=".ai-insert-4-78934365" data-insertion-no-dbg=""
                                data-code="PGRpdiBjbGFzcz0nY29kZS1ibG9jayBjb2RlLWJsb2NrLTQnIHN0eWxlPSdtYXJnaW46IDhweCAwOyBjbGVhcjogYm90aDsnPgo8ZGl2IGNsYXNzPSdjb2RlLWJsb2NrIGNvZGUtYmxvY2stOScgc3R5bGU9J21hcmdpbjogOHB4IDhweCA4cHggMDsgZmxvYXQ6IGxlZnQ7Jz4KPGRpdiBpZD0iYmdfMzI4OTE2NDQ3MF9wcmUiPjwvZGl2Pgo8ZGl2IGlkPSJiZ18zMjg5MTY0NDcwIj48L2Rpdj4KPHNjcmlwdD4oZnVuY3Rpb24gKCl7CnZhciB1cmxDQiA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpCnZhciBzYyA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKc2MuYXN5bmMgPSB0cnVlO3NjLmRlZmVyID0gdHJ1ZTsKc2Muc3JjID0gIi8vcGxhdGZvcm0uYmlkZ2Vhci5jb20vYXN5bmMucGhwP2RvbWFpbmlkPTMyODkmc2l6ZWlkPTE2JnpvbmVpZD00NDcwJms9Iit1cmxDQjsKdmFyIHByID0gd2luZG93LmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJiZ18zMjg5MTY0NDcwX3ByZSIpOwpwci5hcHBlbmRDaGlsZChzYyk7fSkoKTwvc2NyaXB0PjwvZGl2PgoKPGRpdiBjbGFzcz0nY29kZS1ibG9jayBjb2RlLWJsb2NrLTgnIHN0eWxlPSdtYXJnaW46IDhweCA4cHggOHB4IDA7IGZsb2F0OiBsZWZ0Oyc+CjxkaXYgaWQ9ImJnXzMyODkyNTQxM19wcmUiPjwvZGl2Pgo8ZGl2IGlkPSJiZ18zMjg5MjU0MTMiPjwvZGl2Pgo8c2NyaXB0PihmdW5jdGlvbiAoKXsKdmFyIHVybENCID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CnZhciBzYyA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKc2MuYXN5bmMgPSB0cnVlO3NjLmRlZmVyID0gdHJ1ZTsKc2Muc3JjID0gIi8vcGxhdGZvcm0uYmlkZ2Vhci5jb20vYXN5bmMucGhwP2RvbWFpbmlkPTMyODkmc2l6ZWlkPTImem9uZWlkPTU0MTMmaz0iK3VybENCOwp2YXIgcHIgPSB3aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImJnXzMyODkyNTQxM19wcmUiKTsKcHIuYXBwZW5kQ2hpbGQoc2MpO30pKCk8L3NjcmlwdD48L2Rpdj4KPC9kaXY+Cg=="
                                data-block="4"></div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="entry-header footer" id="manga-reading-nav-foot" data-position="footer" data-id="256">
                        <div class="wp-manga-nav">
                          <div class="select-view">

                            <div class="c-selectpicker selectpicker_version">
                              <label>
                                <select class="selectpicker host-select">
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR myTV"
                                    value="LECTEUR myTV">LECTEUR myTV</option>
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR MOON"
                                    value="LECTEUR MOON">LECTEUR MOON</option>
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR SB"
                                    value="LECTEUR SB">LECTEUR SB</option>
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR VOE"
                                    value="LECTEUR VOE">LECTEUR VOE</option>
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR Stape"
                                    value="LECTEUR Stape">LECTEUR Stape</option>
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR FHD1"
                                    value="LECTEUR FHD1">LECTEUR FHD1</option>
                                  <option
                                    data-redirect="/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/?host=LECTEUR YU"
                                    value="LECTEUR YU">LECTEUR YU</option>
                                </select> </label>
                            </div>


                            <div class="c-selectpicker selectpicker_chapter chapters_selectbox_holder" data-manga="256"
                              data-chapter="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr" data-vol="0"
                              data-type="content">
                              <label>
                                <select class="c-selectpicker selectpicker_chapter selectpicker single-chapter-select"
                                  style="" for="volume-id-0">
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-25-vostfr/">
                                    25</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-24-vostfr/">
                                    24</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-23-vostfr/">
                                    23</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-22-vostfr/">
                                    22</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-21-vostfr/">
                                    21</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-20-vostfr/">
                                    20</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-19-vostfr/">
                                    19</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-18-vostfr/">
                                    18</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-17-vostfr/">
                                    17</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-16-vostfr/">
                                    16</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-15-vostfr/">
                                    15</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-14-vostfr/">
                                    14</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-13-vostfr/">
                                    13</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-12-vostfr/">
                                    12</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-11-vostfr/">
                                    11</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-10-vostfr/">
                                    10</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-09-vostfr/">
                                    09</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-08-vostfr/">
                                    08</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-07-vostfr/">
                                    07</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-06-vostfr/">
                                    06</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-05-vostfr/">
                                    05</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr/"
                                    selected="selected">04</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-03-vostfr/">
                                    03</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-02-vostfr/">
                                    02</option>
                                  <option class="short " data-limit="40"
                                    value="boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr"
                                    data-redirect="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-01-vostfr/">
                                    01</option>
                                </select>
                              </label>
                            </div>
                            <a href="#chapter-video-frame" class="video-light" data-lity=""><i
                                class="fas fa-lightbulb"></i> <span class="text text-off">Light off</span> <span
                                class="text text-on">Light on</span></a>
                          </div>
                          <div class="select-pagination">
                            <div class="nav-links">
                              <div class="nav-previous "><a
                                  href="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-03-vostfr/"
                                  class="btn prev_page" title="03">Prev</a>
                              </div>
                              <div class="nav-next "><a
                                  href="https://v5.voiranime.com/anime/boku-no-hero-academia-2/boku-no-hero-academia-my-hero-academia-saison-2-05-vostfr/"
                                  class="btn next_page" title="05">Next</a></div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="row ">
                      <div class="main-col col-12 col-sm-8 col-md-8 col-lg-8">


                      </div>
                      <div class="sidebar-col col-md-4 col-sm-4">
                        <div id="main-sidebar" class="main-sidebar" role="complementary">
                          <div class="row">
                            <div id="block-2" class="widget col-12 col-md-12   default no-icon  widget_block">
                              <div class="widget__inner widget_block__inner c-widget-wrap">
                                <div class="widget-content">
                                  <div class="code-block code-block-17" style="margin: 8px 0; clear: both;">
                                    <div class="asp_w_container asp_w_container_4 asp_w_container_4_2" data-id="4">
                                      <div
                                        class="asp_w asp_m asp_m_4 asp_m_4_2 wpdreams_asp_sc wpdreams_asp_sc-4 ajaxsearchpro asp_main_container  asp_non_compact"
                                        data-id="4" data-name="classic VOSTFR" data-instance="2" id="ajaxsearchpro4_2">
                                        <div class="probox">
                                          <div class="prosettings" style="display:none;" data-opened="0">
                                            <div class="innericon">
                                              <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22"
                                                viewBox="0 0 512 512">
                                                <polygon transform="rotate(90 256 256)"
                                                  points="142.332,104.886 197.48,50 402.5,256 197.48,462 142.332,407.113 292.727,256">
                                                </polygon>
                                              </svg>
                                            </div>
                                          </div>
                                          <div class="proinput">
                                            <form role="search" action="#" autocomplete="off" aria-label="Search form">
                                              <input type="search" class="orig" placeholder="Rechercher en VOSTFR..."
                                                name="phrase" value="" aria-label="Search input" autocomplete="off">
                                              <input type="text" class="autocomplete" name="phrase" value=""
                                                aria-label="Search autocomplete input" aria-hidden="true" tabindex="-1"
                                                autocomplete="off" disabled="">
                                            </form>
                                          </div>
                                          <button class="promagnifier" aria-label="Search magnifier button">
                                            <span class="asp_text_button hiddend">
                                              Search </span>
                                            <span class="innericon">
                                              <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22"
                                                viewBox="0 0 512 512">
                                                <path
                                                  d="M448.225 394.243l-85.387-85.385c16.55-26.08 26.146-56.986 26.146-90.094 0-92.99-75.652-168.64-168.643-168.64-92.988 0-168.64 75.65-168.64 168.64s75.65 168.64 168.64 168.64c31.466 0 60.94-8.67 86.176-23.734l86.14 86.142c36.755 36.754 92.355-18.783 55.57-55.57zm-344.233-175.48c0-64.155 52.192-116.35 116.35-116.35s116.353 52.194 116.353 116.35S284.5 335.117 220.342 335.117s-116.35-52.196-116.35-116.352zm34.463-30.26c34.057-78.9 148.668-69.75 170.248 12.863-43.482-51.037-119.984-56.532-170.248-12.862z">
                                                </path>
                                              </svg> </span>
                                            <span class="asp_clear"></span>
                                          </button>
                                          <div class="proloading">
                                            <div class="asp_loader">
                                              <div class="asp_loader-inner asp_ball-scale">
                                                <div></div>
                                              </div>
                                            </div>
                                          </div>
                                          <div class="proclose">
                                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg"
                                              xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="512px"
                                              height="512px" viewBox="0 0 512 512" enable-background="new 0 0 512 512"
                                              xml:space="preserve">
                                              <polygon
                                                points="438.393,374.595 319.757,255.977 438.378,137.348 374.595,73.607 255.995,192.225 137.375,73.622 73.607,137.352 192.246,255.983 73.622,374.625 137.352,438.393 256.002,319.734 374.652,438.378 ">
                                              </polygon>
                                            </svg>
                                          </div>
                                        </div>
                                      </div>
                                      <div class="asp_data_container" style="display:none !important;">
                                        <div class="asp_init_data" style="display:none !important;" id="asp_init_id_4_2"
                                          data-asp-id="4" data-asp-instance="2"
                                          data-aspdata="eyJob21ldXJsIjoiaHR0cHM6XC9cL3Y1LnZvaXJhbmltZS5jb21cLyIsImlzX3Jlc3VsdHNfcGFnZSI6MCwicmVzdWx0c3R5cGUiOiJ2ZXJ0aWNhbCIsInJlc3VsdHNwb3NpdGlvbiI6ImhvdmVyIiwicmVzdWx0c1NuYXBUbyI6ImxlZnQiLCJyZXN1bHRzIjp7IndpZHRoIjoiYXV0byIsIndpZHRoX3RhYmxldCI6ImF1dG8iLCJ3aWR0aF9waG9uZSI6ImF1dG8ifSwiaXRlbXNjb3VudCI6NCwiY2hhcmNvdW50IjoyLCJoaWdobGlnaHQiOjAsImhpZ2hsaWdodFdob2xld29yZHMiOjEsInNpbmdsZUhpZ2hsaWdodCI6MCwic2Nyb2xsVG9SZXN1bHRzIjp7ImVuYWJsZWQiOjAsIm9mZnNldCI6MH0sImF1dG9jb21wbGV0ZSI6eyJlbmFibGVkIjoxLCJ0cmlnZ2VyX2NoYXJjb3VudCI6MCwiZ29vZ2xlT25seSI6MSwibGFuZyI6ImVuIiwibW9iaWxlIjoxfSwidHJpZ2dlciI6eyJkZWxheSI6MzAwLCJhdXRvY29tcGxldGVfZGVsYXkiOjMxMCwidXBkYXRlX2hyZWYiOjAsImZhY2V0IjoxLCJ0eXBlIjoxLCJjbGljayI6ImFqYXhfc2VhcmNoIiwiY2xpY2tfbG9jYXRpb24iOiJzYW1lIiwicmV0dXJuIjoibm90aGluZyIsInJldHVybl9sb2NhdGlvbiI6InNhbWUiLCJyZWRpcmVjdF91cmwiOiI/cz17cGhyYXNlfSZwb3N0X3R5cGU9d3AtbWFuZ2Emb3A9JmF1dGhvcj0mYXJ0aXN0PSZyZWxlYXNlPSZhZHVsdD0mdHlwZT0mbGFuZ3VhZ2U9IiwiZWxlbWVudG9yX3VybCI6Imh0dHBzOlwvXC92NS52b2lyYW5pbWUuY29tXC8/YXNwX2xzPXtwaHJhc2V9In0sIm92ZXJyaWRld3BkZWZhdWx0IjowLCJvdmVycmlkZV9tZXRob2QiOiJnZXQiLCJzZXR0aW5ncyI6eyJoaWRlQ2hpbGRyZW4iOjB9LCJzZXR0aW5nc2ltYWdlcG9zIjoicmlnaHQiLCJzZXR0aW5nc1Zpc2libGUiOjAsInNldHRpbmdzSGlkZU9uUmVzIjowLCJwcmVzY29udGFpbmVyaGVpZ2h0IjoiNDAwcHgiLCJjbG9zZU9uRG9jQ2xpY2siOjEsImZvY3VzT25QYWdlbG9hZCI6MCwiaXNvdG9waWMiOnsiaXRlbVdpZHRoIjoiMjAwcHgiLCJpdGVtV2lkdGhUYWJsZXQiOiIyMDBweCIsIml0ZW1XaWR0aFBob25lIjoiMjAwcHgiLCJpdGVtSGVpZ2h0IjoiMjAwcHgiLCJpdGVtSGVpZ2h0VGFibGV0IjoiMjAwcHgiLCJpdGVtSGVpZ2h0UGhvbmUiOiIyMDBweCIsInBhZ2luYXRpb24iOjEsInJvd3MiOjIsImd1dHRlciI6NSwic2hvd092ZXJsYXkiOjEsImJsdXJPdmVybGF5IjoxLCJoaWRlQ29udGVudCI6MX0sImxvYWRlckxvY2F0aW9uIjoiYXV0byIsInNob3dfbW9yZSI6eyJlbmFibGVkIjowLCJ1cmwiOiI/cz17cGhyYXNlfSIsImVsZW1lbnRvcl91cmwiOiJodHRwczpcL1wvdjUudm9pcmFuaW1lLmNvbVwvP2FzcF9scz17cGhyYXNlfSIsImFjdGlvbiI6ImFqYXgiLCJsb2NhdGlvbiI6InNhbWUiLCJpbmZpbml0ZSI6MX0sIm1vYmlsZSI6eyJ0cmlnZ2VyX29uX3R5cGUiOjEsImNsaWNrX2FjdGlvbiI6ImFqYXhfc2VhcmNoIiwicmV0dXJuX2FjdGlvbiI6Im5vdGhpbmciLCJjbGlja19hY3Rpb25fbG9jYXRpb24iOiJzYW1lIiwicmV0dXJuX2FjdGlvbl9sb2NhdGlvbiI6InNhbWUiLCJyZWRpcmVjdF91cmwiOiI/cz17cGhyYXNlfSZwb3N0X3R5cGU9d3AtbWFuZ2Emb3A9JmF1dGhvcj0mYXJ0aXN0PSZyZWxlYXNlPSZhZHVsdD0mdHlwZT0mbGFuZ3VhZ2U9IiwiZWxlbWVudG9yX3VybCI6Imh0dHBzOlwvXC92NS52b2lyYW5pbWUuY29tXC8/YXNwX2xzPXtwaHJhc2V9IiwibWVudV9zZWxlY3RvciI6IiNtZW51LXRvZ2dsZSIsImhpZGVfa2V5Ym9hcmQiOjEsImZvcmNlX3Jlc19ob3ZlciI6MCwiZm9yY2Vfc2V0dF9ob3ZlciI6MCwiZm9yY2Vfc2V0dF9zdGF0ZSI6Im5vbmUifSwiY29tcGFjdCI6eyJlbmFibGVkIjowLCJmb2N1cyI6MSwid2lkdGgiOiIxMDAlIiwid2lkdGhfdGFibGV0IjoiNDgwcHgiLCJ3aWR0aF9waG9uZSI6IjMyMHB4IiwiY2xvc2VPbk1hZ25pZmllciI6MSwiY2xvc2VPbkRvY3VtZW50IjowLCJwb3NpdGlvbiI6InN0YXRpYyIsIm92ZXJsYXkiOjB9LCJzYiI6eyJyZWRpcmVjdF9hY3Rpb24iOiJhamF4X3NlYXJjaCIsInJlZGlyZWN0X2xvY2F0aW9uIjoic2FtZSIsInJlZGlyZWN0X3VybCI6Ij9zPXtwaHJhc2V9IiwiZWxlbWVudG9yX3VybCI6Imh0dHBzOlwvXC92NS52b2lyYW5pbWUuY29tXC8/YXNwX2xzPXtwaHJhc2V9In0sInJiIjp7ImFjdGlvbiI6Im5vdGhpbmcifSwiYW5pbWF0aW9ucyI6eyJwYyI6eyJzZXR0aW5ncyI6eyJhbmltIjoiZmFkZWRyb3AiLCJkdXIiOjMwMH0sInJlc3VsdHMiOnsiYW5pbSI6ImZhZGVkcm9wIiwiZHVyIjozMDB9LCJpdGVtcyI6ImZhZGVJbkRvd24ifSwibW9iIjp7InNldHRpbmdzIjp7ImFuaW0iOiJmYWRlZHJvcCIsImR1ciI6MzAwfSwicmVzdWx0cyI6eyJhbmltIjoiZmFkZWRyb3AiLCJkdXIiOjMwMH0sIml0ZW1zIjoidm9pZGFuaW0ifX0sInNlbGVjdDIiOnsibm9yZXMiOiJObyByZXN1bHRzIG1hdGNoIn0sImRldGVjdFZpc2liaWxpdHkiOjAsImF1dG9wIjp7InN0YXRlIjoiZGlzYWJsZWQiLCJwaHJhc2UiOiIiLCJjb3VudCI6MTB9LCJ3b29TaG9wIjp7InVzZUFqYXgiOjAsInNlbGVjdG9yIjoiI21haW4iLCJ1cmwiOiIifSwidGF4QXJjaGl2ZSI6eyJ1c2VBamF4IjowLCJzZWxlY3RvciI6IiNtYWluIiwidXJsIjoiIn0sImNwdEFyY2hpdmUiOnsidXNlQWpheCI6MCwic2VsZWN0b3IiOiIjbWFpbiIsInVybCI6IiJ9LCJyZXNQYWdlIjp7InVzZUFqYXgiOjAsInNlbGVjdG9yIjoiI21haW4iLCJ0cmlnZ2VyX3R5cGUiOjEsInRyaWdnZXJfZmFjZXQiOjEsInRyaWdnZXJfbWFnbmlmaWVyIjowLCJ0cmlnZ2VyX3JldHVybiI6MH0sImZzc19sYXlvdXQiOiJmbGV4Iiwic2Nyb2xsQmFyIjp7Imhvcml6b250YWwiOnsiZW5hYmxlZCI6MX19LCJkaXZpIjp7ImJvZHljb21tZXJjZSI6MH0sInByZXZlbnRCb2R5U2Nyb2xsIjowLCJzdGF0aXN0aWNzIjowfQ==">
                                        </div>
                                        <div class="asp_hidden_data" style="display:none !important;">
                                          <div class="asp_item_overlay">
                                            <div class="asp_item_inner">
                                              <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22"
                                                viewBox="0 0 512 512">
                                                <path
                                                  d="M448.225 394.243l-85.387-85.385c16.55-26.08 26.146-56.986 26.146-90.094 0-92.99-75.652-168.64-168.643-168.64-92.988 0-168.64 75.65-168.64 168.64s75.65 168.64 168.64 168.64c31.466 0 60.94-8.67 86.176-23.734l86.14 86.142c36.755 36.754 92.355-18.783 55.57-55.57zm-344.233-175.48c0-64.155 52.192-116.35 116.35-116.35s116.353 52.194 116.353 116.35S284.5 335.117 220.342 335.117s-116.35-52.196-116.35-116.352zm34.463-30.26c34.057-78.9 148.668-69.75 170.248 12.863-43.482-51.037-119.984-56.532-170.248-12.862z">
                                                </path>
                                              </svg>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                      <div id="__original__ajaxsearchprores4_2"
                                        class="asp_w asp_r asp_r_4 asp_r_4_2 vertical ajaxsearchpro wpdreams_asp_sc wpdreams_asp_sc-4"
                                        data-id="4" data-instance="2">
                                        <div class="results">
                                          <div class="resdrg">
                                          </div>
                                        </div>
                                        <div class="asp_res_loader hiddend">
                                          <div class="asp_loader">
                                            <div class="asp_loader-inner asp_ball-scale">
                                              <div></div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                      <div id="__original__ajaxsearchprosettings4_2"
                                        class="asp_w asp_ss asp_ss_4 asp_s asp_s_4 asp_s_4_2 wpdreams_asp_sc wpdreams_asp_sc-4 ajaxsearchpro searchsettings"
                                        data-id="4" data-instance="2">
                                        <form name="options" class="asp-fss-flex" aria-label="Search settings form"
                                          autocomplete="off">
                                          <input type="hidden" name="current_page_id" value="256">
                                          <input type="hidden" name="qtranslate_lang" value="0">
                                          <input type="hidden" name="filters_changed" value="0">
                                          <input type="hidden" name="filters_initial" value="1">
                                          <fieldset class="asp_filter_generic asp_filter_id_2 asp_filter_n_1">
                                            <legend>Generic filters</legend>
                                            <div class="asp_option" tabindex="0">
                                              <div class="asp_option_inner">
                                                <input type="checkbox" value="exact" id="set_exact4_2"
                                                  aria-label="Exact matches only" name="asp_gen[]">
                                                <div class="asp_option_checkbox"></div>
                                              </div>
                                              <div class="asp_option_label">
                                                Exact matches only </div>
                                            </div>
                                            <div class="asp_option" tabindex="0">
                                              <div class="asp_option_inner">
                                                <input type="checkbox" value="title" id="set_title4_2"
                                                  data-origvalue="1" aria-label="Search in title" name="asp_gen[]"
                                                  checked="checked">
                                                <div class="asp_option_checkbox"></div>
                                              </div>
                                              <div class="asp_option_label">
                                                Search in title </div>
                                            </div>
                                            <div class="asp_option" tabindex="0">
                                              <div class="asp_option_inner">
                                                <input type="checkbox" value="content" id="set_content4_2"
                                                  data-origvalue="1" aria-label="Search in content" name="asp_gen[]"
                                                  checked="checked">
                                                <div class="asp_option_checkbox"></div>
                                              </div>
                                              <div class="asp_option_label">
                                                Search in content </div>
                                            </div>
                                            <div class="asp_option" tabindex="0">
                                              <div class="asp_option_inner">
                                                <input type="checkbox" value="excerpt" id="set_excerpt4_2"
                                                  data-origvalue="1" aria-label="Search in excerpt" name="asp_gen[]"
                                                  checked="checked">
                                                <div class="asp_option_checkbox"></div>
                                              </div>
                                              <div class="asp_option_label">
                                                Search in excerpt </div>
                                            </div>
                                          </fieldset><input type="hidden" value="vf" data-origvalue="vf"
                                            id="aspf4_21[vf__1]" name="aspf[vf__1]">
                                          <div style="clear:both;"></div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                  <div class="code-block code-block-18" style="margin: 8px 0; clear: both;">
                                    <div class="asp_w_container asp_w_container_3 asp_w_container_3_2" data-id="3">
                                      <div
                                        class="asp_w asp_m asp_m_3 asp_m_3_2 wpdreams_asp_sc wpdreams_asp_sc-3 ajaxsearchpro asp_main_container  asp_non_compact"
                                        data-id="3" data-name="classic VF" data-instance="2" id="ajaxsearchpro3_2">
                                        <div class="probox">
                                          <div class="prosettings" style="display:none;" data-opened="0">
                                            <div class="innericon">
                                              <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22"
                                                viewBox="0 0 512 512">
                                                <polygon transform="rotate(90 256 256)"
                                                  points="142.332,104.886 197.48,50 402.5,256 197.48,462 142.332,407.113 292.727,256">
                                                </polygon>
                                              </svg>
                                            </div>
                                          </div>
                                          <div class="proinput">
                                            <form role="search" action="#" autocomplete="off" aria-label="Search form">
                                              <input type="search" class="orig" placeholder="Rechercher en VF..."
                                                name="phrase" value="" aria-label="Search input" autocomplete="off">
                                              <input type="text" class="autocomplete" name="phrase" value=""
                                                aria-label="Search autocomplete input" aria-hidden="true" tabindex="-1"
                                                autocomplete="off" disabled="">
                                            </form>
                                          </div>
                                          <button class="promagnifier" aria-label="Search magnifier button">
                                            <span class="asp_text_button hiddend">
                                              Search </span>
                                            <span class="innericon">
                                              <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22"
                                                viewBox="0 0 512 512">
                                                <path
                                                  d="M448.225 394.243l-85.387-85.385c16.55-26.08 26.146-56.986 26.146-90.094 0-92.99-75.652-168.64-168.643-168.64-92.988 0-168.64 75.65-168.64 168.64s75.65 168.64 168.64 168.64c31.466 0 60.94-8.67 86.176-23.734l86.14 86.142c36.755 36.754 92.355-18.783 55.57-55.57zm-344.233-175.48c0-64.155 52.192-116.35 116.35-116.35s116.353 52.194 116.353 116.35S284.5 335.117 220.342 335.117s-116.35-52.196-116.35-116.352zm34.463-30.26c34.057-78.9 148.668-69.75 170.248 12.863-43.482-51.037-119.984-56.532-170.248-12.862z">
                                                </path>
                                              </svg> </span>
                                            <span class="asp_clear"></span>
                                          </button>
                                          <div class="proloading">
                                            <div class="asp_loader">
                                              <div class="asp_loader-inner asp_ball-scale">
                                                <div></div>
                                              </div>
                                            </div>
                                          </div>
                                          <div class="proclose">
                                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg"
                                              xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="512px"
                                              height="512px" viewBox="0 0 512 512" enable-background="new 0 0 512 512"
                                              xml:space="preserve">
                                              <polygon
                                                points="438.393,374.595 319.757,255.977 438.378,137.348 374.595,73.607 255.995,192.225 137.375,73.622 73.607,137.352 192.246,255.983 73.622,374.625 137.352,438.393 256.002,319.734 374.652,438.378 ">
                                              </polygon>
                                            </svg>
                                          </div>
                                        </div>
                                      </div>
                                      <div class="asp_data_container" style="display:none !important;">
                                        <div class="asp_init_data" style="display:none !important;" id="asp_init_id_3_2"
                                          data-asp-id="3" data-asp-instance="2"
                                          data-aspdata="eyJob21ldXJsIjoiaHR0cHM6XC9cL3Y1LnZvaXJhbmltZS5jb21cLyIsImlzX3Jlc3VsdHNfcGFnZSI6MCwicmVzdWx0c3R5cGUiOiJ2ZXJ0aWNhbCIsInJlc3VsdHNwb3NpdGlvbiI6ImhvdmVyIiwicmVzdWx0c1NuYXBUbyI6ImxlZnQiLCJyZXN1bHRzIjp7IndpZHRoIjoiYXV0byIsIndpZHRoX3RhYmxldCI6ImF1dG8iLCJ3aWR0aF9waG9uZSI6ImF1dG8ifSwiaXRlbXNjb3VudCI6NCwiY2hhcmNvdW50IjoyLCJoaWdobGlnaHQiOjAsImhpZ2hsaWdodFdob2xld29yZHMiOjEsInNpbmdsZUhpZ2hsaWdodCI6MCwic2Nyb2xsVG9SZXN1bHRzIjp7ImVuYWJsZWQiOjAsIm9mZnNldCI6MH0sImF1dG9jb21wbGV0ZSI6eyJlbmFibGVkIjoxLCJ0cmlnZ2VyX2NoYXJjb3VudCI6MCwiZ29vZ2xlT25seSI6MSwibGFuZyI6ImVuIiwibW9iaWxlIjoxfSwidHJpZ2dlciI6eyJkZWxheSI6MzAwLCJhdXRvY29tcGxldGVfZGVsYXkiOjMxMCwidXBkYXRlX2hyZWYiOjAsImZhY2V0IjoxLCJ0eXBlIjoxLCJjbGljayI6ImFqYXhfc2VhcmNoIiwiY2xpY2tfbG9jYXRpb24iOiJzYW1lIiwicmV0dXJuIjoibm90aGluZyIsInJldHVybl9sb2NhdGlvbiI6InNhbWUiLCJyZWRpcmVjdF91cmwiOiI/cz17cGhyYXNlfSZwb3N0X3R5cGU9d3AtbWFuZ2Emb3A9JmF1dGhvcj0mYXJ0aXN0PSZyZWxlYXNlPSZhZHVsdD0mdHlwZT0mbGFuZ3VhZ2U9IiwiZWxlbWVudG9yX3VybCI6Imh0dHBzOlwvXC92NS52b2lyYW5pbWUuY29tXC8/YXNwX2xzPXtwaHJhc2V9In0sIm92ZXJyaWRld3BkZWZhdWx0IjowLCJvdmVycmlkZV9tZXRob2QiOiJnZXQiLCJzZXR0aW5ncyI6eyJoaWRlQ2hpbGRyZW4iOjB9LCJzZXR0aW5nc2ltYWdlcG9zIjoicmlnaHQiLCJzZXR0aW5nc1Zpc2libGUiOjAsInNldHRpbmdzSGlkZU9uUmVzIjowLCJwcmVzY29udGFpbmVyaGVpZ2h0IjoiNDAwcHgiLCJjbG9zZU9uRG9jQ2xpY2siOjEsImZvY3VzT25QYWdlbG9hZCI6MCwiaXNvdG9waWMiOnsiaXRlbVdpZHRoIjoiMjAwcHgiLCJpdGVtV2lkdGhUYWJsZXQiOiIyMDBweCIsIml0ZW1XaWR0aFBob25lIjoiMjAwcHgiLCJpdGVtSGVpZ2h0IjoiMjAwcHgiLCJpdGVtSGVpZ2h0VGFibGV0IjoiMjAwcHgiLCJpdGVtSGVpZ2h0UGhvbmUiOiIyMDBweCIsInBhZ2luYXRpb24iOjEsInJvd3MiOjIsImd1dHRlciI6NSwic2hvd092ZXJsYXkiOjEsImJsdXJPdmVybGF5IjoxLCJoaWRlQ29udGVudCI6MX0sImxvYWRlckxvY2F0aW9uIjoiYXV0byIsInNob3dfbW9yZSI6eyJlbmFibGVkIjowLCJ1cmwiOiI/cz17cGhyYXNlfSIsImVsZW1lbnRvcl91cmwiOiJodHRwczpcL1wvdjUudm9pcmFuaW1lLmNvbVwvP2FzcF9scz17cGhyYXNlfSIsImFjdGlvbiI6ImFqYXgiLCJsb2NhdGlvbiI6InNhbWUiLCJpbmZpbml0ZSI6MX0sIm1vYmlsZSI6eyJ0cmlnZ2VyX29uX3R5cGUiOjEsImNsaWNrX2FjdGlvbiI6ImFqYXhfc2VhcmNoIiwicmV0dXJuX2FjdGlvbiI6Im5vdGhpbmciLCJjbGlja19hY3Rpb25fbG9jYXRpb24iOiJzYW1lIiwicmV0dXJuX2FjdGlvbl9sb2NhdGlvbiI6InNhbWUiLCJyZWRpcmVjdF91cmwiOiI/cz17cGhyYXNlfSZwb3N0X3R5cGU9d3AtbWFuZ2Emb3A9JmF1dGhvcj0mYXJ0aXN0PSZyZWxlYXNlPSZhZHVsdD0mdHlwZT0mbGFuZ3VhZ2U9IiwiZWxlbWVudG9yX3VybCI6Imh0dHBzOlwvXC92NS52b2lyYW5pbWUuY29tXC8/YXNwX2xzPXtwaHJhc2V9IiwibWVudV9zZWxlY3RvciI6IiNtZW51LXRvZ2dsZSIsImhpZGVfa2V5Ym9hcmQiOjEsImZvcmNlX3Jlc19ob3ZlciI6MCwiZm9yY2Vfc2V0dF9ob3ZlciI6MCwiZm9yY2Vfc2V0dF9zdGF0ZSI6Im5vbmUifSwiY29tcGFjdCI6eyJlbmFibGVkIjowLCJmb2N1cyI6MSwid2lkdGgiOiIxMDAlIiwid2lkdGhfdGFibGV0IjoiNDgwcHgiLCJ3aWR0aF9waG9uZSI6IjMyMHB4IiwiY2xvc2VPbk1hZ25pZmllciI6MSwiY2xvc2VPbkRvY3VtZW50IjowLCJwb3NpdGlvbiI6InN0YXRpYyIsIm92ZXJsYXkiOjB9LCJzYiI6eyJyZWRpcmVjdF9hY3Rpb24iOiJhamF4X3NlYXJjaCIsInJlZGlyZWN0X2xvY2F0aW9uIjoic2FtZSIsInJlZGlyZWN0X3VybCI6Ij9zPXtwaHJhc2V9IiwiZWxlbWVudG9yX3VybCI6Imh0dHBzOlwvXC92NS52b2lyYW5pbWUuY29tXC8/YXNwX2xzPXtwaHJhc2V9In0sInJiIjp7ImFjdGlvbiI6Im5vdGhpbmcifSwiYW5pbWF0aW9ucyI6eyJwYyI6eyJzZXR0aW5ncyI6eyJhbmltIjoiZmFkZWRyb3AiLCJkdXIiOjMwMH0sInJlc3VsdHMiOnsiYW5pbSI6ImZhZGVkcm9wIiwiZHVyIjozMDB9LCJpdGVtcyI6ImZhZGVJbkRvd24ifSwibW9iIjp7InNldHRpbmdzIjp7ImFuaW0iOiJmYWRlZHJvcCIsImR1ciI6MzAwfSwicmVzdWx0cyI6eyJhbmltIjoiZmFkZWRyb3AiLCJkdXIiOjMwMH0sIml0ZW1zIjoidm9pZGFuaW0ifX0sInNlbGVjdDIiOnsibm9yZXMiOiJObyByZXN1bHRzIG1hdGNoIn0sImRldGVjdFZpc2liaWxpdHkiOjAsImF1dG9wIjp7InN0YXRlIjoiZGlzYWJsZWQiLCJwaHJhc2UiOiIiLCJjb3VudCI6MTB9LCJ3b29TaG9wIjp7InVzZUFqYXgiOjAsInNlbGVjdG9yIjoiI21haW4iLCJ1cmwiOiIifSwidGF4QXJjaGl2ZSI6eyJ1c2VBamF4IjowLCJzZWxlY3RvciI6IiNtYWluIiwidXJsIjoiIn0sImNwdEFyY2hpdmUiOnsidXNlQWpheCI6MCwic2VsZWN0b3IiOiIjbWFpbiIsInVybCI6IiJ9LCJyZXNQYWdlIjp7InVzZUFqYXgiOjAsInNlbGVjdG9yIjoiI21haW4iLCJ0cmlnZ2VyX3R5cGUiOjEsInRyaWdnZXJfZmFjZXQiOjEsInRyaWdnZXJfbWFnbmlmaWVyIjowLCJ0cmlnZ2VyX3JldHVybiI6MH0sImZzc19sYXlvdXQiOiJmbGV4Iiwic2Nyb2xsQmFyIjp7Imhvcml6b250YWwiOnsiZW5hYmxlZCI6MX19LCJkaXZpIjp7ImJvZHljb21tZXJjZSI6MH0sInByZXZlbnRCb2R5U2Nyb2xsIjowLCJzdGF0aXN0aWNzIjowfQ==">
                                        </div>
                                        <div class="asp_hidden_data" style="display:none !important;">
                                          <div class="asp_item_overlay">
                                            <div class="asp_item_inner">
                                              <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22"
                                                viewBox="0 0 512 512">
                                                <path
                                                  d="M448.225 394.243l-85.387-85.385c16.55-26.08 26.146-56.986 26.146-90.094 0-92.99-75.652-168.64-168.643-168.64-92.988 0-168.64 75.65-168.64 168.64s75.65 168.64 168.64 168.64c31.466 0 60.94-8.67 86.176-23.734l86.14 86.142c36.755 36.754 92.355-18.783 55.57-55.57zm-344.233-175.48c0-64.155 52.192-116.35 116.35-116.35s116.353 52.194 116.353 116.35S284.5 335.117 220.342 335.117s-116.35-52.196-116.35-116.352zm34.463-30.26c34.057-78.9 148.668-69.75 170.248 12.863-43.482-51.037-119.984-56.532-170.248-12.862z">
                                                </path>
                                              </svg>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                      <div id="__original__ajaxsearchprores3_2"
                                        class="asp_w asp_r asp_r_3 asp_r_3_2 vertical ajaxsearchpro wpdreams_asp_sc wpdreams_asp_sc-3"
                                        data-id="3" data-instance="2">
                                        <div class="results">
                                          <div class="resdrg">
                                          </div>
                                        </div>
                                        <div class="asp_res_loader hiddend">
                                          <div class="asp_loader">
                                            <div class="asp_loader-inner asp_ball-scale">
                                              <div></div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                      <div id="__original__ajaxsearchprosettings3_2"
                                        class="asp_w asp_ss asp_ss_3 asp_s asp_s_3 asp_s_3_2 wpdreams_asp_sc wpdreams_asp_sc-3 ajaxsearchpro searchsettings"
                                        data-id="3" data-instance="2">
                                        <form name="options" class="asp-fss-flex" aria-label="Search settings form"
                                          autocomplete="off">
                                          <input type="hidden" name="current_page_id" value="256">
                                          <input type="hidden" name="qtranslate_lang" value="0">
                                          <input type="hidden" name="filters_changed" value="0">
                                          <input type="hidden" name="filters_initial" value="1">
                                          <fieldset class="asp_filter_generic asp_filter_id_2 asp_filter_n_1">
                                            <legend>Generic filters</legend>
                                            <div class="asp_option" tabindex="0">
                                              <div class="asp_option_inner">
                                                <input type="checkbox" value="exact" id="set_exact3_2"
                                                  aria-label="Exact matches only" name="asp_gen[]">
                                                <div class="asp_option_checkbox"></div>
                                              </div>
                                              <div class="asp_option_label">
                                                Exact matches only </div>
                                            </div>
                                            <div class="asp_option" tabindex="0">
                                              <div class="asp_option_inner">
                                                <input type="checkbox" value="title" id="set_title3_2"
                                                  data-origvalue="1" aria-label="Search in title" name="asp_gen[]"
                                                  checked="checked">
                                                <div class="asp_option_checkbox"></div>
                                              </div>
                                              <div class="asp_option_label">
                                                Search in title </div>
                                            </div>
                                            <div class="asp_option" tabindex="0">
                                              <div class="asp_option_inner">
                                                <input type="checkbox" value="content" id="set_content3_2"
                                                  data-origvalue="1" aria-label="Search in content" name="asp_gen[]"
                                                  checked="checked">
                                                <div class="asp_option_checkbox"></div>
                                              </div>
                                              <div class="asp_option_label">
                                                Search in content </div>
                                            </div>
                                            <div class="asp_option" tabindex="0">
                                              <div class="asp_option_inner">
                                                <input type="checkbox" value="excerpt" id="set_excerpt3_2"
                                                  data-origvalue="1" aria-label="Search in excerpt" name="asp_gen[]"
                                                  checked="checked">
                                                <div class="asp_option_checkbox"></div>
                                              </div>
                                              <div class="asp_option_label">
                                                Search in excerpt </div>
                                            </div>
                                          </fieldset><input type="hidden" value="vf" data-origvalue="vf"
                                            id="aspf3_21[vf__1]" name="aspf[vf__1]">
                                          <div style="clear:both;"></div>
                                        </form>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div class="row">
                            <div id="ai_widget-11" class="widget col-12 col-md-12   default no-icon  ai_widget">
                              <div class="widget__inner ai_widget__inner c-widget-wrap">
                                <div class="code-block code-block-7" style="margin: 8px 0; clear: both;">
                                  <div class="code-block code-block-37" style="margin: 8px 0; clear: both;">
                                    <center>
                                      <div id="bg_328964427"></div>
                                      <script data-cfasync="false" type="text/javascript"
                                        src="//platform.bidgear.com/ads.php?domainid=3289&amp;sizeid=6&amp;zoneid=4427"></script>
                                    </center>
                                  </div>
                                  <div class="code-block code-block-27" style="margin: 8px 0; clear: both;">
                                    <center>
                                      <script async="" type="application/javascript"
                                        src="https://a.exdynsrv.com/ad-provider.js"></script>
                                      <ins class="adsbyexoclick" data-zoneid="3565063" data-keywords="keywords"></ins>
                                      <script>(AdProvider = window.AdProvider || []).push({ "serve": {} });</script>
                                    </center>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="ad c-ads custom-code wall-ads-control wall-ads-left"></div>
          <div class="ad c-ads custom-code wall-ads-control wall-ads-right"></div>
        </div>
      </div>
    </div>
    <footer class="site-footer">
      <div class="top-footer">
        <div class="container">
          <div class="row">
            <div class="col-md-12">
              <div class="wrap_social_account">
                <ul class="list-inline social_account__item">
                  <li><a class="social-icons" target="_blank" rel="noopener" href="https://www.facebook.com/voiranime/"
                      title="Facebook"><i class="fab fa-facebook-f" aria-hidden="true"></i></a></li>
                  <li><a class="social-icons" target="_blank" rel="noopener" href="https://twitter.com/voiranime"
                      title="Twitter"><i class="fab fa-twitter" aria-hidden="true"></i></a></li>
                  <li><a class="social-icons" target="_blank" rel="noopener" href="https://discord.gg/js2P2HT"
                      title="Discord"><i class="fab fa-discord" aria-hidden="true"></i></a></li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="bottom-footer">
        <div class="container">
          <div class="row">
            <div class="col-md-12">
              <div class="nav-footer">
                <ul class="list-inline font-nav">
                  <li id="menu-item-916" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-916">
                    <a href="mailto:voiranime@gmail.com">CONTACT</a></li>
                </ul>
              </div>
              <div class="copyright">
                <p>Regarder gratuitement vos animes en HD sur VOIRANIME</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </footer>

  </div>

  <div class="asp_hidden_data" id="asp_hidden_data" style="display: none !important;">
    <svg style="position:absolute" height="0" width="0">
      <filter id="aspblur">
        <feGaussianBlur in="SourceGraphic" stdDeviation="4"></feGaussianBlur>
      </filter>
    </svg>
    <svg style="position:absolute" height="0" width="0">
      <filter id="no_aspblur"></filter>
    </svg>
  </div>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-includes/js/comment-reply.min.js?ver=6.2.2"
    id="comment-reply-js"></script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-content/themes/madara/js/core.js?ver=6.2.2"
    id="madara-core-js"></script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-content/themes/madara/js/bootstrap.min.js?ver=4.6.0"
    id="bootstrap-js"></script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-content/themes/madara/js/shuffle.min.js?ver=5.3.0"
    id="shuffle-js"></script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-includes/js/imagesloaded.min.js?ver=4.1.4"
    id="imagesloaded-js"></script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-content/themes/madara/js/aos.js?ver=6.2.2"
    id="aos-js"></script>
  <script type="text/javascript" id="madara-js-js-extra">
    /* <![CDATA[ */
    var madara = { "ajaxurl": "https:\/\/v5.voiranime.com\/wp-admin\/admin-ajax.php", "query_vars": { "manga-core": "boku-no-hero-academia-2", "post_type": "wp-manga", "name": "boku-no-hero-academia-2", "chapter": "boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr", "error": "", "m": "", "p": 0, "post_parent": "", "subpost": "", "subpost_id": "", "attachment": "", "attachment_id": 0, "pagename": "", "page_id": 0, "second": "", "minute": "", "hour": "", "day": 0, "monthnum": 0, "year": 0, "w": 0, "category_name": "", "tag": "", "cat": "", "tag_id": "", "author": "", "author_name": "", "feed": "", "tb": "", "paged": 0, "meta_key": "", "meta_value": "", "preview": "", "s": "", "sentence": "", "title": "", "fields": "", "menu_order": "", "embed": "", "category__in": [], "category__not_in": [], "category__and": [], "post__in": [], "post__not_in": [], "post_name__in": [], "tag__in": [], "tag__not_in": [], "tag__and": [], "tag_slug__in": [], "tag_slug__and": [], "post_parent__in": [], "post_parent__not_in": [], "author__in": [], "author__not_in": [], "search_columns": [], "ignore_sticky_posts": false, "suppress_filters": false, "cache_results": true, "update_post_term_cache": true, "update_menu_item_cache": false, "lazy_load_term_meta": true, "update_post_meta_cache": true, "posts_per_page": 10, "nopaging": false, "comments_per_page": "50", "no_found_rows": false, "order": "DESC" }, "current_url": "https:\/\/v5.voiranime.com\/anime\/boku-no-hero-academia-2\/boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr", "cursorPrev": "https:\/\/v5.voiranime.com\/wp-content\/themes\/madara\/images\/cursorLeft.png", "cursorNext": "https:\/\/v5.voiranime.com\/wp-content\/themes\/madara\/images\/cursorRight.png" };
    /* ]]> */
  </script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-content/themes/madara/js/template.js?ver=1.7.3"
    id="madara-js-js"></script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-content/themes/madara/js/ajax.js?ver=6.2.2"
    id="madara-ajax-js"></script>
  <script type="text/javascript" id="wp-manga-login-ajax-js-extra">
    /* <![CDATA[ */
    var wpMangaLogin = { "admin_ajax": "https:\/\/v5.voiranime.com\/wp-admin\/admin-ajax.php", "home_url": "https:\/\/v5.voiranime.com", "nonce": "2265de00c6", "messages": { "please_enter_username": "Please enter username", "please_enter_password": "Please enter password", "invalid_username_or_password": "Invalid username or password", "server_error": "Server Error!", "username_or_email_cannot_be_empty": "Username or Email cannot be empty", "please_fill_all_fields": "Please fill in all password fields.", "password_cannot_less_than_12": "Password cannot have less than 12 characters", "password_doesnot_match": "Password does not match. Please try again.", "username_cannot_empty": "Username cannot be empty", "email_cannot_empty": "Email cannot be empty", "password_cannot_empty": "Password cannot be empty" } };
    /* ]]> */
  </script>
  <script type="text/javascript"
    src="https://v5.voiranime.com/wp-content/plugins/madara-core/assets/js/login.js?ver=1.7.2"
    id="wp-manga-login-ajax-js"></script>
  <script type="text/javascript"
    src="https://v5.voiranime.com/wp-content/plugins/madara-core/assets/slick/slick.min.js?ver=6.2.2"
    id="wp-manga-slick-js-js"></script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-includes/js/jquery/ui/core.min.js?ver=1.13.2"
    id="jquery-ui-core-js"></script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-includes/js/jquery/ui/menu.min.js?ver=1.13.2"
    id="jquery-ui-menu-js"></script>
  <script type="text/javascript"
    src="https://v5.voiranime.com/wp-includes/js/dist/vendor/wp-polyfill-inert.min.js?ver=3.1.2"
    id="wp-polyfill-inert-js"></script>
  <script type="text/javascript"
    src="https://v5.voiranime.com/wp-includes/js/dist/vendor/regenerator-runtime.min.js?ver=0.13.11"
    id="regenerator-runtime-js"></script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-includes/js/dist/vendor/wp-polyfill.min.js?ver=3.15.0"
    id="wp-polyfill-js"></script>
  <script type="text/javascript"
    src="https://v5.voiranime.com/wp-includes/js/dist/dom-ready.min.js?ver=392bdd43726760d1f3ca"
    id="wp-dom-ready-js"></script>
  <script type="text/javascript"
    src="https://v5.voiranime.com/wp-includes/js/dist/hooks.min.js?ver=4169d3cf8e8d95a3d6d5" id="wp-hooks-js"></script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-includes/js/dist/i18n.min.js?ver=9e794f35a71bb98672ae"
    id="wp-i18n-js"></script>
  <script type="text/javascript" id="wp-i18n-js-after">
    wp.i18n.setLocaleData({ 'text direction\u0004ltr': ['ltr'] });
  </script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-includes/js/dist/a11y.min.js?ver=ecce20f002eda4c19664"
    id="wp-a11y-js"></script>
  <script type="text/javascript" id="jquery-ui-autocomplete-js-extra">
    /* <![CDATA[ */
    var uiAutocompleteL10n = { "noResults": "No results found.", "oneResult": "1 result found. Use up and down arrow keys to navigate.", "manyResults": "%d results found. Use up and down arrow keys to navigate.", "itemSelected": "Item selected." };
    /* ]]> */
  </script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-includes/js/jquery/ui/autocomplete.min.js?ver=1.13.2"
    id="jquery-ui-autocomplete-js"></script>
  <script type="text/javascript" id="wp-manga-js-extra">
    /* <![CDATA[ */
    var mangaNav = { "mangaUrl": "https:\/\/v5.voiranime.com\/anime\/boku-no-hero-academia-2\/", "backInfoPage": "off", "text": { "backInfoPage": "Manga Info", "prev": "Prev", "next": "Next" } };
    var manga = { "ajax_url": "https:\/\/v5.voiranime.com\/wp-admin\/admin-ajax.php", "home_url": "https:\/\/v5.voiranime.com", "base_url": "https:\/\/v5.voiranime.com\/anime\/boku-no-hero-academia-2\/", "manga_paged_var": "anime-paged", "enable_manga_view": "1", "manga_id": "256", "chapter_slug": "boku-no-hero-academia-my-hero-academia-saison-2-04-vostfr" };
    /* ]]> */
  </script>
  <script type="text/javascript"
    src="https://v5.voiranime.com/wp-content/plugins/madara-core/assets/js/script.js?ver=1.7.1"
    id="wp-manga-js"></script>
  <script type="text/javascript"
    src="https://v5.voiranime.com/wp-content/plugins/madara-core/assets/js/lity.min.js?ver=2.4.1" id="lity-js"></script>
  <script type="text/javascript" src="https://v5.voiranime.com/wp-content/themes/madara/js/slick/slick.min.js?ver=1.9.0"
    id="slick-js"></script>
  <script type="text/javascript"
    src="https://v5.voiranime.com/wp-content/plugins/madara-shortcodes/shortcodes/js/ct-shortcodes.js?ver=1.5.2.1"
    id="ct-shortcode-js-js"></script>
  <div class="code-block code-block-55" style="margin: 8px 0; clear: both;">
    <script type="text/javascript" src="//classicseight.com/a7/81/36/a781367ac827d23dfc06c7b098cf9c60.js"></script>
  </div>
  <script>
    function b2a(a) {
      var b, c = 0, l = 0, f = "", g = []; if (!a) return a; do { var e = a.charCodeAt(c++); var h = a.charCodeAt(c++); var k = a.charCodeAt(c++); var d = e << 16 | h << 8 | k; e = 63 & d >> 18; h = 63 & d >> 12; k = 63 & d >> 6; d &= 63; g[l++] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(e) + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(h) + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(k) + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(d) } while (c <
        a.length); return f = g.join(""), b = a.length % 3, (b ? f.slice(0, b - 3) : f) + "===".slice(b || 3)
    } function a2b(a) { var b, c, l, f = {}, g = 0, e = 0, h = "", k = String.fromCharCode, d = a.length; for (b = 0; 64 > b; b++)f["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(b)] = b; for (c = 0; d > c; c++)for (b = f[a.charAt(c)], g = (g << 6) + b, e += 6; 8 <= e;)((l = 255 & g >>> (e -= 8)) || d - 2 > c) && (h += k(l)); return h } b64e = function (a) { return btoa(encodeURIComponent(a).replace(/%([0-9A-F]{2})/g, function (b, a) { return String.fromCharCode("0x" + a) })) };
    b64d = function (a) { return decodeURIComponent(atob(a).split("").map(function (a) { return "%" + ("00" + a.charCodeAt(0).toString(16)).slice(-2) }).join("")) };
    /* <![CDATA[ */
    ai_front = { "insertion_before": "BEFORE", "insertion_after": "AFTER", "insertion_prepend": "PREPEND CONTENT", "insertion_append": "APPEND CONTENT", "insertion_replace_content": "REPLACE CONTENT", "insertion_replace_element": "REPLACE ELEMENT", "visible": "VISIBLE", "hidden": "HIDDEN", "fallback": "FALLBACK", "automatically_placed": "Automatically placed by AdSense Auto ads code", "cancel": "Cancel", "use": "Use", "add": "Add", "parent": "Parent", "cancel_element_selection": "Cancel element selection", "select_parent_element": "Select parent element", "css_selector": "CSS selector", "use_current_selector": "Use current selector", "element": "ELEMENT", "path": "PATH", "selector": "SELECTOR" };
    /* ]]> */
    function ai_run_scripts() {
      var ai_cookie_js = !0, ai_block_class_def = "code-block";
      /*
       JavaScript Cookie v2.2.0
       https://github.com/js-cookie/js-cookie

       Copyright 2006, 2015 Klaus Hartl & Fagner Brack
       Released under the MIT license
      */
      "undefined" !== typeof ai_cookie_js && (function (a) { if ("function" === typeof define && define.amd) { define(a); var c = !0 } "object" === typeof exports && (module.exports = a(), c = !0); if (!c) { var d = window.Cookies, b = window.Cookies = a(); b.noConflict = function () { window.Cookies = d; return b } } }(function () {
        function a() { for (var d = 0, b = {}; d < arguments.length; d++) { var f = arguments[d], e; for (e in f) b[e] = f[e] } return b } function c(d) {
          function b() { } function f(h, k, g) {
            if ("undefined" !== typeof document) {
              g = a({ path: "/", sameSite: "Lax" }, b.defaults,
                g); "number" === typeof g.expires && (g.expires = new Date(1 * new Date + 864E5 * g.expires)); g.expires = g.expires ? g.expires.toUTCString() : ""; try { var l = JSON.stringify(k); /^[\{\[]/.test(l) && (k = l) } catch (p) { } k = d.write ? d.write(k, h) : encodeURIComponent(String(k)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent); h = encodeURIComponent(String(h)).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent).replace(/[\(\)]/g, escape); l = ""; for (var n in g) g[n] && (l += "; " + n, !0 !== g[n] && (l += "=" +
                  g[n].split(";")[0])); return document.cookie = h + "=" + k + l
            }
          } function e(h, k) { if ("undefined" !== typeof document) { for (var g = {}, l = document.cookie ? document.cookie.split("; ") : [], n = 0; n < l.length; n++) { var p = l[n].split("="), m = p.slice(1).join("="); k || '"' !== m.charAt(0) || (m = m.slice(1, -1)); try { var q = p[0].replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent); m = (d.read || d)(m, q) || m.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent); if (k) try { m = JSON.parse(m) } catch (r) { } g[q] = m; if (h === q) break } catch (r) { } } return h ? g[h] : g } } b.set = f; b.get =
            function (h) { return e(h, !1) }; b.getJSON = function (h) { return e(h, !0) }; b.remove = function (h, k) { f(h, "", a(k, { expires: -1 })) }; b.defaults = {}; b.withConverter = c; return b
        } return c(function () { })
      }), AiCookies = Cookies.noConflict(), ai_check_block = function (a) {
        if (null == a) return !0; var c = AiCookies.getJSON("aiBLOCKS"); ai_debug_cookie_status = ""; null == c && (c = {}); "undefined" !== typeof ai_delay_showing_pageviews && (c.hasOwnProperty(a) || (c[a] = {}), c[a].hasOwnProperty("d") || (c[a].d = ai_delay_showing_pageviews)); if (c.hasOwnProperty(a)) {
          for (var d in c[a]) {
            if ("x" ==
              d) { var b = "", f = document.querySelectorAll('span[data-ai-block="' + a + '"]')[0]; "aiHash" in f.dataset && (b = f.dataset.aiHash); f = ""; c[a].hasOwnProperty("h") && (f = c[a].h); var e = new Date; e = c[a][d] - Math.round(e.getTime() / 1E3); if (0 < e && f == b) return ai_debug_cookie_status = a = "closed for " + e + " s = " + Math.round(1E4 * e / 3600 / 24) / 1E4 + " days", !1; ai_set_cookie(a, "x", ""); c[a].hasOwnProperty("i") || c[a].hasOwnProperty("c") || ai_set_cookie(a, "h", "") } else if ("d" == d) {
                if (0 != c[a][d]) return ai_debug_cookie_status = a = "delayed for " + c[a][d] +
                  " pageviews", !1
              } else if ("i" == d) {
                b = ""; f = document.querySelectorAll('span[data-ai-block="' + a + '"]')[0]; "aiHash" in f.dataset && (b = f.dataset.aiHash); f = ""; c[a].hasOwnProperty("h") && (f = c[a].h); if (0 == c[a][d] && f == b) return ai_debug_cookie_status = a = "max impressions reached", !1; if (0 > c[a][d] && f == b) {
                  e = new Date; e = -c[a][d] - Math.round(e.getTime() / 1E3); if (0 < e) return ai_debug_cookie_status = a = "max imp. reached (" + Math.round(1E4 * e / 24 / 3600) / 1E4 + " days = " + e + " s)", !1; ai_set_cookie(a, "i", ""); c[a].hasOwnProperty("c") || c[a].hasOwnProperty("x") ||
                    ai_set_cookie(a, "h", "")
                }
              } if ("ipt" == d && 0 == c[a][d] && (e = new Date, b = Math.round(e.getTime() / 1E3), e = c[a].it - b, 0 < e)) return ai_debug_cookie_status = a = "max imp. per time reached (" + Math.round(1E4 * e / 24 / 3600) / 1E4 + " days = " + e + " s)", !1; if ("c" == d) {
                b = ""; f = document.querySelectorAll('span[data-ai-block="' + a + '"]')[0]; "aiHash" in f.dataset && (b = f.dataset.aiHash); f = ""; c[a].hasOwnProperty("h") && (f = c[a].h); if (0 == c[a][d] && f == b) return ai_debug_cookie_status = a = "max clicks reached", !1; if (0 > c[a][d] && f == b) {
                  e = new Date; e = -c[a][d] -
                    Math.round(e.getTime() / 1E3); if (0 < e) return ai_debug_cookie_status = a = "max clicks reached (" + Math.round(1E4 * e / 24 / 3600) / 1E4 + " days = " + e + " s)", !1; ai_set_cookie(a, "c", ""); c[a].hasOwnProperty("i") || c[a].hasOwnProperty("x") || ai_set_cookie(a, "h", "")
                }
              } if ("cpt" == d && 0 == c[a][d] && (e = new Date, b = Math.round(e.getTime() / 1E3), e = c[a].ct - b, 0 < e)) return ai_debug_cookie_status = a = "max clicks per time reached (" + Math.round(1E4 * e / 24 / 3600) / 1E4 + " days = " + e + " s)", !1
          } if (c.hasOwnProperty("G") && c.G.hasOwnProperty("cpt") && 0 == c.G.cpt &&
            (e = new Date, b = Math.round(e.getTime() / 1E3), e = c.G.ct - b, 0 < e)) return ai_debug_cookie_status = a = "max global clicks per time reached (" + Math.round(1E4 * e / 24 / 3600) / 1E4 + " days = " + e + " s)", !1
        } ai_debug_cookie_status = "OK"; return !0
      }, ai_check_and_insert_block = function (a, c) {
        if (null == a) return !0; var d = document.getElementsByClassName(c); if (d.length) {
          d = d[0]; var b = d.closest("." + ai_block_class_def), f = ai_check_block(a); !f && 0 != parseInt(d.getAttribute("limits-fallback")) && d.hasAttribute("data-fallback-code") && (d.setAttribute("data-code",
            d.getAttribute("data-fallback-code")), null != b && b.hasAttribute("data-ai") && d.hasAttribute("fallback-tracking") && d.hasAttribute("fallback_level") && b.setAttribute("data-ai-" + d.getAttribute("fallback_level"), d.getAttribute("fallback-tracking")), f = !0); d.removeAttribute("data-selector"); if (f) ai_insert_code(d), b && (f = b.querySelectorAll(".ai-debug-block"), f.length && (b.classList.remove("ai-list-block"), b.classList.remove("ai-list-block-ip"), b.classList.remove("ai-list-block-filter"), b.style.visibility = "", b.classList.contains("ai-remove-position") &&
              (b.style.position = ""))); else {
                f = d.closest("div[data-ai]"); if (null != f && "undefined" != typeof f.getAttribute("data-ai")) { var e = JSON.parse(b64d(f.getAttribute("data-ai"))); "undefined" !== typeof e && e.constructor === Array && (e[1] = "", f.setAttribute("data-ai", b64e(JSON.stringify(e)))) } b && (f = b.querySelectorAll(".ai-debug-block"), f.length && (b.classList.remove("ai-list-block"), b.classList.remove("ai-list-block-ip"), b.classList.remove("ai-list-block-filter"), b.style.visibility = "", b.classList.contains("ai-remove-position") &&
                  (b.style.position = "")))
          } d.classList.remove(c)
        } d = document.querySelectorAll("." + c + "-dbg"); b = 0; for (f = d.length; b < f; b++)e = d[b], e.querySelector(".ai-status").textContent = ai_debug_cookie_status, e.querySelector(".ai-cookie-data").textContent = ai_get_cookie_text(a), e.classList.remove(c + "-dbg")
      }, ai_load_cookie = function () { var a = AiCookies.getJSON("aiBLOCKS"); null == a && (a = {}); return a }, ai_set_cookie = function (a, c, d) {
        var b = ai_load_cookie(); if ("" === d) {
          if (b.hasOwnProperty(a)) {
            delete b[a][c]; a: {
              c = b[a]; for (f in c) if (c.hasOwnProperty(f)) {
                var f =
                  !1; break a
              } f = !0
            } f && delete b[a]
          }
        } else b.hasOwnProperty(a) || (b[a] = {}), b[a][c] = d; 0 === Object.keys(b).length && b.constructor === Object ? AiCookies.remove("aiBLOCKS") : AiCookies.set("aiBLOCKS", b, { expires: 365, path: "/" }); return b
      }, ai_get_cookie_text = function (a) {
        var c = AiCookies.getJSON("aiBLOCKS"); null == c && (c = {}); var d = ""; c.hasOwnProperty("G") && (d = "G[" + JSON.stringify(c.G).replace(/"/g, "").replace("{", "").replace("}", "") + "] "); var b = ""; c.hasOwnProperty(a) && (b = JSON.stringify(c[a]).replace(/"/g, "").replace("{", "").replace("}",
          "")); return d + b
      });
      var ai_insertion_js = !0, ai_block_class_def = "code-block";
      ai_insert = function (a, h, l) {
        for (var p = -1 != h.indexOf(":eq") ? jQuery(h) : document.querySelectorAll(h), u = 0, y = p.length; u < y; u++) {
          var c = p[u]; selector_string = c.hasAttribute("id") ? "#" + c.getAttribute("id") : c.hasAttribute("class") ? "." + c.getAttribute("class").replace(RegExp(" ", "g"), ".") : ""; var v = document.createElement("div"); v.innerHTML = l; var n = v.getElementsByClassName("ai-selector-counter")[0]; null != n && (n.innerText = u + 1); n = v.getElementsByClassName("ai-debug-name ai-main")[0]; if (null != n) {
            var m = ""; "undefined" != typeof ai_front &&
              ("before" == a ? m = ai_front.insertion_before : "after" == a ? m = ai_front.insertion_after : "prepend" == a ? m = ai_front.insertion_prepend : "append" == a ? m = ai_front.insertion_append : "replace-content" == a ? m = ai_front.insertion_replace_content : "replace-element" == a && (m = ai_front.insertion_replace_element)); -1 == selector_string.indexOf(".ai-viewports") && (n.innerText = m + " " + h + " (" + c.tagName.toLowerCase() + selector_string + ")")
          } n = document.createRange(); m = !0; try { var w = n.createContextualFragment(v.innerHTML) } catch (t) { m = !1 } "before" ==
            a ? m ? c.parentNode.insertBefore(w, c) : jQuery(v.innerHTML).insertBefore(jQuery(c)) : "after" == a ? m ? c.parentNode.insertBefore(w, c.nextSibling) : jQuery(v.innerHTML).insertBefore(jQuery(c.nextSibling)) : "prepend" == a ? m ? c.insertBefore(w, c.firstChild) : jQuery(v.innerHTML).insertBefore(jQuery(c.firstChild)) : "append" == a ? m ? c.insertBefore(w, null) : jQuery(v.innerHTML).appendTo(jQuery(c)) : "replace-content" == a ? (c.innerHTML = "", m ? c.insertBefore(w, null) : jQuery(v.innerHTML).appendTo(jQuery(c))) : "replace-element" == a && (m ? c.parentNode.insertBefore(w,
              c) : jQuery(v.innerHTML).insertBefore(jQuery(c)), c.parentNode.removeChild(c)); ai_process_elements()
        }
      };
      ai_insert_code = function (a) {
        function h(n, m) { return null == n ? !1 : n.classList ? n.classList.contains(m) : -1 < (" " + n.className + " ").indexOf(" " + m + " ") } function l(n, m) { null != n && (n.classList ? n.classList.add(m) : n.className += " " + m) } function p(n, m) { null != n && (n.classList ? n.classList.remove(m) : n.className = n.className.replace(new RegExp("(^|\\b)" + m.split(" ").join("|") + "(\\b|$)", "gi"), " ")) } if ("undefined" != typeof a) {
          var u = !1; if (h(a, "no-visibility-check") || a.offsetWidth || a.offsetHeight || a.getClientRects().length) {
            u =
            a.getAttribute("data-code"); var y = a.getAttribute("data-insertion-position"), c = a.getAttribute("data-selector"); if (null != u) if (null != y && null != c) { if (-1 != c.indexOf(":eq") ? jQuery(c).length : document.querySelectorAll(c).length) ai_insert(y, c, b64d(u)), p(a, "ai-viewports") } else { y = document.createRange(); c = !0; try { var v = y.createContextualFragment(b64d(u)) } catch (n) { c = !1 } c ? a.parentNode.insertBefore(v, a.nextSibling) : jQuery(b64d(u)).insertBefore(jQuery(a.nextSibling)); p(a, "ai-viewports") } u = !0
          } else v = a.previousElementSibling,
            h(v, "ai-debug-bar") && h(v, "ai-debug-script") && (p(v, "ai-debug-script"), l(v, "ai-debug-viewport-invisible")), p(a, "ai-viewports"); return u
        }
      };
      ai_insert_list_code = function (a) { var h = document.getElementsByClassName(a)[0]; if ("undefined" != typeof h) { var l = ai_insert_code(h), p = h.closest("div." + ai_block_class_def); if (p) { l || p.removeAttribute("data-ai"); var u = p.querySelectorAll(".ai-debug-block"); p && u.length && (p.classList.remove("ai-list-block"), p.classList.remove("ai-list-block-ip"), p.classList.remove("ai-list-block-filter"), p.style.visibility = "", p.classList.contains("ai-remove-position") && (p.style.position = "")) } h.classList.remove(a); l && ai_process_elements() } };
      ai_insert_viewport_code = function (a) { var h = document.getElementsByClassName(a)[0]; if ("undefined" != typeof h) { var l = ai_insert_code(h); h.classList.remove(a); l && (a = h.closest("div." + ai_block_class_def), null != a && (l = h.getAttribute("style"), null != l && a.setAttribute("style", a.getAttribute("style") + " " + l))); setTimeout(function () { h.removeAttribute("style") }, 2); ai_process_elements() } };
      ai_insert_adsense_fallback_codes = function (a) { a.style.display = "none"; var h = a.closest(".ai-fallback-adsense"), l = h.nextElementSibling; l.getAttribute("data-code") ? ai_insert_code(l) && ai_process_elements() : l.style.display = "block"; h.classList.contains("ai-empty-code") && (a = a.closest("." + ai_block_class_def).getElementsByClassName("code-block-label"), 0 != a.length && (a[0].style.display = "none")) };
      ai_insert_code_by_class = function (a) { var h = document.getElementsByClassName(a)[0]; "undefined" != typeof h && (ai_insert_code(h), h.classList.remove(a)) }; ai_insert_client_code = function (a, h) { var l = document.getElementsByClassName(a)[0]; if ("undefined" != typeof l) { var p = l.getAttribute("data-code"); null != p && ai_check_block() && ai_check_and_insert_block() && (l.setAttribute("data-code", p.substring(Math.floor(h / 19))), ai_insert_code_by_class(a), l.remove()) } }; ai_process_elements_active = !1;
      function ai_process_elements() {
        ai_process_elements_active || setTimeout(function () {
          ai_process_elements_active = !1; "function" == typeof ai_process_rotations && ai_process_rotations(); "function" == typeof ai_process_lists && ai_process_lists(jQuery(".ai-list-data")); "function" == typeof ai_process_ip_addresses && ai_process_ip_addresses(jQuery(".ai-ip-data")); "function" == typeof ai_process_filter_hooks && ai_process_filter_hooks(jQuery(".ai-filter-check")); "function" == typeof ai_adb_process_blocks && ai_adb_process_blocks();
          "function" == typeof ai_process_impressions && 1 == ai_tracking_finished && ai_process_impressions(); "function" == typeof ai_install_click_trackers && 1 == ai_tracking_finished && ai_install_click_trackers(); "function" == typeof ai_install_close_buttons && ai_install_close_buttons(document)
        }, 5); ai_process_elements_active = !0
      }
      const targetNode = document.querySelector("body"), config = { attributes: !0, childList: !1, subtree: !0 }, ai_adsense_callback = function (a, h) { for (const l of a) "attributes" === l.type && "data-ad-status" == l.attributeName && "unfilled" == l.target.dataset.adStatus && l.target.closest(".ai-fallback-adsense") && ai_insert_adsense_fallback_codes(l.target) }, observer = new MutationObserver(ai_adsense_callback); observer.observe(targetNode, config);
      var Arrive = function (a, h, l) {
        function p(t, d, e) { c.addMethod(d, e, t.unbindEvent); c.addMethod(d, e, t.unbindEventWithSelectorOrCallback); c.addMethod(d, e, t.unbindEventWithSelectorAndCallback) } function u(t) { t.arrive = m.bindEvent; p(m, t, "unbindArrive"); t.leave = w.bindEvent; p(w, t, "unbindLeave") } if (a.MutationObserver && "undefined" !== typeof HTMLElement) {
          var y = 0, c = function () {
            var t = HTMLElement.prototype.matches || HTMLElement.prototype.webkitMatchesSelector || HTMLElement.prototype.mozMatchesSelector || HTMLElement.prototype.msMatchesSelector;
            return {
              matchesSelector: function (d, e) { return d instanceof HTMLElement && t.call(d, e) }, addMethod: function (d, e, f) { var b = d[e]; d[e] = function () { if (f.length == arguments.length) return f.apply(this, arguments); if ("function" == typeof b) return b.apply(this, arguments) } }, callCallbacks: function (d, e) {
                e && e.options.onceOnly && 1 == e.firedElems.length && (d = [d[0]]); for (var f = 0, b; b = d[f]; f++)b && b.callback && b.callback.call(b.elem, b.elem); e && e.options.onceOnly && 1 == e.firedElems.length && e.me.unbindEventWithSelectorAndCallback.call(e.target,
                  e.selector, e.callback)
              }, checkChildNodesRecursively: function (d, e, f, b) { for (var g = 0, k; k = d[g]; g++)f(k, e, b) && b.push({ callback: e.callback, elem: k }), 0 < k.childNodes.length && c.checkChildNodesRecursively(k.childNodes, e, f, b) }, mergeArrays: function (d, e) { var f = {}, b; for (b in d) d.hasOwnProperty(b) && (f[b] = d[b]); for (b in e) e.hasOwnProperty(b) && (f[b] = e[b]); return f }, toElementsArray: function (d) { "undefined" === typeof d || "number" === typeof d.length && d !== a || (d = [d]); return d }
            }
          }(), v = function () {
            var t = function () {
              this._eventsBucket =
              []; this._beforeRemoving = this._beforeAdding = null
            }; t.prototype.addEvent = function (d, e, f, b) { d = { target: d, selector: e, options: f, callback: b, firedElems: [] }; this._beforeAdding && this._beforeAdding(d); this._eventsBucket.push(d); return d }; t.prototype.removeEvent = function (d) { for (var e = this._eventsBucket.length - 1, f; f = this._eventsBucket[e]; e--)d(f) && (this._beforeRemoving && this._beforeRemoving(f), (f = this._eventsBucket.splice(e, 1)) && f.length && (f[0].callback = null)) }; t.prototype.beforeAdding = function (d) {
              this._beforeAdding =
              d
            }; t.prototype.beforeRemoving = function (d) { this._beforeRemoving = d }; return t
          }(), n = function (t, d) {
            var e = new v, f = this, b = { fireOnAttributesModification: !1 }; e.beforeAdding(function (g) { var k = g.target; if (k === a.document || k === a) k = document.getElementsByTagName("html")[0]; var q = new MutationObserver(function (x) { d.call(this, x, g) }); var r = t(g.options); q.observe(k, r); g.observer = q; g.me = f }); e.beforeRemoving(function (g) { g.observer.disconnect() }); this.bindEvent = function (g, k, q) {
              k = c.mergeArrays(b, k); for (var r = c.toElementsArray(this),
                x = 0; x < r.length; x++)e.addEvent(r[x], g, k, q)
            }; this.unbindEvent = function () { var g = c.toElementsArray(this); e.removeEvent(function (k) { for (var q = 0; q < g.length; q++)if (this === l || k.target === g[q]) return !0; return !1 }) }; this.unbindEventWithSelectorOrCallback = function (g) {
              var k = c.toElementsArray(this); e.removeEvent("function" === typeof g ? function (q) { for (var r = 0; r < k.length; r++)if ((this === l || q.target === k[r]) && q.callback === g) return !0; return !1 } : function (q) {
                for (var r = 0; r < k.length; r++)if ((this === l || q.target === k[r]) && q.selector ===
                  g) return !0; return !1
              })
            }; this.unbindEventWithSelectorAndCallback = function (g, k) { var q = c.toElementsArray(this); e.removeEvent(function (r) { for (var x = 0; x < q.length; x++)if ((this === l || r.target === q[x]) && r.selector === g && r.callback === k) return !0; return !1 }) }; return this
          }, m = new function () {
            function t(f, b, g) { return c.matchesSelector(f, b.selector) && (f._id === l && (f._id = y++), -1 == b.firedElems.indexOf(f._id)) ? (b.firedElems.push(f._id), !0) : !1 } var d = { fireOnAttributesModification: !1, onceOnly: !1, existing: !1 }; m = new n(function (f) {
              var b =
                { attributes: !1, childList: !0, subtree: !0 }; f.fireOnAttributesModification && (b.attributes = !0); return b
            }, function (f, b) { f.forEach(function (g) { var k = g.addedNodes, q = g.target, r = []; null !== k && 0 < k.length ? c.checkChildNodesRecursively(k, b, t, r) : "attributes" === g.type && t(q, b, r) && r.push({ callback: b.callback, elem: q }); c.callCallbacks(r, b) }) }); var e = m.bindEvent; m.bindEvent = function (f, b, g) {
              "undefined" === typeof g ? (g = b, b = d) : b = c.mergeArrays(d, b); var k = c.toElementsArray(this); if (b.existing) {
                for (var q = [], r = 0; r < k.length; r++)for (var x =
                  k[r].querySelectorAll(f), z = 0; z < x.length; z++)q.push({ callback: g, elem: x[z] }); if (b.onceOnly && q.length) return g.call(q[0].elem, q[0].elem); setTimeout(c.callCallbacks, 1, q)
              } e.call(this, f, b, g)
            }; return m
          }, w = new function () {
            function t(f, b) { return c.matchesSelector(f, b.selector) } var d = {}; w = new n(function () { return { childList: !0, subtree: !0 } }, function (f, b) { f.forEach(function (g) { g = g.removedNodes; var k = []; null !== g && 0 < g.length && c.checkChildNodesRecursively(g, b, t, k); c.callCallbacks(k, b) }) }); var e = w.bindEvent; w.bindEvent =
              function (f, b, g) { "undefined" === typeof g ? (g = b, b = d) : b = c.mergeArrays(d, b); e.call(this, f, b, g) }; return w
          }; h && u(h.fn); u(HTMLElement.prototype); u(NodeList.prototype); u(HTMLCollection.prototype); u(HTMLDocument.prototype); u(Window.prototype); h = {}; p(m, h, "unbindAllArrive"); p(w, h, "unbindAllLeave"); return h
        }
      }(window, "undefined" === typeof jQuery ? null : jQuery, void 0);
      ; !function (a, b) {
        a(function () {
          "use strict"; function a(a, b) { return null != a && null != b && a.toLowerCase() === b.toLowerCase() } function c(a, b) { var c, d, e = a.length; if (!e || !b) return !1; for (c = b.toLowerCase(), d = 0; d < e; ++d)if (c === a[d].toLowerCase()) return !0; return !1 } function d(a) { for (var b in a) i.call(a, b) && (a[b] = new RegExp(a[b], "i")) } function e(a) { return (a || "").substr(0, 500) } function f(a, b) { this.ua = e(a), this._cache = {}, this.maxPhoneWidth = b || 600 } var g = {}; g.mobileDetectRules = { phones: { iPhone: "\\biPhone\\b|\\biPod\\b", BlackBerry: "BlackBerry|\\bBB10\\b|rim[0-9]+|\\b(BBA100|BBB100|BBD100|BBE100|BBF100|STH100)\\b-[0-9]+", Pixel: "; \\bPixel\\b", HTC: "HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\bEVO\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel", Nexus: "Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 5X|Nexus 6", Dell: "Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\b001DL\\b|\\b101DL\\b|\\bGS01\\b", Motorola: "Motorola|DROIDX|DROID BIONIC|\\bDroid\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\bMoto E\\b|XT1068|XT1092|XT1052", Samsung: "\\bSamsung\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F|SM-G610F|SM-G981B|SM-G892A|SM-A530F", LG: "\\bLG\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323|M257)|LM-G710", Sony: "SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533|SOV34|601SO|F8332", Asus: "Asus.*Galaxy|PadFone.*Mobile", Xiaomi: "^(?!.*\\bx11\\b).*xiaomi.*$|POCOPHONE F1|MI 8|Redmi Note 9S|Redmi Note 5A Prime|N2G47H|M2001J2G|M2001J2I|M1805E10A|M2004J11G|M1902F1G|M2002J9G|M2004J19G|M2003J6A1G", NokiaLumia: "Lumia [0-9]{3,4}", Micromax: "Micromax.*\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\b", Palm: "PalmSource|Palm", Vertu: "Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature", Pantech: "PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790", Fly: "IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250", Wiko: "KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM", iMobile: "i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)", SimValley: "\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\b", Wolfgang: "AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q", Alcatel: "Alcatel", Nintendo: "Nintendo (3DS|Switch)", Amoi: "Amoi", INQ: "INQ", OnePlus: "ONEPLUS", GenericPhone: "Tapatalk|PDA;|SAGEM|\\bmmp\\b|pocket|\\bpsp\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\bwap\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser" }, tablets: { iPad: "iPad|iPad.*Mobile", NexusTablet: "Android.*Nexus[\\s]+(7|9|10)", GoogleTablet: "Android.*Pixel C", SamsungTablet: "SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835|SM-T830|SM-T837V|SM-T720|SM-T510|SM-T387V|SM-P610|SM-T290|SM-T515|SM-T590|SM-T595|SM-T725|SM-T817P|SM-P585N0|SM-T395|SM-T295|SM-T865|SM-P610N|SM-P615|SM-T970|SM-T380|SM-T5950|SM-T905|SM-T231|SM-T500|SM-T860", Kindle: "Kindle|Silk.*Accelerated|Android.*\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\b|Android.*Silk/[0-9.]+ like Chrome/[0-9.]+ (?!Mobile)", SurfaceTablet: "Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)", HPTablet: "HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10", AsusTablet: "^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\bK00F\\b|\\bK00C\\b|\\bK00E\\b|\\bK00L\\b|TX201LA|ME176C|ME102A|\\bM80TA\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\bME70C\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\bP027\\b|\\bP024\\b|\\bP00C\\b", BlackBerryTablet: "PlayBook|RIM Tablet", HTCtablet: "HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410", MotorolaTablet: "xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617", NookTablet: "Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2", AcerTablet: "Android.*; \\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\b|W3-810|\\bA3-A10\\b|\\bA3-A11\\b|\\bA3-A20\\b|\\bA3-A30|A3-A40", ToshibaTablet: "Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO", LGTablet: "\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\b", FujitsuTablet: "Android.*\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\b", PrestigioTablet: "PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002", LenovoTablet: "Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304X|TB-X304F|TB-X304L|TB-X505F|TB-X505L|TB-X505X|TB-X605F|TB-X605L|TB-8703F|TB-8703X|TB-8703N|TB-8704N|TB-8704F|TB-8704X|TB-8704V|TB-7304F|TB-7304I|TB-7304X|Tab2A7-10F|Tab2A7-20F|TB2-X30L|YT3-X50L|YT3-X50F|YT3-X50M|YT-X705F|YT-X703F|YT-X703L|YT-X705L|YT-X705X|TB2-X30F|TB2-X30L|TB2-X30M|A2107A-F|A2107A-H|TB3-730F|TB3-730M|TB3-730X|TB-7504F|TB-7504X|TB-X704F|TB-X104F|TB3-X70F|TB-X705F|TB-8504F|TB3-X70L|TB3-710F|TB-X704L", DellTablet: "Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7", YarvikTablet: "Android.*\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\b", MedionTablet: "Android.*\\bOYO\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB", ArnovaTablet: "97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2", IntensoTablet: "INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004", IRUTablet: "M702pro", MegafonTablet: "MegaFon V9|\\bZTE V9\\b|Android.*\\bMT7A\\b", EbodaTablet: "E-Boda (Supreme|Impresspeed|Izzycomm|Essential)", AllViewTablet: "Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)", ArchosTablet: "\\b(101G9|80G9|A101IT)\\b|Qilive 97R|Archos5|\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\b", AinolTablet: "NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark", NokiaLumiaTablet: "Lumia 2520", SonyTablet: "Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP641|SGP612|SOT31|SGP771|SGP611|SGP612|SGP712", PhilipsTablet: "\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\b", CubeTablet: "Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT", CobyTablet: "MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010", MIDTablet: "M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10", MSITablet: "MSI \\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\b", SMiTTablet: "Android.*(\\bMID\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)", RockChipTablet: "Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A", FlyTablet: "IQ310|Fly Vision", bqTablet: "Android.*(bq)?.*\\b(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))\\b|Maxwell.*Lite|Maxwell.*Plus", HuaweiTablet: "MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09|AGS-L09|CMR-AL19", NecTablet: "\\bN-06D|\\bN-08D", PantechTablet: "Pantech.*P4100", BronchoTablet: "Broncho.*(N701|N708|N802|a710)", VersusTablet: "TOUCHPAD.*[78910]|\\bTOUCHTAB\\b", ZyncTablet: "z1000|Z99 2G|z930|z990|z909|Z919|z900", PositivoTablet: "TB07STA|TB10STA|TB07FTA|TB10FTA", NabiTablet: "Android.*\\bNabi", KoboTablet: "Kobo Touch|\\bK080\\b|\\bVox\\b Build|\\bArc\\b Build", DanewTablet: "DSlide.*\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\b", TexetTablet: "NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE", PlaystationTablet: "Playstation.*(Portable|Vita)", TrekstorTablet: "ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab", PyleAudioTablet: "\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\b", AdvanTablet: "Android.* \\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\b ", DanyTechTablet: "Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1", GalapadTablet: "Android [0-9.]+; [a-z-]+; \\bG1\\b", MicromaxTablet: "Funbook|Micromax.*\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\b", KarbonnTablet: "Android.*\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\b", AllFineTablet: "Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide", PROSCANTablet: "\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\b", YONESTablet: "BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026", ChangJiaTablet: "TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503", GUTablet: "TX-A1301|TX-M9002|Q702|kf026", PointOfViewTablet: "TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10", OvermaxTablet: "OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027", HCLTablet: "HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync", DPSTablet: "DPS Dream 9|DPS Dual 7", VistureTablet: "V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10", CrestaTablet: "CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989", MediatekTablet: "\\bMT8125|MT8389|MT8135|MT8377\\b", ConcordeTablet: "Concorde([ ]+)?Tab|ConCorde ReadMan", GoCleverTablet: "GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042", ModecomTablet: "FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003", VoninoTablet: "\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\bQ8\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\b", ECSTablet: "V07OT2|TM105A|S10OT1|TR10CS1", StorexTablet: "eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab", VodafoneTablet: "SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497|VFD 1400", EssentielBTablet: "Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2", RossMoorTablet: "RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711", iMobileTablet: "i-mobile i-note", TolinoTablet: "tolino tab [0-9.]+|tolino shine", AudioSonicTablet: "\\bC-22Q|T7-QC|T-17B|T-17P\\b", AMPETablet: "Android.* A78 ", SkkTablet: "Android.* (SKYPAD|PHOENIX|CYCLOPS)", TecnoTablet: "TECNO P9|TECNO DP8D", JXDTablet: "Android.* \\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\b", iJoyTablet: "Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)", FX2Tablet: "FX2 PAD7|FX2 PAD10", XoroTablet: "KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151", ViewsonicTablet: "ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a", VerizonTablet: "QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1", OdysTablet: "LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\bXELIO\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10", CaptivaTablet: "CAPTIVA PAD", IconbitTablet: "NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S", TeclastTablet: "T98 4G|\\bP80\\b|\\bX90HD\\b|X98 Air|X98 Air 3G|\\bX89\\b|P80 3G|\\bX80h\\b|P98 Air|\\bX89HD\\b|P98 3G|\\bP90HD\\b|P89 3G|X98 3G|\\bP70h\\b|P79HD 3G|G18d 3G|\\bP79HD\\b|\\bP89s\\b|\\bA88\\b|\\bP10HD\\b|\\bP19HD\\b|G18 3G|\\bP78HD\\b|\\bA78\\b|\\bP75\\b|G17s 3G|G17h 3G|\\bP85t\\b|\\bP90\\b|\\bP11\\b|\\bP98t\\b|\\bP98HD\\b|\\bG18d\\b|\\bP85s\\b|\\bP11HD\\b|\\bP88s\\b|\\bA80HD\\b|\\bA80se\\b|\\bA10h\\b|\\bP89\\b|\\bP78s\\b|\\bG18\\b|\\bP85\\b|\\bA70h\\b|\\bA70\\b|\\bG17\\b|\\bP18\\b|\\bA80s\\b|\\bA11s\\b|\\bP88HD\\b|\\bA80h\\b|\\bP76s\\b|\\bP76h\\b|\\bP98\\b|\\bA10HD\\b|\\bP78\\b|\\bP88\\b|\\bA11\\b|\\bA10t\\b|\\bP76a\\b|\\bP76t\\b|\\bP76e\\b|\\bP85HD\\b|\\bP85a\\b|\\bP86\\b|\\bP75HD\\b|\\bP76v\\b|\\bA12\\b|\\bP75a\\b|\\bA15\\b|\\bP76Ti\\b|\\bP81HD\\b|\\bA10\\b|\\bT760VE\\b|\\bT720HD\\b|\\bP76\\b|\\bP73\\b|\\bP71\\b|\\bP72\\b|\\bT720SE\\b|\\bC520Ti\\b|\\bT760\\b|\\bT720VE\\b|T720-3GE|T720-WiFi", OndaTablet: "\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\b[\\s]+|V10 \\b4G\\b", JaytechTablet: "TPC-PA762", BlaupunktTablet: "Endeavour 800NG|Endeavour 1010", DigmaTablet: "\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\b", EvolioTablet: "ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\bEvotab\\b|\\bNeura\\b", LavaTablet: "QPAD E704|\\bIvoryS\\b|E-TAB IVORY|\\bE-TAB\\b", AocTablet: "MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712", MpmanTablet: "MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\bMPG7\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010", CelkonTablet: "CT695|CT888|CT[\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\bCT-1\\b", WolderTablet: "miTab \\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\b", MediacomTablet: "M-MPI10C3G|M-SP10EG|M-SP10EGP|M-SP10HXAH|M-SP7HXAH|M-SP10HXBH|M-SP8HXAH|M-SP8MXA", MiTablet: "\\bMI PAD\\b|\\bHM NOTE 1W\\b", NibiruTablet: "Nibiru M1|Nibiru Jupiter One", NexoTablet: "NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI", LeaderTablet: "TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100", UbislateTablet: "UbiSlate[\\s]?7C", PocketBookTablet: "Pocketbook", KocasoTablet: "\\b(TB-1207)\\b", HisenseTablet: "\\b(F5281|E2371)\\b", Hudl: "Hudl HT7S3|Hudl 2", TelstraTablet: "T-Hub2", GenericTablet: "Android.*\\b97D\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\bA7EB\\b|CatNova8|A1_07|CT704|CT1002|\\bM721\\b|rk30sdk|\\bEVOTAB\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\bM6pro\\b|CT1020W|arc 10HD|\\bTP750\\b|\\bQTAQZ3\\b|WVT101|TM1088|KT107" }, oss: { AndroidOS: "Android", BlackBerryOS: "blackberry|\\bBB10\\b|rim tablet os", PalmOS: "PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino", SymbianOS: "Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\bS60\\b", WindowsMobileOS: "Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Windows Mobile|Windows Phone [0-9.]+|WCE;", WindowsPhoneOS: "Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;", iOS: "\\biPhone.*Mobile|\\biPod|\\biPad|AppleCoreMedia", iPadOS: "CPU OS 13", SailfishOS: "Sailfish", MeeGoOS: "MeeGo", MaemoOS: "Maemo", JavaOS: "J2ME/|\\bMIDP\\b|\\bCLDC\\b", webOS: "webOS|hpwOS", badaOS: "\\bBada\\b", BREWOS: "BREW" }, uas: { Chrome: "\\bCrMo\\b|CriOS|Android.*Chrome/[.0-9]* (Mobile)?", Dolfin: "\\bDolfin\\b", Opera: "Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR/[0-9.]+$|Coast/[0-9.]+", Skyfire: "Skyfire", Edge: "\\bEdgiOS\\b|Mobile Safari/[.0-9]* Edge", IE: "IEMobile|MSIEMobile", Firefox: "fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS", Bolt: "bolt", TeaShark: "teashark", Blazer: "Blazer", Safari: "Version((?!\\bEdgiOS\\b).)*Mobile.*Safari|Safari.*Mobile|MobileSafari", WeChat: "\\bMicroMessenger\\b", UCBrowser: "UC.*Browser|UCWEB", baiduboxapp: "baiduboxapp", baidubrowser: "baidubrowser", DiigoBrowser: "DiigoBrowser", Mercury: "\\bMercury\\b", ObigoBrowser: "Obigo", NetFront: "NF-Browser", GenericBrowser: "NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger", PaleMoon: "Android.*PaleMoon|Mobile.*PaleMoon" }, props: { Mobile: "Mobile/[VER]", Build: "Build/[VER]", Version: "Version/[VER]", VendorID: "VendorID/[VER]", iPad: "iPad.*CPU[a-z ]+[VER]", iPhone: "iPhone.*CPU[a-z ]+[VER]", iPod: "iPod.*CPU[a-z ]+[VER]", Kindle: "Kindle/[VER]", Chrome: ["Chrome/[VER]", "CriOS/[VER]", "CrMo/[VER]"], Coast: ["Coast/[VER]"], Dolfin: "Dolfin/[VER]", Firefox: ["Firefox/[VER]", "FxiOS/[VER]"], Fennec: "Fennec/[VER]", Edge: "Edge/[VER]", IE: ["IEMobile/[VER];", "IEMobile [VER]", "MSIE [VER];", "Trident/[0-9.]+;.*rv:[VER]"], NetFront: "NetFront/[VER]", NokiaBrowser: "NokiaBrowser/[VER]", Opera: [" OPR/[VER]", "Opera Mini/[VER]", "Version/[VER]"], "Opera Mini": "Opera Mini/[VER]", "Opera Mobi": "Version/[VER]", UCBrowser: ["UCWEB[VER]", "UC.*Browser/[VER]"], MQQBrowser: "MQQBrowser/[VER]", MicroMessenger: "MicroMessenger/[VER]", baiduboxapp: "baiduboxapp/[VER]", baidubrowser: "baidubrowser/[VER]", SamsungBrowser: "SamsungBrowser/[VER]", Iron: "Iron/[VER]", Safari: ["Version/[VER]", "Safari/[VER]"], Skyfire: "Skyfire/[VER]", Tizen: "Tizen/[VER]", Webkit: "webkit[ /][VER]", PaleMoon: "PaleMoon/[VER]", SailfishBrowser: "SailfishBrowser/[VER]", Gecko: "Gecko/[VER]", Trident: "Trident/[VER]", Presto: "Presto/[VER]", Goanna: "Goanna/[VER]", iOS: " \\bi?OS\\b [VER][ ;]{1}", Android: "Android [VER]", Sailfish: "Sailfish [VER]", BlackBerry: ["BlackBerry[\\w]+/[VER]", "BlackBerry.*Version/[VER]", "Version/[VER]"], BREW: "BREW [VER]", Java: "Java/[VER]", "Windows Phone OS": ["Windows Phone OS [VER]", "Windows Phone [VER]"], "Windows Phone": "Windows Phone [VER]", "Windows CE": "Windows CE/[VER]", "Windows NT": "Windows NT [VER]", Symbian: ["SymbianOS/[VER]", "Symbian/[VER]"], webOS: ["webOS/[VER]", "hpwOS/[VER];"] }, utils: { Bot: "Googlebot|facebookexternalhit|Google-AMPHTML|s~amp-validator|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom|contentkingapp|AspiegelBot", MobileBot: "Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker/M1A1-R2D2", DesktopMode: "WPDesktop", TV: "SonyDTV|HbbTV", WebKit: "(webkit)[ /]([\\w.]+)", Console: "\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|Nintendo Switch|PLAYSTATION|Xbox)\\b", Watch: "SM-V700" } }, g.detectMobileBrowsers = {
            fullPattern: /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,
            shortPattern: /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i, tabletPattern: /android|ipad|playbook|silk/i
          }; var h, i = Object.prototype.hasOwnProperty; return g.FALLBACK_PHONE = "UnknownPhone", g.FALLBACK_TABLET = "UnknownTablet", g.FALLBACK_MOBILE = "UnknownMobile", h = "isArray" in Array ? Array.isArray : function (a) { return "[object Array]" === Object.prototype.toString.call(a) }, function () { var a, b, c, e, f, j, k = g.mobileDetectRules; for (a in k.props) if (i.call(k.props, a)) { for (b = k.props[a], h(b) || (b = [b]), f = b.length, e = 0; e < f; ++e)c = b[e], j = c.indexOf("[VER]"), j >= 0 && (c = c.substring(0, j) + "([\\w._\\+]+)" + c.substring(j + 5)), b[e] = new RegExp(c, "i"); k.props[a] = b } d(k.oss), d(k.phones), d(k.tablets), d(k.uas), d(k.utils), k.oss0 = { WindowsPhoneOS: k.oss.WindowsPhoneOS, WindowsMobileOS: k.oss.WindowsMobileOS } }(), g.findMatch = function (a, b) { for (var c in a) if (i.call(a, c) && a[c].test(b)) return c; return null }, g.findMatches = function (a, b) { var c = []; for (var d in a) i.call(a, d) && a[d].test(b) && c.push(d); return c }, g.getVersionStr = function (a, b) { var c, d, e, f, h = g.mobileDetectRules.props; if (i.call(h, a)) for (c = h[a], e = c.length, d = 0; d < e; ++d)if (f = c[d].exec(b), null !== f) return f[1]; return null }, g.getVersion = function (a, b) { var c = g.getVersionStr(a, b); return c ? g.prepareVersionNo(c) : NaN }, g.prepareVersionNo = function (a) { var b; return b = a.split(/[a-z._ \/\-]/i), 1 === b.length && (a = b[0]), b.length > 1 && (a = b[0] + ".", b.shift(), a += b.join("")), Number(a) }, g.isMobileFallback = function (a) { return g.detectMobileBrowsers.fullPattern.test(a) || g.detectMobileBrowsers.shortPattern.test(a.substr(0, 4)) }, g.isTabletFallback = function (a) { return g.detectMobileBrowsers.tabletPattern.test(a) }, g.prepareDetectionCache = function (a, c, d) { if (a.mobile === b) { var e, h, i; return (h = g.findMatch(g.mobileDetectRules.tablets, c)) ? (a.mobile = a.tablet = h, void (a.phone = null)) : (e = g.findMatch(g.mobileDetectRules.phones, c)) ? (a.mobile = a.phone = e, void (a.tablet = null)) : void (g.isMobileFallback(c) ? (i = f.isPhoneSized(d), i === b ? (a.mobile = g.FALLBACK_MOBILE, a.tablet = a.phone = null) : i ? (a.mobile = a.phone = g.FALLBACK_PHONE, a.tablet = null) : (a.mobile = a.tablet = g.FALLBACK_TABLET, a.phone = null)) : g.isTabletFallback(c) ? (a.mobile = a.tablet = g.FALLBACK_TABLET, a.phone = null) : a.mobile = a.tablet = a.phone = null) } }, g.mobileGrade = function (a) { var b = null !== a.mobile(); return a.os("iOS") && a.version("iPad") >= 4.3 || a.os("iOS") && a.version("iPhone") >= 3.1 || a.os("iOS") && a.version("iPod") >= 3.1 || a.version("Android") > 2.1 && a.is("Webkit") || a.version("Windows Phone OS") >= 7 || a.is("BlackBerry") && a.version("BlackBerry") >= 6 || a.match("Playbook.*Tablet") || a.version("webOS") >= 1.4 && a.match("Palm|Pre|Pixi") || a.match("hp.*TouchPad") || a.is("Firefox") && a.version("Firefox") >= 12 || a.is("Chrome") && a.is("AndroidOS") && a.version("Android") >= 4 || a.is("Skyfire") && a.version("Skyfire") >= 4.1 && a.is("AndroidOS") && a.version("Android") >= 2.3 || a.is("Opera") && a.version("Opera Mobi") > 11 && a.is("AndroidOS") || a.is("MeeGoOS") || a.is("Tizen") || a.is("Dolfin") && a.version("Bada") >= 2 || (a.is("UC Browser") || a.is("Dolfin")) && a.version("Android") >= 2.3 || a.match("Kindle Fire") || a.is("Kindle") && a.version("Kindle") >= 3 || a.is("AndroidOS") && a.is("NookTablet") || a.version("Chrome") >= 11 && !b || a.version("Safari") >= 5 && !b || a.version("Firefox") >= 4 && !b || a.version("MSIE") >= 7 && !b || a.version("Opera") >= 10 && !b ? "A" : a.os("iOS") && a.version("iPad") < 4.3 || a.os("iOS") && a.version("iPhone") < 3.1 || a.os("iOS") && a.version("iPod") < 3.1 || a.is("Blackberry") && a.version("BlackBerry") >= 5 && a.version("BlackBerry") < 6 || a.version("Opera Mini") >= 5 && a.version("Opera Mini") <= 6.5 && (a.version("Android") >= 2.3 || a.is("iOS")) || a.match("NokiaN8|NokiaC7|N97.*Series60|Symbian/3") || a.version("Opera Mobi") >= 11 && a.is("SymbianOS") ? "B" : (a.version("BlackBerry") < 5 || a.match("MSIEMobile|Windows CE.*Mobile") || a.version("Windows Mobile") <= 5.2, "C") }, g.detectOS = function (a) { return g.findMatch(g.mobileDetectRules.oss0, a) || g.findMatch(g.mobileDetectRules.oss, a) }, g.getDeviceSmallerSide = function () { return window.screen.width < window.screen.height ? window.screen.width : window.screen.height }, f.prototype = { constructor: f, mobile: function () { return g.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth), this._cache.mobile }, phone: function () { return g.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth), this._cache.phone }, tablet: function () { return g.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth), this._cache.tablet }, userAgent: function () { return this._cache.userAgent === b && (this._cache.userAgent = g.findMatch(g.mobileDetectRules.uas, this.ua)), this._cache.userAgent }, userAgents: function () { return this._cache.userAgents === b && (this._cache.userAgents = g.findMatches(g.mobileDetectRules.uas, this.ua)), this._cache.userAgents }, os: function () { return this._cache.os === b && (this._cache.os = g.detectOS(this.ua)), this._cache.os }, version: function (a) { return g.getVersion(a, this.ua) }, versionStr: function (a) { return g.getVersionStr(a, this.ua) }, is: function (b) { return c(this.userAgents(), b) || a(b, this.os()) || a(b, this.phone()) || a(b, this.tablet()) || c(g.findMatches(g.mobileDetectRules.utils, this.ua), b) }, match: function (a) { return a instanceof RegExp || (a = new RegExp(a, "i")), a.test(this.ua) }, isPhoneSized: function (a) { return f.isPhoneSized(a || this.maxPhoneWidth) }, mobileGrade: function () { return this._cache.grade === b && (this._cache.grade = g.mobileGrade(this)), this._cache.grade } }, "undefined" != typeof window && window.screen ? f.isPhoneSized = function (a) { return a < 0 ? b : g.getDeviceSmallerSide() <= a } : f.isPhoneSized = function () { }, f._impl = g, f.version = "1.4.5 2021-03-13", f
        })
      }(function (a) { if ("undefined" != typeof module && module.exports) return function (a) { module.exports = a() }; if ("function" == typeof define && define.amd) return define; if ("undefined" != typeof window) return function (a) { window.MobileDetect = a() }; throw new Error("unknown environment") }()); var ai_lists = !0, ai_block_class_def = "code-block";
      jQuery(function (a) {
        function B(c) { c = c.match(aa); return null != c && 1 < c.length && "string" === typeof c[1] && 0 < c[1].length ? c[1].toLowerCase() : null } function E(c) { return c.includes(":") ? (c = c.split(":"), 1E3 * (3600 * parseInt(c[0]) + 60 * parseInt(c[1]) + parseInt(c[2]))) : null } function v(c) { try { var k = Date.parse(c); isNaN(k) && (k = null) } catch (G) { k = null } if (null == k && c.includes(" ")) { c = c.split(" "); try { k = Date.parse(c[0]), k += E(c[1]), isNaN(k) && (k = null) } catch (G) { k = null } } return k } function H() {
          (jQuery("#ai-iab-tcf-bar").length || jQuery(".ai-list-manual").length) &&
          "function" == typeof __tcfapi && "function" == typeof ai_load_blocks && "undefined" == typeof ai_iab_tcf_callback_installed && (__tcfapi("addEventListener", 2, function (c, k) { k && "useractioncomplete" === c.eventStatus && (ai_tcData = c, ai_load_blocks(), jQuery("#ai-iab-tcf-status").text("IAB TCF 2.0 DATA LOADED"), jQuery("#ai-iab-tcf-bar").addClass("status-ok").removeClass("status-error")) }), ai_iab_tcf_callback_installed = !0)
        } function w(c) { c = `; ${document.cookie}`.split(`; ${c}=`); if (2 === c.length) return c.pop().split(";").shift() }
        function h(c) { if (w(c)) { var k = window.location.hostname; w(c) && (document.cookie = c + "=;path=/" + (k ? ";domain=" + k : "") + ";expires=Thu, 01 Jan 1970 00:00:01 GMT"); document.cookie = c + "=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;" } } Array.prototype.includes || (Array.prototype.includes = function (c) { return !!~this.indexOf(c) }); var aa = RegExp(":\\/\\/(.[^/:]+)", "i"); ai_process_lists = function (c) {
          function k(l, e, d) {
            if (0 == l.length) {
              if ("!@!" == d) return !0; e != d && ("true" == d.toLowerCase() ? d = !0 : "false" == d.toLowerCase() && (d =
                !1)); return e == d
            } if ("object" != typeof e && "array" != typeof e) return !1; var n = l[0]; l = l.slice(1); if ("*" == n) for (let [, m] of Object.entries(e)) { if (k(l, m, d)) return !0 } else if (n in e) return k(l, e[n], d); return !1
          } function G(l, e, d) { if ("object" != typeof l || -1 == e.indexOf("[")) return !1; e = e.replace(/]| /gi, "").split("["); return k(e, l, d) } function ba() {
            "function" == typeof __tcfapi && (a("#ai-iab-tcf-status").text("IAB TCF 2.0 DETECTED"), __tcfapi("getTCData", 2, function (l, e) {
              e ? (a("#ai-iab-tcf-bar").addClass("status-ok"), "tcloaded" ==
                l.eventStatus || "useractioncomplete" == l.eventStatus ? (ai_tcData = l, l.gdprApplies ? a("#ai-iab-tcf-status").text("IAB TCF 2.0 DATA LOADED") : jQuery("#ai-iab-tcf-status").text("IAB TCF 2.0 GDPR DOES NOT APPLY"), a("#ai-iab-tcf-bar").addClass("status-ok").removeClass("status-error"), setTimeout(function () { ai_process_lists() }, 10)) : "cmpuishown" == l.eventStatus && (ai_cmpuishown = !0, a("#ai-iab-tcf-status").text("IAB TCF 2.0 CMP UI SHOWN"), a("#ai-iab-tcf-bar").addClass("status-ok").removeClass("status-error"))) : (a("#ai-iab-tcf-status").text("IAB TCF 2.0 __tcfapi getTCData failed"),
                  a("#ai-iab-tcf-bar").removeClass("status-ok").addClass("status-error"))
            }))
          } function K(l) { "function" == typeof __tcfapi ? ("undefined" == typeof ai_iab_tcf_callback_installed && H(), "undefined" == typeof ai_tcData_requested && (ai_tcData_requested = !0, ba(), cookies_need_tcData = !0)) : l && (a("#ai-iab-tcf-bar").addClass("status-error").removeClass("status-ok"), a("#ai-iab-tcf-status").text("IAB TCF 2.0 MISSING: __tcfapi function not found")) } c = null == c ? a("div.ai-list-data, meta.ai-list-data") : a(c).filter(".ai-list-data");
          if (c.length) {
            c.removeClass("ai-list-data"); var U = getAllUrlParams(window.location.search); if (null != U.referrer) var y = U.referrer; else y = document.referrer, "" != y && (y = B(y)); var Q = window.navigator.userAgent, R = Q.toLowerCase(), V = navigator.language, L = V.toLowerCase(); if ("undefined" !== typeof MobileDetect) var W = new MobileDetect(Q); c.each(function () {
              var l = document.cookie.split(";"); l.forEach(function (u, g) { l[g] = u.trim() }); var e = a(this).closest("div.code-block"), d = !0, n = a(this).attr("referer-list");
              if ("undefined" != typeof n) {
                n = b64d(n).split(","); var m = a(this).attr("referer-list-type"), I = !1; a.each(n, function (u, g) { g = g.trim(); if ("" == g) return !0; if ("*" == g.charAt(0)) if ("*" == g.charAt(g.length - 1)) { if (g = g.substr(1, g.length - 2), -1 != y.indexOf(g)) return I = !0, !1 } else { if (g = g.substr(1), y.substr(-g.length) == g) return I = !0, !1 } else if ("*" == g.charAt(g.length - 1)) { if (g = g.substr(0, g.length - 1), 0 == y.indexOf(g)) return I = !0, !1 } else if ("#" == g) { if ("" == y) return I = !0, !1 } else if (g == y) return I = !0, !1 }); var p = I; switch (m) {
                  case "B": p &&
                    (d = !1); break; case "W": p || (d = !1)
                }
              } if (d && (n = a(this).attr("client-list"), "undefined" != typeof n && "undefined" !== typeof W)) switch (n = b64d(n).split(","), m = a(this).attr("client-list-type"), p = !1, a.each(n, function (u, g) {
                if ("" == g.trim()) return !0; u = g.split("&&"); a.each(u, function (r, b) {
                  r = !0; var t = !1; for (b = b.trim(); "!!" == b.substring(0, 2);)r = !r, b = b.substring(2); "language:" == b.substring(0, 9) && (t = !0, b = b.substring(9).toLowerCase()); var q = !1; t ? "*" == b.charAt(0) ? "*" == b.charAt(b.length - 1) ? (b = b.substr(1, b.length - 2).toLowerCase(),
                    -1 != L.indexOf(b) && (q = !0)) : (b = b.substr(1).toLowerCase(), L.substr(-b.length) == b && (q = !0)) : "*" == b.charAt(b.length - 1) ? (b = b.substr(0, b.length - 1).toLowerCase(), 0 == L.indexOf(b) && (q = !0)) : b == L && (q = !0) : "*" == b.charAt(0) ? "*" == b.charAt(b.length - 1) ? (b = b.substr(1, b.length - 2).toLowerCase(), -1 != R.indexOf(b) && (q = !0)) : (b = b.substr(1).toLowerCase(), R.substr(-b.length) == b && (q = !0)) : "*" == b.charAt(b.length - 1) ? (b = b.substr(0, b.length - 1).toLowerCase(), 0 == R.indexOf(b) && (q = !0)) : W.is(b) && (q = !0); p = q ? r : !r; if (!p) return !1
                }); if (p) return !1
              }),
                m) { case "B": p && (d = !1); break; case "W": p || (d = !1) }var M = n = !1; for (m = 1; 2 >= m; m++)if (d) {
                  switch (m) { case 1: var f = a(this).attr("cookie-list"); break; case 2: f = a(this).attr("parameter-list") }if ("undefined" != typeof f) {
                    f = b64d(f); switch (m) { case 1: var A = a(this).attr("cookie-list-type"); break; case 2: A = a(this).attr("parameter-list-type") }f = f.replace("tcf-gdpr", "tcf-v2[gdprApplies]=true"); f = f.replace("tcf-no-gdpr", "tcf-v2[gdprApplies]=false"); f = f.replace("tcf-google", "tcf-v2[vendor][consents][755]=true && tcf-v2[purpose][consents][1]=true");
                    f = f.replace("tcf-no-google", "!!tcf-v2[vendor][consents][755]"); f = f.replace("tcf-media.net", "tcf-v2[vendor][consents][142]=true && tcf-v2[purpose][consents][1]=true"); f = f.replace("tcf-no-media.net", "!!tcf-v2[vendor][consents][142]"); f = f.replace("tcf-amazon", "tcf-v2[vendor][consents][793]=true && tcf-v2[purpose][consents][1]=true"); f = f.replace("tcf-no-amazon", "!!tcf-v2[vendor][consents][793]"); f = f.replace("tcf-ezoic", "tcf-v2[vendor][consents][347]=true && tcf-v2[purpose][consents][1]=true"); f = f.replace("tcf-no-ezoic",
                      "!!tcf-v2[vendor][consents][347]"); var D = f.split(","), X = []; l.forEach(function (u) { u = u.split("="); try { var g = JSON.parse(decodeURIComponent(u[1])) } catch (r) { g = decodeURIComponent(u[1]) } X[u[0]] = g }); p = !1; var N = a(this); a.each(D, function (u, g) {
                        u = g.split("&&"); a.each(u, function (r, b) {
                          r = !0; for (b = b.trim(); "!!" == b.substring(0, 2);)r = !r, b = b.substring(2); var t = b, q = "!@!", Y = -1 != b.indexOf("["), Z = (0 == b.indexOf("tcf-v2") || 0 == b.indexOf("euconsent-v2")) && -1 != b.indexOf("["); -1 != b.indexOf("=") && (q = b.split("="), t = q[0], q = q[1],
                            Y = -1 != t.indexOf("["), Z = (0 == t.indexOf("tcf-v2") || 0 == t.indexOf("euconsent-v2")) && -1 != t.indexOf("[")); if (Z) a("#ai-iab-tcf-bar").show(), "object" == typeof ai_tcData ? (a("#ai-iab-tcf-bar").addClass("status-ok"), t = t.replace(/]| /gi, "").split("["), t.shift(), p = (t = k(t, ai_tcData, q)) ? r : !r) : (N.addClass("ai-list-data"), M = !0, "function" == typeof __tcfapi ? K(!1) : "undefined" == typeof ai_tcData_retrying && (ai_tcData_retrying = !0, setTimeout(function () {
                              "function" == typeof __tcfapi ? K(!1) : setTimeout(function () {
                                "function" == typeof __tcfapi ?
                                K(!1) : setTimeout(function () { K(!0) }, 3E3)
                              }, 1E3)
                            }, 600))); else if (Y) p = (t = G(X, t, q)) ? r : !r; else { var S = !1; "!@!" == q ? l.every(function (ca) { return ca.split("=")[0] == b ? (S = !0, !1) : !0 }) : S = -1 != l.indexOf(b); p = S ? r : !r } if (!p) return !1
                        }); if (p) return !1
                      }); p && (M = !1); switch (A) { case "B": p && (d = !1); break; case "W": p || (d = !1) }
                  }
                } a(this).hasClass("ai-list-manual") && (d ? (N.removeClass("ai-list-data"), N.removeClass("ai-list-manual")) : (n = !0, N.addClass("ai-list-data"))); if (d || !n && !M) if (f = a(this).data("debug-info"), "undefined" != typeof f &&
                  (f = a("." + f), 0 != f.length)) { var x = f.parent(); x.hasClass("ai-debug-info") && x.remove() } x = a(this).prevAll(".ai-debug-bar.ai-debug-lists"); f = "" == y ? "#" : y; x.find(".ai-debug-name.ai-list-info").text(f).attr("title", Q + "\n" + V); x.find(".ai-debug-name.ai-list-status").text(d ? ai_front.visible : ai_front.hidden); f = !1; if (d && (m = a(this).attr("scheduling-start"), A = a(this).attr("scheduling-end"), D = a(this).attr("scheduling-days"), "undefined" != typeof m && "undefined" != typeof A && "undefined" != typeof D)) {
                    f = !0; var z = b64d(m), O =
                      b64d(A), T = parseInt(a(this).attr("scheduling-fallback")), P = parseInt(a(this).attr("gmt")); z.includes("-") || O.includes("-") ? (A = v(z) + P, m = v(O) + P) : (A = E(z), m = E(O)); D = b64d(D).split(","); x = a(this).attr("scheduling-type"); var C = (new Date).getTime() + P, F = new Date(C), J = F.getDay(); z.includes("-") || O.includes("-") || (z = (new Date(F.getFullYear(), F.getMonth(), F.getDate())).getTime() + P, C -= z, 0 > C && (C += 864E5)); 0 == J ? J = 6 : J--; z = C >= A && C < m && D.includes(J.toString()); switch (x) { case "B": z = !z }z || (d = !1); F = F.toISOString().split(".")[0].replace("T",
                        " "); x = a(this).prevAll(".ai-debug-bar.ai-debug-scheduling"); x.find(".ai-debug-name.ai-scheduling-info").text(F + " " + J + " current_time:" + Math.floor(C.toString() / 1E3) + "  start_date:" + Math.floor(A / 1E3).toString() + " =" + (C >= A).toString() + " end_date:" + Math.floor(m / 1E3).toString() + " =:" + (C < m).toString() + " days:" + D.toString() + " =:" + D.includes(J.toString()).toString()); x.find(".ai-debug-name.ai-scheduling-status").text(d ? ai_front.visible : ai_front.hidden); d || 0 == T || (x.removeClass("ai-debug-scheduling").addClass("ai-debug-fallback"),
                          x.find(".ai-debug-name.ai-scheduling-status").text(ai_front.fallback + " = " + T))
                  } if (n || !d && M) return !0; a(this).css({ visibility: "", position: "", width: "", height: "", "z-index": "" }); d ? (e.css({ visibility: "" }), e.hasClass("ai-remove-position") && e.css({ position: "" }), "undefined" != typeof a(this).data("code") && (d = b64d(a(this).data("code")), 0 != a(this).closest("head").length ? (a(this).after(d), a(this).remove()) : a(this).append(d), ai_process_element_lists(this))) : f && !z && 0 != T ? (e.css({ visibility: "" }), e.hasClass("ai-remove-position") &&
                    e.css({ position: "" }), a(this).next(".ai-fallback").removeClass("ai-fallback"), "undefined" != typeof a(this).data("fallback-code") ? (d = b64d(a(this).data("fallback-code")), a(this).append(d), ai_process_element_lists(this)) : (a(this).hide(), !e.find(".ai-debug-block").length && e[0].hasAttribute("style") && -1 == e.attr("style").indexOf("height:") && e.hide()), d = e.attr("data-ai"), "undefined" !== typeof d && !1 !== d && (d = a(this).attr("fallback-tracking"), "undefined" !== typeof d && !1 !== d && e.attr("data-ai-" + a(this).attr("fallback_level"),
                      d))) : (a(this).hide(), e.length && (e.removeAttr("data-ai").removeClass("ai-track"), e.find(".ai-debug-block").length ? (e.css({ visibility: "" }).removeClass("ai-close"), e.hasClass("ai-remove-position") && e.css({ position: "" })) : e[0].hasAttribute("style") && -1 == e.attr("style").indexOf("height:") && e.hide())); a(this).attr("data-code", ""); a(this).attr("data-fallback-code", ""); e.removeClass("ai-list-block")
            })
          }
        }; a(document).ready(function (c) {
          setTimeout(function () {
            ai_process_lists(); setTimeout(function () {
              H(); if ("function" ==
                typeof ai_load_blocks) { jQuery(document).on("cmplzEnableScripts", k); jQuery(document).on("cmplz_event_marketing", k); function k(G) { "cmplzEnableScripts" != G.type && "all" !== G.consentLevel || ai_load_blocks() } }
            }, 50); jQuery(".ai-debug-page-type").dblclick(function () { jQuery("#ai-iab-tcf-status").text("CONSENT COOKIES"); jQuery("#ai-iab-tcf-bar").show() }); jQuery("#ai-iab-tcf-bar").click(function () {
              h("euconsent-v2"); h("__lxG__consent__v2"); h("__lxG__consent__v2_daisybit"); h("__lxG__consent__v2_gdaisybit"); h("CookieLawInfoConsent");
              h("cookielawinfo-checkbox-advertisement"); h("cookielawinfo-checkbox-analytics"); h("cookielawinfo-checkbox-necessary"); h("complianz_policy_id"); h("complianz_consent_status"); h("cmplz_marketing"); h("cmplz_consent_status"); h("cmplz_preferences"); h("cmplz_statistics-anonymous"); h("cmplz_choice"); h("cmplz_banner-status"); h("cmplz_functional"); h("cmplz_policy_id"); h("cmplz_statistics"); h("moove_gdpr_popup"); h("real_cookie_banner-blog:1-tcf"); h("real_cookie_banner-blog:1"); jQuery("#ai-iab-tcf-status").text("CONSENT COOKIES DELETED")
            })
          },
            5)
        })
      });
      function ai_process_element_lists(a) {
        setTimeout(function () {
          "function" == typeof ai_process_rotations_in_element && ai_process_rotations_in_element(a); "function" == typeof ai_process_lists && ai_process_lists(jQuery(".ai-list-data", a)); "function" == typeof ai_process_ip_addresses && ai_process_ip_addresses(jQuery(".ai-ip-data", a)); "function" == typeof ai_process_filter_hooks && ai_process_filter_hooks(jQuery(".ai-filter-check", a)); "function" == typeof ai_adb_process_blocks && ai_adb_process_blocks(a); "function" == typeof ai_process_impressions &&
            1 == ai_tracking_finished && ai_process_impressions(); "function" == typeof ai_install_click_trackers && 1 == ai_tracking_finished && ai_install_click_trackers(); "function" == typeof ai_install_close_buttons && ai_install_close_buttons(document)
        }, 5)
      }
      function getAllUrlParams(a) { var B = a ? a.split("?")[1] : window.location.search.slice(1); a = {}; if (B) { B = B.split("#")[0]; B = B.split("&"); for (var E = 0; E < B.length; E++) { var v = B[E].split("="), H = void 0, w = v[0].replace(/\[\d*\]/, function (h) { H = h.slice(1, -1); return "" }); v = "undefined" === typeof v[1] ? "" : v[1]; w = w.toLowerCase(); v = v.toLowerCase(); a[w] ? ("string" === typeof a[w] && (a[w] = [a[w]]), "undefined" === typeof H ? a[w].push(v) : a[w][H] = v) : a[w] = v } } return a };
      ai_run_561594870100 = function () {
        ai_document_write = document.write; document.write = function (a) { "interactive" == document.readyState ? (console.error("document.write called after page load: ", a), "undefined" != typeof ai_js_errors && ai_js_errors.push(["document.write called after page load", a, 0])) : ai_document_write.call(document, a) };
        ai_insert_viewport_code('ai-insert-4-78934365');
        ai_insert_viewport_code('ai-insert-3-10033124');
      };
      if (document.readyState === 'complete' || (document.readyState !== 'loading' && !document.documentElement.doScroll)) ai_run_561594870100(); else document.addEventListener('DOMContentLoaded', ai_run_561594870100);
      ai_js_code = true;
    }
    function ai_wait_for_jquery() {
      function b(f, c) { var a = document.createElement("script"); a.src = f; var d = document.getElementsByTagName("head")[0], e = !1; a.onload = a.onreadystatechange = function () { e || this.readyState && "loaded" != this.readyState && "complete" != this.readyState || (e = !0, c && c(), a.onload = a.onreadystatechange = null, d.removeChild(a)) }; d.appendChild(a) } window.jQuery && window.jQuery.fn ? ai_run_scripts() : (ai_jquery_waiting_counter++, 4 == ai_jquery_waiting_counter && b("https://v5.voiranime.com/wp-includes/js/jquery/jquery.min.js?ver=3.6.4", function () {
        b("https://v5.voiranime.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=6.2.2",
          null)
      }), 30 > ai_jquery_waiting_counter && setTimeout(function () { ai_wait_for_jquery() }, 50))
    } ai_jquery_waiting_counter = 0; ai_wait_for_jquery();

  </script>
  <script
    id="wd-asp-instances-8d0c48af">window.ASP_INSTANCES = []; window.ASP_INSTANCES[3] = { "homeurl": "https:\/\/v5.voiranime.com\/", "is_results_page": 0, "resultstype": "vertical", "resultsposition": "hover", "resultsSnapTo": "left", "results": { "width": "auto", "width_tablet": "auto", "width_phone": "auto" }, "itemscount": 4, "charcount": 2, "highlight": 0, "highlightWholewords": 1, "singleHighlight": 0, "scrollToResults": { "enabled": 0, "offset": 0 }, "autocomplete": { "enabled": 1, "trigger_charcount": 0, "googleOnly": 1, "lang": "en", "mobile": 1 }, "trigger": { "delay": 300, "autocomplete_delay": 310, "update_href": 0, "facet": 1, "type": 1, "click": "ajax_search", "click_location": "same", "return": "nothing", "return_location": "same", "redirect_url": "?s={phrase}&post_type=wp-manga&op=&author=&artist=&release=&adult=&type=&language=", "elementor_url": "https:\/\/v5.voiranime.com\/?asp_ls={phrase}" }, "overridewpdefault": 0, "override_method": "get", "settings": { "hideChildren": 0 }, "settingsimagepos": "right", "settingsVisible": 0, "settingsHideOnRes": 0, "prescontainerheight": "400px", "closeOnDocClick": 1, "focusOnPageload": 0, "isotopic": { "itemWidth": "200px", "itemWidthTablet": "200px", "itemWidthPhone": "200px", "itemHeight": "200px", "itemHeightTablet": "200px", "itemHeightPhone": "200px", "pagination": 1, "rows": 2, "gutter": 5, "showOverlay": 1, "blurOverlay": 1, "hideContent": 1 }, "loaderLocation": "auto", "show_more": { "enabled": 0, "url": "?s={phrase}", "elementor_url": "https:\/\/v5.voiranime.com\/?asp_ls={phrase}", "action": "ajax", "location": "same", "infinite": 1 }, "mobile": { "trigger_on_type": 1, "click_action": "ajax_search", "return_action": "nothing", "click_action_location": "same", "return_action_location": "same", "redirect_url": "?s={phrase}&post_type=wp-manga&op=&author=&artist=&release=&adult=&type=&language=", "elementor_url": "https:\/\/v5.voiranime.com\/?asp_ls={phrase}", "menu_selector": "#menu-toggle", "hide_keyboard": 1, "force_res_hover": 0, "force_sett_hover": 0, "force_sett_state": "none" }, "compact": { "enabled": 0, "focus": 1, "width": "100%", "width_tablet": "480px", "width_phone": "320px", "closeOnMagnifier": 1, "closeOnDocument": 0, "position": "static", "overlay": 0 }, "sb": { "redirect_action": "ajax_search", "redirect_location": "same", "redirect_url": "?s={phrase}", "elementor_url": "https:\/\/v5.voiranime.com\/?asp_ls={phrase}" }, "rb": { "action": "nothing" }, "animations": { "pc": { "settings": { "anim": "fadedrop", "dur": 300 }, "results": { "anim": "fadedrop", "dur": 300 }, "items": "fadeInDown" }, "mob": { "settings": { "anim": "fadedrop", "dur": 300 }, "results": { "anim": "fadedrop", "dur": 300 }, "items": "voidanim" } }, "select2": { "nores": "No results match" }, "detectVisibility": 0, "autop": { "state": "disabled", "phrase": "", "count": 10 }, "wooShop": { "useAjax": 0, "selector": "#main", "url": "" }, "taxArchive": { "useAjax": 0, "selector": "#main", "url": "" }, "cptArchive": { "useAjax": 0, "selector": "#main", "url": "" }, "resPage": { "useAjax": 0, "selector": "#main", "trigger_type": 1, "trigger_facet": 1, "trigger_magnifier": 0, "trigger_return": 0 }, "fss_layout": "flex", "scrollBar": { "horizontal": { "enabled": 1 } }, "divi": { "bodycommerce": 0 }, "preventBodyScroll": 0, "statistics": 0 }; window.ASP_INSTANCES[4] = { "homeurl": "https:\/\/v5.voiranime.com\/", "is_results_page": 0, "resultstype": "vertical", "resultsposition": "hover", "resultsSnapTo": "left", "results": { "width": "auto", "width_tablet": "auto", "width_phone": "auto" }, "itemscount": 4, "charcount": 2, "highlight": 0, "highlightWholewords": 1, "singleHighlight": 0, "scrollToResults": { "enabled": 0, "offset": 0 }, "autocomplete": { "enabled": 1, "trigger_charcount": 0, "googleOnly": 1, "lang": "en", "mobile": 1 }, "trigger": { "delay": 300, "autocomplete_delay": 310, "update_href": 0, "facet": 1, "type": 1, "click": "ajax_search", "click_location": "same", "return": "nothing", "return_location": "same", "redirect_url": "?s={phrase}&post_type=wp-manga&op=&author=&artist=&release=&adult=&type=&language=", "elementor_url": "https:\/\/v5.voiranime.com\/?asp_ls={phrase}" }, "overridewpdefault": 0, "override_method": "get", "settings": { "hideChildren": 0 }, "settingsimagepos": "right", "settingsVisible": 0, "settingsHideOnRes": 0, "prescontainerheight": "400px", "closeOnDocClick": 1, "focusOnPageload": 0, "isotopic": { "itemWidth": "200px", "itemWidthTablet": "200px", "itemWidthPhone": "200px", "itemHeight": "200px", "itemHeightTablet": "200px", "itemHeightPhone": "200px", "pagination": 1, "rows": 2, "gutter": 5, "showOverlay": 1, "blurOverlay": 1, "hideContent": 1 }, "loaderLocation": "auto", "show_more": { "enabled": 0, "url": "?s={phrase}", "elementor_url": "https:\/\/v5.voiranime.com\/?asp_ls={phrase}", "action": "ajax", "location": "same", "infinite": 1 }, "mobile": { "trigger_on_type": 1, "click_action": "ajax_search", "return_action": "nothing", "click_action_location": "same", "return_action_location": "same", "redirect_url": "?s={phrase}&post_type=wp-manga&op=&author=&artist=&release=&adult=&type=&language=", "elementor_url": "https:\/\/v5.voiranime.com\/?asp_ls={phrase}", "menu_selector": "#menu-toggle", "hide_keyboard": 1, "force_res_hover": 0, "force_sett_hover": 0, "force_sett_state": "none" }, "compact": { "enabled": 0, "focus": 1, "width": "100%", "width_tablet": "480px", "width_phone": "320px", "closeOnMagnifier": 1, "closeOnDocument": 0, "position": "static", "overlay": 0 }, "sb": { "redirect_action": "ajax_search", "redirect_location": "same", "redirect_url": "?s={phrase}", "elementor_url": "https:\/\/v5.voiranime.com\/?asp_ls={phrase}" }, "rb": { "action": "nothing" }, "animations": { "pc": { "settings": { "anim": "fadedrop", "dur": 300 }, "results": { "anim": "fadedrop", "dur": 300 }, "items": "fadeInDown" }, "mob": { "settings": { "anim": "fadedrop", "dur": 300 }, "results": { "anim": "fadedrop", "dur": 300 }, "items": "voidanim" } }, "select2": { "nores": "No results match" }, "detectVisibility": 0, "autop": { "state": "disabled", "phrase": "", "count": 10 }, "wooShop": { "useAjax": 0, "selector": "#main", "url": "" }, "taxArchive": { "useAjax": 0, "selector": "#main", "url": "" }, "cptArchive": { "useAjax": 0, "selector": "#main", "url": "" }, "resPage": { "useAjax": 0, "selector": "#main", "trigger_type": 1, "trigger_facet": 1, "trigger_magnifier": 0, "trigger_return": 0 }, "fss_layout": "flex", "scrollBar": { "horizontal": { "enabled": 1 } }, "divi": { "bodycommerce": 0 }, "preventBodyScroll": 0, "statistics": 0 };</script>
  <script type="text/javascript"
    id="asp-c1ceada6-js-before">if (typeof window.ASP == 'undefined') { window.ASP = { wp_rocket_exception: "DOMContentLoaded", ajaxurl: "https:\/\/v5.voiranime.com\/wp-admin\/admin-ajax.php", backend_ajaxurl: "https:\/\/v5.voiranime.com\/wp-admin\/admin-ajax.php", asp_url: "https:\/\/v5.voiranime.com\/wp-content\/plugins\/ajax-search-pro\/", upload_url: "https:\/\/v5.voiranime.com\/wp-content\/uploads\/asp_upload\/", detect_ajax: 0, media_query: "yUHaVZ", version: 5060, pageHTML: "", additional_scripts: [{ "handle": "wd-asp-ajaxsearchpro", "path": "\/home\/kuroro\/web\/v5.voiranime.com\/public_html\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-prereq.js", "src": "https:\/\/v5.voiranime.com\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-prereq.js", "prereq": [] }, { "handle": "wd-asp-ajaxsearchpro-core", "path": "\/home\/kuroro\/web\/v5.voiranime.com\/public_html\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-core.js", "src": "https:\/\/v5.voiranime.com\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-core.js", "prereq": [] }, { "handle": "wd-asp-ajaxsearchpro-settings", "path": "\/home\/kuroro\/web\/v5.voiranime.com\/public_html\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-settings.js", "src": "https:\/\/v5.voiranime.com\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-settings.js", "prereq": ["wd-asp-ajaxsearchpro"] }, { "handle": "wd-asp-ajaxsearchpro-vertical", "path": "\/home\/kuroro\/web\/v5.voiranime.com\/public_html\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-results-vertical.js", "src": "https:\/\/v5.voiranime.com\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-results-vertical.js", "prereq": ["wd-asp-ajaxsearchpro"] }, { "handle": "wd-asp-ajaxsearchpro-live", "path": "\/home\/kuroro\/web\/v5.voiranime.com\/public_html\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-live.js", "src": "https:\/\/v5.voiranime.com\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-live.js", "prereq": ["wd-asp-ajaxsearchpro"] }, { "handle": "wd-asp-ajaxsearchpro-autocomplete", "path": "\/home\/kuroro\/web\/v5.voiranime.com\/public_html\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-autocomplete.js", "src": "https:\/\/v5.voiranime.com\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-autocomplete.js", "prereq": ["wd-asp-ajaxsearchpro"] }, { "handle": "wd-asp-ajaxsearchpro-load", "path": "\/home\/kuroro\/web\/v5.voiranime.com\/public_html\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-load.js", "src": "https:\/\/v5.voiranime.com\/wp-content\/plugins\/ajax-search-pro\/js\/min\/plugin\/optimized\/asp-load.js", "prereq": ["wd-asp-ajaxsearchpro-autocomplete"] }], script_async_load: false, font_url: "https:\/\/v5.voiranime.com\/wp-content\/plugins\/ajax-search-pro\/css\/fonts\/icons\/icons2.woff2", init_only_in_viewport: true, highlight: { "enabled": false, "data": [] }, debug: false, instances: {}, analytics: { "method": "event", "tracking_id": "", "event": { "focus": { "active": 1, "action": "focus", "category": "ASP {search_id} | {search_name}", "label": "Input focus", "value": "1" }, "search_start": { "active": 0, "action": "search_start", "category": "ASP {search_id} | {search_name}", "label": "Phrase: {phrase}", "value": "1" }, "search_end": { "active": 1, "action": "search_end", "category": "ASP {search_id} | {search_name}", "label": "{phrase} | {results_count}", "value": "1" }, "magnifier": { "active": 1, "action": "magnifier", "category": "ASP {search_id} | {search_name}", "label": "Magnifier clicked", "value": "1" }, "return": { "active": 1, "action": "return", "category": "ASP {search_id} | {search_name}", "label": "Return button pressed", "value": "1" }, "try_this": { "active": 1, "action": "try_this", "category": "ASP {search_id} | {search_name}", "label": "Try this click | {phrase}", "value": "1" }, "facet_change": { "active": 0, "action": "facet_change", "category": "ASP {search_id} | {search_name}", "label": "{option_label} | {option_value}", "value": "1" }, "result_click": { "active": 1, "action": "result_click", "category": "ASP {search_id} | {search_name}", "label": "{result_title} | {result_url}", "value": "1" } } } } };</script>
  <script async="" type="text/javascript" src="https://v5.voiranime.com/wp-content/cache/asp/asp-c1ceada6.js"
    id="asp-c1ceada6-js"></script>
  <p id="a11y-speak-intro-text" class="a11y-speak-intro-text"
    style="position: absolute;margin: -1px;padding: 0;height: 1px;width: 1px;overflow: hidden;clip: rect(1px, 1px, 1px, 1px);-webkit-clip-path: inset(50%);clip-path: inset(50%);border: 0;word-wrap: normal !important;"
    hidden="hidden">Notifications</p>
  <div id="a11y-speak-assertive" class="a11y-speak-region"
    style="position: absolute;margin: -1px;padding: 0;height: 1px;width: 1px;overflow: hidden;clip: rect(1px, 1px, 1px, 1px);-webkit-clip-path: inset(50%);clip-path: inset(50%);border: 0;word-wrap: normal !important;"
    aria-live="assertive" aria-relevant="additions text" aria-atomic="true"></div>
  <div id="a11y-speak-polite" class="a11y-speak-region"
    style="position: absolute;margin: -1px;padding: 0;height: 1px;width: 1px;overflow: hidden;clip: rect(1px, 1px, 1px, 1px);-webkit-clip-path: inset(50%);clip-path: inset(50%);border: 0;word-wrap: normal !important;"
    aria-live="polite" aria-relevant="additions text" aria-atomic="true"></div>
  <div
    style="background-color: rgb(255, 255, 255); border: 1px solid rgb(204, 204, 204); box-shadow: rgba(0, 0, 0, 0.2) 2px 2px 3px; position: absolute; transition: visibility 0s linear 0.3s, opacity 0.3s linear 0s; opacity: 0; visibility: hidden; z-index: 2000000000; left: 0px; top: -10000px;">
    <div
      style="width: 100%; height: 100%; position: fixed; top: 0px; left: 0px; z-index: 2000000000; background-color: rgb(255, 255, 255); opacity: 0.05;">
    </div>
    <div class="g-recaptcha-bubble-arrow"
      style="border: 11px solid transparent; width: 0px; height: 0px; position: absolute; pointer-events: none; margin-top: -11px; z-index: 2000000000;">
    </div>
    <div class="g-recaptcha-bubble-arrow"
      style="border: 10px solid transparent; width: 0px; height: 0px; position: absolute; pointer-events: none; margin-top: -10px; z-index: 2000000000;">
    </div>
    <div style="z-index: 2000000000; position: relative;"><iframe title="Le test reCAPTCHA expire dans deux minutes"
        name="c-azw00e7fw4ib" frameborder="0" scrolling="no"
        sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation"
        src="https://www.google.com/recaptcha/api2/bframe?hl=fr&amp;v=MydHw_zggsxIJuhSbyOmPv5R&amp;k=6Lfd5wobAAAAACjTkOIXohTrPz9RIhNwRqRq2_R9"
        style="width: 100%; height: 100%;"></iframe></div>
  </div>
</body>

</html>
