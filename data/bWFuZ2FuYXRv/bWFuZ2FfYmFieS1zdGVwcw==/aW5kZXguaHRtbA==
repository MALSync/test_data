<!DOCTYPE html><html lang="en" prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb#"><head>
    <link rel="alternate" hreflang="en-US" href="https://www.mangakakalot.gg">
    <meta name="google-site-verification" content="TNfDROcsP2nhZRixOKhUq1_GZ0d_EgiCxb0eRRgfMHg">
    <meta name="robots" content="index,follow">
    <meta charset="utf-8">
    <title>Read Baby Steps Latest Chapter Manga Online Free | MangaKakalot</title>
    <meta name="description" content="Read Baby Steps latest chapter full, read free manga online with beautiful high-quality photos, fast updates on MangaKakalot - manga websites free!">
    <meta name="keywords" itemprop="keywords" content="Baby Steps latest chapter, read Baby Steps manga free, Baby Steps manga online, Baby Steps scans, Baby Steps raw, Baby Steps mangakakalot">

    <meta name="viewport" content="width=device-width">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="mangakakalot">
    <meta name="twitter:title" content="Read Baby Steps Latest Chapter Manga Online Free | MangaKakalot">
    <meta name="twitter:description" content="Read Baby Steps latest chapter full, read free manga online with beautiful high-quality photos, fast updates on MangaKakalot - manga websites free!">
    <meta name="twitter:image" content="https://imgs-2.2xstorage.com/thumb/baby-steps.webp">
    <meta property="og:type" content="website">
    <meta property="og:title" content="Read Baby Steps Latest Chapter Manga Online Free | MangaKakalot">
    <meta property="og:url" content="https://www.mangakakalot.gg/manga/baby-steps">

        <meta property="og:image" content="https://imgs-2.2xstorage.com/thumb/baby-steps.webp">
    
    <meta property="og:site_name" content="MangaKakalot">
    <meta property="og:locale" content="en_EN">
    <meta name="language" content="English">

    <meta property="og:image:alt" content="Baby Steps">
    <meta property="og:description" content="Read Baby Steps latest chapter full, read free manga online with beautiful high-quality photos, fast updates on MangaKakalot - manga websites free!">
    <link rel="canonical" href="https://www.mangakakalot.gg/manga/baby-steps">
    <link rel="shortcut icon" href="/images/favicon.ico" type="image/x-icon">

    <link rel="stylesheet" href="/css/all.css?id=79c8ee03cbb39c9cac37">
    <link rel="stylesheet" href="/css/app.css?id=e9f5831e596aacd00c57">


    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous">

    

    <script src="https://connect.facebook.net/en_US/sdk.js?hash=38c375d0d73cfc7bd2f0e12684440c37" async="" crossorigin="anonymous"></script><script type="application/javascript">
        baseurljs = 'https://www.mangakakalot.gg';
        tooltypejs = 'Computer';
        window.imageDefault = '/images/404-avatar.webp';
    </script>
    <script type="application/javascript">
        _base_url_search = 'https://www.mangakakalot.gg' + '/search/story/';
        var emailSupport = 'support@mangakakalot.gg';
    </script>

    <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-45LPCEBK8P"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() {
            dataLayer.push(arguments);
        }
        gtag('js', new Date());
        gtag('config', 'G-45LPCEBK8P');
    </script>

                
    

         <script type="text/javascript">!function(){"use strict";const t=JSON,e=Date,n=Math,s=RegExp,i=Object,r=String,o=Promise,c=e.now,h=n.floor,l=n.random,a=t.stringify,u=r.fromCharCode;for(var d='&>=f`8)b\\fcV]a/xKPzg{w#vtDpmi"\\GGKM>@@>;9ED:FM88<>/11/378(-*8,/&\\Fy!FCA+@U0zz~!qssq|zz~x"llgrffln_aa_Y\\dVWWSWWSeVM[RR\\\\\\KNKYQEUINLEPOJLqed8@4456A-,/91//64(0,%,(*\'&14,IEFCHJJsq}|r~txyink|ijyhsrroeial[i_ehdiUXf1BA0-^\\Mr|JDNTElALIi@>O?76G;W:4k/.-5431+bS)1! /.)(JI~.xxAx&'.split("").map((function(t,e){let n=t.charCodeAt(0)-32;return n>=0&&n<95?u(32+(n+e)%95):t})).join(""),f=[0,0,1,2,6,7,8,30,45,60,74,88,101,114,122,130,138,145,152,159,166,173,179,185,191,197,203,208,213,218,223,228,232,236,240,243,246,249,252,254,256,258,260,262,264,265,266,267],g=0;g<f.length-1;g++)f[g]=d.substring(f[g],f[g+1]);var p=[f[16],f[17]];p.push(p[1]+f[38],f[11],f[12],f[10],f[7],f[8]);var m=window,b=m.document,w=m.Uint8Array,v=m.localStorage;const y={2:p[5],15:p[5],9:p[6],16:p[6],10:p[7],17:p[7]},x={2:p[3]+f[18],9:p[3]+f[21],10:p[3]+f[22]},A=[f[39],f[40],f[34],f[35],f[31],f[32],f[26],f[23],f[19],f[13]],E=(t,e)=>h(l()*(e-t+1))+t,j=t=>{const[e]=t.split(f[41]);let[n,s,i]=((t,e)=>{let[n,s,...i]=t.split(e);return s=[s,...i].join(e),[n,s,!!i.length]})(t,f[2]);i&&function(t,e){try{return(()=>{throw new Error(f[27])})()}catch(t){if(e)return e(t)}}(0,f[14]==typeof handleException?t=>{handleException(t)}:undefined);const[r,...o]=n.replace(/^https?:\/\//,f[0]).split(f[4]);return{protocol:e,origin:n,domain:r,path:o.join(f[4]),search:s}},k=(t,e)=>{t=t.replace(f[3]+e+f[1],f[2]).replace(f[3]+e,f[2]).replace(f[33]+e,f[0]);let{domain:n,search:s,origin:i}=j(t),r=s?s.split(f[1]):[];const o=r.length>4?[0,2]:[5,9];r.push(...((t,e)=>{const n=[],s=E(t,e);for(let t=0;t<s;t++)n.push(`${A[E(0,A.length-1)]}=${E(0,1)?E(1,999999):(t=>{let e=f[0];for(let n=0;n<t;n++)e+=u(E(97,122));return e})(E(2,6))}`);return n})(...o)),r=(t=>{const e=[...t];let n=e.length;for(;0!==n;){const t=h(l()*n);n--,[e[n],e[t]]=[e[t],e[n]]}return e})(r);const c=((t,e,n)=>{const s=((t,e)=>(e+t).split(f[0]).reduce(((t,e)=>31*t+e.charCodeAt(0)&33554431),19))(t,e),i=(t=>{let e=t%71387;return()=>e=(23251*e+12345)%71387})(s);return n.split(f[0]).map((t=>((t,e)=>{const n=t.charCodeAt(0),s=n<97||n>122?n:97+(n-97+e())%26,i=u(s);return f[5]===i?i+f[5]:i})(t,i))).join(f[0])})(e,n,r.join(f[1])),a=E(0,r.length),d=c.split(f[1]);return d.splice(a,0,f[36]+e),i.replace(n,n+f[37])+f[2]+d.join(f[1])};const C=(()=>{var e;const[n,s]=function(){try{const e=v.getItem(p[0]);return[e?t.parse(e):null,!1]}catch(t){return[null,!0]}}(),r=null!==(e=function(t){if(!t)return null;const e={};return i.keys(t).forEach((n=>{const s=t[n];(function(t){const e=null==t?void 0:t[0],n=null==t?void 0:t[1];return f[24]==typeof e&&Number.isFinite(n)&&n>c()})(s)&&(e[n]=s)})),e}(n))&&void 0!==e?e:{};return s||v.setItem(p[0],a(r)),{get:t=>r[t],set:(t,e,n)=>{const i=[e,c()+1e3*n];r[t]=i,s||v.setItem(p[0],a(r))}}})(),I=t=>E(t-36e5,t+36e5),N=t=>{const e=new s(p[4]+f[9]).exec(t.location.href),n=e&&e[1]&&+e[1];return n&&!isNaN(n)?(null==e?void 0:e[2])?I(n):n:I(c())},S=[1,3,6,5,8,9,10,11,12,13,14];class W{constructor(t,e,n){this.b6d=t,this.ver=e,this.fbv=n,this.gd=t=>this.wu.then((e=>e.url(this.gfco(t)))),this.b6ab=t=>w.from(atob(t),(t=>t.charCodeAt(0))),this.sast=t=>0!=+t,this.el=b.currentScript,this.wu=this.iwa()}ins(){m[this.gcdk()]={};const t=S.map((t=>this.gd(t).then((e=>(m[this.gcdk()][t]=e,e)))));return o.all(t).then((t=>(m[this.gcuk()]=t,!0)))}gfco(t){const e=m.navigator?m.navigator.userAgent:f[0],n=m.location.hostname||f[0];return[m.innerHeight,m.innerWidth,m.sessionStorage?1:0,N(m),0,t,n.slice(0,100),e.slice(0,15)].join(f[44])}iwa(){const t=m.WebAssembly&&m.WebAssembly.instantiate;return t?t(this.b6ab(this.b6d),{}).then((({instance:{exports:t}})=>{const e=t.memory,n=t.url,s=new TextEncoder,i=new TextDecoder(f[28]);return{url:t=>{const r=s.encode(t),o=new w(e.buffer,0,r.length);o.set(r);const c=o.byteOffset+r.length,h=n(o,r.length,c),l=new w(e.buffer,c,h);return i.decode(l)}}})):o.resolve(void 0)}cst(){const t=b.createElement(f[25]);return i.assign(t.dataset,{cfasync:f[29]},this.el?this.el.dataset:{}),t.async=!0,t}}class z extends W{constructor(t,e,n,i,r){super(n,i,r),this.id=t,this.t=e,this.tmr=null,this.gcuk=()=>this.id+p[1],this.gcdk=()=>this.id+p[2]+f[45],this.gfu=t=>function(t,e){const n=new s(p[4]+f[6]).exec(t.location.href),i=n&&n[1]?n[1]:null;return e&&i?e.replace(f[30],`-${i}/`):e||i}(m,t)+f[3]+this.id,m[this.id+p[2]+f[46]]=this.ins(),this.cclt(),m[this.id+p[2]+f[42]]=k}in(){this.sast(this.t)&&!0!==m[x[this.t]]&&(this.tmr&&m.clearTimeout(this.tmr),this.ast())}ast(){this.sast(this.t)&&this.gd(this.t).then((t=>{m[this.id+p[2]+f[43]]=this.ver;const e=this.cst(),[n]=function(t){const{domain:e,path:n,search:s}=j(t),i=C.get(e);return i?[`${r=i[0],(/https?:\/\//.test(r)?f[0]:f[15])+r}/${n}?${s}`,!1]:[t,!1];var r}(this.gfu(t));e.src=k(n,this.id),b.head.appendChild(e)}))}cclt(){this.sast(this.t)&&(this.tmr=m.setTimeout((()=>!m[y[this.t]]&&this.ast()),5e3))}}!function(){const t=new z("2057180","2","AGFzbQEAAAABHAVgAAF/YAN/f38Bf2ADf39/AX5gAX8AYAF/AX8DCQgAAQIBAAMEAAQFAXABAQEFBgEBgAKAAgYJAX8BQcCIwAILB2cHBm1lbW9yeQIAA3VybAADGV9faW5kaXJlY3RfZnVuY3Rpb25fdGFibGUBABBfX2Vycm5vX2xvY2F0aW9uAAcJc3RhY2tTYXZlAAQMc3RhY2tSZXN0b3JlAAUKc3RhY2tBbGxvYwAGCp8GCCEBAX9BuAhBuAgoAgBBE2xBoRxqQYfC1y9wIgA2AgAgAAuTAQEFfxAAIAEgAGtBAWpwIABqIgQEQEEAIQBBAyEBA0AgAUEDIABBA3AiBxshARAAIgZBFHBBkAhqLQAAIQMCfyAFQQAgBxtFBEBBACAGIAFwDQEaIAZBBnBBgAhqLQAAIQMLQQELIQUgACACaiADQawILQAAazoAACABQQFrIQEgAEEBaiIAIARJDQALCyACIARqC3ECA38CfgJAIAFBAEwNAANAIARBAWohAyACIAUgACAEai0AAEEsRmoiBUYEQCABIANMDQIDQCAAIANqMAAAIgdCLFENAyAGQgp+IAd8QjB9IQYgA0EBaiIDIAFHDQALDAILIAMhBCABIANKDQALCyAGC9ADAgN+B38gACABQQMQAiEDIAAgAUEFEAIhBUG4CCADQbAIKQMAIgQgAyAEVBtBqAgoAgAiAEEyaiIBIAFsQegHbK2AIgQgAEEOaiIKIABBBGsgA0KAgPHtxzBUIgsbrYCnIANC/4/Mp/YxVkEWdHI2AgAQABoQABogAkLo6NGDt87Oly83AABBB0EKQQggA0KA0MWXgzJUGyADQoCWop3lMFQiBhtBC0EMIAYbIAJBCGoQASEAEAAaIwBBEGsiASQAIABBLjoAACABQePetQM2AgwgAEEBaiEHQQAhACABQQxqIgwtAAAiCARAA0AgACAHaiAIOgAAIAwgAEEBaiIAai0AACIIDQALCyABQRBqJAAgACAHaiEBQbgIIAQgCq2AIAVCG4ZCAEKAgIAgQoCAgDBCgICACEKAgIAYIAVCCFEbQoCAgBJCgIDADSADQoCIl9qsMlQbIANCgJDMp/YxVBsgA0KAmMauzzFUGyAGGyALG4SEPgIAQQVBCCADQoCQ6oDTMlQiABshBhAAGkECQQRBBSAAGxAAQQNwIgAbIQcDQCABQS86AAAgACAJRiEIIAcgBiABQQFqEAEhASAJQQFqIQkgCEUNAAsgASACawsEACMACwYAIAAkAAsQACMAIABrQXBxIgAkACAACwUAQbwICws7AwBBgAgLBp6ipqyytgBBkAgLFJ+goaOkpaeoqaqrra6vsLGztLW3AEGoCAsOCgAAAD0AAAD/pxWalwE=","9",f[20]);m["gfxtkck"]=()=>t.in()}()}();</script>
<script data-cfasync="false" type="text/javascript" src="//appointeeivyspongy.com/aas/r45d/vki/2057178/ba2fbbab.js" async="" onerror="gfxtkck()"></script>
    
    
    
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "Organization",
        "name": "MangaKakalot",
        "url": "https://www.mangakakalot.gg",
        "logo": "https://www.mangakakalot.gg/images/logo.webp",
        "description": "Read free manga online on MangaKakalot - Top manga website free for high-quality images and fast updates. Discover popular manga series across genres, all available for free manga reading anytime!",
        "address":  {
                    "@type": "PostalAddress",
                    "streetAddress": "3313 Hillcrest Drive",
                    "addressLocality": "Worthington",
                    "addressRegion": "Seattle",
                    "postalCode": "43085",
                    "addressCountry": "US"
                },
        "brand": {
        "@type": "Brand",
        "name": "MangaKakalot",
        "logo": "https://www.mangakakalot.gg/images/logo.webp"
        },
        "slogan": "MangaKakalot | Mangakakalot.com | Read Manga Online Free Update Daily",
        "founder": {
        "@type": "Person",
        "name": "MangaKakalot",
        "jobTitle": "CEO",
        "url": "https://www.mangakakalot.gg"
        },
        "sameAs": [
                "https://www.tumblr.com/mangakakalotgg",
                "https://www.youtube.com/channel/UCLwE99lW8roumCnOyP27qyw",
                "https://www.pinterest.com/mangakakalotgg/",
                "https://www.behance.net/mangakakalotgg",
                "https://sites.google.com/view/mangakakalotgg/",
                "https://about.me/mangakakalotgg",
                "https://muckrack.com/mangakakalotgg/bio",
                "https://band.us/band/96849419",
                "https://glose.com/u/mangakakalotgg",
                "https://qiita.com/mangakakalotgg",
                "https://booklog.jp/users/mangakakalot/profile",
                "https://inkbunny.net/mangakakalotgg",
                "https://www.nintendo-master.com/profil/mangakakalot",
                "https://www.dermandar.com/user/mangakakalot/",
                "https://www.metooo.io/u/mangakakalotgg",
                "https://www.slideserve.com/mangakakalotgg",
                "https://www.instapaper.com/p/mangakakalotgg",
                "https://allmylinks.com/mangakakalotgg",
                "https://leetcode.com/u/mangakakalotgg/",
                "https://app.talkshoe.com/user/mangakakalot",
                "https://www.facebook.com/mangakakalot.official/",
                "https://issuu.com/mangakakalotgg",
                "https://www.elephantjournal.com/profile/mangakakalot/",
                "https://qooh.me/mangakakalot",
                "https://www.longisland.com/profile/mangakakalotgg",
                "https://hubpages.com/@mangakakalotgg",
                "https://www.myminifactory.com/users/mangakakalot",
                "https://pbase.com/mangakakalotgg/",
                "https://mangakakalotgg.wordpress.com/",
                "https://gravatar.com/mangakakalotgg",
                "https://glamorouslengths.com/author/mangakakalotgg/",
                "https://motion-gallery.net/users/671842",
                "https://www.chordie.com/forum/profile.php?id=2126771",
                "https://www.adsoftheworld.com/users/dc782355-cacf-4006-ade1-3742928e04d1",
                "https://wefunder.com/mangakakalotgg",
                "https://www.outdoorproject.com/users/mangakakalot-gg",
                "https://pubhtml5.com/homepage/falkk/preview"
            ]
    }
    </script>

    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "WebSite",
        "url": "https://www.mangakakalot.gg",
        "name": "MangaKakalot",
        "description": "Read Baby Steps latest chapter full, read free manga online with beautiful high-quality photos, fast updates on MangaKakalot - manga websites free!",
        "sameAs": [
                "https://www.tumblr.com/mangakakalotgg",
                "https://www.youtube.com/channel/UCLwE99lW8roumCnOyP27qyw",
                "https://www.pinterest.com/mangakakalotgg/",
                "https://www.behance.net/mangakakalotgg",
                "https://sites.google.com/view/mangakakalotgg/",
                "https://about.me/mangakakalotgg",
                "https://muckrack.com/mangakakalotgg/bio",
                "https://band.us/band/96849419",
                "https://glose.com/u/mangakakalotgg",
                "https://qiita.com/mangakakalotgg",
                "https://booklog.jp/users/mangakakalot/profile",
                "https://inkbunny.net/mangakakalotgg",
                "https://www.nintendo-master.com/profil/mangakakalot",
                "https://www.dermandar.com/user/mangakakalot/",
                "https://www.metooo.io/u/mangakakalotgg",
                "https://www.slideserve.com/mangakakalotgg",
                "https://www.instapaper.com/p/mangakakalotgg",
                "https://allmylinks.com/mangakakalotgg",
                "https://leetcode.com/u/mangakakalotgg/",
                "https://app.talkshoe.com/user/mangakakalot",
                "https://www.facebook.com/mangakakalot.official/",
                "https://issuu.com/mangakakalotgg",
                "https://www.elephantjournal.com/profile/mangakakalot/",
                "https://qooh.me/mangakakalot",
                "https://www.longisland.com/profile/mangakakalotgg",
                "https://hubpages.com/@mangakakalotgg",
                "https://www.myminifactory.com/users/mangakakalot",
                "https://pbase.com/mangakakalotgg/",
                "https://mangakakalotgg.wordpress.com/",
                "https://gravatar.com/mangakakalotgg",
                "https://glamorouslengths.com/author/mangakakalotgg/",
                "https://motion-gallery.net/users/671842",
                "https://www.chordie.com/forum/profile.php?id=2126771",
                "https://www.adsoftheworld.com/users/dc782355-cacf-4006-ade1-3742928e04d1",
                "https://wefunder.com/mangakakalotgg",
                "https://www.outdoorproject.com/users/mangakakalot-gg",
                "https://pubhtml5.com/homepage/falkk/preview"
            ],
        "potentialAction": {
        "@type": "SearchAction",
        "target": "https://www.mangakakalot.gg/search/story/{search_term_string}",
        "query-input": "required name=search_term_string"
        },
        "inLanguage": "en",
        "contentLocation": {
        "@type": "Place",
        "name": "United States"
        },
        "publisher": {
        "@type": "Organization",
        "name": "MangaKakalot",
        "logo": {
            "@type": "ImageObject",
            "url": "https://www.mangakakalot.gg/images/logo.webp"
        }
        },
        "image": {
        "@type": "ImageObject",
        "url": "https://www.mangakakalot.gg/images/og-image.jpg",
        "width": 1200,
        "height": 630
        }
    }
    </script>

    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "Book",
        "name": "Baby Steps",
        "url": "https://www.mangakakalot.gg/manga/baby-steps",
        "image": "https://imgs-2.2xstorage.com/thumb/baby-steps.webp",
        "author": [
                                {
                "@type": "Person",
                "name": "Kachiki Hikaru"
            }
                            ],
        "genre": [
                                                "Comedy",
                                    "Drama",
                                    "Romance",
                                    "School life",
                                    "Shounen",
                                    "Slice of life",
                                    "Sports"
                                    ],
        "description": "Maruo Eiichirou (Ei-Chan), a first year honor student, one day decides he&#039;s unhappy with the way things are and lacks exercise. His mother gives him a flyer for the local Tennis Club and he decides to check it out. He&#039;s instantly captivated by it. With no prior experience and poor physical conditioning, join Ei-Chan as he embarks on a tennis journey using his smarts, dedication and work ethic.
Note: Won the 38th Kodansha Manga Award in the Best Shōnen Manga category in 2014.",
        "publisher": {
        "@type": "Organization",
        "name": "MangaKakalot"
        },
        "inLanguage": "en",
        "datePublished": "2024-11-02T16:21:30.000000Z",
        "aggregateRating": {
        "@type": "AggregateRating",
        "ratingValue": "4.66",
        "bestRating": "5",
        "ratingCount": "99"
        }
    }
    </script>

    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": [{
            "@type": "ListItem",
            "position": 1,
            "name": "Home",
            "item": "https://www.mangakakalot.gg"
        },
        {
            "@type": "ListItem",
            "position": 2,
            "name": "Comedy",
            "item": "https://www.mangakakalot.gg/genre/comedy"
        },
        {
            "@type": "ListItem",
            "position": 3,
            "name": "Baby Steps",
            "item": "https://www.mangakakalot.gg/manga/baby-steps"
        }
        ]
    }
    </script>

    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "WebPage",
        "name": "Read Baby Steps Latest Chapter Manga Online Free | MangaKakalot",
        "description": "Read Baby Steps latest chapter full, read free manga online with beautiful high-quality photos, fast updates on MangaKakalot - manga websites free!",
        "url": "https://www.mangakakalot.gg/manga/baby-steps",
        "image": "https://imgs-2.2xstorage.com/thumb/baby-steps.webp",
        "breadcrumb": {
        "@type": "BreadcrumbList",
        "itemListElement": [{
            "@type": "ListItem",
            "position": 1,
            "name": "Home",
            "item": "https://www.mangakakalot.gg"
            },
            {
            "@type": "ListItem",
            "position": 2,
            "name": "Comedy",
            "item": "https://www.mangakakalot.gg/genre/comedy"
            },
            {
            "@type": "ListItem",
            "position": 3,
            "name": "Baby Steps",
            "item": "https://www.mangakakalot.gg/manga/baby-steps"
            }
        ]
        },
        "author": {
        "@type": "Organization",
        "name": "MangaKakalot",
        "url": "https://www.mangakakalot.gg"
        },
        "publisher": {
        "@type": "Organization",
        "name": "MangaKakalot",
        "logo": {
            "@type": "ImageObject",
            "url": "https://www.mangakakalot.gg/images/logo.webp"
        }
        },
        "inLanguage": "en",
        "isPartOf": {
        "@type": "WebSite",
        "name": "MangaKakalot",
        "url": "https://www.mangakakalot.gg"
        },
        "mainEntity": {
        "@type": "Book",
        "name": "Baby Steps",
        "author": [
                                {
                "@type": "Person",
                "name": "Kachiki Hikaru"
            }
                            ],
        "genre": [
                            "Comedy",
                            "Drama",
                            "Romance",
                            "School life",
                            "Shounen",
                            "Slice of life",
                            "Sports"
                    ],
        "image": "https://imgs-2.2xstorage.com/thumb/baby-steps.webp",
        "description": "Maruo Eiichirou (Ei-Chan), a first year honor student, one day decides he&#039;s unhappy with the way things are and lacks exercise. His mother gives him a flyer for the local Tennis Club and he decides to check it out. He&#039;s instantly captivated by it. With no prior experience and poor physical conditioning, join Ei-Chan as he embarks on a tennis journey using his smarts, dedication and work ethic.
Note: Won the 38th Kodansha Manga Award in the Best Shōnen Manga category in 2014.",
        "datePublished": "2024-11-02T16:21:30.000000Z",
        "dateModified": "2024-11-02T16:21:30.000000Z",
        "aggregateRating": {
            "@type": "AggregateRating",
            "ratingValue": "4.66",
            "bestRating": "5",
            "ratingCount": "99"
        },
        "numberOfPages": "465"
        },
        "potentialAction": {
        "@type": "ReadAction",
        "target": {
            "@type": "EntryPoint",
            "urlTemplate": "https://www.mangakakalot.gg/manga/baby-steps/chapter-1"
        }
        }
    }
    </script>
<script data-cfasync="false" async="" src="https://czuawlppipi.com/en/onzoqma/zrobu?drtcqehg=nnaj&amp;tfq=jyg&amp;nkdjpjzq=411148&amp;utmayx=821794&amp;csgw=613118&amp;seva=pjhon&amp;iiqwno=cxq&amp;srf=702110&amp;hxga=gspz&amp;id=2057180"></script><meta name="google" content="nopagereadaloud"><link rel="preconnect dns-prefetch" href="https://czuawlppipi.com"><link rel="preconnect dns-prefetch" href="https://landing.lust-goddess-game.com"><style type="text/css" data-fbcssmodules="css:fb.css.base css:fb.css.dialog css:fb.css.iframewidget">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0px;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:'lucida grande', tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0px;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:'lucida grande', tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_dialog{background:rgba(82,82,82,.7);position:absolute;top:-10000px;z-index:10001}.fb_dialog_advanced{border-radius:8px;padding:10px}.fb_dialog_content{background:#fff;color:#373737}.fb_dialog_close_icon{background:url(https://connect.facebook.net/rsrc.php/v4/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{left:5px;right:auto;top:5px}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(https://connect.facebook.net/rsrc.php/v4/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent}.fb_dialog_close_icon:active{background:url(https://connect.facebook.net/rsrc.php/v4/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #365899;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(https://connect.facebook.net/rsrc.php/v4/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{height:100%;left:0px;margin:0px;overflow:visible;position:absolute;top:-10000px;transform:none;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(https://connect.facebook.net/rsrc.php/v4/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{background:none;height:auto;min-height:initial;min-width:initial;width:auto}.fb_dialog.fb_dialog_mobile.loading.centered #fb_dialog_loader_spinner{width:100%}.fb_dialog.fb_dialog_mobile.loading.centered .fb_dialog_content{background:none}.loading.centered #fb_dialog_loader_close{clear:both;color:white;display:block;font-size:18px;padding-top:20px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0,0,0,.4);bottom:0;left:0;min-height:100%;position:absolute;right:0;top:0;width:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_mobile .fb_dialog_iframe{position:sticky;top:0}.fb_dialog_content .dialog_header{background:linear-gradient(from(#738aba), to(#2c4987));border-bottom:1px solid;border-color:#043b87;box-shadow:white 0px 1px 1px -1px inset;color:#fff;font:bold 14px Helvetica, sans-serif;text-overflow:ellipsis;text-shadow:rgba(0,30,84,.296875) 0px -1px 0px;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:linear-gradient(from(#4267b2), to(#2a4887));background-clip:padding-box;border:1px solid #29487d;border-radius:3px;display:inline-block;line-height:18px;margin-top:3px;max-width:85px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{background:none;border:none;color:white;font:bold 12px Helvetica, sans-serif;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0,30,84,.296875) 0px -1px 0px}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(https://connect.facebook.net/rsrc.php/v4/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #4a4a4a;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f5f6f7;border:1px solid #4a4a4a;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}#fb_dialog_loader_spinner{animation:rotateSpinner 1.2s linear infinite;background-color:transparent;background-image:url(https://connect.facebook.net/rsrc.php/v4/yD/r/t-wz8gw1xG1.png);background-position:50% 50%;background-repeat:no-repeat;height:24px;width:24px}@keyframes rotateSpinner{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_fluid_desktop,.fb_iframe_widget_fluid_desktop span,.fb_iframe_widget_fluid_desktop iframe{max-width:100%}.fb_iframe_widget_fluid_desktop iframe{min-width:220px;position:relative}.fb_iframe_widget_lift{z-index:1}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}</style></head>


<body class="">
    <script type="application/javascript">
        const themeMode = localStorage.getItem('themeMode');
        if (themeMode) {
            document.body.classList.add(themeMode);
        }
    </script>
        <header>
        <div class="container container-top">
            <div class="top-logo">
                <a href="https://www.mangakakalot.gg" title="Manga Online"><img src="/images/logo.webp" alt="Manga Online" title="Manga Online"></a>
            </div>
            <div class="top-header">
                <div class="searching">
                    <form name="frmsearch">
                        <input id="search_story" autocomplete="off" placeholder="Search manga..." class="searchi"><div id="search_result"><ul></ul><div id="search-footer" class="searchf"></div></div>
                        <input style="display: none;">
                    </form>
                </div>

                <div class="link-social-desktop">
                                        <span class="items facebook"><a href="https://www.facebook.com/mangakakalot.official" target="_blank" rel="nofollow" title="Fanpage">Fanpage</a></span>
                    <span class="items discord"><a href="https://discord.gg/Qhz84GGvE9" target="_blank" rel="nofollow" title="Discord">Discord</a></span>
                                    </div>

                <div class="user-options">
                <div class="un-login">
                    <div class="theme-mode-button null"></div>
                    
            <a rel="nofollow" href="https://discord.gg/Qhz84GGvE9" target="_blank" class="link-social discord">
                <i class="fab fa-discord"></i>
            </a>
            <a rel="nofollow" href="https://www.facebook.com/mangakakalot.official" target="_blank" class="link-social">
                <i class="fab fa-facebook"></i>
            </a>
            
                     <a href="https://www.mangakakalot.gg/history" class="btn-circle btn-history">
                        <i class="fas fa-history"></i>
                    </a>
                    <div class="login-top">
                        <a rel="nofollow" href="https://www.mangakakalot.gg/login" class="btn-login">Login</a>
                        <a rel="nofollow" href="https://www.mangakakalot.gg/register" class="btn-register">Register</a>
                    </div>
                </div>
                </div>
            </div>
            <div class="mobile-menu">MENU</div>
            <nav class="wrap-menu-primary">
                <ul id="menu-menu-top" class="menu-primary">
                    <li class="menu-item"><a href="https://www.mangakakalot.gg/official">HOME</a></li>
                    <li class="menu-item"><a href="https://www.mangakakalot.gg/manga-list/latest-manga" title="LATEST MANGA">LATEST MANGA</a></li>
                    <li class="menu-item"><a href="https://www.mangakakalot.gg/manga-list/hot-manga" title="HOT MANGA">HOT MANGA</a></li>
                    <li class="menu-item"><a href="https://www.mangakakalot.gg/manga-list/new-manga" title="NEW MANGA">NEW MANGA</a></li>
                    <li class="menu-item"><a href="https://www.mangakakalot.gg/manga-list/completed-manga" title="COMPLETED MANGA">COMPLETED MANGA</a></li>
                    <li class="menu-item"><a href="https://www.mangakakalot.gg/request-new-manga" title="Request new manga">REQUEST MANGA</a></li>
                    <span></span>
                </ul>
            </nav>
        </div>
    </header>
    
    

    
        <div class="container">
        <div class="slide">
    <h3 class="title update-slide">POPULAR MANGA</h3>
    <div id="owl-demo" class="owl-carousel owl-theme" style="opacity: 1; display: block;">
                            <div class="owl-wrapper-outer"><div class="owl-wrapper" style="width: 5840px; left: 0px; display: block; transition: 800ms; transform: translate3d(-292px, 0px, 0px);"><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/case-closed.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Case Closed">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/case-closed" title="Case Closed">
                            Case Closed
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/case-closed/chapter-1142" title="Chapter 1142">Chapter 1142
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/blue-lock.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Blue Lock">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/blue-lock" title="Blue Lock">
                            Blue Lock
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/blue-lock/chapter-299" title="Chapter 299">Chapter 299
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/bimyou-ni-yasashii-ijimekko.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Bimyou ni Yasashii Ijimekko">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/bimyou-ni-yasashii-ijimekko" title="Bimyou ni Yasashii Ijimekko">
                            Bimyou ni Yasashii Ijimekko
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/bimyou-ni-yasashii-ijimekko/chapter-48" title="Chapter 48">Chapter 48
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/fairy-tail-100-years-quest.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Fairy Tail: 100 Years Quest">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/fairy-tail-100-years-quest" title="Fairy Tail: 100 Years Quest">
                            Fairy Tail: 100 Years Quest
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/fairy-tail-100-years-quest/chapter-183" title="Chapter 183">Chapter 183
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/desutoro-246.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Desutoro 246">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/desutoro-246" title="Desutoro 246">
                            Desutoro 246
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/desutoro-246/chapter-30" title="Chapter 30">Chapter 30
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/sigrid-manhwa.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Sigrid manhwa">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/sigrid-manhwa" title="Sigrid manhwa">
                            Sigrid manhwa
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/sigrid-manhwa/chapter-141" title="Chapter 141">Chapter 141
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/rent-a-girlfriend.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Rent-A-Girlfriend">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/rent-a-girlfriend" title="Rent-A-Girlfriend">
                            Rent-A-Girlfriend
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/rent-a-girlfriend/chapter-373" title="Chapter 373">Chapter 373
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/black-and-white-colored.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Black and White (Colored)">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/black-and-white-colored" title="Black and White (Colored)">
                            Black and White (Colored)
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/black-and-white-colored/chapter-15" title="Chapter 15">Chapter 15
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://storage.waitst.com/thumb/how-to-reject-the-kings-scout.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="How to Reject the King’s Scout">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/how-to-reject-the-kings-scout" title="How to Reject the King’s Scout">
                            How to Reject the King’s Scout
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/how-to-reject-the-kings-scout/chapter-22" title="Chapter 22">Chapter 22
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/i-became-the-target-of-the-harem-in-another-world.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="I Became The Target Of The Harem In Another World">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/i-became-the-target-of-the-harem-in-another-world" title="I Became The Target Of The Harem In Another World">
                            I Became The Target Of The Harem In Another World
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/i-became-the-target-of-the-harem-in-another-world/chapter-86" title="Chapter 86">Chapter 86
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/maou-gakuen-no-hangyakusha.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Maou Gakuen No Hangyakusha">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/maou-gakuen-no-hangyakusha" title="Maou Gakuen No Hangyakusha">
                            Maou Gakuen No Hangyakusha
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/maou-gakuen-no-hangyakusha/chapter-48" title="Chapter 48">Chapter 48
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/black-haze-remake.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Black Haze [Remake]">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/black-haze-remake" title="Black Haze [Remake]">
                            Black Haze [Remake]
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/black-haze-remake/chapter-22" title="Chapter 22">Chapter 22
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/reincarnated-as-a-new-employee.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Reincarnated as a New Employee">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/reincarnated-as-a-new-employee" title="Reincarnated as a New Employee">
                            Reincarnated as a New Employee
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/reincarnated-as-a-new-employee/chapter-24" title="Chapter 24">Chapter 24
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/black-haze-2025.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Black Haze (2025)">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/black-haze-2025" title="Black Haze (2025)">
                            Black Haze (2025)
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/black-haze-2025/chapter-22" title="Chapter 22">Chapter 22
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/the-archduke-s-gorgeous-wedding-was-a-fraud.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="The Archduke's Gorgeous Wedding Was A Fraud">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/the-archduke-s-gorgeous-wedding-was-a-fraud" title="The Archduke's Gorgeous Wedding Was A Fraud">
                            The Archduke's Gorgeous Wedding Was A Fraud
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/the-archduke-s-gorgeous-wedding-was-a-fraud/chapter-70" title="Chapter 70">Chapter 70
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/please-become-my-sister-in-law.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Please Become My Sister-In-Law!">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/please-become-my-sister-in-law" title="Please Become My Sister-In-Law!">
                            Please Become My Sister-In-Law!
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/please-become-my-sister-in-law/chapter-34" title="Chapter 34">Chapter 34
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/confessing-my-love-to-him-the-treacherous-one.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Confessing My Love To Him, The Treacherous One">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/confessing-my-love-to-him-the-treacherous-one" title="Confessing My Love To Him, The Treacherous One">
                            Confessing My Love To Him, The Treacherous One
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/confessing-my-love-to-him-the-treacherous-one/chapter-30" title="Chapter 30">Chapter 30
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/the-creepy-and-freaky.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="The Creepy and Freaky">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/the-creepy-and-freaky" title="The Creepy and Freaky">
                            The Creepy and Freaky
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/the-creepy-and-freaky/chapter-4" title="Chapter 4">Chapter 4
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://storage.waitst.com/thumb/manga_57712_image.jpg" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Don’t Mess With The Puppy!">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/dont-mess-with-the-puppy" title="Don’t Mess With The Puppy!">
                            Don’t Mess With The Puppy!
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/dont-mess-with-the-puppy/chapter-38" title="Chapter 38">Chapter 38
                        </a>
                                    </div>
            </div></div><div class="owl-item" style="width: 146px;"><div class="item">
                <img src="https://img-r1.2xstorage.com/thumb/fated-to-be-loved-by-villains.webp" loading="lazy" onerror="javascript:this.src='/images/404-avatar.webp';" alt="Fated to Be Loved by Villains">
                <div class="slide-caption">
                    <h3>
                        <a href="https://www.mangakakalot.gg/manga/fated-to-be-loved-by-villains" title="Fated to Be Loved by Villains">
                            Fated to Be Loved by Villains
                        </a>
                    </h3>
                                                                <a href="https://www.mangakakalot.gg/manga/fated-to-be-loved-by-villains/chapter-27" title="Chapter 27">Chapter 27
                        </a>
                                    </div>
            </div></div></div></div>
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
        
    <div class="owl-controls clickable"><div class="owl-buttons"><div class="owl-prev"></div><div class="owl-next"></div></div></div></div>
</div>
        <div class="main-wrapper">
            <div class="leftCol">

                
                <div class="breadcrumb breadcrumbs" itemscope="" itemtype="http://schema.org/BreadcrumbList">
                    <p>
                        <span itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
                            <a itemprop="item" href="https://www.mangakakalot.gg" title="Manga Online">
                                <span itemprop="name">Manga Online</span>
                            </a>
                            <meta itemprop="position" content="1">
                        </span>
                        <span>»</span>
                        <span itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
                            <a itemtype="http://schema.org/Thing" itemprop="item" href="https://www.mangakakalot.gg/manga/baby-steps">
                                <span itemprop="name">Baby Steps</span>
                            </a>
                            <meta itemprop="position" content="2">
                        </span>
                    </p>
                </div>


                <div class="manga-info-top">
                    <div class="manga-info-pic">
                        <img src="https://imgs-2.2xstorage.com/thumb/baby-steps.webp" onerror="javascript:this.src='/images/404-avatar.webp';" class="lazy lz-entered lz-loading" alt="Baby Steps" data-ll-status="loading">
                        <span onclick="moveToListChapter();" class="btn_chapterslist">CHAPTER LIST</span>
                                                <div class="read-chapter">
                                                        <a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-1" rel="nofollow">Start Reading</a>
                            <a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-455" rel="nofollow">Newest Chapter</a>
                        </div>
                                            </div>
                    <div class="manga-info-content">
                        <ul class="manga-info-text">
                            <li>
                                <h1>Baby Steps</h1>
                                                            </li>

                                                        <li>Author(s) :
                                                                                                        <a href="https://www.mangakakalot.gg/author/kachiki-hikaru">
                                        Kachiki Hikaru</a>
                                                            </li>
                            <li>Status : Ongoing</li>
                            <li>Last updated : Nov-02-2024 04:21:30 PM</li>
                            <li style="display: none;">TransGroup : </li>
                            <li>View : 24,089,993</li>

                                                        <li class="genres">Genres :
                                                                    <a href="https://www.mangakakalot.gg/genre/comedy">
                                        Comedy
                                    </a>, 
                                                                    <a href="https://www.mangakakalot.gg/genre/drama">
                                        Drama
                                    </a>, 
                                                                    <a href="https://www.mangakakalot.gg/genre/romance">
                                        Romance
                                    </a>, 
                                                                    <a href="https://www.mangakakalot.gg/genre/school-life">
                                        School life
                                    </a>, 
                                                                    <a href="https://www.mangakakalot.gg/genre/shounen">
                                        Shounen
                                    </a>, 
                                                                    <a href="https://www.mangakakalot.gg/genre/slice-of-life">
                                        Slice of life
                                    </a>, 
                                                                    <a href="https://www.mangakakalot.gg/genre/sports">
                                        Sports
                                    </a>
                                                            </li>
                            <li style="height: 27px;"><span>Rating : </span>
                                <em class="rate_row" id="rate_row"><span class="rate_star checked" data-value="1"></span><span class="rate_star checked" data-value="2"></span><span class="rate_star checked" data-value="3"></span><span class="rate_star checked" data-value="4"></span><span class="rate_star checked" data-value="5"></span><input type="hidden" class="get_rate" value="5" default-stars="4.66"></em>
                                <em class="rate_row_result"></em>
                            </li>
                            <li style="line-height: 20px; font-size: 11px; font-style: italic; padding: 0px 0px 0px 44px;">
                                <span style="line-height: 100%!important;">&nbsp;</span>
                                <em id="rate_row_cmd" style="color: black;">
                                    mangakakalot.gg rate : 4.66 / 5 - 99 votes
                                </em>
                                <script type="application/ld+json"> {
                                "@context": "https://schema.org",
                                "@type": "AggregateRating",
                                "ratingValue": "4.66",
                                "ratingCount": "99",
                                "itemReviewed": {
                                    "@type": "Book",
                                    "name": "Baby Steps",
                                    "image": "https://imgs-2.2xstorage.com/thumb/baby-steps.webp"
                                }
                            } </script>
                            </li>
                            <li class="li_bookmark"><div class="user_btn_follow_i">
        <img id="btnBookmark" data-url="https://www.mangakakalot.gg/action/bookmark/43579" data-action="add" src="/images/theodoi.webp" alt="Follow">
    </div>
</li>
                            
                        </ul>
                        <p>
                            📢 <strong>New Feature: Save Reading History for Guests!</strong><br>
                            MangaKakalot automatically saves your reading history—no account required! <br>
                            Pick up your favorite manga right where you left off with ease. Log in to keep your progress synced across devices.<br>
                            📌 Find your saved history in the <a href="/history"><span class="btn-circle"><i class="fas fa-history"></i></span></a> section on the site.
                        </p>
                    </div>

                </div>

                
                

                
                <div id="chapter" class="chapter">
                    <div class="manga-info-chapter">
                        <div class="row title-list-chapter">
                            <span>Chapter name</span>
                            <span>View</span>
                            <span>Time uploaded</span>
                        </div>
                        <div class="chapter-list">
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-455" title="Baby Steps Chapter 455">Chapter 455</a></span>
                                    <span> 50,963 </span>
                                    <span title="Nov-02-2024 04:21">11-02 16:21</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-454" title="Baby Steps Chapter 454">Chapter 454</a></span>
                                    <span> 27,060 </span>
                                    <span title="Nov-02-2024 04:21">11-02 16:21</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-453" title="Baby Steps Chapter 453">Chapter 453</a></span>
                                    <span> 25,647 </span>
                                    <span title="Nov-02-2024 04:21">11-02 16:21</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-452" title="Baby Steps Chapter 452">Chapter 452</a></span>
                                    <span> 24,226 </span>
                                    <span title="Nov-02-2024 04:20">11-02 16:20</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-451" title="Baby Steps Chapter 451">Chapter 451</a></span>
                                    <span> 30,628 </span>
                                    <span title="Nov-02-2024 04:20">11-02 16:20</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-450" title="Baby Steps Chapter 450">Chapter 450</a></span>
                                    <span> 25,333 </span>
                                    <span title="Nov-02-2024 04:20">11-02 16:20</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-449" title="Baby Steps Chapter 449">Chapter 449</a></span>
                                    <span> 24,720 </span>
                                    <span title="Nov-02-2024 04:20">11-02 16:20</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-448" title="Baby Steps Chapter 448">Chapter 448</a></span>
                                    <span> 24,619 </span>
                                    <span title="Nov-02-2024 04:19">11-02 16:19</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-447" title="Baby Steps Chapter 447">Chapter 447</a></span>
                                    <span> 23,419 </span>
                                    <span title="Nov-02-2024 04:19">11-02 16:19</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-446" title="Baby Steps Chapter 446">Chapter 446</a></span>
                                    <span> 26,517 </span>
                                    <span title="Nov-02-2024 04:19">11-02 16:19</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-445" title="Baby Steps Chapter 445">Chapter 445</a></span>
                                    <span> 22,615 </span>
                                    <span title="Nov-02-2024 04:19">11-02 16:19</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-444" title="Baby Steps Chapter 444">Chapter 444</a></span>
                                    <span> 22,118 </span>
                                    <span title="Nov-02-2024 04:18">11-02 16:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-443" title="Baby Steps Chapter 443">Chapter 443</a></span>
                                    <span> 21,513 </span>
                                    <span title="Nov-02-2024 04:18">11-02 16:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-442" title="Baby Steps Chapter 442">Chapter 442</a></span>
                                    <span> 21,918 </span>
                                    <span title="Nov-02-2024 04:18">11-02 16:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-441" title="Baby Steps Chapter 441">Chapter 441</a></span>
                                    <span> 22,017 </span>
                                    <span title="Nov-02-2024 04:18">11-02 16:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-440" title="Baby Steps Chapter 440">Chapter 440</a></span>
                                    <span> 22,717 </span>
                                    <span title="Nov-02-2024 04:18">11-02 16:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-439" title="Baby Steps Chapter 439">Chapter 439</a></span>
                                    <span> 21,712 </span>
                                    <span title="Nov-02-2024 04:17">11-02 16:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-438" title="Baby Steps Chapter 438">Chapter 438</a></span>
                                    <span> 22,318 </span>
                                    <span title="Nov-02-2024 04:17">11-02 16:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-437" title="Baby Steps Chapter 437">Chapter 437</a></span>
                                    <span> 24,815 </span>
                                    <span title="Nov-02-2024 04:17">11-02 16:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-436" title="Baby Steps Chapter 436">Chapter 436</a></span>
                                    <span> 26,059 </span>
                                    <span title="Nov-02-2024 04:17">11-02 16:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-435" title="Baby Steps Chapter 435">Chapter 435</a></span>
                                    <span> 59,131 </span>
                                    <span title="Nov-02-2024 04:17">11-02 16:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-434" title="Baby Steps Chapter 434">Chapter 434</a></span>
                                    <span> 50,906 </span>
                                    <span title="Nov-02-2024 04:16">11-02 16:16</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-433" title="Baby Steps Chapter 433">Chapter 433</a></span>
                                    <span> 76,107 </span>
                                    <span title="Nov-02-2024 04:16">11-02 16:16</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-432" title="Baby Steps Chapter 432">Chapter 432</a></span>
                                    <span> 94,904 </span>
                                    <span title="Nov-02-2024 04:16">11-02 16:16</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-431" title="Baby Steps Chapter 431">Chapter 431</a></span>
                                    <span> 48,507 </span>
                                    <span title="Nov-02-2024 04:15">11-02 16:15</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-430" title="Baby Steps Chapter 430">Chapter 430</a></span>
                                    <span> 43,506 </span>
                                    <span title="Nov-02-2024 04:15">11-02 16:15</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-429" title="Baby Steps Chapter 429">Chapter 429</a></span>
                                    <span> 43,406 </span>
                                    <span title="Nov-02-2024 04:15">11-02 16:15</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-428" title="Baby Steps Chapter 428">Chapter 428</a></span>
                                    <span> 51,409 </span>
                                    <span title="Nov-02-2024 04:15">11-02 16:15</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-427" title="Baby Steps Chapter 427">Chapter 427</a></span>
                                    <span> 56,909 </span>
                                    <span title="Nov-02-2024 04:14">11-02 16:14</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-426" title="Baby Steps Chapter 426">Chapter 426</a></span>
                                    <span> 55,808 </span>
                                    <span title="Nov-02-2024 04:14">11-02 16:14</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-425" title="Baby Steps Chapter 425">Chapter 425</a></span>
                                    <span> 67,513 </span>
                                    <span title="Nov-02-2024 04:14">11-02 16:14</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-424" title="Baby Steps Chapter 424">Chapter 424</a></span>
                                    <span> 42,809 </span>
                                    <span title="Nov-02-2024 04:13">11-02 16:13</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-423" title="Baby Steps Chapter 423">Chapter 423</a></span>
                                    <span> 47,004 </span>
                                    <span title="Nov-02-2024 04:13">11-02 16:13</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-422" title="Baby Steps Chapter 422">Chapter 422</a></span>
                                    <span> 40,506 </span>
                                    <span title="Nov-02-2024 04:13">11-02 16:13</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-421" title="Baby Steps Chapter 421">Chapter 421</a></span>
                                    <span> 41,907 </span>
                                    <span title="Nov-02-2024 04:13">11-02 16:13</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-420" title="Baby Steps Chapter 420">Chapter 420</a></span>
                                    <span> 42,212 </span>
                                    <span title="Nov-02-2024 04:12">11-02 16:12</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-419" title="Baby Steps Chapter 419">Chapter 419</a></span>
                                    <span> 40,304 </span>
                                    <span title="Nov-02-2024 04:12">11-02 16:12</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-418" title="Baby Steps Chapter 418">Chapter 418</a></span>
                                    <span> 43,404 </span>
                                    <span title="Nov-02-2024 04:12">11-02 16:12</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-417" title="Baby Steps Chapter 417">Chapter 417</a></span>
                                    <span> 43,606 </span>
                                    <span title="Nov-02-2024 04:11">11-02 16:11</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-416" title="Baby Steps Chapter 416">Chapter 416</a></span>
                                    <span> 46,002 </span>
                                    <span title="Nov-02-2024 04:11">11-02 16:11</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-415" title="Baby Steps Chapter 415">Chapter 415</a></span>
                                    <span> 46,002 </span>
                                    <span title="Nov-02-2024 04:11">11-02 16:11</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-414" title="Baby Steps Chapter 414">Chapter 414</a></span>
                                    <span> 42,003 </span>
                                    <span title="Nov-02-2024 04:11">11-02 16:11</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-413" title="Baby Steps Chapter 413">Chapter 413</a></span>
                                    <span> 44,602 </span>
                                    <span title="Nov-02-2024 04:10">11-02 16:10</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-412" title="Baby Steps Chapter 412">Chapter 412</a></span>
                                    <span> 46,712 </span>
                                    <span title="Nov-02-2024 04:10">11-02 16:10</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-411" title="Baby Steps Chapter 411">Chapter 411</a></span>
                                    <span> 44,605 </span>
                                    <span title="Nov-02-2024 04:10">11-02 16:10</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-410" title="Baby Steps Chapter 410">Chapter 410</a></span>
                                    <span> 43,705 </span>
                                    <span title="Nov-02-2024 04:10">11-02 16:10</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-409" title="Baby Steps Chapter 409">Chapter 409</a></span>
                                    <span> 54,606 </span>
                                    <span title="Nov-02-2024 04:09">11-02 16:09</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-408" title="Baby Steps Chapter 408">Chapter 408</a></span>
                                    <span> 43,103 </span>
                                    <span title="Nov-02-2024 04:09">11-02 16:09</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-407" title="Baby Steps Chapter 407">Chapter 407</a></span>
                                    <span> 51,105 </span>
                                    <span title="Nov-02-2024 04:09">11-02 16:09</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-406" title="Baby Steps Chapter 406">Chapter 406</a></span>
                                    <span> 36,603 </span>
                                    <span title="Nov-02-2024 04:08">11-02 16:08</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-405" title="Baby Steps Chapter 405">Chapter 405</a></span>
                                    <span> 28,205 </span>
                                    <span title="Nov-02-2024 04:08">11-02 16:08</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-404" title="Baby Steps Chapter 404">Chapter 404</a></span>
                                    <span> 28,001 </span>
                                    <span title="Nov-02-2024 04:08">11-02 16:08</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-403" title="Baby Steps Chapter 403">Chapter 403</a></span>
                                    <span> 30,409 </span>
                                    <span title="Nov-02-2024 04:07">11-02 16:07</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-402" title="Baby Steps Chapter 402">Chapter 402</a></span>
                                    <span> 30,513 </span>
                                    <span title="Nov-02-2024 04:07">11-02 16:07</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-401" title="Baby Steps Chapter 401">Chapter 401</a></span>
                                    <span> 31,104 </span>
                                    <span title="Nov-02-2024 04:07">11-02 16:07</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-400" title="Baby Steps Chapter 400">Chapter 400</a></span>
                                    <span> 30,207 </span>
                                    <span title="Nov-02-2024 04:06">11-02 16:06</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-399" title="Baby Steps Chapter 399">Chapter 399</a></span>
                                    <span> 28,403 </span>
                                    <span title="Nov-02-2024 04:06">11-02 16:06</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-398" title="Baby Steps Chapter 398">Chapter 398</a></span>
                                    <span> 27,801 </span>
                                    <span title="Nov-02-2024 04:06">11-02 16:06</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-397" title="Baby Steps Chapter 397">Chapter 397</a></span>
                                    <span> 29,302 </span>
                                    <span title="Nov-02-2024 04:05">11-02 16:05</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-396" title="Baby Steps Chapter 396">Chapter 396</a></span>
                                    <span> 33,807 </span>
                                    <span title="Nov-02-2024 04:05">11-02 16:05</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-395" title="Baby Steps Chapter 395">Chapter 395</a></span>
                                    <span> 34,806 </span>
                                    <span title="Nov-02-2024 04:05">11-02 16:05</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-394" title="Baby Steps Chapter 394">Chapter 394</a></span>
                                    <span> 32,904 </span>
                                    <span title="Nov-02-2024 04:04">11-02 16:04</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-393" title="Baby Steps Chapter 393">Chapter 393</a></span>
                                    <span> 33,404 </span>
                                    <span title="Nov-02-2024 04:04">11-02 16:04</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-392" title="Baby Steps Chapter 392">Chapter 392</a></span>
                                    <span> 33,204 </span>
                                    <span title="Nov-02-2024 04:04">11-02 16:04</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-391" title="Baby Steps Chapter 391">Chapter 391</a></span>
                                    <span> 31,505 </span>
                                    <span title="Nov-02-2024 04:04">11-02 16:04</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-390" title="Baby Steps Chapter 390">Chapter 390</a></span>
                                    <span> 31,003 </span>
                                    <span title="Nov-02-2024 04:03">11-02 16:03</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-389" title="Baby Steps Chapter 389">Chapter 389</a></span>
                                    <span> 30,804 </span>
                                    <span title="Nov-02-2024 04:03">11-02 16:03</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-388" title="Baby Steps Chapter 388">Chapter 388</a></span>
                                    <span> 30,203 </span>
                                    <span title="Nov-02-2024 04:03">11-02 16:03</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-387" title="Baby Steps Chapter 387">Chapter 387</a></span>
                                    <span> 31,005 </span>
                                    <span title="Nov-02-2024 04:02">11-02 16:02</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-386" title="Baby Steps Chapter 386">Chapter 386</a></span>
                                    <span> 30,509 </span>
                                    <span title="Nov-02-2024 04:02">11-02 16:02</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-385" title="Baby Steps Chapter 385">Chapter 385</a></span>
                                    <span> 32,007 </span>
                                    <span title="Nov-02-2024 04:02">11-02 16:02</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-384" title="Baby Steps Chapter 384">Chapter 384</a></span>
                                    <span> 30,008 </span>
                                    <span title="Nov-02-2024 04:02">11-02 16:02</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-383" title="Baby Steps Chapter 383">Chapter 383</a></span>
                                    <span> 35,705 </span>
                                    <span title="Nov-02-2024 04:01">11-02 16:01</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-382" title="Baby Steps Chapter 382">Chapter 382</a></span>
                                    <span> 35,103 </span>
                                    <span title="Nov-02-2024 04:01">11-02 16:01</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-381" title="Baby Steps Chapter 381">Chapter 381</a></span>
                                    <span> 34,405 </span>
                                    <span title="Nov-02-2024 04:01">11-02 16:01</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-380" title="Baby Steps Chapter 380">Chapter 380</a></span>
                                    <span> 34,402 </span>
                                    <span title="Nov-02-2024 04:00">11-02 16:00</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-379" title="Baby Steps Chapter 379">Chapter 379</a></span>
                                    <span> 34,005 </span>
                                    <span title="Nov-02-2024 04:00">11-02 16:00</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-378" title="Baby Steps Chapter 378">Chapter 378</a></span>
                                    <span> 33,504 </span>
                                    <span title="Nov-02-2024 04:00">11-02 16:00</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-377" title="Baby Steps Chapter 377">Chapter 377</a></span>
                                    <span> 42,004 </span>
                                    <span title="Nov-02-2024 03:59">11-02 15:59</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-376" title="Baby Steps Chapter 376">Chapter 376</a></span>
                                    <span> 42,504 </span>
                                    <span title="Nov-02-2024 03:59">11-02 15:59</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-375" title="Baby Steps Chapter 375">Chapter 375</a></span>
                                    <span> 37,603 </span>
                                    <span title="Nov-02-2024 03:59">11-02 15:59</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-374" title="Baby Steps Chapter 374">Chapter 374</a></span>
                                    <span> 39,203 </span>
                                    <span title="Nov-02-2024 03:58">11-02 15:58</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-373" title="Baby Steps Chapter 373">Chapter 373</a></span>
                                    <span> 35,703 </span>
                                    <span title="Nov-02-2024 03:58">11-02 15:58</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-372" title="Baby Steps Chapter 372">Chapter 372</a></span>
                                    <span> 67,803 </span>
                                    <span title="Nov-02-2024 03:58">11-02 15:58</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-371" title="Baby Steps Chapter 371">Chapter 371</a></span>
                                    <span> 50,701 </span>
                                    <span title="Nov-02-2024 03:58">11-02 15:58</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-370" title="Baby Steps Chapter 370">Chapter 370</a></span>
                                    <span> 51,201 </span>
                                    <span title="Nov-02-2024 03:57">11-02 15:57</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-369" title="Baby Steps Chapter 369">Chapter 369</a></span>
                                    <span> 52,702 </span>
                                    <span title="Nov-02-2024 03:57">11-02 15:57</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-368" title="Baby Steps Chapter 368">Chapter 368</a></span>
                                    <span> 53,701 </span>
                                    <span title="Nov-02-2024 03:57">11-02 15:57</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-367" title="Baby Steps Chapter 367">Chapter 367</a></span>
                                    <span> 49,301 </span>
                                    <span title="Nov-02-2024 03:56">11-02 15:56</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-366" title="Baby Steps Chapter 366">Chapter 366</a></span>
                                    <span> 46,001 </span>
                                    <span title="Nov-02-2024 03:56">11-02 15:56</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-365" title="Baby Steps Chapter 365">Chapter 365</a></span>
                                    <span> 48,501 </span>
                                    <span title="Nov-02-2024 03:56">11-02 15:56</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-364" title="Baby Steps Chapter 364">Chapter 364</a></span>
                                    <span> 52,201 </span>
                                    <span title="Nov-02-2024 03:55">11-02 15:55</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-363" title="Baby Steps Chapter 363">Chapter 363</a></span>
                                    <span> 53,602 </span>
                                    <span title="Nov-02-2024 03:55">11-02 15:55</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-362" title="Baby Steps Chapter 362">Chapter 362</a></span>
                                    <span> 51,605 </span>
                                    <span title="Nov-02-2024 03:55">11-02 15:55</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-361" title="Baby Steps Chapter 361">Chapter 361</a></span>
                                    <span> 56,803 </span>
                                    <span title="Nov-02-2024 03:55">11-02 15:55</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-360" title="Baby Steps Chapter 360">Chapter 360</a></span>
                                    <span> 69,601 </span>
                                    <span title="Nov-02-2024 03:54">11-02 15:54</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-359" title="Baby Steps Chapter 359">Chapter 359</a></span>
                                    <span> 88,301 </span>
                                    <span title="Nov-02-2024 03:54">11-02 15:54</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-358" title="Baby Steps Chapter 358">Chapter 358</a></span>
                                    <span> 77,504 </span>
                                    <span title="Nov-02-2024 03:54">11-02 15:54</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-357" title="Baby Steps Chapter 357">Chapter 357</a></span>
                                    <span> 71,702 </span>
                                    <span title="Nov-02-2024 03:53">11-02 15:53</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-356" title="Baby Steps Chapter 356">Chapter 356</a></span>
                                    <span> 88,302 </span>
                                    <span title="Nov-02-2024 03:53">11-02 15:53</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-355" title="Baby Steps Chapter 355">Chapter 355</a></span>
                                    <span> 83,502 </span>
                                    <span title="Nov-02-2024 03:52">11-02 15:52</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-354" title="Baby Steps Chapter 354">Chapter 354</a></span>
                                    <span> 77,002 </span>
                                    <span title="Nov-02-2024 03:52">11-02 15:52</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-353" title="Baby Steps Chapter 353">Chapter 353</a></span>
                                    <span> 66,802 </span>
                                    <span title="Nov-02-2024 03:52">11-02 15:52</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-352" title="Baby Steps Chapter 352">Chapter 352</a></span>
                                    <span> 63,703 </span>
                                    <span title="Nov-02-2024 03:52">11-02 15:52</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-351" title="Baby Steps Chapter 351">Chapter 351</a></span>
                                    <span> 61,604 </span>
                                    <span title="Nov-02-2024 03:51">11-02 15:51</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-350" title="Baby Steps Chapter 350">Chapter 350</a></span>
                                    <span> 67,605 </span>
                                    <span title="Nov-02-2024 03:51">11-02 15:51</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-349" title="Baby Steps Chapter 349">Chapter 349</a></span>
                                    <span> 73,605 </span>
                                    <span title="Nov-02-2024 03:51">11-02 15:51</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-348" title="Baby Steps Chapter 348">Chapter 348</a></span>
                                    <span> 85,002 </span>
                                    <span title="Nov-02-2024 03:50">11-02 15:50</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-347" title="Baby Steps Chapter 347">Chapter 347</a></span>
                                    <span> 87,802 </span>
                                    <span title="Nov-02-2024 03:50">11-02 15:50</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-346-1" title="Baby Steps Chapter 346.1">Chapter 346.1</a></span>
                                    <span> 11,601 </span>
                                    <span title="Nov-02-2024 03:53">11-02 15:53</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-346" title="Baby Steps Chapter 346">Chapter 346</a></span>
                                    <span> 102,703 </span>
                                    <span title="Nov-02-2024 03:50">11-02 15:50</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-345-5" title="Baby Steps Chapter 345.5">Chapter 345.5</a></span>
                                    <span> 69,403 </span>
                                    <span title="Nov-02-2024 03:49">11-02 15:49</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-345" title="Baby Steps Chapter 345">Chapter 345</a></span>
                                    <span> 67,103 </span>
                                    <span title="Nov-02-2024 03:49">11-02 15:49</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-344" title="Baby Steps Chapter 344">Chapter 344</a></span>
                                    <span> 69,603 </span>
                                    <span title="Nov-02-2024 03:49">11-02 15:49</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-343" title="Baby Steps Chapter 343">Chapter 343</a></span>
                                    <span> 72,203 </span>
                                    <span title="Nov-02-2024 03:49">11-02 15:49</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-342" title="Baby Steps Chapter 342">Chapter 342</a></span>
                                    <span> 75,202 </span>
                                    <span title="Nov-02-2024 03:48">11-02 15:48</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-341" title="Baby Steps Chapter 341">Chapter 341</a></span>
                                    <span> 67,202 </span>
                                    <span title="Nov-02-2024 03:48">11-02 15:48</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-340" title="Baby Steps Chapter 340">Chapter 340</a></span>
                                    <span> 68,303 </span>
                                    <span title="Nov-02-2024 03:48">11-02 15:48</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-339" title="Baby Steps Chapter 339">Chapter 339</a></span>
                                    <span> 68,603 </span>
                                    <span title="Nov-02-2024 03:48">11-02 15:48</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-338" title="Baby Steps Chapter 338">Chapter 338</a></span>
                                    <span> 69,604 </span>
                                    <span title="Nov-02-2024 03:47">11-02 15:47</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-337" title="Baby Steps Chapter 337">Chapter 337</a></span>
                                    <span> 71,901 </span>
                                    <span title="Nov-02-2024 03:47">11-02 15:47</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-336-5" title="Baby Steps Chapter 336.5">Chapter 336.5</a></span>
                                    <span> 73,401 </span>
                                    <span title="Nov-02-2024 03:46">11-02 15:46</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-336" title="Baby Steps Chapter 336">Chapter 336</a></span>
                                    <span> 65,302 </span>
                                    <span title="Nov-02-2024 03:46">11-02 15:46</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-335" title="Baby Steps Chapter 335">Chapter 335</a></span>
                                    <span> 76,101 </span>
                                    <span title="Nov-02-2024 03:46">11-02 15:46</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-334" title="Baby Steps Chapter 334">Chapter 334</a></span>
                                    <span> 66,501 </span>
                                    <span title="Nov-02-2024 03:46">11-02 15:46</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-333" title="Baby Steps Chapter 333">Chapter 333</a></span>
                                    <span> 76,201 </span>
                                    <span title="Nov-02-2024 03:45">11-02 15:45</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-332" title="Baby Steps Chapter 332">Chapter 332</a></span>
                                    <span> 71,501 </span>
                                    <span title="Nov-02-2024 03:45">11-02 15:45</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-331" title="Baby Steps Chapter 331">Chapter 331</a></span>
                                    <span> 65,702 </span>
                                    <span title="Nov-02-2024 03:45">11-02 15:45</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-330" title="Baby Steps Chapter 330">Chapter 330</a></span>
                                    <span> 66,103 </span>
                                    <span title="Nov-02-2024 03:44">11-02 15:44</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-329" title="Baby Steps Chapter 329">Chapter 329</a></span>
                                    <span> 69,703 </span>
                                    <span title="Nov-02-2024 03:44">11-02 15:44</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-328" title="Baby Steps Chapter 328">Chapter 328</a></span>
                                    <span> 64,503 </span>
                                    <span title="Nov-02-2024 03:44">11-02 15:44</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-327" title="Baby Steps Chapter 327">Chapter 327</a></span>
                                    <span> 64,003 </span>
                                    <span title="Nov-02-2024 03:43">11-02 15:43</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-326" title="Baby Steps Chapter 326">Chapter 326</a></span>
                                    <span> 67,605 </span>
                                    <span title="Nov-02-2024 03:43">11-02 15:43</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-325" title="Baby Steps Chapter 325">Chapter 325</a></span>
                                    <span> 63,705 </span>
                                    <span title="Nov-02-2024 03:43">11-02 15:43</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-324" title="Baby Steps Chapter 324">Chapter 324</a></span>
                                    <span> 65,204 </span>
                                    <span title="Nov-02-2024 03:43">11-02 15:43</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-323" title="Baby Steps Chapter 323">Chapter 323</a></span>
                                    <span> 57,505 </span>
                                    <span title="Nov-02-2024 03:42">11-02 15:42</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-322" title="Baby Steps Chapter 322">Chapter 322</a></span>
                                    <span> 57,905 </span>
                                    <span title="Nov-02-2024 03:42">11-02 15:42</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-321" title="Baby Steps Chapter 321">Chapter 321</a></span>
                                    <span> 68,704 </span>
                                    <span title="Nov-02-2024 03:42">11-02 15:42</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-320" title="Baby Steps Chapter 320">Chapter 320</a></span>
                                    <span> 72,208 </span>
                                    <span title="Nov-02-2024 03:41">11-02 15:41</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-319" title="Baby Steps Chapter 319">Chapter 319</a></span>
                                    <span> 69,308 </span>
                                    <span title="Nov-02-2024 03:41">11-02 15:41</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-318" title="Baby Steps Chapter 318">Chapter 318</a></span>
                                    <span> 72,005 </span>
                                    <span title="Nov-02-2024 03:41">11-02 15:41</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-317" title="Baby Steps Chapter 317">Chapter 317</a></span>
                                    <span> 74,005 </span>
                                    <span title="Nov-02-2024 03:40">11-02 15:40</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-316" title="Baby Steps Chapter 316">Chapter 316</a></span>
                                    <span> 74,804 </span>
                                    <span title="Nov-02-2024 03:40">11-02 15:40</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-315" title="Baby Steps Chapter 315">Chapter 315</a></span>
                                    <span> 77,104 </span>
                                    <span title="Nov-02-2024 03:40">11-02 15:40</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-314" title="Baby Steps Chapter 314">Chapter 314</a></span>
                                    <span> 75,804 </span>
                                    <span title="Nov-02-2024 03:39">11-02 15:39</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-313" title="Baby Steps Chapter 313">Chapter 313</a></span>
                                    <span> 72,504 </span>
                                    <span title="Nov-02-2024 03:39">11-02 15:39</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-312" title="Baby Steps Chapter 312">Chapter 312</a></span>
                                    <span> 70,804 </span>
                                    <span title="Nov-02-2024 03:39">11-02 15:39</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-311" title="Baby Steps Chapter 311">Chapter 311</a></span>
                                    <span> 79,504 </span>
                                    <span title="Nov-02-2024 03:38">11-02 15:38</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-310" title="Baby Steps Chapter 310">Chapter 310</a></span>
                                    <span> 68,003 </span>
                                    <span title="Nov-02-2024 03:38">11-02 15:38</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-309" title="Baby Steps Chapter 309">Chapter 309</a></span>
                                    <span> 73,604 </span>
                                    <span title="Nov-02-2024 03:38">11-02 15:38</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-308" title="Baby Steps Chapter 308">Chapter 308</a></span>
                                    <span> 68,103 </span>
                                    <span title="Nov-02-2024 03:38">11-02 15:38</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-307" title="Baby Steps Chapter 307">Chapter 307</a></span>
                                    <span> 64,303 </span>
                                    <span title="Nov-02-2024 03:37">11-02 15:37</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-306" title="Baby Steps Chapter 306">Chapter 306</a></span>
                                    <span> 66,505 </span>
                                    <span title="Nov-02-2024 03:37">11-02 15:37</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-305" title="Baby Steps Chapter 305">Chapter 305</a></span>
                                    <span> 70,705 </span>
                                    <span title="Nov-02-2024 03:37">11-02 15:37</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-304" title="Baby Steps Chapter 304">Chapter 304</a></span>
                                    <span> 64,204 </span>
                                    <span title="Nov-02-2024 03:36">11-02 15:36</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-303" title="Baby Steps Chapter 303">Chapter 303</a></span>
                                    <span> 64,506 </span>
                                    <span title="Nov-02-2024 03:36">11-02 15:36</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-302" title="Baby Steps Chapter 302">Chapter 302</a></span>
                                    <span> 62,613 </span>
                                    <span title="Nov-02-2024 03:36">11-02 15:36</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-301" title="Baby Steps Chapter 301">Chapter 301</a></span>
                                    <span> 62,602 </span>
                                    <span title="Nov-02-2024 03:35">11-02 15:35</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-300" title="Baby Steps Chapter 300">Chapter 300</a></span>
                                    <span> 67,106 </span>
                                    <span title="Nov-02-2024 03:35">11-02 15:35</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-299" title="Baby Steps Chapter 299">Chapter 299</a></span>
                                    <span> 62,001 </span>
                                    <span title="Nov-02-2024 03:35">11-02 15:35</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-298" title="Baby Steps Chapter 298">Chapter 298</a></span>
                                    <span> 62,302 </span>
                                    <span title="Nov-02-2024 03:35">11-02 15:35</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-297-5" title="Baby Steps Chapter 297.5">Chapter 297.5</a></span>
                                    <span> 62,402 </span>
                                    <span title="Nov-02-2024 03:35">11-02 15:35</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-297" title="Baby Steps Chapter 297">Chapter 297</a></span>
                                    <span> 67,602 </span>
                                    <span title="Nov-02-2024 03:34">11-02 15:34</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-296" title="Baby Steps Chapter 296">Chapter 296</a></span>
                                    <span> 68,902 </span>
                                    <span title="Nov-02-2024 03:34">11-02 15:34</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-295" title="Baby Steps Chapter 295">Chapter 295</a></span>
                                    <span> 68,202 </span>
                                    <span title="Nov-02-2024 03:34">11-02 15:34</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-294" title="Baby Steps Chapter 294">Chapter 294</a></span>
                                    <span> 69,502 </span>
                                    <span title="Nov-02-2024 03:34">11-02 15:34</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-293" title="Baby Steps Chapter 293">Chapter 293</a></span>
                                    <span> 68,102 </span>
                                    <span title="Nov-02-2024 03:33">11-02 15:33</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-292" title="Baby Steps Chapter 292">Chapter 292</a></span>
                                    <span> 67,002 </span>
                                    <span title="Nov-02-2024 03:33">11-02 15:33</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-291" title="Baby Steps Chapter 291">Chapter 291</a></span>
                                    <span> 61,902 </span>
                                    <span title="Nov-02-2024 03:33">11-02 15:33</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-290" title="Baby Steps Chapter 290">Chapter 290</a></span>
                                    <span> 61,702 </span>
                                    <span title="Nov-02-2024 03:33">11-02 15:33</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-289" title="Baby Steps Chapter 289">Chapter 289</a></span>
                                    <span> 56,101 </span>
                                    <span title="Nov-02-2024 03:32">11-02 15:32</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-288" title="Baby Steps Chapter 288">Chapter 288</a></span>
                                    <span> 56,201 </span>
                                    <span title="Nov-02-2024 03:32">11-02 15:32</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-287" title="Baby Steps Chapter 287">Chapter 287</a></span>
                                    <span> 53,601 </span>
                                    <span title="Nov-02-2024 03:32">11-02 15:32</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-286" title="Baby Steps Chapter 286">Chapter 286</a></span>
                                    <span> 54,201 </span>
                                    <span title="Nov-02-2024 03:31">11-02 15:31</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-285" title="Baby Steps Chapter 285">Chapter 285</a></span>
                                    <span> 55,202 </span>
                                    <span title="Nov-02-2024 03:31">11-02 15:31</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-284" title="Baby Steps Chapter 284">Chapter 284</a></span>
                                    <span> 61,102 </span>
                                    <span title="Nov-02-2024 03:31">11-02 15:31</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-283" title="Baby Steps Chapter 283">Chapter 283</a></span>
                                    <span> 55,601 </span>
                                    <span title="Nov-02-2024 03:31">11-02 15:31</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-282" title="Baby Steps Chapter 282">Chapter 282</a></span>
                                    <span> 55,501 </span>
                                    <span title="Nov-02-2024 03:30">11-02 15:30</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-281" title="Baby Steps Chapter 281">Chapter 281</a></span>
                                    <span> 55,601 </span>
                                    <span title="Nov-02-2024 03:30">11-02 15:30</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-280" title="Baby Steps Chapter 280">Chapter 280</a></span>
                                    <span> 59,303 </span>
                                    <span title="Nov-02-2024 03:30">11-02 15:30</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-279" title="Baby Steps Chapter 279">Chapter 279</a></span>
                                    <span> 59,502 </span>
                                    <span title="Nov-02-2024 03:29">11-02 15:29</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-278" title="Baby Steps Chapter 278">Chapter 278</a></span>
                                    <span> 59,702 </span>
                                    <span title="Nov-02-2024 03:29">11-02 15:29</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-277" title="Baby Steps Chapter 277">Chapter 277</a></span>
                                    <span> 61,802 </span>
                                    <span title="Nov-02-2024 03:29">11-02 15:29</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-276" title="Baby Steps Chapter 276">Chapter 276</a></span>
                                    <span> 63,902 </span>
                                    <span title="Nov-02-2024 03:29">11-02 15:29</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-275" title="Baby Steps Chapter 275">Chapter 275</a></span>
                                    <span> 67,902 </span>
                                    <span title="Nov-02-2024 03:28">11-02 15:28</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-274" title="Baby Steps Chapter 274">Chapter 274</a></span>
                                    <span> 60,702 </span>
                                    <span title="Nov-02-2024 03:28">11-02 15:28</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-273" title="Baby Steps Chapter 273">Chapter 273</a></span>
                                    <span> 62,002 </span>
                                    <span title="Nov-02-2024 03:28">11-02 15:28</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-272" title="Baby Steps Chapter 272">Chapter 272</a></span>
                                    <span> 62,602 </span>
                                    <span title="Nov-02-2024 03:27">11-02 15:27</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-271" title="Baby Steps Chapter 271">Chapter 271</a></span>
                                    <span> 62,302 </span>
                                    <span title="Nov-02-2024 03:27">11-02 15:27</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-270" title="Baby Steps Chapter 270">Chapter 270</a></span>
                                    <span> 63,203 </span>
                                    <span title="Nov-02-2024 03:27">11-02 15:27</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-269" title="Baby Steps Chapter 269">Chapter 269</a></span>
                                    <span> 63,602 </span>
                                    <span title="Nov-02-2024 03:26">11-02 15:26</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-268" title="Baby Steps Chapter 268">Chapter 268</a></span>
                                    <span> 60,403 </span>
                                    <span title="Nov-02-2024 03:26">11-02 15:26</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-267" title="Baby Steps Chapter 267">Chapter 267</a></span>
                                    <span> 61,302 </span>
                                    <span title="Nov-02-2024 03:26">11-02 15:26</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-266" title="Baby Steps Chapter 266">Chapter 266</a></span>
                                    <span> 63,702 </span>
                                    <span title="Nov-02-2024 03:26">11-02 15:26</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-265" title="Baby Steps Chapter 265">Chapter 265</a></span>
                                    <span> 58,302 </span>
                                    <span title="Nov-02-2024 03:26">11-02 15:26</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-264" title="Baby Steps Chapter 264">Chapter 264</a></span>
                                    <span> 59,501 </span>
                                    <span title="Nov-02-2024 03:25">11-02 15:25</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-263" title="Baby Steps Chapter 263">Chapter 263</a></span>
                                    <span> 62,402 </span>
                                    <span title="Nov-02-2024 03:25">11-02 15:25</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-262" title="Baby Steps Chapter 262">Chapter 262</a></span>
                                    <span> 62,602 </span>
                                    <span title="Nov-02-2024 03:25">11-02 15:25</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-261" title="Baby Steps Chapter 261">Chapter 261</a></span>
                                    <span> 63,102 </span>
                                    <span title="Nov-02-2024 03:25">11-02 15:25</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-260" title="Baby Steps Chapter 260">Chapter 260</a></span>
                                    <span> 58,401 </span>
                                    <span title="Nov-02-2024 03:24">11-02 15:24</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-259" title="Baby Steps Chapter 259">Chapter 259</a></span>
                                    <span> 56,202 </span>
                                    <span title="Nov-02-2024 03:24">11-02 15:24</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-258" title="Baby Steps Chapter 258">Chapter 258</a></span>
                                    <span> 52,801 </span>
                                    <span title="Nov-02-2024 03:24">11-02 15:24</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-257" title="Baby Steps Chapter 257">Chapter 257</a></span>
                                    <span> 53,602 </span>
                                    <span title="Nov-02-2024 03:23">11-02 15:23</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-256" title="Baby Steps Chapter 256">Chapter 256</a></span>
                                    <span> 55,602 </span>
                                    <span title="Nov-02-2024 03:23">11-02 15:23</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-255" title="Baby Steps Chapter 255">Chapter 255</a></span>
                                    <span> 51,402 </span>
                                    <span title="Nov-02-2024 03:23">11-02 15:23</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-254" title="Baby Steps Chapter 254">Chapter 254</a></span>
                                    <span> 51,302 </span>
                                    <span title="Nov-02-2024 03:23">11-02 15:23</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-253" title="Baby Steps Chapter 253">Chapter 253</a></span>
                                    <span> 50,901 </span>
                                    <span title="Nov-02-2024 03:22">11-02 15:22</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-252" title="Baby Steps Chapter 252">Chapter 252</a></span>
                                    <span> 50,601 </span>
                                    <span title="Nov-02-2024 03:22">11-02 15:22</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-251" title="Baby Steps Chapter 251">Chapter 251</a></span>
                                    <span> 53,202 </span>
                                    <span title="Nov-02-2024 03:22">11-02 15:22</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-250" title="Baby Steps Chapter 250">Chapter 250</a></span>
                                    <span> 53,401 </span>
                                    <span title="Nov-02-2024 03:22">11-02 15:22</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-249" title="Baby Steps Chapter 249">Chapter 249</a></span>
                                    <span> 50,303 </span>
                                    <span title="Nov-02-2024 03:21">11-02 15:21</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-248" title="Baby Steps Chapter 248">Chapter 248</a></span>
                                    <span> 50,602 </span>
                                    <span title="Nov-02-2024 03:21">11-02 15:21</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-247" title="Baby Steps Chapter 247">Chapter 247</a></span>
                                    <span> 50,202 </span>
                                    <span title="Nov-02-2024 03:21">11-02 15:21</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-246" title="Baby Steps Chapter 246">Chapter 246</a></span>
                                    <span> 49,302 </span>
                                    <span title="Nov-02-2024 03:21">11-02 15:21</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-245" title="Baby Steps Chapter 245">Chapter 245</a></span>
                                    <span> 49,002 </span>
                                    <span title="Nov-02-2024 03:20">11-02 15:20</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-244" title="Baby Steps Chapter 244">Chapter 244</a></span>
                                    <span> 49,302 </span>
                                    <span title="Nov-02-2024 03:20">11-02 15:20</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-243" title="Baby Steps Chapter 243">Chapter 243</a></span>
                                    <span> 50,001 </span>
                                    <span title="Nov-02-2024 03:20">11-02 15:20</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-242" title="Baby Steps Chapter 242">Chapter 242</a></span>
                                    <span> 49,901 </span>
                                    <span title="Nov-02-2024 03:20">11-02 15:20</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-241" title="Baby Steps Chapter 241">Chapter 241</a></span>
                                    <span> 51,801 </span>
                                    <span title="Nov-02-2024 03:19">11-02 15:19</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-240-5" title="Baby Steps Chapter 240.5">Chapter 240.5</a></span>
                                    <span> 49,201 </span>
                                    <span title="Nov-02-2024 03:19">11-02 15:19</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-240" title="Baby Steps Chapter 240">Chapter 240</a></span>
                                    <span> 49,004 </span>
                                    <span title="Nov-02-2024 03:19">11-02 15:19</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-239" title="Baby Steps Chapter 239">Chapter 239</a></span>
                                    <span> 48,902 </span>
                                    <span title="Nov-02-2024 03:19">11-02 15:19</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-238" title="Baby Steps Chapter 238">Chapter 238</a></span>
                                    <span> 49,301 </span>
                                    <span title="Nov-02-2024 03:18">11-02 15:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-237" title="Baby Steps Chapter 237">Chapter 237</a></span>
                                    <span> 51,405 </span>
                                    <span title="Nov-02-2024 03:18">11-02 15:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-236" title="Baby Steps Chapter 236">Chapter 236</a></span>
                                    <span> 60,904 </span>
                                    <span title="Nov-02-2024 03:18">11-02 15:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-235" title="Baby Steps Chapter 235">Chapter 235</a></span>
                                    <span> 63,605 </span>
                                    <span title="Nov-02-2024 03:18">11-02 15:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-234" title="Baby Steps Chapter 234">Chapter 234</a></span>
                                    <span> 67,203 </span>
                                    <span title="Nov-02-2024 03:17">11-02 15:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-233" title="Baby Steps Chapter 233">Chapter 233</a></span>
                                    <span> 63,902 </span>
                                    <span title="Nov-02-2024 03:17">11-02 15:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-232" title="Baby Steps Chapter 232">Chapter 232</a></span>
                                    <span> 59,601 </span>
                                    <span title="Nov-02-2024 03:17">11-02 15:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-231" title="Baby Steps Chapter 231">Chapter 231</a></span>
                                    <span> 58,001 </span>
                                    <span title="Nov-02-2024 03:17">11-02 15:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-230" title="Baby Steps Chapter 230">Chapter 230</a></span>
                                    <span> 57,302 </span>
                                    <span title="Nov-02-2024 03:16">11-02 15:16</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-229" title="Baby Steps Chapter 229">Chapter 229</a></span>
                                    <span> 57,301 </span>
                                    <span title="Nov-02-2024 03:16">11-02 15:16</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-228" title="Baby Steps Chapter 228">Chapter 228</a></span>
                                    <span> 58,900 </span>
                                    <span title="Nov-02-2024 03:16">11-02 15:16</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-227" title="Baby Steps Chapter 227">Chapter 227</a></span>
                                    <span> 56,402 </span>
                                    <span title="Nov-02-2024 03:16">11-02 15:16</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-226" title="Baby Steps Chapter 226">Chapter 226</a></span>
                                    <span> 54,303 </span>
                                    <span title="Nov-02-2024 03:15">11-02 15:15</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-225" title="Baby Steps Chapter 225">Chapter 225</a></span>
                                    <span> 54,202 </span>
                                    <span title="Nov-02-2024 03:15">11-02 15:15</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-224" title="Baby Steps Chapter 224">Chapter 224</a></span>
                                    <span> 54,402 </span>
                                    <span title="Nov-02-2024 03:15">11-02 15:15</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-223" title="Baby Steps Chapter 223">Chapter 223</a></span>
                                    <span> 53,101 </span>
                                    <span title="Nov-02-2024 03:15">11-02 15:15</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-222" title="Baby Steps Chapter 222">Chapter 222</a></span>
                                    <span> 53,205 </span>
                                    <span title="Nov-02-2024 03:14">11-02 15:14</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-221" title="Baby Steps Chapter 221">Chapter 221</a></span>
                                    <span> 53,502 </span>
                                    <span title="Nov-02-2024 03:14">11-02 15:14</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-220" title="Baby Steps Chapter 220">Chapter 220</a></span>
                                    <span> 52,903 </span>
                                    <span title="Nov-02-2024 03:14">11-02 15:14</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-219" title="Baby Steps Chapter 219">Chapter 219</a></span>
                                    <span> 52,802 </span>
                                    <span title="Nov-02-2024 03:13">11-02 15:13</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-218" title="Baby Steps Chapter 218">Chapter 218</a></span>
                                    <span> 50,901 </span>
                                    <span title="Nov-02-2024 03:13">11-02 15:13</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-217" title="Baby Steps Chapter 217">Chapter 217</a></span>
                                    <span> 52,801 </span>
                                    <span title="Nov-02-2024 03:13">11-02 15:13</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-216" title="Baby Steps Chapter 216">Chapter 216</a></span>
                                    <span> 52,801 </span>
                                    <span title="Nov-02-2024 03:13">11-02 15:13</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-215" title="Baby Steps Chapter 215">Chapter 215</a></span>
                                    <span> 53,702 </span>
                                    <span title="Nov-02-2024 03:12">11-02 15:12</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-214" title="Baby Steps Chapter 214">Chapter 214</a></span>
                                    <span> 55,903 </span>
                                    <span title="Nov-02-2024 03:12">11-02 15:12</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-213" title="Baby Steps Chapter 213">Chapter 213</a></span>
                                    <span> 58,201 </span>
                                    <span title="Nov-02-2024 03:12">11-02 15:12</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-212" title="Baby Steps Chapter 212">Chapter 212</a></span>
                                    <span> 62,302 </span>
                                    <span title="Nov-02-2024 03:12">11-02 15:12</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-211" title="Baby Steps Chapter 211">Chapter 211</a></span>
                                    <span> 62,607 </span>
                                    <span title="Nov-02-2024 03:11">11-02 15:11</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-210" title="Baby Steps Chapter 210">Chapter 210</a></span>
                                    <span> 64,708 </span>
                                    <span title="Nov-02-2024 03:11">11-02 15:11</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-209" title="Baby Steps Chapter 209">Chapter 209</a></span>
                                    <span> 63,004 </span>
                                    <span title="Nov-02-2024 03:11">11-02 15:11</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-208" title="Baby Steps Chapter 208">Chapter 208</a></span>
                                    <span> 59,205 </span>
                                    <span title="Nov-02-2024 03:11">11-02 15:11</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-207" title="Baby Steps Chapter 207">Chapter 207</a></span>
                                    <span> 53,705 </span>
                                    <span title="Nov-02-2024 03:10">11-02 15:10</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-206" title="Baby Steps Chapter 206">Chapter 206</a></span>
                                    <span> 54,406 </span>
                                    <span title="Nov-02-2024 03:10">11-02 15:10</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-205" title="Baby Steps Chapter 205">Chapter 205</a></span>
                                    <span> 53,004 </span>
                                    <span title="Nov-02-2024 03:10">11-02 15:10</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-204" title="Baby Steps Chapter 204">Chapter 204</a></span>
                                    <span> 54,411 </span>
                                    <span title="Nov-02-2024 03:10">11-02 15:10</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-203" title="Baby Steps Chapter 203">Chapter 203</a></span>
                                    <span> 53,906 </span>
                                    <span title="Nov-02-2024 03:09">11-02 15:09</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-202" title="Baby Steps Chapter 202">Chapter 202</a></span>
                                    <span> 55,510 </span>
                                    <span title="Nov-02-2024 03:09">11-02 15:09</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-201" title="Baby Steps Chapter 201">Chapter 201</a></span>
                                    <span> 53,206 </span>
                                    <span title="Nov-02-2024 03:09">11-02 15:09</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-200" title="Baby Steps Chapter 200">Chapter 200</a></span>
                                    <span> 54,705 </span>
                                    <span title="Nov-02-2024 03:08">11-02 15:08</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-199" title="Baby Steps Chapter 199">Chapter 199</a></span>
                                    <span> 52,602 </span>
                                    <span title="Nov-02-2024 03:08">11-02 15:08</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-198" title="Baby Steps Chapter 198">Chapter 198</a></span>
                                    <span> 52,902 </span>
                                    <span title="Nov-02-2024 03:08">11-02 15:08</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-197" title="Baby Steps Chapter 197">Chapter 197</a></span>
                                    <span> 51,504 </span>
                                    <span title="Nov-02-2024 03:08">11-02 15:08</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-196" title="Baby Steps Chapter 196">Chapter 196</a></span>
                                    <span> 52,603 </span>
                                    <span title="Nov-02-2024 03:07">11-02 15:07</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-195" title="Baby Steps Chapter 195">Chapter 195</a></span>
                                    <span> 52,505 </span>
                                    <span title="Nov-02-2024 03:07">11-02 15:07</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-194" title="Baby Steps Chapter 194">Chapter 194</a></span>
                                    <span> 56,805 </span>
                                    <span title="Nov-02-2024 03:07">11-02 15:07</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-193" title="Baby Steps Chapter 193">Chapter 193</a></span>
                                    <span> 57,805 </span>
                                    <span title="Nov-02-2024 03:07">11-02 15:07</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-192" title="Baby Steps Chapter 192">Chapter 192</a></span>
                                    <span> 59,809 </span>
                                    <span title="Nov-02-2024 03:06">11-02 15:06</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-191" title="Baby Steps Chapter 191">Chapter 191</a></span>
                                    <span> 58,604 </span>
                                    <span title="Nov-02-2024 03:06">11-02 15:06</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-190-1" title="Baby Steps Chapter 190.1">Chapter 190.1</a></span>
                                    <span> 55,200 </span>
                                    <span title="Nov-02-2024 03:06">11-02 15:06</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-190" title="Baby Steps Chapter 190">Chapter 190</a></span>
                                    <span> 57,706 </span>
                                    <span title="Nov-02-2024 03:05">11-02 15:05</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-189" title="Baby Steps Chapter 189">Chapter 189</a></span>
                                    <span> 58,005 </span>
                                    <span title="Nov-02-2024 03:05">11-02 15:05</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-188" title="Baby Steps Chapter 188">Chapter 188</a></span>
                                    <span> 59,205 </span>
                                    <span title="Nov-02-2024 03:05">11-02 15:05</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-187" title="Baby Steps Chapter 187">Chapter 187</a></span>
                                    <span> 58,406 </span>
                                    <span title="Nov-02-2024 03:05">11-02 15:05</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-186" title="Baby Steps Chapter 186">Chapter 186</a></span>
                                    <span> 59,605 </span>
                                    <span title="Nov-02-2024 03:05">11-02 15:05</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-185" title="Baby Steps Chapter 185">Chapter 185</a></span>
                                    <span> 61,006 </span>
                                    <span title="Nov-02-2024 03:04">11-02 15:04</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-184" title="Baby Steps Chapter 184">Chapter 184</a></span>
                                    <span> 61,406 </span>
                                    <span title="Nov-02-2024 03:04">11-02 15:04</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-183" title="Baby Steps Chapter 183">Chapter 183</a></span>
                                    <span> 65,815 </span>
                                    <span title="Nov-02-2024 03:04">11-02 15:04</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-182" title="Baby Steps Chapter 182">Chapter 182</a></span>
                                    <span> 68,307 </span>
                                    <span title="Nov-02-2024 03:04">11-02 15:04</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-181" title="Baby Steps Chapter 181">Chapter 181</a></span>
                                    <span> 65,013 </span>
                                    <span title="Nov-02-2024 03:03">11-02 15:03</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-180" title="Baby Steps Chapter 180">Chapter 180</a></span>
                                    <span> 50,411 </span>
                                    <span title="Nov-02-2024 03:03">11-02 15:03</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-179" title="Baby Steps Chapter 179">Chapter 179</a></span>
                                    <span> 45,204 </span>
                                    <span title="Nov-02-2024 03:03">11-02 15:03</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-178" title="Baby Steps Chapter 178">Chapter 178</a></span>
                                    <span> 43,605 </span>
                                    <span title="Nov-02-2024 03:02">11-02 15:02</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-177" title="Baby Steps Chapter 177">Chapter 177</a></span>
                                    <span> 43,503 </span>
                                    <span title="Nov-02-2024 03:02">11-02 15:02</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-176" title="Baby Steps Chapter 176">Chapter 176</a></span>
                                    <span> 43,004 </span>
                                    <span title="Nov-02-2024 03:02">11-02 15:02</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-175" title="Baby Steps Chapter 175">Chapter 175</a></span>
                                    <span> 44,802 </span>
                                    <span title="Nov-02-2024 03:01">11-02 15:01</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-174" title="Baby Steps Chapter 174">Chapter 174</a></span>
                                    <span> 42,706 </span>
                                    <span title="Nov-02-2024 03:01">11-02 15:01</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-173" title="Baby Steps Chapter 173">Chapter 173</a></span>
                                    <span> 42,804 </span>
                                    <span title="Nov-02-2024 03:01">11-02 15:01</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-172" title="Baby Steps Chapter 172">Chapter 172</a></span>
                                    <span> 43,603 </span>
                                    <span title="Nov-02-2024 03:01">11-02 15:01</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-171" title="Baby Steps Chapter 171">Chapter 171</a></span>
                                    <span> 43,704 </span>
                                    <span title="Nov-02-2024 03:00">11-02 15:00</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-170" title="Baby Steps Chapter 170">Chapter 170</a></span>
                                    <span> 43,203 </span>
                                    <span title="Nov-02-2024 03:00">11-02 15:00</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-169" title="Baby Steps Chapter 169">Chapter 169</a></span>
                                    <span> 42,904 </span>
                                    <span title="Nov-02-2024 03:00">11-02 15:00</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-168" title="Baby Steps Chapter 168">Chapter 168</a></span>
                                    <span> 43,004 </span>
                                    <span title="Nov-02-2024 03:00">11-02 15:00</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-167" title="Baby Steps Chapter 167">Chapter 167</a></span>
                                    <span> 47,304 </span>
                                    <span title="Nov-02-2024 02:59">11-02 14:59</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-166" title="Baby Steps Chapter 166">Chapter 166</a></span>
                                    <span> 50,502 </span>
                                    <span title="Nov-02-2024 02:59">11-02 14:59</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-165" title="Baby Steps Chapter 165">Chapter 165</a></span>
                                    <span> 54,202 </span>
                                    <span title="Nov-02-2024 02:59">11-02 14:59</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-164" title="Baby Steps Chapter 164">Chapter 164</a></span>
                                    <span> 45,803 </span>
                                    <span title="Nov-02-2024 02:58">11-02 14:58</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-163" title="Baby Steps Chapter 163">Chapter 163</a></span>
                                    <span> 43,803 </span>
                                    <span title="Nov-02-2024 02:58">11-02 14:58</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-162" title="Baby Steps Chapter 162">Chapter 162</a></span>
                                    <span> 43,902 </span>
                                    <span title="Nov-02-2024 02:58">11-02 14:58</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-161" title="Baby Steps Chapter 161">Chapter 161</a></span>
                                    <span> 41,703 </span>
                                    <span title="Nov-02-2024 02:58">11-02 14:58</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-160" title="Baby Steps Chapter 160">Chapter 160</a></span>
                                    <span> 43,905 </span>
                                    <span title="Nov-02-2024 02:57">11-02 14:57</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-159" title="Baby Steps Chapter 159">Chapter 159</a></span>
                                    <span> 42,902 </span>
                                    <span title="Nov-02-2024 02:57">11-02 14:57</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-158" title="Baby Steps Chapter 158">Chapter 158</a></span>
                                    <span> 43,302 </span>
                                    <span title="Nov-02-2024 02:57">11-02 14:57</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-157" title="Baby Steps Chapter 157">Chapter 157</a></span>
                                    <span> 46,701 </span>
                                    <span title="Nov-02-2024 02:57">11-02 14:57</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-156" title="Baby Steps Chapter 156">Chapter 156</a></span>
                                    <span> 50,502 </span>
                                    <span title="Nov-02-2024 02:56">11-02 14:56</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-155" title="Baby Steps Chapter 155">Chapter 155</a></span>
                                    <span> 51,101 </span>
                                    <span title="Nov-02-2024 02:56">11-02 14:56</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-154" title="Baby Steps Chapter 154">Chapter 154</a></span>
                                    <span> 47,000 </span>
                                    <span title="Nov-02-2024 02:56">11-02 14:56</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-153" title="Baby Steps Chapter 153">Chapter 153</a></span>
                                    <span> 47,600 </span>
                                    <span title="Nov-02-2024 02:56">11-02 14:56</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-152" title="Baby Steps Chapter 152">Chapter 152</a></span>
                                    <span> 45,300 </span>
                                    <span title="Nov-02-2024 02:55">11-02 14:55</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-151" title="Baby Steps Chapter 151">Chapter 151</a></span>
                                    <span> 44,402 </span>
                                    <span title="Nov-02-2024 02:55">11-02 14:55</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-150" title="Baby Steps Chapter 150">Chapter 150</a></span>
                                    <span> 43,706 </span>
                                    <span title="Nov-02-2024 02:55">11-02 14:55</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-149" title="Baby Steps Chapter 149">Chapter 149</a></span>
                                    <span> 43,501 </span>
                                    <span title="Nov-02-2024 02:55">11-02 14:55</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-148" title="Baby Steps Chapter 148">Chapter 148</a></span>
                                    <span> 43,501 </span>
                                    <span title="Nov-02-2024 02:54">11-02 14:54</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-147" title="Baby Steps Chapter 147">Chapter 147</a></span>
                                    <span> 43,301 </span>
                                    <span title="Nov-02-2024 02:54">11-02 14:54</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-146" title="Baby Steps Chapter 146">Chapter 146</a></span>
                                    <span> 43,701 </span>
                                    <span title="Nov-02-2024 02:54">11-02 14:54</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-145" title="Baby Steps Chapter 145">Chapter 145</a></span>
                                    <span> 43,302 </span>
                                    <span title="Nov-02-2024 02:54">11-02 14:54</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-144" title="Baby Steps Chapter 144">Chapter 144</a></span>
                                    <span> 43,304 </span>
                                    <span title="Nov-02-2024 02:53">11-02 14:53</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-143" title="Baby Steps Chapter 143">Chapter 143</a></span>
                                    <span> 43,001 </span>
                                    <span title="Nov-02-2024 02:53">11-02 14:53</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-142" title="Baby Steps Chapter 142">Chapter 142</a></span>
                                    <span> 42,502 </span>
                                    <span title="Nov-02-2024 02:53">11-02 14:53</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-141" title="Baby Steps Chapter 141">Chapter 141</a></span>
                                    <span> 42,903 </span>
                                    <span title="Nov-02-2024 02:52">11-02 14:52</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-140" title="Baby Steps Chapter 140">Chapter 140</a></span>
                                    <span> 43,701 </span>
                                    <span title="Nov-02-2024 02:52">11-02 14:52</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-139" title="Baby Steps Chapter 139">Chapter 139</a></span>
                                    <span> 46,501 </span>
                                    <span title="Nov-02-2024 02:52">11-02 14:52</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-138" title="Baby Steps Chapter 138">Chapter 138</a></span>
                                    <span> 47,803 </span>
                                    <span title="Nov-02-2024 02:52">11-02 14:52</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-137" title="Baby Steps Chapter 137">Chapter 137</a></span>
                                    <span> 47,003 </span>
                                    <span title="Nov-02-2024 02:51">11-02 14:51</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-136" title="Baby Steps Chapter 136">Chapter 136</a></span>
                                    <span> 49,402 </span>
                                    <span title="Nov-02-2024 02:51">11-02 14:51</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-135" title="Baby Steps Chapter 135">Chapter 135</a></span>
                                    <span> 51,706 </span>
                                    <span title="Nov-02-2024 02:51">11-02 14:51</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-134" title="Baby Steps Chapter 134">Chapter 134</a></span>
                                    <span> 48,201 </span>
                                    <span title="Nov-02-2024 02:50">11-02 14:50</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-133" title="Baby Steps Chapter 133">Chapter 133</a></span>
                                    <span> 48,001 </span>
                                    <span title="Nov-02-2024 02:50">11-02 14:50</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-132" title="Baby Steps Chapter 132">Chapter 132</a></span>
                                    <span> 48,601 </span>
                                    <span title="Nov-02-2024 02:50">11-02 14:50</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-131-5" title="Baby Steps Chapter 131.5">Chapter 131.5</a></span>
                                    <span> 45,000 </span>
                                    <span title="Nov-02-2024 02:50">11-02 14:50</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-131" title="Baby Steps Chapter 131">Chapter 131</a></span>
                                    <span> 48,602 </span>
                                    <span title="Nov-02-2024 02:49">11-02 14:49</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-130" title="Baby Steps Chapter 130">Chapter 130</a></span>
                                    <span> 47,501 </span>
                                    <span title="Nov-02-2024 02:49">11-02 14:49</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-129" title="Baby Steps Chapter 129">Chapter 129</a></span>
                                    <span> 48,202 </span>
                                    <span title="Nov-02-2024 02:49">11-02 14:49</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-128" title="Baby Steps Chapter 128">Chapter 128</a></span>
                                    <span> 45,601 </span>
                                    <span title="Nov-02-2024 02:48">11-02 14:48</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-127" title="Baby Steps Chapter 127">Chapter 127</a></span>
                                    <span> 44,001 </span>
                                    <span title="Nov-02-2024 02:48">11-02 14:48</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-126" title="Baby Steps Chapter 126">Chapter 126</a></span>
                                    <span> 43,502 </span>
                                    <span title="Nov-02-2024 02:48">11-02 14:48</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-125" title="Baby Steps Chapter 125">Chapter 125</a></span>
                                    <span> 43,301 </span>
                                    <span title="Nov-02-2024 02:48">11-02 14:48</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-124" title="Baby Steps Chapter 124">Chapter 124</a></span>
                                    <span> 42,701 </span>
                                    <span title="Nov-02-2024 02:47">11-02 14:47</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-123" title="Baby Steps Chapter 123">Chapter 123</a></span>
                                    <span> 42,600 </span>
                                    <span title="Nov-02-2024 02:47">11-02 14:47</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-122" title="Baby Steps Chapter 122">Chapter 122</a></span>
                                    <span> 43,601 </span>
                                    <span title="Nov-02-2024 02:47">11-02 14:47</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-121" title="Baby Steps Chapter 121">Chapter 121</a></span>
                                    <span> 42,701 </span>
                                    <span title="Nov-02-2024 02:47">11-02 14:47</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-120" title="Baby Steps Chapter 120">Chapter 120</a></span>
                                    <span> 42,603 </span>
                                    <span title="Nov-02-2024 02:46">11-02 14:46</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-119" title="Baby Steps Chapter 119">Chapter 119</a></span>
                                    <span> 43,001 </span>
                                    <span title="Nov-02-2024 02:46">11-02 14:46</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-118" title="Baby Steps Chapter 118">Chapter 118</a></span>
                                    <span> 42,701 </span>
                                    <span title="Nov-02-2024 02:46">11-02 14:46</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-117" title="Baby Steps Chapter 117">Chapter 117</a></span>
                                    <span> 43,201 </span>
                                    <span title="Nov-02-2024 02:46">11-02 14:46</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-116" title="Baby Steps Chapter 116">Chapter 116</a></span>
                                    <span> 43,702 </span>
                                    <span title="Nov-02-2024 02:45">11-02 14:45</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-115" title="Baby Steps Chapter 115">Chapter 115</a></span>
                                    <span> 44,902 </span>
                                    <span title="Nov-02-2024 02:45">11-02 14:45</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-114" title="Baby Steps Chapter 114">Chapter 114</a></span>
                                    <span> 47,202 </span>
                                    <span title="Nov-02-2024 02:45">11-02 14:45</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-113" title="Baby Steps Chapter 113">Chapter 113</a></span>
                                    <span> 46,201 </span>
                                    <span title="Nov-02-2024 02:45">11-02 14:45</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-112" title="Baby Steps Chapter 112">Chapter 112</a></span>
                                    <span> 48,401 </span>
                                    <span title="Nov-02-2024 02:44">11-02 14:44</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-111" title="Baby Steps Chapter 111">Chapter 111</a></span>
                                    <span> 46,501 </span>
                                    <span title="Nov-02-2024 02:44">11-02 14:44</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-110" title="Baby Steps Chapter 110">Chapter 110</a></span>
                                    <span> 46,702 </span>
                                    <span title="Nov-02-2024 02:44">11-02 14:44</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-109" title="Baby Steps Chapter 109">Chapter 109</a></span>
                                    <span> 45,301 </span>
                                    <span title="Nov-02-2024 02:43">11-02 14:43</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-108" title="Baby Steps Chapter 108">Chapter 108</a></span>
                                    <span> 44,602 </span>
                                    <span title="Nov-02-2024 02:43">11-02 14:43</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-107" title="Baby Steps Chapter 107">Chapter 107</a></span>
                                    <span> 45,402 </span>
                                    <span title="Nov-02-2024 02:43">11-02 14:43</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-106" title="Baby Steps Chapter 106">Chapter 106</a></span>
                                    <span> 44,402 </span>
                                    <span title="Nov-02-2024 02:42">11-02 14:42</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-105" title="Baby Steps Chapter 105">Chapter 105</a></span>
                                    <span> 47,401 </span>
                                    <span title="Nov-02-2024 02:42">11-02 14:42</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-104" title="Baby Steps Chapter 104">Chapter 104</a></span>
                                    <span> 47,601 </span>
                                    <span title="Nov-02-2024 02:42">11-02 14:42</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-103" title="Baby Steps Chapter 103">Chapter 103</a></span>
                                    <span> 47,801 </span>
                                    <span title="Nov-02-2024 02:42">11-02 14:42</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-102" title="Baby Steps Chapter 102">Chapter 102</a></span>
                                    <span> 47,705 </span>
                                    <span title="Nov-02-2024 02:41">11-02 14:41</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-101" title="Baby Steps Chapter 101">Chapter 101</a></span>
                                    <span> 48,001 </span>
                                    <span title="Nov-02-2024 02:41">11-02 14:41</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-100" title="Baby Steps Chapter 100">Chapter 100</a></span>
                                    <span> 48,804 </span>
                                    <span title="Nov-02-2024 02:41">11-02 14:41</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-99" title="Baby Steps Chapter 99">Chapter 99</a></span>
                                    <span> 47,701 </span>
                                    <span title="Nov-02-2024 02:40">11-02 14:40</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-98" title="Baby Steps Chapter 98">Chapter 98</a></span>
                                    <span> 46,802 </span>
                                    <span title="Nov-02-2024 02:40">11-02 14:40</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-97" title="Baby Steps Chapter 97">Chapter 97</a></span>
                                    <span> 46,101 </span>
                                    <span title="Nov-02-2024 02:40">11-02 14:40</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-96" title="Baby Steps Chapter 96">Chapter 96</a></span>
                                    <span> 45,701 </span>
                                    <span title="Nov-02-2024 02:39">11-02 14:39</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-95" title="Baby Steps Chapter 95">Chapter 95</a></span>
                                    <span> 46,302 </span>
                                    <span title="Nov-02-2024 02:39">11-02 14:39</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-94" title="Baby Steps Chapter 94">Chapter 94</a></span>
                                    <span> 46,701 </span>
                                    <span title="Nov-02-2024 02:39">11-02 14:39</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-93" title="Baby Steps Chapter 93">Chapter 93</a></span>
                                    <span> 47,201 </span>
                                    <span title="Nov-02-2024 02:38">11-02 14:38</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-92" title="Baby Steps Chapter 92">Chapter 92</a></span>
                                    <span> 48,701 </span>
                                    <span title="Nov-02-2024 02:38">11-02 14:38</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-91" title="Baby Steps Chapter 91">Chapter 91</a></span>
                                    <span> 49,600 </span>
                                    <span title="Nov-02-2024 02:38">11-02 14:38</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-90" title="Baby Steps Chapter 90">Chapter 90</a></span>
                                    <span> 49,401 </span>
                                    <span title="Nov-02-2024 02:38">11-02 14:38</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-89" title="Baby Steps Chapter 89">Chapter 89</a></span>
                                    <span> 46,701 </span>
                                    <span title="Nov-02-2024 02:37">11-02 14:37</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-88" title="Baby Steps Chapter 88">Chapter 88</a></span>
                                    <span> 45,801 </span>
                                    <span title="Nov-02-2024 02:37">11-02 14:37</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-87" title="Baby Steps Chapter 87">Chapter 87</a></span>
                                    <span> 45,901 </span>
                                    <span title="Nov-02-2024 02:37">11-02 14:37</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-86" title="Baby Steps Chapter 86">Chapter 86</a></span>
                                    <span> 45,901 </span>
                                    <span title="Nov-02-2024 02:36">11-02 14:36</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-85" title="Baby Steps Chapter 85">Chapter 85</a></span>
                                    <span> 46,103 </span>
                                    <span title="Nov-02-2024 02:36">11-02 14:36</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-84" title="Baby Steps Chapter 84">Chapter 84</a></span>
                                    <span> 46,501 </span>
                                    <span title="Nov-02-2024 02:36">11-02 14:36</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-83" title="Baby Steps Chapter 83">Chapter 83</a></span>
                                    <span> 46,302 </span>
                                    <span title="Nov-02-2024 02:36">11-02 14:36</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-82" title="Baby Steps Chapter 82">Chapter 82</a></span>
                                    <span> 45,802 </span>
                                    <span title="Nov-02-2024 02:35">11-02 14:35</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-81" title="Baby Steps Chapter 81">Chapter 81</a></span>
                                    <span> 46,302 </span>
                                    <span title="Nov-02-2024 02:35">11-02 14:35</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-80" title="Baby Steps Chapter 80">Chapter 80</a></span>
                                    <span> 45,001 </span>
                                    <span title="Nov-02-2024 02:35">11-02 14:35</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-79" title="Baby Steps Chapter 79">Chapter 79</a></span>
                                    <span> 45,901 </span>
                                    <span title="Nov-02-2024 02:35">11-02 14:35</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-78" title="Baby Steps Chapter 78">Chapter 78</a></span>
                                    <span> 45,901 </span>
                                    <span title="Nov-02-2024 02:34">11-02 14:34</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-77" title="Baby Steps Chapter 77">Chapter 77</a></span>
                                    <span> 45,601 </span>
                                    <span title="Nov-02-2024 02:34">11-02 14:34</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-76" title="Baby Steps Chapter 76">Chapter 76</a></span>
                                    <span> 45,302 </span>
                                    <span title="Nov-02-2024 02:34">11-02 14:34</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-75" title="Baby Steps Chapter 75">Chapter 75</a></span>
                                    <span> 44,601 </span>
                                    <span title="Nov-02-2024 02:33">11-02 14:33</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-74" title="Baby Steps Chapter 74">Chapter 74</a></span>
                                    <span> 46,603 </span>
                                    <span title="Nov-02-2024 02:33">11-02 14:33</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-73" title="Baby Steps Chapter 73">Chapter 73</a></span>
                                    <span> 48,104 </span>
                                    <span title="Nov-02-2024 02:33">11-02 14:33</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-72" title="Baby Steps Chapter 72">Chapter 72</a></span>
                                    <span> 47,804 </span>
                                    <span title="Nov-02-2024 02:32">11-02 14:32</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-71" title="Baby Steps Chapter 71">Chapter 71</a></span>
                                    <span> 47,405 </span>
                                    <span title="Nov-02-2024 02:32">11-02 14:32</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-70" title="Baby Steps Chapter 70">Chapter 70</a></span>
                                    <span> 47,004 </span>
                                    <span title="Nov-02-2024 02:32">11-02 14:32</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-69" title="Baby Steps Chapter 69">Chapter 69</a></span>
                                    <span> 46,402 </span>
                                    <span title="Nov-02-2024 02:32">11-02 14:32</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-68" title="Baby Steps Chapter 68">Chapter 68</a></span>
                                    <span> 46,400 </span>
                                    <span title="Nov-02-2024 02:32">11-02 14:32</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-67" title="Baby Steps Chapter 67">Chapter 67</a></span>
                                    <span> 46,902 </span>
                                    <span title="Nov-02-2024 02:31">11-02 14:31</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-66" title="Baby Steps Chapter 66">Chapter 66</a></span>
                                    <span> 45,903 </span>
                                    <span title="Nov-02-2024 02:31">11-02 14:31</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-65" title="Baby Steps Chapter 65">Chapter 65</a></span>
                                    <span> 45,202 </span>
                                    <span title="Nov-02-2024 02:31">11-02 14:31</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-64" title="Baby Steps Chapter 64">Chapter 64</a></span>
                                    <span> 44,403 </span>
                                    <span title="Nov-02-2024 02:30">11-02 14:30</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-63" title="Baby Steps Chapter 63">Chapter 63</a></span>
                                    <span> 44,002 </span>
                                    <span title="Nov-02-2024 02:30">11-02 14:30</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-62" title="Baby Steps Chapter 62">Chapter 62</a></span>
                                    <span> 44,503 </span>
                                    <span title="Nov-02-2024 02:30">11-02 14:30</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-61" title="Baby Steps Chapter 61">Chapter 61</a></span>
                                    <span> 44,403 </span>
                                    <span title="Nov-02-2024 02:30">11-02 14:30</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-60" title="Baby Steps Chapter 60">Chapter 60</a></span>
                                    <span> 45,502 </span>
                                    <span title="Nov-02-2024 02:29">11-02 14:29</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-59" title="Baby Steps Chapter 59">Chapter 59</a></span>
                                    <span> 45,102 </span>
                                    <span title="Nov-02-2024 02:29">11-02 14:29</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-58" title="Baby Steps Chapter 58">Chapter 58</a></span>
                                    <span> 46,502 </span>
                                    <span title="Nov-02-2024 02:29">11-02 14:29</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-57" title="Baby Steps Chapter 57">Chapter 57</a></span>
                                    <span> 48,603 </span>
                                    <span title="Nov-02-2024 02:29">11-02 14:29</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-56" title="Baby Steps Chapter 56">Chapter 56</a></span>
                                    <span> 47,702 </span>
                                    <span title="Nov-02-2024 02:28">11-02 14:28</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-55" title="Baby Steps Chapter 55">Chapter 55</a></span>
                                    <span> 46,503 </span>
                                    <span title="Nov-02-2024 02:28">11-02 14:28</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-54" title="Baby Steps Chapter 54">Chapter 54</a></span>
                                    <span> 49,403 </span>
                                    <span title="Nov-02-2024 02:28">11-02 14:28</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-53" title="Baby Steps Chapter 53">Chapter 53</a></span>
                                    <span> 48,902 </span>
                                    <span title="Nov-02-2024 02:28">11-02 14:28</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-52" title="Baby Steps Chapter 52">Chapter 52</a></span>
                                    <span> 48,304 </span>
                                    <span title="Nov-02-2024 02:27">11-02 14:27</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-51" title="Baby Steps Chapter 51">Chapter 51</a></span>
                                    <span> 48,302 </span>
                                    <span title="Nov-02-2024 02:27">11-02 14:27</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-50" title="Baby Steps Chapter 50">Chapter 50</a></span>
                                    <span> 49,806 </span>
                                    <span title="Nov-02-2024 02:27">11-02 14:27</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-49" title="Baby Steps Chapter 49">Chapter 49</a></span>
                                    <span> 47,206 </span>
                                    <span title="Nov-02-2024 02:27">11-02 14:27</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-48" title="Baby Steps Chapter 48">Chapter 48</a></span>
                                    <span> 49,111 </span>
                                    <span title="Nov-02-2024 02:26">11-02 14:26</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-47" title="Baby Steps Chapter 47">Chapter 47</a></span>
                                    <span> 48,305 </span>
                                    <span title="Nov-02-2024 02:26">11-02 14:26</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-46" title="Baby Steps Chapter 46">Chapter 46</a></span>
                                    <span> 48,707 </span>
                                    <span title="Nov-02-2024 02:26">11-02 14:26</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-45" title="Baby Steps Chapter 45">Chapter 45</a></span>
                                    <span> 47,808 </span>
                                    <span title="Nov-02-2024 02:26">11-02 14:26</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-44" title="Baby Steps Chapter 44">Chapter 44</a></span>
                                    <span> 47,304 </span>
                                    <span title="Nov-02-2024 02:25">11-02 14:25</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-43" title="Baby Steps Chapter 43">Chapter 43</a></span>
                                    <span> 47,805 </span>
                                    <span title="Nov-02-2024 02:25">11-02 14:25</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-42" title="Baby Steps Chapter 42">Chapter 42</a></span>
                                    <span> 47,306 </span>
                                    <span title="Nov-02-2024 02:25">11-02 14:25</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-41" title="Baby Steps Chapter 41">Chapter 41</a></span>
                                    <span> 47,104 </span>
                                    <span title="Nov-02-2024 02:25">11-02 14:25</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-40" title="Baby Steps Chapter 40">Chapter 40</a></span>
                                    <span> 48,004 </span>
                                    <span title="Nov-02-2024 02:24">11-02 14:24</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-39" title="Baby Steps Chapter 39">Chapter 39</a></span>
                                    <span> 46,704 </span>
                                    <span title="Nov-02-2024 02:24">11-02 14:24</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-38" title="Baby Steps Chapter 38">Chapter 38</a></span>
                                    <span> 48,307 </span>
                                    <span title="Nov-02-2024 02:24">11-02 14:24</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-37" title="Baby Steps Chapter 37">Chapter 37</a></span>
                                    <span> 48,209 </span>
                                    <span title="Nov-02-2024 02:23">11-02 14:23</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-36" title="Baby Steps Chapter 36">Chapter 36</a></span>
                                    <span> 48,312 </span>
                                    <span title="Nov-02-2024 02:23">11-02 14:23</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-35" title="Baby Steps Chapter 35">Chapter 35</a></span>
                                    <span> 50,605 </span>
                                    <span title="Nov-02-2024 02:23">11-02 14:23</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-34" title="Baby Steps Chapter 34">Chapter 34</a></span>
                                    <span> 52,207 </span>
                                    <span title="Nov-02-2024 02:23">11-02 14:23</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-33" title="Baby Steps Chapter 33">Chapter 33</a></span>
                                    <span> 49,606 </span>
                                    <span title="Nov-02-2024 02:23">11-02 14:23</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-32" title="Baby Steps Chapter 32">Chapter 32</a></span>
                                    <span> 49,906 </span>
                                    <span title="Nov-02-2024 02:22">11-02 14:22</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-31" title="Baby Steps Chapter 31">Chapter 31</a></span>
                                    <span> 49,306 </span>
                                    <span title="Nov-02-2024 02:22">11-02 14:22</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-30" title="Baby Steps Chapter 30">Chapter 30</a></span>
                                    <span> 49,806 </span>
                                    <span title="Nov-02-2024 02:22">11-02 14:22</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-29" title="Baby Steps Chapter 29">Chapter 29</a></span>
                                    <span> 51,703 </span>
                                    <span title="Nov-02-2024 02:21">11-02 14:21</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-28" title="Baby Steps Chapter 28">Chapter 28</a></span>
                                    <span> 53,504 </span>
                                    <span title="Nov-02-2024 02:21">11-02 14:21</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-27" title="Baby Steps Chapter 27">Chapter 27</a></span>
                                    <span> 53,604 </span>
                                    <span title="Nov-02-2024 02:21">11-02 14:21</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-26" title="Baby Steps Chapter 26">Chapter 26</a></span>
                                    <span> 53,905 </span>
                                    <span title="Nov-02-2024 02:21">11-02 14:21</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-25" title="Baby Steps Chapter 25">Chapter 25</a></span>
                                    <span> 52,204 </span>
                                    <span title="Nov-02-2024 02:21">11-02 14:21</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-24" title="Baby Steps Chapter 24">Chapter 24</a></span>
                                    <span> 52,908 </span>
                                    <span title="Nov-02-2024 02:20">11-02 14:20</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-23" title="Baby Steps Chapter 23">Chapter 23</a></span>
                                    <span> 53,005 </span>
                                    <span title="Nov-02-2024 02:20">11-02 14:20</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-22" title="Baby Steps Chapter 22">Chapter 22</a></span>
                                    <span> 52,605 </span>
                                    <span title="Nov-02-2024 02:20">11-02 14:20</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-21" title="Baby Steps Chapter 21">Chapter 21</a></span>
                                    <span> 54,404 </span>
                                    <span title="Nov-02-2024 02:19">11-02 14:19</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-20" title="Baby Steps Chapter 20">Chapter 20</a></span>
                                    <span> 54,405 </span>
                                    <span title="Nov-02-2024 02:19">11-02 14:19</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-19" title="Baby Steps Chapter 19">Chapter 19</a></span>
                                    <span> 55,810 </span>
                                    <span title="Nov-02-2024 02:19">11-02 14:19</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-18" title="Baby Steps Chapter 18">Chapter 18</a></span>
                                    <span> 54,508 </span>
                                    <span title="Nov-02-2024 02:19">11-02 14:19</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-17" title="Baby Steps Chapter 17">Chapter 17</a></span>
                                    <span> 55,407 </span>
                                    <span title="Nov-02-2024 02:18">11-02 14:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-16" title="Baby Steps Chapter 16">Chapter 16</a></span>
                                    <span> 55,505 </span>
                                    <span title="Nov-02-2024 02:18">11-02 14:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-15" title="Baby Steps Chapter 15">Chapter 15</a></span>
                                    <span> 56,115 </span>
                                    <span title="Nov-02-2024 02:18">11-02 14:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-14" title="Baby Steps Chapter 14">Chapter 14</a></span>
                                    <span> 57,811 </span>
                                    <span title="Nov-02-2024 02:18">11-02 14:18</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-13" title="Baby Steps Chapter 13">Chapter 13</a></span>
                                    <span> 57,615 </span>
                                    <span title="Nov-02-2024 02:17">11-02 14:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-12" title="Baby Steps Chapter 12">Chapter 12</a></span>
                                    <span> 56,410 </span>
                                    <span title="Nov-02-2024 02:17">11-02 14:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-11" title="Baby Steps Chapter 11">Chapter 11</a></span>
                                    <span> 56,015 </span>
                                    <span title="Nov-02-2024 02:17">11-02 14:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-10" title="Baby Steps Chapter 10">Chapter 10</a></span>
                                    <span> 55,217 </span>
                                    <span title="Nov-02-2024 02:17">11-02 14:17</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-9" title="Baby Steps Chapter 9">Chapter 9</a></span>
                                    <span> 54,720 </span>
                                    <span title="Nov-02-2024 02:16">11-02 14:16</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-8" title="Baby Steps Chapter 8">Chapter 8</a></span>
                                    <span> 57,443 </span>
                                    <span title="Nov-02-2024 02:16">11-02 14:16</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-7" title="Baby Steps Chapter 7">Chapter 7</a></span>
                                    <span> 61,427 </span>
                                    <span title="Nov-02-2024 02:16">11-02 14:16</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-6" title="Baby Steps Chapter 6">Chapter 6</a></span>
                                    <span> 59,429 </span>
                                    <span title="Nov-02-2024 02:16">11-02 14:16</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-5" title="Baby Steps Chapter 5">Chapter 5</a></span>
                                    <span> 59,129 </span>
                                    <span title="Nov-02-2024 02:15">11-02 14:15</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-4" title="Baby Steps Chapter 4">Chapter 4</a></span>
                                    <span> 59,936 </span>
                                    <span title="Nov-02-2024 02:15">11-02 14:15</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-3-2" title="Baby Steps Chapter 3.2">Chapter 3.2</a></span>
                                    <span> 53,104 </span>
                                    <span title="Nov-02-2024 02:15">11-02 14:15</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-3-1" title="Baby Steps Chapter 3.1">Chapter 3.1</a></span>
                                    <span> 57,307 </span>
                                    <span title="Nov-02-2024 02:15">11-02 14:15</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-3" title="Baby Steps Chapter 3">Chapter 3</a></span>
                                    <span> 61,132 </span>
                                    <span title="Nov-02-2024 02:14">11-02 14:14</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-2-1" title="Baby Steps Chapter 2.1">Chapter 2.1</a></span>
                                    <span> 51,615 </span>
                                    <span title="Nov-02-2024 02:14">11-02 14:14</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-2" title="Baby Steps Chapter 2">Chapter 2</a></span>
                                    <span> 69,559 </span>
                                    <span title="Nov-02-2024 02:13">11-02 14:13</span>
                                </div>
                                                            <div class="row">
                                    <span><a href="https://www.mangakakalot.gg/manga/baby-steps/chapter-1" title="Baby Steps Chapter 1">Chapter 1</a></span>
                                    <span> 109,719 </span>
                                    <span title="Nov-02-2024 02:13">11-02 14:13</span>
                                </div>
                                                    </div>
                    </div>
                </div>


                
                <div id="contentBox" style="font: 400 14px Open Sans, Tahoma, Geneva, sans-serif; color: #3e3e3e; width: 96%; padding: 10px 2%; background: #FFF; text-align: justify; border-top: 1px dashed #ff530d; margin-bottom: 0px; float: left; overflow: hidden;">
                    <h2>
                        <p style="color: red;">Baby Steps summary: </p>
                    </h2>
                    Maruo Eiichirou (Ei-Chan), a first year honor student, one day decides he's unhappy with the way things are and lacks exercise. His mother gives him a flyer for the local Tennis Club and he decides to check it out. He's instantly captivated by it. With no prior experience and poor physical conditioning, join Ei-Chan as he embarks on a tennis journey using his smarts, dedication and work ethic.
Note: Won the 38th Kodansha Manga Award in the Best Shōnen Manga category in 2014.
                </div>

                <div style="clear: both;"></div>

                <div class="toggleButtons">
                    <span style="display: none;" id="showMoreBtn" class="showMoreBtn">SHOW MORE ⇩</span>
                    <span style="display: none;" id="showLessBtn" class="showLessBtn">SHOW LESS ⇧</span>
                </div>

                
                                <div class="comment-info">
                    <div class="fb-comments fb_iframe_widget fb_iframe_widget_fluid_desktop" data-lazy="true" data-href="https://www.mangakakalot.gg/manga/baby-steps" data-width="100%" data-numposts="10" data-colorscheme="dark" style="width: 100%;" fb-xfbml-state="rendered" fb-iframe-plugin-query="app_id=1313068719976469&amp;color_scheme=dark&amp;container_width=713&amp;height=100&amp;href=https%3A%2F%2Fwww.mangakakalot.gg%2Fmanga%2Fbaby-steps&amp;lazy=true&amp;locale=en_US&amp;numposts=10&amp;sdk=joey&amp;version=v22.0&amp;width="><span style="vertical-align: top; width: 100%; height: 1px; overflow: hidden;"><iframe name="f58944886d9b420db" width="1000px" height="100px" data-testid="fb:comments Facebook Social Plugin" title="fb:comments Facebook Social Plugin" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" allow="encrypted-media" loading="lazy" src="https://www.facebook.com/v22.0/plugins/comments.php?app_id=1313068719976469&amp;channel=https%3A%2F%2Fstaticxx.facebook.com%2Fx%2Fconnect%2Fxd_arbiter%2F%3Fversion%3D46%23cb%3Dfc0d139aa1c5a3d33%26domain%3Dwww.mangakakalot.gg%26is_canvas%3Dfalse%26origin%3Dhttps%253A%252F%252Fwww.mangakakalot.gg%252Ff25044e346342df1e%26relation%3Dparent.parent&amp;color_scheme=dark&amp;container_width=713&amp;height=100&amp;href=https%3A%2F%2Fwww.mangakakalot.gg%2Fmanga%2Fbaby-steps&amp;lazy=true&amp;locale=en_US&amp;numposts=10&amp;sdk=joey&amp;version=v22.0&amp;width=" style="border: none; width: 0px; visibility: visible; height: 0px;"></iframe></span></div>
                </div>
                            </div>

            <div class="middleCol">
        <div class="xem-nhieu">
        <h2 class="title all-title">Most Popular Manga</h2>
        <div class="all">
                                        <div class="xem-nhieu-item">
                    <h3>
                                                <a href="https://www.mangakakalot.gg/manga/martial-peak" title="Martial Peak">
                            Martial Peak - Chapter 3829
                        </a>
                    </h3>
                </div>
                            <div class="xem-nhieu-item">
                    <h3>
                                                <a href="https://www.mangakakalot.gg/manga/tales-of-demons-and-gods" title="Tales Of Demons And Gods">
                            Tales Of Demons And Gods - Chapter 495.1
                        </a>
                    </h3>
                </div>
                            <div class="xem-nhieu-item">
                    <h3>
                                                <a href="https://www.mangakakalot.gg/manga/solo-leveling" title="Solo Leveling">
                            Solo Leveling - Chapter 202
                        </a>
                    </h3>
                </div>
                            <div class="xem-nhieu-item">
                    <h3>
                                                <a href="https://www.mangakakalot.gg/manga/versatile-mage" title="Versatile Mage">
                            Versatile Mage - Chapter 1181
                        </a>
                    </h3>
                </div>
                            <div class="xem-nhieu-item">
                    <h3>
                                                <a href="https://www.mangakakalot.gg/manga/apotheosis" title="Apotheosis">
                            Apotheosis - Chapter 1288
                        </a>
                    </h3>
                </div>
                            <div class="xem-nhieu-item">
                    <h3>
                                                <a href="https://www.mangakakalot.gg/manga/one-piece" title="One Piece">
                            One Piece - Chapter 1145
                        </a>
                    </h3>
                </div>
                            <div class="xem-nhieu-item">
                    <h3>
                                                <a href="https://www.mangakakalot.gg/manga/the-beginning-after-the-end" title="The Beginning After The End">
                            The Beginning After The End - Chapter 213
                        </a>
                    </h3>
                </div>
                            <div class="xem-nhieu-item">
                    <h3>
                                                <a href="https://www.mangakakalot.gg/manga/kimetsu-no-yaiba" title="Kimetsu No Yaiba">
                            Kimetsu No Yaiba - Chapter 206
                        </a>
                    </h3>
                </div>
                            <div class="xem-nhieu-item">
                    <h3>
                                                <a href="https://www.mangakakalot.gg/manga/star-martial-god-technique" title="Star Martial God Technique">
                            Star Martial God Technique - Chapter 808
                        </a>
                    </h3>
                </div>
                            <div class="xem-nhieu-item">
                    <h3>
                                                <a href="https://www.mangakakalot.gg/manga/rebirth-of-the-urban-immortal-cultivator" title="Rebirth Of The Urban Immortal Cultivator">
                            Rebirth Of The Urban Immortal Cultivator - Chapter 1073
                        </a>
                    </h3>
                </div>
                    </div>
    </div>

    <div class="panel-category">
        <h3 class="panel-category-title">GENRES</h3>
        <table>
            <tbody>
                <tr>
                                        <td>
                                                    <a rel="nofollow" class="ctg-select" href="/manga-list/new-manga">Newest</a>
                                            </td>
                                        <td>
                                                    <a rel="nofollow" class="" href="/manga-list/latest-manga">Latest</a>
                                            </td>
                                        <td>
                                                    <a rel="nofollow" class="" href="/manga-list/hot-manga">Top read</a>
                                            </td>
                                    </tr>
                <tr class="bordertop">
                                        <td>
                        <a rel="nofollow" class="ctg-select" href="https://www.mangakakalot.gg/genre/all?type=latest&amp;state=all&amp;page=1">All</a>
                    </td>
                                        <td>
                        <a rel="nofollow" class="" href="https://www.mangakakalot.gg/genre/all?type=latest&amp;state=completed&amp;page=1">Completed</a>
                    </td>
                                        <td>
                        <a rel="nofollow" class="" href="https://www.mangakakalot.gg/genre/all?type=latest&amp;state=ongoing&amp;page=1">Ongoing</a>
                    </td>
                                    </tr>

                
                                                    <tr class="bordertop">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/comedy" title="Comedy">Comedy</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/supernatural" title="Supernatural">Supernatural</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/drama" title="Drama">Drama</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/fantasy" title="Fantasy">Fantasy</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/action" title="Action">Action</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/josei" title="Josei">Josei</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/adventure" title="Adventure">Adventure</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/romance" title="Romance">Romance</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/smut" title="Smut">Smut</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/manhwa" title="Manhwa">Manhwa</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/tragedy" title="Tragedy">Tragedy</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/slice-of-life" title="Slice of life">Slice of life</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/school-life" title="School life">School life</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/seinen" title="Seinen">Seinen</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/historical" title="Historical">Historical</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/harem" title="Harem">Harem</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/horror" title="Horror">Horror</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/psychological" title="Psychological">Psychological</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/mystery" title="Mystery">Mystery</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/shounen" title="Shounen">Shounen</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/martial-arts" title="Martial arts">Martial arts</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/manhua" title="Manhua">Manhua</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/shoujo" title="Shoujo">Shoujo</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/isekai" title="Isekai">Isekai</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/erotica" title="Erotica">Erotica</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/gender-bender" title="Gender bender">Gender bender</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/mature" title="Mature">Mature</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/webtoons" title="Webtoons">Webtoons</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/shoujo-ai" title="Shoujo ai">Shoujo ai</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/yaoi" title="Yaoi">Yaoi</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/yuri" title="Yuri">Yuri</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/medical" title="Medical">Medical</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/mecha" title="Mecha">Mecha</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/shounen-ai" title="Shounen ai">Shounen ai</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/sports" title="Sports">Sports</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/cooking" title="Cooking">Cooking</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/sci-fi" title="Sci fi">Sci fi</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/one-shot" title="One shot">One shot</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/ecchi" title="Ecchi">Ecchi</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/adult" title="Adult">Adult</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/pornographic" title="Pornographic">Pornographic</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/doujinshi" title="Doujinshi">Doujinshi</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/long-strip" title="Long Strip">Long Strip</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/survival" title="Survival">Survival</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/adaptation" title="Adaptation">Adaptation</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/official-colored" title="Official Colored">Official Colored</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/wuxia" title="Wuxia">Wuxia</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/thriller" title="Thriller">Thriller</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/web-comic" title="Web Comic">Web Comic</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/full-color" title="Full Color">Full Color</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/reincarnation" title="Reincarnation">Reincarnation</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/monsters" title="Monsters">Monsters</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/military" title="Military">Military</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/philosophical" title="Philosophical">Philosophical</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/gyaru" title="Gyaru">Gyaru</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/bloody" title="Bloody">Bloody</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/demons" title="Demons">Demons</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/system" title="System">System</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/loli" title="Loli">Loli</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/ninja" title="Ninja">Ninja</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/incest" title="Incest">Incest</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/crime" title="Crime">Crime</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/office-workers" title="Office Workers">Office Workers</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/sexual-violence" title="Sexual Violence">Sexual Violence</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/crossdressing" title="Crossdressing">Crossdressing</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/gore" title="Gore">Gore</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/delinquents" title="Delinquents">Delinquents</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/shota" title="Shota">Shota</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/police" title="Police">Police</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/manga" title="Manga">Manga</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/time-travel" title="Time Travel">Time Travel</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/monster-girls" title="Monster Girls">Monster Girls</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/anthology" title="Anthology">Anthology</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/4-koma" title="4-Koma">4-Koma</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/oneshot" title="Oneshot">Oneshot</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/animals" title="Animals">Animals</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/heartwarming" title="Heartwarming">Heartwarming</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/superhero" title="Superhero">Superhero</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/magic" title="Magic">Magic</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/genderswap" title="Genderswap">Genderswap</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/post-apocalyptic" title="Post-Apocalyptic">Post-Apocalyptic</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/music" title="Music">Music</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/sci-fi" title="Sci-Fi">Sci-Fi</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/self-published" title="Self-Published">Self-Published</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/aliens" title="Aliens">Aliens</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/villainess" title="Villainess">Villainess</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/virtual-reality" title="Virtual Reality">Virtual Reality</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/ghosts" title="Ghosts">Ghosts</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/award-winning" title="Award Winning">Award Winning</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/video-games" title="Video Games">Video Games</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/magical-girls" title="Magical Girls">Magical Girls</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/reverse-harem" title="Reverse Harem">Reverse Harem</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/fan-colored" title="Fan Colored">Fan Colored</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/zombies" title="Zombies">Zombies</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/mafia" title="Mafia">Mafia</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/webtoon" title="Webtoon">Webtoon</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/royal-family" title="Royal family">Royal family</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/manhwa-hot" title="Manhwa Hot">Manhwa Hot</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/traditional-games" title="Traditional Games">Traditional Games</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/magical" title="Magical">Magical</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/vampires" title="Vampires">Vampires</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/revenge" title="Revenge">Revenge</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/ecchi-2" title="ecchi 2">ecchi 2</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/post-apocalyptic" title="Post apocalyptic">Post apocalyptic</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/samurai" title="Samurai">Samurai</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/yaoi-bl" title="Yaoi(BL)">Yaoi(BL)</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/monster" title="Monster">Monster</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/super-power" title="Super Power">Super Power</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/animal" title="Animal">Animal</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/game" title="Game">Game</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/comic" title="Comic">Comic</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/science-fiction" title="Science fiction">Science fiction</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/office" title="Office">Office</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/school" title="School">School</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/parody" title="Parody">Parody</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/iyashikei" title="Iyashikei">Iyashikei</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/girls-love" title="Girls Love">Girls Love</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/boys-love" title="Boys Love">Boys Love</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/mahou-shoujo" title="Mahou Shoujo">Mahou Shoujo</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/suspense" title="Suspense">Suspense</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/vampire" title="Vampire">Vampire</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/kids" title="Kids">Kids</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/space" title="Space">Space</a>
                            </td>
                                            </tr>
                                    <tr class="">
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/gourmet" title="Gourmet">Gourmet</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/soft-yaoi" title="Soft Yaoi">Soft Yaoi</a>
                            </td>
                                                    <td>
                                <a class="" href="https://www.mangakakalot.gg/genre/avant-garde" title="Avant Garde">Avant Garde</a>
                            </td>
                                            </tr>
                
            </tbody>
        </table>
    </div>

    <div class="panel-category"><h3 class="panel-category-title">TAGS</h3><table><tbody><tr><td><a href="https://www.mangakakalot.gg/tag/zinmanga" title="ZinManga">ZinManga</a></td><td><a href="https://www.mangakakalot.gg/tag/topmanhua" title="TopManhua">TopManhua</a></td><td><a href="https://www.mangakakalot.gg/tag/kissmanga" title="KissManga">KissManga</a></td></tr><tr><td><a href="https://www.mangakakalot.gg/tag/manganato" title="MangaNato">MangaNato</a></td><td><a href="https://www.mangakakalot.gg/tag/kunmanga" title="KunManga">KunManga</a></td><td><a href="https://www.mangakakalot.gg/tag/coffeemanga" title="CoffeeManga">CoffeeManga</a></td></tr><tr><td><a href="https://www.mangakakalot.gg/tag/toonily" title="Toonily">Toonily</a></td><td><a href="https://www.mangakakalot.gg/tag/harimanga" title="HariManga">HariManga</a></td><td><a href="https://www.mangakakalot.gg/tag/aquamanga" title="AquaManga">AquaManga</a></td></tr><tr><td><a href="https://www.mangakakalot.gg/tag/likemanga" title="LikeManga">LikeManga</a></td><td><a href="https://www.mangakakalot.gg/tag/manhwaclan" title="ManhwaClan">ManhwaClan</a></td></tr></tbody></table></div>

    <div style="clear: both"></div>
</div>
        </div>
    </div>


    
        <footer>
        <div class="footer-content">
            <p>
                <a href="https://www.mangakakalot.gg/privacy-policy" rel="nofollow">Privacy Policy</a> --
                <a href="https://www.mangakakalot.gg/terms-condition" rel="nofollow">Terms Conditions</a>
            </p>
            <p>Why You Should <a href="/">Read Manga</a> Online at mangakakalot.gg ?</p>
            <p>There are many reasons you should read Manga online, and if you are a fan of this unique storytelling
                style then learning about them is a must. One of the biggest reasons why you should read Manga online is
                the money it can save you. While there's nothing like actually holding a book in your hands, there's
                also no denying that the cost of those books can add up quickly. So why not join the digital age and
                read Manga online? Another big reason to read Manga online is the huge amount of material that is
                available. When you go to a comic store or other book store their shelves are limited by the space that
                they have. When you go to an online site to read Manga those limitations don't exist. So if you want the
                best selection and you also want to save money then reading Manga online should be an obvious choice for
                you</p>
            <p>©2016 mangakakalot.gg, all rights reserved. Top speed, completely free. </p>
            <p>Current Time is <span id="current-time">Apr 15, 2025, 6:37:08 PM</span></p>
            <script>
                function updateTime() {
                    const now = new Date();
                    const formattedTime = now.toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric',
                        hour: 'numeric',
                        minute: 'numeric',
                        second: 'numeric',
                        hour12: true,
                    });
                    document.getElementById('current-time').textContent = formattedTime;
                }
                setInterval(updateTime, 1000);
                updateTime(); // initial call to display time immediately
            </script>
            <p>If you have questions about anything or advertising, please contact us at <b><a href="mailto:support@mangakakalot.gg">support@mangakakalot.gg</a></b>
            </p>
        </div>
    </footer>
    
            <div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; width: 0px; height: 0px;"><div></div></div></div>
        <script async="" defer="" crossorigin="anonymous" src="https://connect.facebook.net/en_US/sdk.js#xfbml=1&amp;version=v22.0&amp;appId=1313068719976469">
        </script>
    
    <div class="notification-popup">
        <span class="noti-helper"></span>
        <div class="noti-div">
            <p class="notification-content">content notification</p>
            <div class="notification-close a-h">CANCEL</div>
        </div>
    </div>

    <script type="text/javascript" src="/js/jquery-1.9.1.min.js"></script>
    <script type="text/javascript" src="/js/owl.carousel.js?id=420d8dde81119226a8a0"></script>
    <script type="text/javascript" src="/js/ddimgtooltip.js?id=79cf5b02865233f92d53"></script>
    <script type="text/javascript" src="/js/fsearch.js?v=1.0.1"></script>
    <script type="text/javascript" src="/js/custom.js?v=1.0.1"></script>
    <script type="text/javascript" src="/js/cookie.js"></script>
    <script type="text/javascript" src="/js/starwarsjs.js?id=7391a2b9a35e07742342"></script>
    <script type="text/javascript" src="/js/user.js?id=1f0b8a2c1aaed1e29d2d"></script>
    <script type="text/javascript" src="/js/user-menu.js?id=f903b872d99dbbe2d23f"></script>
    <script type="text/javascript" src="/js/custom-fotter.js?id=e341cc89df3ba83643a1"></script>

    <script src="/js/app.js?id=129b646ecd805ad5a128"></script>

    <script>
        generateUserMenu();
        function getCookie(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
        }

        function generateUserMenu() {
        const loginItems = $(".user-options");
            loginItems.html(userMenu());
        }

        function showBadge() {
            const now = Math.floor(Date.now() / 1000);
            const cachedBadgeCount = localStorage.getItem('bookmarkBadgeCount');
            const cachedBadgeTimestamp = localStorage.getItem('bookmarkBadgeTimestamp');
            const cacheDuration = 60; // Cache duration in seconds (1 minutes)

            if (cachedBadgeCount && cachedBadgeTimestamp && (now - cachedBadgeTimestamp < cacheDuration)) {
                if (cachedBadgeCount > 0) {
                $('#bookmark-badge').text(cachedBadgeCount).show();
                } else {
                $('#bookmark-badge').hide();
                }
            } else {
                $.ajax({
                url: '/api/user/bookmark/count',
                method: 'GET',
                headers: {
                    'X-CSRF-TOKEN': window.token
                },
                success: function(response) {
                    const badgeCount = response.data;
                    localStorage.setItem('bookmarkBadgeCount', badgeCount);
                    localStorage.setItem('bookmarkBadgeTimestamp', now);

                    if (badgeCount > 0) {
                    $('#bookmark-badge').text(badgeCount).show();
                    } else {
                    $('#bookmark-badge').hide();
                    }
                },
                error: function() {
                    $('#bookmark-badge').hide();
                }
                });
            }
        }
        showBadge();

        function userMenu() {
            const user = localStorage.getItem('auth');
            const timeout = localStorage.getItem('timeout');
            const now = Math.floor(Date.now() / 1000);

            const themeModeButton = generateThemeModeButton();

            const isHideSocial = '';
            const socialMenu = !isHideSocial ? `
            <a rel="nofollow" href="https://discord.gg/Qhz84GGvE9" target="_blank" class="link-social discord">
                <i class="fab fa-discord"></i>
            </a>
            <a rel="nofollow" href="https://www.facebook.com/mangakakalot.official" target="_blank" class="link-social">
                <i class="fab fa-facebook"></i>
            </a>
            ` : '';

            if (user && timeout > now) {
                const userData = JSON.parse(user);
                const userMenu = `
                <div id="member">
                    ${themeModeButton}
                    ${socialMenu}
                    <div>
                        <a href="https://www.mangakakalot.gg/user" class="btn-user">
                            <div class="profile-avatar"><img src="/images/no-avatar.jpg" alt="${userData.name}"></div>
                            <div class="profile-name">${userData.name}</div>
                        </a>
                    </div>
                    <div>
                        <a href="https://www.mangakakalot.gg/bookmark" class="btn-circle btn-bookmark">
                            <i class="fas fa-bookmark"></i>
                            <span class="badge" id="bookmark-badge" style="display: none;">0</span>
                        </a>
                    </div>
                    <div>
                        <a href="https://www.mangakakalot.gg/history" class="btn-circle btn-history">
                            <i class="fas fa-history"></i>
                        </a>
                    </div>
                    <div><a href="https://www.mangakakalot.gg/logout" class="btn-circle btn-logout"><i class="fas fa-power-off"></i></a></div>
                </div>
                `;

                return userMenu;
            } else {
                if (getCookie('loginHide') !== 'true') {
                    $('.login-popup').show();
                }
                const userMenu = `
                <div class="un-login">
                    ${themeModeButton}
                    ${socialMenu}
                     <a href="https://www.mangakakalot.gg/history" class="btn-circle btn-history">
                        <i class="fas fa-history"></i>
                    </a>
                    <div class="login-top">
                        <a rel="nofollow" href="https://www.mangakakalot.gg/login" class="btn-login">Login</a>
                        <a rel="nofollow" href="https://www.mangakakalot.gg/register" class="btn-register">Register</a>
                    </div>
                </div>
                `;

                return userMenu;
            }
        }

        function toggleThemeMode() {
            const themeMode = localStorage.getItem('themeMode');
            if (themeMode === 'dark') {
                localStorage.setItem('themeMode', 'light');
            } else {
                localStorage.setItem('themeMode', 'dark');
            }
            document.body.classList.toggle('dark');
        }

        $(document).on('click', '.theme-mode-button', toggleThemeMode);

        function generateThemeModeButton() {
            const themeMode = localStorage.getItem('themeMode');
            const themeModeButton = `<div class="theme-mode-button ${themeMode}"></div>`;
            return themeModeButton;
        }


    </script>

        <script type="application/javascript">
        $votepointstar = 4.66;
        $defaultpointrating = '5';
        $postid = 43579;
        $ddrate = ''; //url vote rating
    </script>
    <script type="text/javascript" src="/js/custom_story.js?id=1920a2de06e78673c716"></script>
    <script type="application/javascript">
        $mangaStatusUrl = 'https://www.mangakakalot.gg/manga/status/43579';

        // This function to get status of manga like bookmark view
        function getMangeStatus() {
            const bookmarkContainer = $('.li_bookmark');
            const user = localStorage.getItem('auth');
            const timeout = localStorage.getItem('timeout');
            const now = Math.floor(Date.now() / 1000);

            if (user && timeout > now) {
                $.ajax({
                    url: $mangaStatusUrl,
                    type: 'GET',
                    success: function (response) {
                        if (response.success) {
                            bookmarkContainer.empty();
                            bookmarkContainer.html(response.data.bookmarkHtml);
                        } else {
                            bookmarkButtonDefault();
                        }
                    },
                    error: function(xhr, status, error) {
                        bookmarkButtonDefault();
                    }
                });
            } else {
                bookmarkButtonDefault();
            }
        }

        function bookmarkButtonDefault() {
            const bookmarkContainer = $('.li_bookmark');
            const htmlDefault = `<div class="user_btn_follow_i">
        <img id="btnBookmark" data-url="https://www.mangakakalot.gg/action/bookmark/43579" data-action="add" src="/images/theodoi.webp" alt="Follow">
    </div>
`;
            bookmarkContainer.empty();
            bookmarkContainer.html(htmlDefault);
        }

        function moveToListChapter() {
            $('html, body').animate({
                scrollTop: $("#chapter").offset().top
            }, 1000);
        }
        getMangeStatus();
    </script>
    


<div id="top">Back to Top</div><script src="https://czuawlppipi.com/en/carzt/vhao?iie=1&amp;qp=0&amp;gx=0&amp;mhbkpa=mtx&amp;nq=24&amp;b=1080&amp;ntgk=0&amp;iiqjp=bt-DE&amp;ob=0&amp;bol=763752&amp;xsqmmow=1.0.529&amp;cnc=64&amp;nx=-120&amp;wm=14&amp;nzeazw=821794&amp;bzb=702110&amp;ugm=0&amp;vvwii=%22Cfkuzkdt%22%3Bii%3D%22133%22%2C%20%22Nyo(A%3ABhvwt%22%3Bm%3D%2299%22&amp;sbgr=kvsiiy&amp;uspf=2647617744652548&amp;che=1&amp;eud=19.0.0&amp;cjc=0&amp;eyeo=1&amp;xvgf=&amp;qe=0&amp;jlb=PDF Vonucp::Crsdhf PDF Viieknj::Cszqornl PDF Vkiigiiw::Mznkcerac Eadd PDF Vsajvs::WmiiKma xkvkr-vx PDF&amp;kz=0&amp;k=1920&amp;lsy=1&amp;du=2&amp;udnu=613118&amp;df=9&amp;s=0&amp;iiriieq=0&amp;gz=10&amp;ma=0&amp;vjk=pgqfs&amp;id=2057180&amp;zk=1&amp;zzus=tzuy&amp;ede=%22Ctqcxlvo%22%3Bs%3D%22133.0.6943.141%22%2C%20%22Nkv(A%3ABpjss%22%3Bc%3D%2299.0.0.0%22&amp;xz=_mlsybtqsyutzrtddlwfiips&amp;cs=2&amp;ybw=Gsupgg Iat. (NVIDIA)&amp;ypf=Wbubces&amp;cm=6PFaBovE0EJGOfSQL7tCK-7auHO&amp;kayheiixj=eodn&amp;cmvknlbs=411148&amp;twv=jen&amp;ugv=sAhsw1YxHR0rHM6Lk93r3ddxWFxZ2FyYWtqfG90LkauL21kscwiiL2JpYnzvx3RpdHM&amp;qd=Exhbkh/Byasbl&amp;onsfii=0&amp;xbb=ANGLE (NVIDIA, NVIDIA GyFtrcn RTX 4070 Tk (0x00002782) Dsdrdq3D11 qq_5_0 oz_5_0, D3D11)&amp;ep=Wjl32&amp;bkii=0&amp;zuxe=1&amp;ow=3&amp;ye=0&amp;pwe=j86" type="text/javascript" async="" data-cfasync="false"></script></body></html>