<!DOCTYPE html><!--[if IE 9 ]>    <html dir="ltr" lang="en-US" class="ie9"> <![endif]--><!--[if (gte IE 10)|(gt IEMobile 7)|!(IEMobile)|!(IE)]><!--><html dir="ltr" lang="en-US" class=" async-hide"><!--<![endif]--><head><meta http-equiv="origin-trial" content="Az520Inasey3TAyqLyojQa8MnmCALSEU29yQFW8dePZ7xQTvSt73pHazLFTK5f7SyLUJSo2uKLesEtEa9aUYcgMAAACPeyJvcmlnaW4iOiJodHRwczovL2dvb2dsZS5jb206NDQzIiwiZmVhdHVyZSI6IkRpc2FibGVUaGlyZFBhcnR5U3RvcmFnZVBhcnRpdGlvbmluZyIsImV4cGlyeSI6MTcyNTQwNzk5OSwiaXNTdWJkb21haW4iOnRydWUsImlzVGhpcmRQYXJ0eSI6dHJ1ZX0=">
<!-- application -->
    <!-- Google Tag Manager -->
<script type="text/javascript" async="" src="https://www.gstatic.com/recaptcha/releases/lLirU0na9roYU3wDDisGJEVT/recaptcha__de.js" crossorigin="anonymous" integrity="sha384-GdV15gXliOPfpfOpqFhqY9dS3FCI2YwTGtVcyzj5ab0yiuc+vZVJm97rcCa1WL2G"></script><script async="" src="//static.ads-twitter.com/uwt.js"></script><script type="text/javascript" async="" src="https://js.iterable.com/analytics.js"></script><script async="" src="https://s.pinimg.com/ct/core.js"></script><script async="" src="https://connect.facebook.net/en_US/fbevents.js"></script><script async="" src="https://www.google-analytics.com/analytics.js"></script><script async="" src="https://www.googletagmanager.com/gtm.js?id=GTM-NL4KN8G&amp;gtm_auth=ZarF2Qyfj6o5KCl8wozoZA&amp;gtm_preview=env-2&amp;gtm_cookies_win=x"></script><script>
  (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl+ '&gtm_auth=ZarF2Qyfj6o5KCl8wozoZA&gtm_preview=env-2&gtm_cookies_win=x';f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-NL4KN8G');
</script>
<!-- End Google Tag Manager -->

<!-- Google Optimize Anti-flicker snippet -->
<style>.async-hide { opacity: 0 !important} </style>

<script>
  (function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.start=1*new Date;
  h.end=i=function(){s.className=s.className.replace(RegExp(' ?'+y),'')};
  (a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
  })(window,document.documentElement,'async-hide','dataLayer',4000,
  {'GTM-WDFZS8D':true});
</script>
<!-- End Google Optimize Anti-flicker snippet -->

<!-- Google Analytics w Optimize and Enhanced Ecommerce  -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-136373-5', 'auto');
  ga('require', 'GTM-WDFZS8D');  // Optimize
  ga('require', 'ec');           // Enhanced Ecommerce
  ga('send', 'pageview');

</script>
<!-- End Google Analytics -->

<!-- Google Ads -->
<script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-0605449085412645" crossorigin="anonymous"></script>
<!-- End Google Ads -->


    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="format-detection" content="telephone=no">

    <meta name="description" content="The world's most popular manga! Read free or become a member. Start your free trial today! | One Piece - Join Monkey D. Luffy and his swashbuckling crew in their search for the ultimate treasure, the One Piece.">

    <title>VIZ | Read One Piece Manga Free - Official Shonen Jump From Japan</title>

<script type="text/javascript">
function cl() {
}
</script>

<meta name="cart-version" content="5.1.1.8">
<meta name="server-info" content="viz-group1-3e@566ed07">




    
<script type="text/javascript" src="//code.jquery.com/jquery-1.11.3.min.js"></script>

<link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-touch-icon.png?v=47MPqANpyj">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png?v=47MPqANpyj">
<link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png?v=47MPqANpyj">
<link rel="manifest" href="/favicon/manifest.json?v=47MPqANpyj" crossorigin="use-credentials">
<link rel="mask-icon" href="/favicon/safari-pinned-tab.svg?v=47MPqANpyj" color="#ff0000">
<link rel="shortcut icon" href="/favicon/favicon.ico?v=47MPqANpyj">
<meta name="msapplication-config" content="/favicon/browserconfig.xml?v=47MPqANpyj">
<meta name="theme-color" content="#ff0000">



  <link rel="canonical" href="https://www.viz.com/shonenjump/chapters/one-piece">

<link rel="stylesheet" media="all" href="https://assets.viz.com/assets/manifest-viz-ui-9412c1affa453aabc312c1f323c8817631825d80dff2f8f4f952378dd327a32f.css">
<style>
  @supports selector(:focus-visible) {
    :focus {
      /* Remove the focus indicator on mouse-focus for browsers
         that do support :focus-visible */
      outline: none;
    }
  }

  :focus-visible {
    outline: 4px solid #06f;
    outline-offset: .125rem;
  }

  .o_share-btn-sm:focus-visible {
    outline: 4px solid #000;
    outline-offset: -0.25rem;
  }

  .category-nav-list li a:focus-visible {
    outline-offset: -0.1875rem;
  } 

  #newsletter_footer_email:focus-visible {
    outline-offset: -0.25rem;
  }
</style>


<script type="text/javascript">
  var accountSource = "wsj_web";
</script>

<script type="text/javascript" src="/search/series_titles.js"></script>

<script src="https://assets.viz.com/assets/manifest-picturefill-251915c1c5c28dce5fe695c7b06042b06148adf01b169726c36bf677baebd29a.js" async="async"></script>
<script src="https://assets.viz.com/assets/manifest-viz-common-280e6940e163d39cf00d5d4512781461acfd299f77bc6f6bc075cc58eafc4836.js"></script>
<script src="https://assets.viz.com/assets/manifest-viz-ui-1c16d4471fa95ea6dc52ae471c34b6d93b6de9af4421d97d5c5a4dddf73d648d.js"></script>

<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-analytics.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-auth.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js"></script>

<script type="text/javascript">
// NOTE: Do not assume that the root "firebase" obj will exist in any given browser (example iOS 9.3.5 is too old)
if (window.firebase) {
  // Initialize Firebase
  firebase.initializeApp({
    apiKey:            "AIzaSyC_HAHLGDNEpcJJdjC99E7KadiA1Q4IJIg",
    authDomain:        "vizmule.firebaseapp.com",
    databaseURL:       "https://vizmule.firebaseio.com",
    projectId:         "vizmule",
    storageBucket:     "vizmule.appspot.com",
    messagingSenderId: "381084636812",
    appId:             "1:381084636812:web:9ab6280f71b5137ad90da9",
    measurementId:     "G-41C9NY052Q"
  });
}

// REM: variables defined here so that we don't have to re-compile assets when adding new allowed collections
var fsDataEnv = "production";
// Used in VizFirebase.wrap to dis-allow initalization for any unrecognized collections (don't create garbage entries by typos)
var firestoreCollections = {
  users:  ['manga', 'series'],
  nouser: ['dataModelVersions']
};

var FSW = {};
</script>

<script src="https://assets.viz.com/assets/manifest-viz-firebase-0edcf48a44c53ec973d127cc974427a9fbab2fac6ed26494f928d615dc559312.js"></script>



<!-- Facebook Pixel Code -->
<script>
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','https://connect.facebook.net/en_US/fbevents.js');

fbq('init', '1691826154417019');
fbq('track', "PageView");</script>
<noscript>
<img height="1" width="1" style="display:none" alt="" src="https://www.facebook.com/tr?id=1691826154417019&ev=PageView&noscript=1"/>
</noscript>
<!-- End Facebook Pixel Code -->

<!-- Pinterest Pixel Base Code -->
<script type="text/javascript">
  !function(e){if(!window.pintrk){window.pintrk=function(){
  window.pintrk.queue.push(Array.prototype.slice.call(arguments))};var
    n=window.pintrk;n.queue=[],n.version="3.0";var
    t=document.createElement("script");t.async=!0,t.src=e;var
    r=document.getElementsByTagName("script")[0];
    r.parentNode.insertBefore(t,r)}}("https://s.pinimg.com/ct/core.js");
  pintrk('load', '2613740785131' );
  pintrk('page');
</script>
<noscript>
  <img height="1" width="1" style="display:none;" alt="" 
    src="https://ct.pinterest.com/v3/?tid=2613740785131&noscript=1" />
</noscript>
<!-- End Pinterest Pixel Base Code -->

<!-- Iterable Javascript SDK code -->
<script type="text/javascript">
  (function () {
    var b = document.createElement('script'); b.type = 'text/javascript'; b.async = true;
    b.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'js.iterable.com/analytics.js';
    var a = document.getElementsByTagName('script')[0]; a.parentNode.insertBefore(b, a);
  })();

  // Iterable Action Queue
  var iterable_js_api_key = '1bb7754ea14c4df0a7def312ba8b4808';
  var _iaq = _iaq || [];
 
  Tracking.userVisits();
</script>
<!-- End Iterable Javascript SDK code -->





  <style>#metamodal-dfp-preroll,
#overlay { display: none !important; }</style><script src="https://www.googletagmanager.com/gtag/js?l=dataLayer&amp;id=G-41C9NY052Q" async=""></script></head>

  <body style="background-color: #444; background-image: url('https://de7i3bh7bgh0d.cloudfront.net/wsj-bg-smoketile.jpg');">
      <header id="site-header" role="banner" class="o_site-header bg-trans-white">

  <div id="fan-favorites" class="o_fan-favorites bg-off-black type-sm disp-n--nl">
  <a class="skip-main-btn mar-r-md bg-off-black" href="#main">Skip to main content</a>
    <div class="o_fan-favorites-row row nowrap">
      <h2 class="disp-ib mar-r-md color-mid-gray">Manga &amp; Anime Favorites</h2>
      <ul class="disp-ib">
          <li class="disp-ib mar-r-md"><a href="/bleach">Bleach</a></li>
          <li class="disp-ib mar-r-md"><a href="/naruto">Naruto</a></li>
          <li class="disp-ib mar-r-md"><a href="/my-hero-academia">My Hero Academia</a></li>
          <li class="disp-ib mar-r-md"><a href="/boruto">Boruto</a></li>
          <li class="disp-ib mar-r-md"><a href="/pokemon">Pokémon</a></li>
          <li class="disp-ib mar-r-md"><a href="/junji-ito">Ito-verse</a></li>
          <li class="disp-ib mar-r-md"><a href="https://www.viz.com/zom-100">Stream Zom 100!</a></li>
          <li class="disp-ib mar-r-md"><a href="/products/gomi-no-sensei" rel="nofollow" style="display: none" aria-hidden="true">Gomi</a></li>
      </ul>
    </div>
  </div>


  <div id="header-container" class="row flex flex-justify">

    <h1 class="o_logo-top bg-red flex g-3--lg g-omega--lg">
      <span class="color-white type-sm--md type-bs weight-bold pos-r">
        <a href="/" class="o_logo-img"><img alt="VIZ" src="https://assets.viz.com/assets/logo@2x-b76f649f933ea15f45147ff5445a2501c85c7f863ba0aba5ea7bec93c3272cc6.png">

</a>
      </span>
    </h1>

    <a href="javascript:void(0)" data-nav-open="" class="nav-btn nav-btn--center color-off-black"><i class="icon-menu"></i><span>Menu</span></a>

    <nav id="nav-container" data-nav-state="closed" role="navigation" class="o_nav-container">
      <a href="javascript:void(0)" data-nav-close="" class="nav-btn color-white pad-y-sm mar-y-rg"><i class="icon-close"></i><span>Dismiss</span></a>

      <ul id="primary-nav" class="o_primary-nav type-md style-caps weight-bold mar-y-md mar-y-0--lg">
          <li class="o_primary-nav-item disp-ib--lg mar-r-md">
            <a class="o_primary-nav-link" href="/read">Read</a>
          </li>
          <li class="o_primary-nav-item disp-ib--lg mar-r-md">
            <a class="o_primary-nav-link" href="/watch">Watch</a>
          </li>
          <li class="o_primary-nav-item active disp-ib--lg mar-r-md">
            <a class="o_primary-nav-link" href="/shonenjump">Shonen Jump</a>
          </li>
          <li class="o_primary-nav-item disp-ib--lg mar-r-md">
            <a class="o_primary-nav-link" href="/vizmanga">VIZ Manga</a>
          </li>
          <li class="o_primary-nav-item disp-ib--lg">
            <a class="o_primary-nav-link" href="/calendar">Calendar</a>
          </li>
      </ul>

      <div id="site-search" class="o_site-search float-r--lg">
        <!-- header search bar -->
        <form action="/search" method="GET">
          <label for="search-input" class="visually-hidden">Find a title or a character…</label>
          <input id="search-input" name="search" type="search" class="o_search-ac o_site-search-field" placeholder="Find a title or a character…" autocomplete="off">
          <button type="submit" title="submit search" class="o_site-search-btn"><i aria-hidden="true" class="icon-search"></i></button>
        </form>
      </div>

      <div id="fan-favorites-small" class="o_fan-favorites-small disp-n--lg type-sm mar-y-md mar-y-0--lg">
          <div class="mar-b-rg"><a href="https://www.viz.com/zom-100">Stream Zom 100!</a></div>
        <ul class="list-unmarked line-tight">
            <li class="mar-b-rg"><a href="/naruto">Naruto</a></li>
            <li class="mar-b-rg"><a href="/pokemon">Pokémon</a></li>
            <li class="mar-b-rg"><a href="/boruto">Boruto</a></li>
            <li class="mar-b-rg"><a href="/my-hero-academia">My Hero Academia</a></li>
            <li class="mar-b-rg"><a href="/junji-ito">Ito-verse</a></li>
            <li class="mar-b-rg"><a href="/bleach">Bleach</a></li>
        </ul>
      </div>

      <ul id="utility-nav" class="o_utility-nav type-rg mar-t-rg mar-b-xl mar-t-md mar-t-sm--lg">
        <li class="o_account-links disp-bl disp-ib--lg mar-b-md mar-b-0--lg">
        </li>
      </ul>

    </nav>
  </div>

  <div id="main" tabindex="-1"></div>
</header>



    <script type="text/javascript" src="/meta/tiles.js"></script>

<script type="text/javascript">
  var series_title = "One Piece"; 
  var announcementType = "series";
  var announcementID   = "5";

  // Override the margin above the scrolled-to chapter-series-row (so you can see chapters both above and below it)
  initialActions.scroll.offset = 150;

  (function(){
    var _renderSeriesHistory = function() {
      VizReadHistory.getSeriesHistory("one-piece", true)
      .done(function(seriesHist) {
        // REM: it comes back as an array
        seriesHist = seriesHist[0];
        if (!seriesHist || !seriesHist.chnum) { return; }

        var $latestNode
           ,ch_num       = seriesHist.chnum
           ,sort_num     = Math.round(ch_num * 100)
           ,$chapterLink = $('a#ch-' + sort_num)
           ,$jumpLatest  = $("#jump-latest") // REM: starts out disp-n
        ;
        // FUTURE-TODO: if isComplete, should we instead highlight and scroll to the +1 row?
  
        if ($chapterLink.length) {
          // Configure the quick jump link

          if ($chapterLink.hasClass('disp-tc'))
            { $latestNode = $chapterLink.closest('.o_sortable-b'); }
          else
            { $latestNode = $chapterLink.closest('.o_sortable'); }

          $latestNode.addClass('out-thin-green out-off-neg-bs');

          $('a', $jumpLatest).data('num', sort_num);
          $jumpLatest.cshow();
        }
      }); // end done()
    };

    $(document).ready(function() {
      $('#jump-latest a').click(function(e){
        e.preventDefault();

        goToByScroll('#ch-' + $(this).data('num'));
      });

      _renderSeriesHistory();
    }); // document.ready
  })();
</script>

  <div id="hero" class="o_hero">
    <img class="o_hero-media" alt="" src="https://dw9to29mmj727.cloudfront.net/promo/2016/5265-SeriesHeaders_OP_2000x800_wm.jpg">
  </div>

<div class="pencil_announcement">  <div id="announcement_215" class="announcement o_internal-promo-trackable" style="display:none;position:relative;">
      <div class="announcement_txt">                  <section class="bg-off-black color-off-white pad-y-md type-sm type-rg--md type-center">
<div class="row"><a class="o_a-url color-off-white hover-red" href="/sj-offer"><strong class="o_a-hdr">Join Shonen Jump and unlock the digital vault of 15,000+ chapters!</strong></a>&nbsp;<span class="o_a-body" style="display: none;"></span></div>
<script type="text/javascript">
  $(document).on("post_account_links", function() { if (is_sj_subscriber) { $("#announcement_215").hide(); }});
</script>
</section>
                </div>
  </div>
  <script type="text/javascript">
    $(document).ready(function(){
      var announcementToShow = $("#announcement_215");

      if (typeof(deactivate_announcements) !== 'undefined' && deactivate_announcements) {
        announcementToShow.hide();

      } else {
        $(".hide_announcement", announcementToShow).click(function() {
            VizAnnouncement.markHidden(215);
          announcementToShow.slideUp("fast");
        });
        VizAnnouncement.runIfVisible(215, function(isVisible) {
          if (isVisible) { announcementToShow.slideDown("fast"); }
        });
      }
    }); // document.ready

      var announcementPosition = "/q/get_pencil_announcement_cached?announcementType=series&amp;announcementID=5";

      dataLayer.push({
        'ecommerce': {
          'promoView': {
            'promotions': [
             {
              'id': 'announcement_215',
              'name': 'SJ Page Launch 2018',
              'creative': 'pencil',
              'position': announcementPosition
             }]
          }
        }
      });

      $(document).ready(function(){

        $(document).on("click", "#announcement_215 a:not(.hide_announcement)", function(e) {
          e.preventDefault();
          var href = $(this).attr("href");

          ga('ec:addPromo', {
            'id': 'announcement_215',
            'name': 'SJ Page Launch 2018',
            'creative': 'pencil',
            'position': announcementPosition
          });
          ga('ec:setAction', 'promo_click');
          ga('send', 'event', 'Internal Promotions', 'click', 'SJ Page Launch 2018', {
            hitCallback: function() {
              document.location = href;
            }
          });
          Tracking.sendEvent({"category":"Announcement","action":"SJ Page Launch 2018","label":"title"});

        }); // on.click
      }); // document.ready
  </script>
</div>

<div class="bg-off-white row-nopad overflow-hide">

  <section id="series-intro" class="row mar-t-rg">
    <div class="clearfix mar-y-lg">
      <div class="mar-b-md--lg" style="flex-shrink:100;">
        <a href="/shonenjump" class="color-off-black weight-bold style-caps bg-yellow hover-bg-orange disp-ib pad-y-sm pad-x-rg mar-r-md mar-b-rg">Shonen Jump Chapters</a>
      </div>
      <h2 class="type-lg type-xl--md type-xxl--lg line-solid weight-bold style-caps mar-b-rg">One Piece</h2>
        <div class="line-solid type-md type-lg--md mar-t-rg">Join Monkey D. Luffy and his swashbuckling crew in their search for the ultimate treasure, the One Piece.</div>
    </div>

      <div class="type-rg">
          <span class="disp-bl--bm mar-b-md">Created by Eiichiro Oda</span>
      </div>


  </section>

        <section class="section_static" id="section0">
    <div class="row clearfix mar-y-lg">
   <h3 class="type-md type-lg--lg line-solid float-l--lg">Read free <span class="replace_series_name">One Piece</span> chapters</h3>
   <div class="type-rg modal-g-lg shift mar-t-lg">
      <p>The latest free chapters in your location are available on our partner website <a href="https://mangaplus.shueisha.co.jp" target="_blank">MANGA Plus by SHUEISHA</a>.</p>
   </div>
</div>
<script>
deactivate_announcements=true;
$('.replace_series_name').html(series_title);
</script>
  </section>

      <section class="section_manga mar-y-xl bg-off-white" id="section3">
  <div class="row">
      <div class="clearfix mar-t-md mar-b-lg">
            <h3 class="type-md type-lg--lg line-solid float-l--lg">Get the whole series</h3>
          <div class="section_see_all float-r--lg mar-t-md type-rg disp-n disp-bl--md">
            <a aria-label="see all manga products" href="/read/one-piece/series/5/section/62123/more" class="color-off-black hover-red">
              See all<span aria-hidden="true">&nbsp;&gt;</span>
            </a>
          </div>
      </div>
      <div class="shelf flex flex-wrap clearfix type-rg line-caption">
          <article class="g-3 g-3--md mar-b-lg bg-white color-off-black type-sm type-rg--lg">
  <figure class="ar-square">
    

      <span class="product-tag pad-x-rg pad-y-sm pos-a t-0 r-0 z-2 bg-mid-gray color-white">Pre-Order</span>
    <a tabindex="-1" role="presentation" href="/read/manga/one-piece-omnibus-edition-volume-33/product/7676" class="product-thumb ar-inner type-center">
      <img class="lazy " alt="" data-original="https://dw9to29mmj727.cloudfront.net/products/1974741095.jpg" src="data:image/gif;base64,R0lGODlhAQABAIAAAP///////yH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==">
    </a>
  </figure>
  <div class="pad-x-md pad-x-lg--lg pad-b-md pad-b-lg--lg">
    <div class="mar-b-sm"><a class="color-mid-gray hover-red">Manga</a></div>
    <a class="color-off-black hover-red" href="/read/manga/one-piece-omnibus-edition-volume-33/product/7676">One Piece (Omnibus Edition), Vol. 33</a>
  </div>
</article>

          <article class="g-3 g-3--md mar-b-lg g-omega bg-white color-off-black type-sm type-rg--lg">
  <figure class="ar-square">
    

      <span class="product-tag pad-x-rg pad-y-sm pos-a t-0 r-0 z-2 bg-mid-gray color-white">Pre-Order</span>
    <a tabindex="-1" role="presentation" href="/read/manga/one-piece-volume-104/product/7636" class="product-thumb ar-inner type-center">
      <img class="lazy " alt="" data-original="https://dw9to29mmj727.cloudfront.net/products/197474129X.jpg" src="data:image/gif;base64,R0lGODlhAQABAIAAAP///////yH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==">
    </a>
  </figure>
  <div class="pad-x-md pad-x-lg--lg pad-b-md pad-b-lg--lg">
    <div class="mar-b-sm"><a class="color-mid-gray hover-red">Manga</a></div>
    <a class="color-off-black hover-red" href="/read/manga/one-piece-volume-104/product/7636">One Piece, Vol. 104</a>
  </div>
</article>

          <article class="g-3 g-3--md mar-b-lg bg-white color-off-black type-sm type-rg--lg">
  <figure class="ar-square">
    

    <a tabindex="-1" role="presentation" href="/read/manga/one-piece-volume-4/product/6804" class="product-thumb ar-inner type-center">
      <img class="lazy " alt="" data-original="https://dw9to29mmj727.cloudfront.net/products/1974725960.png" src="data:image/gif;base64,R0lGODlhAQABAIAAAP///////yH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==">
    </a>
  </figure>
  <div class="pad-x-md pad-x-lg--lg pad-b-md pad-b-lg--lg">
    <div class="mar-b-sm"><a class="color-mid-gray hover-red">Manga</a></div>
    <a class="color-off-black hover-red" href="/read/manga/one-piece-volume-4/product/6804">One Piece Box Set 4: Dressrosa to Reverie</a>
  </div>
</article>

          <article class="g-3 g-3--md mar-b-lg g-omega g-omega--md bg-white color-off-black type-sm type-rg--lg">
  <figure class="ar-square">
    

    <a tabindex="-1" role="presentation" href="/read/manga/one-piece-volume-103/product/7495" class="product-thumb ar-inner type-center">
      <img class="lazy " alt="" data-original="https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-102800-OnePiece_GN103_C1_Web-3-Noanfkl91NBVXmI1-CspeA.jpg" src="data:image/gif;base64,R0lGODlhAQABAIAAAP///////yH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==">
    </a>
  </figure>
  <div class="pad-x-md pad-x-lg--lg pad-b-md pad-b-lg--lg">
    <div class="mar-b-sm"><a class="color-mid-gray hover-red">Manga</a></div>
    <a class="color-off-black hover-red" href="/read/manga/one-piece-volume-103/product/7495">One Piece, Vol. 103</a>
  </div>
</article>

      </div>

        <div class="section_see_all mar-b-md type-rg disp-bl disp-n--md">
          <a aria-label="see all manga products" href="/read/one-piece/series/5/section/62123/more" class="color-off-black hover-red weight-bold">
            See all<span aria-hidden="true">&nbsp;&gt;</span>
          </a>
        </div>

  </div>
</section>


      <section class="section_products mar-t-xl bg-off-white" id="section4">
  <div class="shelf-wrapper row mar-last-row">
    <div class="clearfix mar-t-md mar-b-lg">
        <h3 class="section_title type-md type-lg--lg line-solid float-l--lg">See the latest Shonen Jump releases</h3>

        <div class="section_see_all float-r--lg mar-t-md type-rg disp-n disp-bl--md">
          <a aria-label="see all See the latest Shonen Jump releases" href="/calendar" class="color-off-black hover-red">
            See all<span aria-hidden="true">&nbsp;&gt;</span>
          </a>
        </div>

    </div>

    <div class="shelf flex flex-wrap type-rg line-caption">
        <article class="g-3 g-3--md mar-b-lg bg-white color-off-black type-sm type-rg--lg">
  <figure class="ar-square">
    

      <span class="product-tag pad-x-rg pad-y-sm pos-a t-0 r-0 z-2 bg-off-black color-white">Best Seller</span>
    <a tabindex="-1" role="presentation" href="/read/manga/chainsaw-man-volume-12/product/7594" class="product-thumb ar-inner type-center">
      <img class="lazy " alt="" data-original="https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105160-ChainsawMan_GN12_C1_Web-3-pGYFpo-UbtfnbBYz-wRXyA.jpg" src="data:image/gif;base64,R0lGODlhAQABAIAAAP///////yH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==">
    </a>
  </figure>
  <div class="pad-x-md pad-x-lg--lg pad-b-md pad-b-lg--lg">
    <div class="mar-b-sm"><a class="color-mid-gray hover-red">Manga</a></div>
    <a class="color-off-black hover-red" href="/read/manga/chainsaw-man-volume-12/product/7594">Chainsaw Man, Vol. 12</a>
  </div>
</article>

  <article class="g-3 g-3--md mar-b-lg g-omega bg-white color-off-black type-sm type-rg--lg">
  <figure class="ar-square">
    

    <a tabindex="-1" role="presentation" href="/read/manga/moriarty-the-patriot-volume-13/product/7605" class="product-thumb ar-inner type-center">
      <img class="lazy " alt="" data-original="https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105168-MoriartyThePatriot_GN13_C1_Web-3-5czVNLUVVqUw4d3LROWOMA.jpg" src="data:image/gif;base64,R0lGODlhAQABAIAAAP///////yH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==">
    </a>
  </figure>
  <div class="pad-x-md pad-x-lg--lg pad-b-md pad-b-lg--lg">
    <div class="mar-b-sm"><a class="color-mid-gray hover-red">Manga</a></div>
    <a class="color-off-black hover-red" href="/read/manga/moriarty-the-patriot-volume-13/product/7605">Moriarty the Patriot, Vol. 13</a>
  </div>
</article>

  <article class="g-3 g-3--md mar-b-lg bg-white color-off-black type-sm type-rg--lg">
  <figure class="ar-square">
    

    <a tabindex="-1" role="presentation" href="/read/manga/hunter-x-hunter-volume-37/product/7620" class="product-thumb ar-inner type-center">
      <img class="lazy " alt="" data-original="https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105236-HunterXHunter_GN37_C1_Web-3-CBOdpKpIuZtfkDzSHk8mqw.jpg" src="data:image/gif;base64,R0lGODlhAQABAIAAAP///////yH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==">
    </a>
  </figure>
  <div class="pad-x-md pad-x-lg--lg pad-b-md pad-b-lg--lg">
    <div class="mar-b-sm"><a class="color-mid-gray hover-red">Manga</a></div>
    <a class="color-off-black hover-red" href="/read/manga/hunter-x-hunter-volume-37/product/7620">Hunter x Hunter, Vol. 37</a>
  </div>
</article>

  <article class="g-3 g-3--md mar-b-lg g-omega g-omega--md bg-white color-off-black type-sm type-rg--lg">
  <figure class="ar-square">
    

      <span class="product-tag pad-x-rg pad-y-sm pos-a t-0 r-0 z-2 bg-off-black color-white">Digital Only</span>
    <a tabindex="-1" role="presentation" href="/read/manga/magu-chan-god-of-destruction-volume-9/product/7654" class="product-thumb ar-inner type-center">
      <img class="lazy " alt="" data-original="https://dwgkfo5b3odmw.cloudfront.net/manga/thumbs/thumb-105136-MaguChan_DigitalGN09_C1_Web-3-Y4ae0OlJrrdDyAVVoEgYbA.jpg" src="data:image/gif;base64,R0lGODlhAQABAIAAAP///////yH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==">
    </a>
  </figure>
  <div class="pad-x-md pad-x-lg--lg pad-b-md pad-b-lg--lg">
    <div class="mar-b-sm"><a class="color-mid-gray hover-red">Manga</a></div>
    <a class="color-off-black hover-red" href="/read/manga/magu-chan-god-of-destruction-volume-9/product/7654">Magu-chan: God of Destruction, Vol. 9</a>
  </div>
</article>



    </div>

      <div class="section_see_all mar-b-md type-rg disp-bl disp-n--md">
        <a aria-label="see all products" href="/calendar" class="color-off-black hover-red weight-bold">
          See all<span aria-hidden="true">&nbsp;&gt;</span>
        </a>
      </div>

  </div>
</section>


</div>

  



      <section id="newsletter-footer" class="bg-lighter-gray">
  <div class="row flex--lg flex-items-center pad-y-lg pos-r">
    <div class="g-2--lg mar-b-lg mar-b-0--lg pos-a--lg b-0 disp-n--nl">
      <img class="disp-bl" alt="" src="https://dw9to29mmj727.cloudfront.net/misc/newsletter-naruto3.png">
    </div>
    <div class="g-6--lg g-shift-2--lg mar-b-md mar-b-0--lg">
      <h3 class="type-md type-lg--lg line-solid mar-b-rg">Get the latest manga &amp; anime news!</h3>
      <p class="type-sm type-rg--lg line-caption">You’ll never miss a beat when you subscribe to our newsletter.</p>
    </div>
    <form class="g-4--lg flex flex--stretch type-sm type-rg--sm" onsubmit="event.preventDefault(); showNewsletterSignupDialog();">
      <label class="visually-hidden" for="newsletter_footer_email">Enter your email address</label>
      <input type="text" class="flex-width-3" placeholder="Enter your email address" id="newsletter_footer_email">
      <button type="submit" class="btn-primary flex-width-1 btn-primary pad-x-sm pad-x-md--sm" id="newsletter_footer_signup">Sign Up</button>
    </form>
  </div>
  <script type="text/javascript">
</script>

<div role="dialog" aria-labelledby="newsletter-dialog" id="modal-newsletter" class="modal" data-modal-state="off">
<div class="pos-r pad-md pad-b-lg pad-lg--md pad-xl--lg">
  <span class="disp-bl--nl type-right mar-b-md">
    <a aria-label="close" href="#modal-newsletter" data-modal-btn="" class="modal-close">
      <i class="icon-close"></i>
    </a>
  </span>
  <div class="modal-g-lg shift mar-b-lg">
    <h2 id="newsletter-dialog" class="type-md weight-bold style-caps line-solid">Subscribe to the VIZ Newsletter</h2>
  </div>
  <form id="newsletter_form" class="clearfix clear-b" onsubmit="event.preventDefault(); newsletterSignup();">
    <input type="hidden" name="source" value="viz.com">
    <div class="modal-field type-rg">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <label>E-mail</label>
      </div>
      <div class="modal-g-lg">
        <input type="text" name="email" id="newsletter_email">
        <div class="o_email feedback type-sm mar-t-rg disp-n"></div>
      </div>
    </div>

    <div class="modal-field type-rg">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <label>
          First Name
        </label>
      </div>
      <div class="modal-g-lg">
        <input name="first_name" type="text">
      </div>
    </div>

    <div class="modal-field type-rg">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <label>
          Last Name
        </label>
      </div>
      <div class="modal-g-lg">
        <input name="last_name" type="text">
      </div>
    </div>

    <div class="modal-field type-rg">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <div id="newsletter-bday">
          Birthday
          <button aria-label="birthday tooltip" class="icon-button" aria-expanded="false">
            <i data-tooltip="" data-tip-text="To sign up, you must be 13 or older. Other people won’t see your birthday." data-tip-classes="tip-above" class="icon-tool-tip tip-target" aria-haspopup="true"></i>
          </button>
        </div>
      </div>
      <div class="o_birthdate_wrap modal-g-lg">
        <div class="select-wrapper disp-bl disp-ib--sm mar-b-rg mar-r-rg--sm">
          <div class="visually-hidden" id="newsletter-bday-month">Month</div>
          <select name="date[month]" class="month expand" aria-labelledby="newsletter-bday newsletter-bday-month">
<option value="">Month</option>
<option value="1">Jan</option>
<option value="2">Feb</option>
<option value="3">Mar</option>
<option value="4">Apr</option>
<option value="5">May</option>
<option value="6">Jun</option>
<option value="7">Jul</option>
<option value="8">Aug</option>
<option value="9">Sep</option>
<option value="10">Oct</option>
<option value="11">Nov</option>
<option value="12">Dec</option>
</select>

        </div>
        <div class="select-wrapper disp-bl disp-ib--sm mar-b-rg mar-r-rg--sm">
          <div class="visually-hidden" id="newsletter-bday-day">Day</div>
          <select name="date[day]" class="day expand" aria-labelledby="newsletter-bday newsletter-bday-day">
<option value="">Day</option>
<option value="1">1</option>
<option value="2">2</option>
<option value="3">3</option>
<option value="4">4</option>
<option value="5">5</option>
<option value="6">6</option>
<option value="7">7</option>
<option value="8">8</option>
<option value="9">9</option>
<option value="10">10</option>
<option value="11">11</option>
<option value="12">12</option>
<option value="13">13</option>
<option value="14">14</option>
<option value="15">15</option>
<option value="16">16</option>
<option value="17">17</option>
<option value="18">18</option>
<option value="19">19</option>
<option value="20">20</option>
<option value="21">21</option>
<option value="22">22</option>
<option value="23">23</option>
<option value="24">24</option>
<option value="25">25</option>
<option value="26">26</option>
<option value="27">27</option>
<option value="28">28</option>
<option value="29">29</option>
<option value="30">30</option>
<option value="31">31</option>
</select>

        </div>
        <div class="select-wrapper disp-bl disp-ib--sm mar-b-rg mar-r-rg--sm">
           <div class="visually-hidden" id="newsletter-bday-year">Year</div>
           <select name="date[year]" class="year expand" aria-labelledby="newsletter-bday newsletter-bday-year">
<option value="">Year</option>
<option value="1920">1920</option>
<option value="1921">1921</option>
<option value="1922">1922</option>
<option value="1923">1923</option>
<option value="1924">1924</option>
<option value="1925">1925</option>
<option value="1926">1926</option>
<option value="1927">1927</option>
<option value="1928">1928</option>
<option value="1929">1929</option>
<option value="1930">1930</option>
<option value="1931">1931</option>
<option value="1932">1932</option>
<option value="1933">1933</option>
<option value="1934">1934</option>
<option value="1935">1935</option>
<option value="1936">1936</option>
<option value="1937">1937</option>
<option value="1938">1938</option>
<option value="1939">1939</option>
<option value="1940">1940</option>
<option value="1941">1941</option>
<option value="1942">1942</option>
<option value="1943">1943</option>
<option value="1944">1944</option>
<option value="1945">1945</option>
<option value="1946">1946</option>
<option value="1947">1947</option>
<option value="1948">1948</option>
<option value="1949">1949</option>
<option value="1950">1950</option>
<option value="1951">1951</option>
<option value="1952">1952</option>
<option value="1953">1953</option>
<option value="1954">1954</option>
<option value="1955">1955</option>
<option value="1956">1956</option>
<option value="1957">1957</option>
<option value="1958">1958</option>
<option value="1959">1959</option>
<option value="1960">1960</option>
<option value="1961">1961</option>
<option value="1962">1962</option>
<option value="1963">1963</option>
<option value="1964">1964</option>
<option value="1965">1965</option>
<option value="1966">1966</option>
<option value="1967">1967</option>
<option value="1968">1968</option>
<option value="1969">1969</option>
<option value="1970">1970</option>
<option value="1971">1971</option>
<option value="1972">1972</option>
<option value="1973">1973</option>
<option value="1974">1974</option>
<option value="1975">1975</option>
<option value="1976">1976</option>
<option value="1977">1977</option>
<option value="1978">1978</option>
<option value="1979">1979</option>
<option value="1980">1980</option>
<option value="1981">1981</option>
<option value="1982">1982</option>
<option value="1983">1983</option>
<option value="1984">1984</option>
<option value="1985">1985</option>
<option value="1986">1986</option>
<option value="1987">1987</option>
<option value="1988">1988</option>
<option value="1989">1989</option>
<option value="1990">1990</option>
<option value="1991">1991</option>
<option value="1992">1992</option>
<option value="1993">1993</option>
<option value="1994">1994</option>
<option value="1995">1995</option>
<option value="1996">1996</option>
<option value="1997">1997</option>
<option value="1998">1998</option>
<option value="1999">1999</option>
<option value="2000">2000</option>
<option value="2001">2001</option>
<option value="2002">2002</option>
<option value="2003">2003</option>
<option value="2004">2004</option>
<option value="2005">2005</option>
<option value="2006">2006</option>
<option value="2007">2007</option>
<option value="2008">2008</option>
<option value="2009">2009</option>
<option value="2010">2010</option>
<option value="2011">2011</option>
<option value="2012">2012</option>
<option value="2013">2013</option>
<option value="2014">2014</option>
<option value="2015">2015</option>
<option value="2016">2016</option>
<option value="2017">2017</option>
<option value="2018">2018</option>
<option value="2019">2019</option>
<option value="2020">2020</option>
<option value="2021">2021</option>
<option value="2022">2022</option>
<option value="2023">2023</option>
</select>

        </div>
        <div class="o_birthdate feedback type-sm mar-t-rg disp-n"></div>
      </div>
    </div>

    <div class="modal-field type-rg">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <label>
          Newsletters
        </label>
      </div>
      <div class="modal-g-lg type-sm type-rg--lg">
        <div class="flex--sm mar-y-md--lg mar-b-sm">
          <label style="white-space:nowrap" class="mar-r-md">
            <input type="checkbox" name="anime" value="1" class="pad-r-sm" data-init-checked="1"> Anime
          </label>
          <label style="white-space:nowrap" class="mar-r-md">
            <input type="checkbox" name="manga" value="1" class="pad-r-sm" data-init-checked="1"> Manga
          </label>
          <label style="white-space:nowrap" class="mar-r-md">
            <input type="checkbox" name="sj" value="1" class="pad-r-sm" data-init-checked="1"> Shonen Jump Chapters
          </label>
          <label style="white-space:nowrap">
            <input type="checkbox" name="vm" value="1" class="pad-r-sm" data-init-checked="1"> VIZ Manga Chapters
          </label>
        </div>
        <div class="o_interests feedback type-sm mar-t-rg disp-n"></div>
      </div>
    </div>

    <div class="modal-actions">
      <div class="modal-g-lg shift">
        <button type="submit" class="btn-primary type-rg pad-x-xl">Subscribe</button>
        <div class="mar-t-md type-sm">
          <p>By subscribing, I agree to VIZ's <a href="/terms">Terms of Service</a> and <a href="/privacy">Privacy Policy</a>.</p>
        </div>
      </div>
    </div>

  </form>
</div>
</div>


</section>


      <footer id="global-footer" class="o_site-footer bg-off-black">
  <div class="row flex">
    <div class="o_logo-bottom bg-black flex g-3--lg g-omega--lg">
      <a href="/" class="o_logo-img color-white type-md weight-bold">
        <img alt="VIZ" src="https://assets.viz.com/assets/logo@2x-b76f649f933ea15f45147ff5445a2501c85c7f863ba0aba5ea7bec93c3272cc6.png">
      </a>
    </div>
  </div>
  <div class="row pad-y-xl">
    <div class="g-6 g-4--md mar-b-lg type-md style-caps weight-bold">
      <ul class="o_footer-primary-nav-col">
        <li class="o_footer-primary-nav-item"><a class="color-mid-gray hover-red" href="/read">Read</a></li>
        <li class="o_footer-primary-nav-item"><a class="color-mid-gray hover-red" href="/watch">Watch</a></li>
        <li class="o_footer-primary-nav-item"><a class="color-mid-gray hover-red" href="/shonenjump">Shonen Jump</a></li>
        <li class="o_footer-primary-nav-item"><a class="color-mid-gray hover-red" href="/vizmanga">VIZ Manga</a></li>
        <li class="o_footer-primary-nav-item"><a class="color-mid-gray hover-red" href="/calendar">Calendar</a></li>
      </ul>
    </div>
    <div class="g-6 g-8--md g-omega--md type-rg">
      <ul class="o_footer-secondary-nav-col">
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="/company-about">About VIZ</a></li>
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="/company-contact">Contact VIZ</a></li>
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="/company-faq">FAQ</a></li>
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="/events">Events</a></li>
      </ul>
      <ul class="o_footer-secondary-nav-col">
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="/apps">Apps</a></li>
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="/ratings">Ratings</a></li>
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="/company-jobs">Jobs</a></li>
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="/copyrights">Copyrights</a></li>
      </ul>
      <ul class="o_footer-secondary-nav-col-double end">
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="/privacy">Privacy Policy</a></li>
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="/company/ccpa_form">Do Not Sell/Share My Information</a></li>
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="/terms">Terms of Use</a></li>
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="/accessibility">Accessibility</a></li>
        <li class="o_footer-secondary-nav-item">&nbsp;</li>
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="https://twitter.com/VIZMedia" target="viz_twitter">Twitter</a></li>
        <li class="o_footer-secondary-nav-item"><a class="color-mid-gray hover-red" href="https://www.facebook.com/OfficialVIZMedia" target="viz_facebook">Facebook</a></li>
      </ul>
    </div>
  </div>
  <div id="footer_account" class="row"></div>
</footer>



    <div id="common_modals">

  <div id="error_modals">

  <div role="dialog" aria-labelledby="err-dialog" id="modal-err" class="modal" data-modal-state="off">
  <div class="pos-r pad-md pad-b-lg pad-lg--md pad-xl--lg">
    <span class="disp-bl--nl type-right mar-b-md">
      <a aria-label="close" href="#modal-err" data-modal-btn="" class="modal-close">
        <i class="icon-close"></i>
      </a>
    </span>
    <div class="modal-g-lg shift mar-b-lg">
      <h2 id="err-dialog" class="o_err-title type-md weight-bold style-caps line-solid"></h2>
      <div class="o_err-msg type-rg mar-t-md"><p></p></div>
    </div>
    <div class="modal-actions">
      <div class="modal-g-lg shift">
        <input type="button" class="btn-primary type-rg pad-x-xl" value="OK">
      </div>
    </div>
    <div class="modal-g-lg shift">
      <div class="o_err-msg-feedback disp-n type-rg mar-t-lg mar-b-lg">
        <p>If you believe you’re receiving this message in error, please <a class="o_err-msg-feedback color-mid-gray hover-red disp-n" data-modal-btn="" href="javascript:void('feedback')" onclick="Modals.toggle('#modal-feedback'); return false;">contact Customer Service</a></p>
      </div>
    </div>
  </div>
  </div>

  <div role="dialog" aria-labelledby="confirm-dialog" id="modal-confirm" class="modal" data-modal-state="off">
  <div class="pos-r pad-md pad-b-lg pad-lg--md pad-xl--lg">
    <span class="disp-bl--nl type-right mar-b-md">
      <a aria-label="close" href="#modal-confirm" data-modal-btn="" class="modal-close">
        <i class="icon-close"></i>
      </a>
    </span>
    <div class="modal-g-lg shift mar-b-lg">
      <h2 class="o_confirm-title type-md weight-bold style-caps line-solid"></h2>
      <div id="confirm-dialog" class="o_confirm-msg type-rg mar-t-md"></div>
    </div>
    <div class="modal-actions">
      <div class="modal-g-lg shift">
        <div class="disp-ib mar-b-rg">
          <input type="button" class="o_confirm-yes btn-primary type-rg pad-x-md mar-r-md" value="Yes">
        </div>
        <div class="disp-ib mar-b-rg">
          <input type="button" class="o_confirm-no btn-primary type-rg pad-x-md" value="No">
        </div>
      </div>
    </div>
  </div>
  </div>

  <div role="dialog" aria-labelledby="wait-dialog" id="modal-wait" class="modal" data-modal-state="off">
  <div class="pos-r pad-md pad-b-lg pad-lg--md pad-xl--lg">
    <div class="modal-g-lg shift mar-b-lg">
      <h2 id="wait-dialog" class="o_wait-title type-md weight-bold style-caps line-solid"></h2>
      <div class="o_wait-msg type-rg mar-t-md"><p></p></div>
    </div>
  </div>
  </div>

</div>

  <div role="dialog" aria-labelledby="feedback-dialog" id="modal-feedback" class="modal" data-modal-state="off">
<div class="pos-r pad-md pad-b-lg pad-lg--md pad-xl--lg">
  <span class="disp-bl--nl type-right mar-b-md">
    <a aria-label="close" href="#modal-feedback" data-modal-btn="" class="modal-close">
      <i class="icon-close"></i>
    </a>
  </span>
  <div class="modal-g-lg shift mar-b-lg">
    <h2 id="feedback-dialog" class="type-md weight-bold style-caps line-solid">Feedback</h2>
    <div class="type-rg mar-t-md"><p>Please submit a suggestion, comment or question - we would love to hear from you!</p></div>
  </div>
  <form id="feedback_form" class="clearfix clear-b">
    <div class="modal-field type-rg">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <label>E-mail <span class="type-sm">(optional)</span></label>
      </div>
      <div class="modal-g-lg">
        <input type="text" name="feedback_email" id="feedback_email">
        <div id="feedback-email-feedback" class="feedback type-sm mar-t-rg disp-n"></div>
      </div>
    </div>
    <div class="modal-field type-rg">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <label>
          Comments
        </label>
      </div>
      <div class="modal-g-lg">
        <textarea rows="4" id="feedback_comments" name="feedback_comments"></textarea>
        <div id="feedback-comments-feedback" class="feedback type-sm mar-t-rg disp-n color-red"></div>
      </div>
    </div>
    <div class="modal-field type-rg">
      <div class="modal-g-lg shift">
        <div id="feedback-captcha"><div style="width: 304px; height: 78px;"><div><iframe title="reCAPTCHA" width="304" height="78" role="presentation" name="a-kxwf7j7tdu1s" frameborder="0" scrolling="no" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation" src="https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6Ldn5xoTAAAAAClzsqqpxV4ki8tGc9FnvZy53TCA&amp;co=aHR0cHM6Ly93d3cudml6LmNvbTo0NDM.&amp;hl=de&amp;v=lLirU0na9roYU3wDDisGJEVT&amp;size=normal&amp;cb=ahkws7jps5u6"></iframe></div><textarea id="g-recaptcha-response-1" name="g-recaptcha-response" class="g-recaptcha-response" style="width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;"></textarea></div><iframe style="display: none;"></iframe></div>
        <div id="feedback-captcha-feedback" class="feedback type-sm mar-t-rg disp-n color-red"></div>
      </div>
    </div>
    <div class="modal-actions mar-b-lg">
      <div class="modal-g-lg shift">
        <input type="submit" class="btn-primary type-rg pad-x-xl" value="Send Feedback">
      </div>
    </div>
  </form>
</div>
</div>
<script type="text/javascript">
  $("#feedback_form").submit(function(){
    var isSjPage = 1;
    var isVmPage = 0;
    var errors    = false;

    // REM: the email field is optional

    if ($("#feedback_comments").val() == "") {
      validate.feedback_err( $("#feedback-comments-feedback"), 'Please enter a message to send.' );
      errors = true;
    } 
    if (feedback_recaptcha_response) {
    
    } else {
      validate.feedback_err( $("#feedback-captcha-feedback"), 'You must complete the captcha verification above' );
      errors = true;
    }

    if (errors === true) {
      // No need to scroll since its a modal
    } else {
      var jqxhr = $.ajax({
        type: "POST",
        url:  "/company/feedback_send",
        data: {
          source:   "feedback",
          email:    $("#feedback_email").val(),
          comments: $("#feedback_comments").val(),
          is_sj:    isSjPage,
          is_vm:    isVmPage,
          recaptcha_response: feedback_recaptcha_response
        },
        dataType: "json"
      });
      jqxhr.done(function(data, textStatus, xhr) { 
        if (data.sent == 1) {
          $("#feedback_email, #feedback_comments").val("");

          Modals.toggle("#modal-thanks");
          $("#modal-thanks h2").html('Thank you!');
          $("#modal-thanks #thanks-small-note").html('Your comments have been received.');

        } else {
          validate.feedback_err( $("#feedback-captcha-feedback"), data.error );
        }
      });
      jqxhr.fail(function(xhr, textStatus, error) {
        showErr(xhr.statusText, JSON.stringify(error));
      });
    }
    return false; // stop default behavior
  });
</script>


  <div role="dialog" aria-labelledby="signup-dialog" id="modal-signup" class="modal" data-modal-state="off">
<div class="pos-r pad-md pad-b-lg pad-lg--md pad-xl--lg">
  <span class="disp-bl--nl type-right mar-b-md">
    <a aria-label="close" href="#modal-signup" data-modal-btn="" class="modal-close">
      <i class="icon-close"></i>
    </a>
  </span>
  <div class="modal-g-lg shift mar-b-lg o_modal-header">
    <h2 id="signup-dialog" class="type-md weight-bold style-caps line-solid">Sign up for a new VIZ account</h2>
    <div class="color-mid-gray type-rg mar-t-rg">
      <p>Already have a VIZ account? <a href="#modal-login" data-modal-btn="">Log in</a>.</p>
    </div>
    <div id="create_account_error" class="feedback type-sm mar-t-rg color-red disp-n"></div>
  </div>
  <form id="signup_form" class="clearfix clear-b">

    <div class="modal-field type-rg o_signup-login">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <div>
          <span id="signup-uname">Username</span>
          <button aria-label="username tooltip" class="icon-button" aria-expanded="false">
            <i data-tooltip="" data-tip-text="Your username is public." data-tip-classes="tip-above" class="icon-tool-tip tip-target" aria-haspopup="true"></i>
          </button>
        </div>
      </div>
      <div class="modal-g-lg">
        <input name="login" aria-labelledby="signup-uname" type="text">
        <div class="o_login feedback type-sm mar-t-rg disp-n"></div>
      </div>
    </div>

    <div class="modal-field type-rg o_signup-email">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <label for="new_email">E-mail</label>
      </div>
      <div class="modal-g-lg">
        <input type="text" name="email" id="new_email">
        <div class="o_email feedback type-sm mar-t-rg disp-n"></div>
      </div>
    </div>

    <div class="modal-field type-rg o_signup-password">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <label for="pass">Password</label>
       </div>
      <div id="pass_wrap" class="modal-g-lg">
        <input type="password" name="pass" autocomplete="new-password">

        

  <script src="https://assets.viz.com/assets/manifest-zxcvbn-9feae4bcf274e1ff2860499646e7e19c6d4cf1b4759d81f5413f3b6d9f342738.js"></script>

  <template id="tip-template">
    <div role="dialog" aria-description="password strength details with tips and suggestions">
      <div id="sugg" class="disp-n">
        <b>Password suggestions</b>
        <ul class="mar-b-sm"></ul>
      </div>
      <b>Estimated cracking times</b>
      <div id="col1">
        Gaming Rig<br>
        Botnet
      </div>
      <div id="col2"><i></i></div>
    </div>
  </template>
  <script type="text/javascript">
  // Return the contents of the fragment as is
  function get_template_content() {
    var frag = $('#tip-template')[0].content.cloneNode(true); // Cloning may not be necessary in this case
    return $(frag).children().first().get(0);
  }
  </script>

<div id="pass_meter_bbd258" class="password_strength disp-n">
  <div class="meterP disp-ib"><mo style="background-color:#eee; border:1px solid silver; border-radius:10px; overflow:hidden; display:block; height:12px;"><mi style="display: block; height: 100%; transition: width 0.5s ease 0s, background 0.5s ease 0s; width: 1%; background-color: red;"></mi></mo></div>
  <small>
    <span class="meter-text">Empty</span>
    <button aria-label="password strength tooltip" class="icon-button" aria-expanded="false">
      <i data-tooltip="" data-tip-classes="light left wide tip-above" data-tip-content-fn="get_template_content" class="icon-tool-tip tip-target" aria-haspopup="true"></i>
    </button>
  </small>
</div>
<script type="text/javascript">
// short for document.ready
$(function() {
  password_meter("#pass_meter_bbd258", "#pass_wrap input", "#pass_wrap .feedback");
});
</script>


        <div class="o_password feedback type-sm mar-t-rg disp-n"></div>
      </div>
    </div>

    <div class="modal-field type-rg o_signup-birthday">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <div>
          <span id="signup-bday">Birthday</span>
          <button aria-label="birthday tooltip" class="icon-button" aria-expanded="false">
            <i data-tooltip="" data-tip-text="To sign up, you must be 13 or older. Other people won’t see your birthday." data-tip-classes="tip-above" class="icon-tool-tip tip-target" aria-haspopup="true"></i>
          </button>
        </div>
      </div>
      <div class="o_birthdate_wrap modal-g-lg">
        <div class="select-wrapper disp-bl disp-ib--sm mar-b-rg mar-r-rg--sm">
          <div class="visually-hidden" id="signup-bday-month">Month</div>
          <select name="date[month]" class="month expand" aria-labelledby="signup-bday signup-bday-month">
<option value="">Month</option>
<option value="1">Jan</option>
<option value="2">Feb</option>
<option value="3">Mar</option>
<option value="4">Apr</option>
<option value="5">May</option>
<option value="6">Jun</option>
<option value="7">Jul</option>
<option value="8">Aug</option>
<option value="9">Sep</option>
<option value="10">Oct</option>
<option value="11">Nov</option>
<option value="12">Dec</option>
</select>

        </div>
        <div class="select-wrapper disp-bl disp-ib--sm mar-b-rg mar-r-rg--sm">
          <div class="visually-hidden" id="signup-bday-day">Day</div>
          <select name="date[day]" class="day expand" aria-labelledby="signup-bday signup-bday-day">
<option value="">Day</option>
<option value="1">1</option>
<option value="2">2</option>
<option value="3">3</option>
<option value="4">4</option>
<option value="5">5</option>
<option value="6">6</option>
<option value="7">7</option>
<option value="8">8</option>
<option value="9">9</option>
<option value="10">10</option>
<option value="11">11</option>
<option value="12">12</option>
<option value="13">13</option>
<option value="14">14</option>
<option value="15">15</option>
<option value="16">16</option>
<option value="17">17</option>
<option value="18">18</option>
<option value="19">19</option>
<option value="20">20</option>
<option value="21">21</option>
<option value="22">22</option>
<option value="23">23</option>
<option value="24">24</option>
<option value="25">25</option>
<option value="26">26</option>
<option value="27">27</option>
<option value="28">28</option>
<option value="29">29</option>
<option value="30">30</option>
<option value="31">31</option>
</select>

        </div>
        <div class="select-wrapper disp-bl disp-ib--sm mar-b-rg mar-r-rg--sm">
          <div class="visually-hidden" id="signup-bday-year">Year</div>
           <select name="date[year]" class="year expand" aria-labelledby="signup-bday signup-bday-year">
<option value="">Year</option>
<option value="2023">2023</option>
<option value="2022">2022</option>
<option value="2021">2021</option>
<option value="2020">2020</option>
<option value="2019">2019</option>
<option value="2018">2018</option>
<option value="2017">2017</option>
<option value="2016">2016</option>
<option value="2015">2015</option>
<option value="2014">2014</option>
<option value="2013">2013</option>
<option value="2012">2012</option>
<option value="2011">2011</option>
<option value="2010">2010</option>
<option value="2009">2009</option>
<option value="2008">2008</option>
<option value="2007">2007</option>
<option value="2006">2006</option>
<option value="2005">2005</option>
<option value="2004">2004</option>
<option value="2003">2003</option>
<option value="2002">2002</option>
<option value="2001">2001</option>
<option value="2000">2000</option>
<option value="1999">1999</option>
<option value="1998">1998</option>
<option value="1997">1997</option>
<option value="1996">1996</option>
<option value="1995">1995</option>
<option value="1994">1994</option>
<option value="1993">1993</option>
<option value="1992">1992</option>
<option value="1991">1991</option>
<option value="1990">1990</option>
<option value="1989">1989</option>
<option value="1988">1988</option>
<option value="1987">1987</option>
<option value="1986">1986</option>
<option value="1985">1985</option>
<option value="1984">1984</option>
<option value="1983">1983</option>
<option value="1982">1982</option>
<option value="1981">1981</option>
<option value="1980">1980</option>
<option value="1979">1979</option>
<option value="1978">1978</option>
<option value="1977">1977</option>
<option value="1976">1976</option>
<option value="1975">1975</option>
<option value="1974">1974</option>
<option value="1973">1973</option>
<option value="1972">1972</option>
<option value="1971">1971</option>
<option value="1970">1970</option>
<option value="1969">1969</option>
<option value="1968">1968</option>
<option value="1967">1967</option>
<option value="1966">1966</option>
<option value="1965">1965</option>
<option value="1964">1964</option>
<option value="1963">1963</option>
<option value="1962">1962</option>
<option value="1961">1961</option>
<option value="1960">1960</option>
<option value="1959">1959</option>
<option value="1958">1958</option>
<option value="1957">1957</option>
<option value="1956">1956</option>
<option value="1955">1955</option>
<option value="1954">1954</option>
<option value="1953">1953</option>
<option value="1952">1952</option>
<option value="1951">1951</option>
<option value="1950">1950</option>
<option value="1949">1949</option>
<option value="1948">1948</option>
<option value="1947">1947</option>
<option value="1946">1946</option>
<option value="1945">1945</option>
<option value="1944">1944</option>
<option value="1943">1943</option>
<option value="1942">1942</option>
<option value="1941">1941</option>
<option value="1940">1940</option>
<option value="1939">1939</option>
<option value="1938">1938</option>
<option value="1937">1937</option>
<option value="1936">1936</option>
<option value="1935">1935</option>
<option value="1934">1934</option>
<option value="1933">1933</option>
<option value="1932">1932</option>
<option value="1931">1931</option>
<option value="1930">1930</option>
<option value="1929">1929</option>
<option value="1928">1928</option>
<option value="1927">1927</option>
<option value="1926">1926</option>
<option value="1925">1925</option>
<option value="1924">1924</option>
<option value="1923">1923</option>
<option value="1922">1922</option>
<option value="1921">1921</option>
<option value="1920">1920</option>
</select>

        </div>
        <div class="o_birthdate feedback type-sm mar-t-rg disp-n"></div>
      </div>
    </div>

    <div class="modal-field type-rg o_signup-interests">
      <div class="modal-g-sm type-right--lg mar-b-sm">
        <div>
          Interests
        </div>
      </div>
      <div class="modal-g-lg flex--sm mar-b-sm type-sm type-rg--lg">
        <label style="white-space:nowrap" class="mar-r-md">
          <input type="checkbox" aria-label="Interested in Anime" name="interest_anime" value="1" class="pad-r-sm" data-init-checked="1"> Anime
        </label>
        <label style="white-space:nowrap" class="mar-r-md">
          <input type="checkbox" aria-label="Interested in Manga" name="interest_manga" value="1" class="pad-r-sm" data-init-checked="1"> Manga
        </label>
        <label style="white-space:nowrap" class="mar-r-md">
          <input type="checkbox" aria-label="Interested in Shonen Jump chapters" name="interest_sj" value="1" class="pad-r-sm" data-init-checked="1"> Shonen Jump Chapters
        </label>
        <label style="white-space:nowrap">
          <input type="checkbox" aria-label="Interested in VIZ Manga chapters" name="interest_vm" value="1" class="pad-r-sm" data-init-checked="1"> VIZ Manga Chapters
        </label>
      </div>
    </div>

    <div class="modal-field type-rg o_signup-captcha">
      <div class="modal-g-lg shift">
        <div id="captcha"><div style="width: 304px; height: 78px;"><div><iframe title="reCAPTCHA" width="304" height="78" role="presentation" name="a-hkw21vcss671" frameborder="0" scrolling="no" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation" src="https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6LcOjgITAAAAADBlwgh-UTh4-2Hmh1LNWQE-Or9l&amp;co=aHR0cHM6Ly93d3cudml6LmNvbTo0NDM.&amp;hl=de&amp;v=lLirU0na9roYU3wDDisGJEVT&amp;size=normal&amp;cb=r7palwgecviz"></iframe></div><textarea id="g-recaptcha-response" name="g-recaptcha-response" class="g-recaptcha-response" style="width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;"></textarea></div></div>
        <div class="o_captcha feedback type-sm mar-t-rg disp-n"></div>
      </div>
    </div>

    <div class="modal-field type-rg o_signup-remember">
      <div class="modal-g-lg shift">
        <label class="disp-ib mar-0--lg">
          <input type="checkbox" class="v-mid mar-r-sm" name="rem_user" aria-labelledby="signup-remember">
          <span id="signup-remember" class="color-mid-gray">Remember me</span>
        </label>
      </div>
    </div>

    <div class="modal-actions mar-b-rg o_signup-submit">
      <div class="modal-g-lg shift">
        <input type="button" onclick="javascript:createAccount()" class="btn-primary type-rg pad-x-xl" value="Sign up">
        <div class="mar-t-md type-sm">
          <p>By signing up, I agree to VIZ's <a target="signupwin" href="/terms">Terms of Service</a> and <a target="signupwin" href="/privacy">Privacy Policy</a>.</p>
        </div>
      </div>
    </div>

  </form>
</div>
</div>

<script type="text/javascript">
  $(document).on("modal-signup-open", function() {
    // Reset the password strength meter
    $(".password_strength", Modals.getOnModal()).addClass("disp-n");
  });

  $('#pass_wrap input').on('input', function() {
    validate.pass($('#pass_wrap input').val(), $('#pass_wrap .feedback'));
  });
</script>

<script type="text/javascript">
  var recaptcha_response;
  var captcha_response = function(resp) { recaptcha_response = resp; }
  var feedback_recaptcha_response;
  var feedback_captcha_response = function(resp) { feedback_recaptcha_response = resp; }

  var recaptchaCallback = function() {
    //console.log('recaptchaCallback called');
    grecaptcha.render('captcha', { 
      "sitekey"  : "6LcOjgITAAAAADBlwgh-UTh4-2Hmh1LNWQE-Or9l",
      "callback" : captcha_response
    });
    grecaptcha.render('feedback-captcha', {
      "sitekey"  : "6Ldn5xoTAAAAAClzsqqpxV4ki8tGc9FnvZy53TCA",
      "callback" : feedback_captcha_response
    });
  }
</script>
<script src="https://www.google.com/recaptcha/api.js?onload=recaptchaCallback&amp;render=explicit" async="" defer=""></script>


  <div role="dialog" aria-labelledby="login-dialog" id="modal-login" class="modal" data-modal-state="off">
<div class="pos-r pad-md pad-b-lg pad-lg--md pad-xl--lg">
  <span class="disp-bl--nl type-right mar-b-md">
    <a aria-label="close" href="#modal-login" data-modal-btn="" class="modal-close">
      <i class="icon-close"></i>
    </a>
  </span>
  <div class="modal-g-lg shift mar-b-lg o_modal-header">
    <h2 id="login-dialog" class="type-md weight-bold style-caps line-solid">Log in to VIZ</h2>
    <div class="color-mid-gray type-rg mar-t-rg">
      <p>Don't have an account? <a href="#modal-signup" data-modal-btn="" data-event="{&quot;category&quot;:&quot;Account&quot;,&quot;action&quot;:&quot;Begins Sign-up Process&quot;,&quot;label&quot;:&quot;title&quot;}">Sign up</a>.</p>
    </div>
  </div>
  <div id="sign_in_feedback" class="feedback modal-g-lg shift mar-b-lg disp-n"></div>
  <form id="login_form" class="clearfix clear-b">

    <div class="modal-field type-rg o_login-account">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <label>
          Account
        </label>
      </div>
      <div class="modal-g-lg">
        <label for="try_login" class="visually-hidden">Account - email or username</label>
        <input type="text" name="login" id="try_login" onkeydown="if (event.keyCode == 13){$('.o_login-submit input').click();return false;}" placeholder="E-mail or username">
      </div>
    </div>

    <div class="modal-field type-rg o_login-password">
      <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
        <label for="try_pass">
          Password
        </label>
       </div>
      <div class="modal-g-lg">
        <input type="password" name="pass" id="try_pass" onkeydown="if (event.keyCode == 13){$('.o_login-submit input').click();return false;}">
      </div>
    </div>

    <div class="modal-field type-rg o_login-remember">
      <div class="modal-g-lg shift">
         <label class="disp-ib mar-b-md mar-0--lg">
           <input type="checkbox" class="v-mid mar-r-sm" name="rem_user" id="rem_user" aria-labelledby="login-remember">
           <span id="login-remember" class="color-mid-gray">Remember me</span>
         </label>
         <div class="disp-bl float-r--lg"><a href="#modal-resetpass" data-modal-btn="" class="color-red hover-dark-red">Forgot password?</a></div>
      </div>
    </div>

    <div class="modal-actions mar-b-rg o_login-submit">
      <div class="modal-g-lg shift">
        <input type="button" class="btn-primary type-rg pad-x-xl" value="Log in" onclick="javascript:tryLogin()">
      </div>
    </div>

  </form>
</div>
</div>


  <div role="dialog" aria-labelledby="resetpass-dialog" id="modal-resetpass" class="modal" data-modal-state="off">
<div class="pos-r pad-md pad-b-lg pad-lg--md pad-xl--lg">
  <span class="disp-bl--nl type-right mar-b-md">
    <a aria-label="close" href="#modal-resetpass" data-modal-btn="" class="modal-close">
      <i class="icon-close"></i>
    </a>
  </span>
  <div id="hide_on_success">
    <div class="modal-g-lg shift mar-b-lg">
      <h2 id="resetpass-dialog" class="type-md weight-bold style-caps line-solid">Reset Password</h2>
      <div class="type-rg mar-t-md"><p>Enter the e-mail address associated with your account and we'll email you a link to reset your password.</p></div>
    </div>

    <form class="clearfix clear-b">

      <div class="modal-field type-rg">
        <div class="modal-g-sm type-right--lg mar-y-md--lg mar-b-sm">
          <label>E-mail</label>
        </div>
        <div class="modal-g-lg">
          <input placeholder="Enter your e-mail address" type="text" id="forgot_pass_email" name="forgot_pass_email" onkeydown="if (event.keyCode == 13){$('#btn_forgot_pass').click();return false;}">
        </div>
      </div>
      <div class="modal-actions">
        <div class="modal-g-lg shift mar-b-lg">
          <input id="btn_forgot_pass" type="button" class="btn-primary type-rg pad-x-xl" value="Send reset link" onclick="javascript:send_forgot_pass()">
        </div>
      </div>

    </form>
  </div>

  <div id="messages" class="modal-g-lg shift mar-b-lg">
    <h3 id="msg_error" class="type-md weight-bold line-solid color-red disp-n"></h3>
    <h3 id="msg_loading" class="type-md weight-bold line-solid disp-n">Requesting Password Reset Instructions...</h3>
    <div id="msg_success" class="disp-n">
      <h3 class="type-md weight-bold line-solid">You have been sent an email with instructions on how to reset your password.</h3>
      <h4 class="type-rg bg-yellow weight-bold line-solid pad-md mar-t-md">NOTE: If you don't receive a message right away, please be patient. At times some customers have experienced delays of several minutes.</h4>
    </div>
  </div>

</div>
</div>

  <div role="dialog" aria-labelledby="thanks-dialog" id="modal-thanks" class="modal" data-modal-state="off">
<div class="pos-r pad-md pad-b-lg pad-lg--md pad-xl--lg">
  <span class="disp-bl--nl type-right mar-b-md">
    <a aria-label="close" href="#modal-thanks" data-modal-btn="" class="modal-close">
      <i class="icon-close"></i>
    </a>
  </span>
  <div class="mar-b-lg">
    <h2 id="thanks-dialog" class="type-md weight-bold style-caps line-solid"></h2>
  </div>
  <div class="modal-field type-rg">
    <div id="thanks-left" class="mar-y-md--lg mar-b-sm">
      <label>
        <div id="thanks-small-note" class="mar-t-md type-sm mar-b-lg"></div>
        <a class="flex-width-1 btn-primary pad-x-sm pad-x-md--sm" href="javascript:Modals.toggle('#modal-thanks')">Close</a>
      </label>
    </div>
  </div>
</div>
</div>

  <div role="dialog" aria-labelledby="gdpr-dialog" id="modal-gdpr" class="modal" data-modal-state="off">
<div class="pos-r pad-md pad-b-lg pad-lg--md pad-xl--lg">
  <div class="modal-g-lg shift mar-b-lg">
    <h2 id="gdpr-dialog" class="o_err-title type-md weight-bold style-caps line-solid">Note to our visitors in the EU</h2>
    <div class="o_err-msg type-rg mar-t-md">
This website uses cookies and tracking technologies to assist with your navigation, analyze use of our website and products and services, assist with your registration and login, and to assist with our marketing efforts. You may block cookies via standard web-browser settings, but this site may not function correctly without cookies.
    </div>
  </div>
  <div class="modal-actions">
    <div class="modal-g-lg shift">
      <input aria-label="close" type="button" class="btn-primary type-rg pad-x-xl modal-close" value="OK" onclick="Modals.close(); setCookie('gdpr_seen', 1, 365);">
    </div>
  </div>
</div>
</div>

  <div role="dialog" aria-labelledby="editcomment-dialog" id="modal-editcomment" class="modal" data-modal-state="off">
<div class="pos-r pad-md pad-b-lg pad-lg--md pad-xl--lg">
  <span class="disp-bl--nl type-right mar-b-md">
    <a aria-label="close" href="#modal-editcomment" data-modal-btn="" class="modal-close"><i class="icon-close"></i></a>
  </span>

  <div class="clearfix mar-t-md mar-b-lg type-center line-solid">
    <h3 id="editcomment-dialog" class="type-md type-lg--lg">Edit comment</h3>
  </div>
  <form id="edit_comment_form" action="#" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="NBJ4V51OAmiBi8mujokdRoesLmAXhovUrlnR8HGJJre4Roa5YpHQy8PW1rxwIxhXHkrKIyvF5WBHqpQCJ0Uhtg==">
    <div class="comment_form_err color-red clearfix mar-t-md mar-b-lg" style="display:none;">
      <h3 class="type-md weight-bold line-solid"></h3>
    </div>
    <textarea name="comment[content]" class="admin" rows="4" cols="100"></textarea>
    <div>
      <div class="mar-t-md" style="margin-top:8px;">
        <label class="disp-bl float-l--md mar-b-md mar-y-rg--md">
          <input type="checkbox" name="comment[is_spoiler]" value="1" class="is_spoiler v-mid mar-r-rg">
          <span class="v-mid color-mid-gray">Contains spoilers!</span>
        </label>
        <input class="submit_btn btn-primary-dark type-rg float-r--md" type="submit" value="Update Comment">
      </div>
      <img class="wait_gif disp-n" style="float:right; margin:12px 7px 0 0;" alt="loading" src="https://assets.viz.com/assets/ajax-loader-slick-e7b44c86b050fca766a96ddac2d0932af0126da6f2305280342d909168dcce6b.gif">
      <div class="clear-b"></div>
    </div>
</form></div>
</div>

    <script type="text/javascript">
  // NOTE: this doesn't need to trigger twice on the same page.
  $(document).one("post_account_links", function() {
    var modal_skip_msg = function(reason){
      cl('follow modal skipped (' + reason + ')');
    };

    // Open a 'follow' modal after 3 seconds, if appropriate
    var followModalTimeout = setTimeout(function() {


      // If another modal is open, skip it
      if (Modals.getOnModal().length) { modal_skip_msg('other modal'); return false; }

      var $followBtn = $(".o_follow-link").addClass('no_modal'),
          oldCName   = "chapter-series-5-follow-modal", 
          c = cookie_params['modal-follows-seen'] || "",
          cVals = c.split("#"), numC = cVals.length,
          modalsSeenC = {},
          modalsSeenP = {},
          i, m, mParts, followableType, followableID, modalLastSeen;

      // Cookie format is "pxxxx_yyyy-mm-dd#cxxxx_yyyy-mm-dd", where # is delimiter, {p,c} is the type, xxxx is the followable ID, and the date string is last time seen.
      for (i = 0; i < numC; i++) {
        m = cVals[i];
        if (!m) continue;  // "".split() => [""] (single empty element in array)
        followableType = m.charAt(0);
        mParts = m.slice(1).split("_");
        followableID  = mParts[0];
        modalLastSeen = mParts[1];
        if (followableType == "c") { modalsSeenC[followableID] = modalLastSeen; }  // chapter-series
        else                       { modalsSeenP[followableID] = modalLastSeen; }  // property
      }

      // From pages_controller, @followable[:type] will either by "chapter_series" or "property"
      var modalsSeen = ("chapter_series" == "chapter_series" ? modalsSeenC : modalsSeenP);
      modalLastSeen = 0;  // If no cookie, just set to epoch
      if (modalsSeen["5"]) {
        modalLastSeen = modalsSeen["5"];  
      } else {
        // Check if there's a cookie from old model:
        modalLastSeen = cookie_params[oldCName] || 0;
      }

      var now = new Date();
      var modalLastSeenDate = new Date(modalLastSeen);

      // Check to see if they're already following...
      if (Following.state($followBtn)){
        modal_skip_msg('already following');

      // or if they have seen the modal recently...
      } else if (now.getTime() <= (modalLastSeenDate.getTime() + (86400*14*1000))) {
        modal_skip_msg('seen on: ' + modalLastSeen);

      } else {
        // Copy the follow button code from the top of the page; saves the hassle of sending all the params again
        $("#modal-follow .o_follow-button").html( $followBtn[0].outerHTML );
        // Update the argument to Following.change() so it references the original button
        $("#modal-follow .o_follow-link").attr("clickfn", "Following.change('.o_follow-link.no_modal')");

        Modals.toggle("#modal-follow");

        // Reconstruct composite cookie.
        delete modalsSeen["5"];  // Make sure entry doesn't appear twice.
        var newModalSeenTime = now.toISOString().slice(0,10);  // Setting cookie: now in YYYY-MM-DD
        cVal = "c5_" + newModalSeenTime;
        // NOTE: we nest hasOwnProperty within the loop to filter out inherited properties.
        // TODO: convert to use $.each() instead
        for (followableID in modalsSeenC) {
          if (modalsSeenC.hasOwnProperty(followableID)) {
            modalLastSeen = modalsSeenC[followableID];
            cVal += "#c" + followableID + "_" + modalLastSeen;
          }
        }
        for (followableID in modalsSeenP) {
          if (modalsSeenP.hasOwnProperty(followableID)) {
            modalLastSeen = modalsSeenP[followableID];
            cVal += "#p" + followableID + "_" + modalLastSeen;
          }
        }
        setCookie('modal-follows-seen', cVal, 90);
        deleteCookie(oldCName);  // Make sure to clean up the old style.
      }
    }, 3000);
  });
</script>
<div role="dialog" aria-labelledby="follow-dialog" id="modal-follow" class="modal" data-modal-state="off">
<div class="pos-r pad-md pad-b-lg pad-lg--md pad-xl--lg">
  <span class="disp-bl--nl type-right mar-b-md">
    <a aria-label="close" href="#modal-follow" data-modal-btn="" class="modal-close">
      <i class="icon-close"></i>
    </a>
  </span>
  <div class="modal-g-lg shift mar-b-lg">
    <img alt="" src="https://dw9to29mmj727.cloudfront.net/properties/2016/526-SeriesThumb_OP_400x320.png">
  </div>
  <div class="modal-g-lg shift mar-b-lg">
    <h2 id="follow-dialog" class="o_follow-title type-md"><span class="weight-bold style-caps line-solid">
      Never miss a new chapter.</span><br>
      Add One Piece to your favorites, and start following it today!
    </h2>
  </div>
  <div class="modal-actions">
    <div class="o_follow-button modal-g-lg shift"></div>
  </div>
</div>
</div>

    


</div>


    <div id="overlay" data-overlay-state="off" class="o_overlay"></div>
    <div id="overlay_wait" data-overlay-state="off" class="o_overlay-wait"></div>
    <!-- Twitter universal website tag code -->
<script src="//platform.twitter.com/oct.js" type="text/javascript" async="" defer=""></script>
<script type="text/javascript">
setTimeout(function(){ if(!window.twttr){return} twttr.conversion.trackPid('nuvyy', { tw_sale_amount: 0, tw_order_quantity: 0 });}, 200);
</script>
<noscript>
<img height="1" width="1" style="display:none;" alt="" src="https://analytics.twitter.com/i/adsct?txn_id=nuvyy&p_id=Twitter&tw_sale_amount=0&tw_order_quantity=0" />
<img height="1" width="1" style="display:none;" alt="" src="//t.co/i/adsct?txn_id=nuvyy&p_id=Twitter&tw_sale_amount=0&tw_order_quantity=0" />
</noscript>
<!-- End Twitter universal website tag code -->

      <!-- Twitter universal website tag code -->
<script>
!function(e,t,n,s,u,a){e.twq||(s=e.twq=function(){s.exe?s.exe.apply(s,arguments):s.queue.push(arguments);
},s.version='1.1',s.queue=[],u=t.createElement(n),u.async=!0,u.src='//static.ads-twitter.com/uwt.js',
a=t.getElementsByTagName(n)[0],a.parentNode.insertBefore(u,a))}(window,document,'script');
// Insert Twitter Pixel ID and Standard Event data below
twq('init','o08y8');
twq('track','PageView');
</script>
<!-- End Twitter universal website tag code -->
  

</body></html>