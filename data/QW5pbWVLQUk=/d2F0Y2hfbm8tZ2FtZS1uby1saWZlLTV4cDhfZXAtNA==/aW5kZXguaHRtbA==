<html>

<head>
  <meta charset="utf-8">
  <title>Anime No Game, No Life Watch Online Free - AnimeKAI</title>
  <meta name="description"
    content="Best servers to watch No Game, No Life online, you can also download No Game, No Life for FREE!">
  <meta name="keywords"
    content="anime No Game, No Life watch online, No Game, No Life anime watch free, free watch No Game, No Life, watch No Game, No Life">
  <meta name="robots" content="index, follow">
  <meta name="revisit-after" content="1 days">
  <meta property="og:type" content="website">
  <meta property="og:title" content="Anime No Game, No Life Watch Online Free - AnimeKAI">
  <meta property="og:description"
    content="Best servers to watch No Game, No Life online, you can also download No Game, No Life for FREE!">
  <meta property="og:image"
    content="https://animekai.bz/assets/uploads/37585a39fe8c8d8fafbc397bfbf5374ecac859ea6a149bb5c5266bec29.jpg">
  <meta property="og:image:width" content="650">
  <meta property="og:image:height" content="350">
  <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1">
  <link rel="canonical" href="https://animekai.bz/watch/no-game-no-life-5xp8">
  <base href="https://animekai.bz/">
  <link rel="manifest" href="/manifest.json?v4">
  <link rel="shortcut icon"
    href="https://animekai.bz/assets/uploads/37585a39fe8c8d8fafbc397bfbf5374ecac859ea6a0288a6da2c61f5.png"
    type="image/x-icon">
  <script async=""
    src="https://count-server.sharethis.com/v2.0/get_counts?cb=window.__sharethis__.cb&amp;url=https%3A%2F%2Fanimekai.bz%2Fwatch%2Fno-game-no-life-5xp8"></script>
  <script
    type="application/ld+json">{"@context":"https://schema.org","@type":"WebSite","url":"https://animekai.bz/","potentialAction":{"@type":"SearchAction","target":"https://animekai.bz/filter?keyword={keyword}","query-input":"required name=keyword"}}</script>
  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Swiper/11.0.5/swiper-bundle.min.css">
  <link rel="stylesheet"
    href="https://animekai.bz/assets/build/37585a39fe8c8d8fafbc397beead71509e/dist/bundle.css?1k55dis" track="">
  <script type="text/javascript" src="https://challenges.cloudflare.com/turnstile/v0/api.js" defer=""></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"
    defer=""></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.2/umd/popper.min.js"
    defer=""></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/js/bootstrap.min.js"
    defer=""></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Swiper/11.0.5/swiper-bundle.min.js"
    defer=""></script>
  <script>window.__$ = 'ZZYdbXagjEpeaR4SF5q7C4ViIgmvIBnxB3hshWTR2k8-ZaFMdAJx0xzxNjZL21y9xn2Z7m1V_jIQEWMmAM8Zb0uM9Se8Ur4SonJLdacBah4Y'</script>
  <script type="text/javascript"
    src="https://animekai.bz/assets/build/37585a39fe8c8d8fafbc397beead/dist/bundle.js?1k55dis" track=""
    defer=""></script>
  <style>
    #signin .modal-content:after {
      background-image: url('https://animekai.bz/assets/uploads/37585a39fe8c8d8fafbc397bfbf5374ecac859ea6a0288a6da2c61f5.png') !important;
    }
  </style>
  <script src="https://platform-api.sharethis.com/js/sharethis.js"></script>
  <style type="text/css">
    #st-1 {
      font-family: "Helvetica Neue", Verdana, Helvetica, Arial, sans-serif;
      ;
      direction: ltr;
      display: block;
      opacity: 1;
      text-align: left;
      z-index: 94034;
    }

    #st-1.st-animated {
      -moz-transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
      -ms-transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
      -o-transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
      -webkit-transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
      transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
    }

    #st-1.st-hidden {
      opacity: 0;
    }

    #st-1.st-preview {
      display: none !important;
      opacity: 0 !important;
    }

    #st-1.st-hide {
      display: none;
    }

    #st-1 .st-btn {
      -moz-box-sizing: border-box;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      -moz-transition: opacity 0.2s ease-in, top 0.2s ease-in;
      -ms-transition: opacity 0.2s ease-in, top 0.2s ease-in;
      -o-transition: opacity 0.2s ease-in, top 0.2s ease-in;
      -webkit-transition: opacity 0.2s ease-in, top 0.2s ease-in;
      transition: opacity 0.2s ease-in, top 0.2s ease-in;
      -moz-border-radius: 10px;
      -webkit-border-radius: 10px;
      border-radius: 10px;
      border: none;
      cursor: pointer;
      display: inline-block;
      font-size: 12px;
      height: 32px;
      line-height: 32px;
      margin-right: 8px;
      padding: 0 20px;
      position: relative;
      text-align: center;
      top: 0;
      vertical-align: top;
      white-space: nowrap;
    }

    #st-1 .st-btn:last-child {
      margin-right: 0;
    }

    #st-1 .st-btn>svg {
      height: 16px;
      width: 16px;
      position: relative;
      top: 8px;
      vertical-align: top;
    }

    #st-1 .st-btn>img {
      display: inline-block;
      height: 16px;
      width: 16px;
      position: relative;
      top: 8px;
      vertical-align: top;
    }

    #st-1 .st-btn>span {
      -moz-transition: all 0.2s ease-in;
      -ms-transition: all 0.2s ease-in;
      -o-transition: all 0.2s ease-in;
      -webkit-transition: all 0.2s ease-in;
      transition: all 0.2s ease-in;
      color: #fff;
      display: inline-block;
      font-weight: 500;
      letter-spacing: 0.5px;
      min-width: 60px;
      opacity: 1;
      padding: 0 6px;
      position: relative;
      vertical-align: top;
    }

    #st-1.st-has-labels .st-btn {
      min-width: 120px;
    }

    #st-1.st-has-labels .st-btn.st-remove-label {
      min-width: 50px;
    }

    #st-1.st-has-labels .st-btn.st-remove-label>span {
      display: none;
    }

    #st-1.st-has-labels .st-btn.st-hide-label>span {
      display: none;
    }

    #st-1 .st-total {
      color: #555;
      display: inline-block;
      font-weight: 500;
      line-height: 12px;
      margin-right: 0;
      max-width: 80px;
      padding: 4px 8px;
      text-align: center;
    }

    #st-1 .st-total.st-hidden {
      display: none;
    }

    #st-1 .st-total>span {
      font-size: 16px;
      line-height: 17px;
      display: block;
      padding: 0;
    }

    #st-1 .st-total>span.st-shares {
      font-size: 9px;
      line-height: 9px;
    }

    #st-1.st-justified {
      display: flex;
      text-align: center;
    }

    #st-1.st-justified .st-btn {
      -moz-flex: 1;
      -ms-flex: 1;
      -webkit-flex: 1;
      flex: 1;
    }

    #st-1 .st-btn:hover {
      opacity: .8;
      top: -4px;
    }

    #st-1 .st-btn[data-network='facebook'] {
      background-color: #4267B2
    }

    #st-1 .st-btn[data-network='facebook'] img {
      filter:
    }

    #st-1 .st-btn[data-network='facebook']>span {
      color: #fff
    }

    #st-1 .st-btn[data-network='twitter'] {
      background-color: #000000
    }

    #st-1 .st-btn[data-network='twitter'] img {
      filter:
    }

    #st-1 .st-btn[data-network='twitter']>span {
      color: #fff
    }

    #st-1 .st-btn[data-network='messenger'] {
      background-color: #448AFF
    }

    #st-1 .st-btn[data-network='messenger'] img {
      filter:
    }

    #st-1 .st-btn[data-network='messenger']>span {
      color: #fff
    }

    #st-1 .st-btn[data-network='reddit'] {
      background-color: #ff4500
    }

    #st-1 .st-btn[data-network='reddit'] img {
      filter:
    }

    #st-1 .st-btn[data-network='reddit']>span {
      color: #fff
    }

    #st-1 .st-btn[data-network='whatsapp'] {
      background-color: #25d366
    }

    #st-1 .st-btn[data-network='whatsapp'] img {
      filter:
    }

    #st-1 .st-btn[data-network='whatsapp']>span {
      color: #fff
    }

    #st-1 .st-btn[data-network='telegram'] {
      background-color: #0088cc
    }

    #st-1 .st-btn[data-network='telegram'] img {
      filter:
    }

    #st-1 .st-btn[data-network='telegram']>span {
      color: #fff
    }

    #st-1 .st-btn[data-network='snapchat']>span {
      color: #333
    }

    ;
    }
  </style>
  <style type="text/css">
    #st-2 {
      font-family: "Helvetica Neue", Verdana, Helvetica, Arial, sans-serif;
      ;
      direction: ltr;
      display: block;
      opacity: 1;
      text-align: left;
      z-index: 94034;
    }

    #st-2.st-animated {
      -moz-transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
      -ms-transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
      -o-transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
      -webkit-transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
      transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
    }

    #st-2.st-hidden {
      opacity: 0;
    }

    #st-2.st-preview {
      display: none !important;
      opacity: 0 !important;
    }

    #st-2.st-hide {
      display: none;
    }

    #st-2 .st-btn {
      -moz-box-sizing: border-box;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      -moz-transition: opacity 0.2s ease-in, top 0.2s ease-in;
      -ms-transition: opacity 0.2s ease-in, top 0.2s ease-in;
      -o-transition: opacity 0.2s ease-in, top 0.2s ease-in;
      -webkit-transition: opacity 0.2s ease-in, top 0.2s ease-in;
      transition: opacity 0.2s ease-in, top 0.2s ease-in;
      -moz-border-radius: 10px;
      -webkit-border-radius: 10px;
      border-radius: 10px;
      border: none;
      cursor: pointer;
      display: inline-block;
      font-size: 12px;
      height: 32px;
      line-height: 32px;
      margin-right: 8px;
      padding: 0 20px;
      position: relative;
      text-align: center;
      top: 0;
      vertical-align: top;
      white-space: nowrap;
    }

    #st-2 .st-btn:last-child {
      margin-right: 0;
    }

    #st-2 .st-btn>svg {
      height: 16px;
      width: 16px;
      position: relative;
      top: 8px;
      vertical-align: top;
    }

    #st-2 .st-btn>img {
      display: inline-block;
      height: 16px;
      width: 16px;
      position: relative;
      top: 8px;
      vertical-align: top;
    }

    #st-2 .st-btn>span {
      -moz-transition: all 0.2s ease-in;
      -ms-transition: all 0.2s ease-in;
      -o-transition: all 0.2s ease-in;
      -webkit-transition: all 0.2s ease-in;
      transition: all 0.2s ease-in;
      color: #fff;
      display: inline-block;
      font-weight: 500;
      letter-spacing: 0.5px;
      min-width: 60px;
      opacity: 1;
      padding: 0 6px;
      position: relative;
      vertical-align: top;
    }

    #st-2.st-has-labels .st-btn {
      min-width: 120px;
    }

    #st-2.st-has-labels .st-btn.st-remove-label {
      min-width: 50px;
    }

    #st-2.st-has-labels .st-btn.st-remove-label>span {
      display: none;
    }

    #st-2.st-has-labels .st-btn.st-hide-label>span {
      display: none;
    }

    #st-2 .st-total {
      color: #555;
      display: inline-block;
      font-weight: 500;
      line-height: 12px;
      margin-right: 0;
      max-width: 80px;
      padding: 4px 8px;
      text-align: center;
    }

    #st-2 .st-total.st-hidden {
      display: none;
    }

    #st-2 .st-total>span {
      font-size: 16px;
      line-height: 17px;
      display: block;
      padding: 0;
    }

    #st-2 .st-total>span.st-shares {
      font-size: 9px;
      line-height: 9px;
    }

    #st-2.st-justified {
      display: flex;
      text-align: center;
    }

    #st-2.st-justified .st-btn {
      -moz-flex: 1;
      -ms-flex: 1;
      -webkit-flex: 1;
      flex: 1;
    }

    #st-2 .st-btn:hover {
      opacity: .8;
      top: -4px;
    }

    #st-2 .st-btn[data-network='facebook'] {
      background-color: #4267B2
    }

    #st-2 .st-btn[data-network='facebook'] img {
      filter:
    }

    #st-2 .st-btn[data-network='facebook']>span {
      color: #fff
    }

    #st-2 .st-btn[data-network='twitter'] {
      background-color: #000000
    }

    #st-2 .st-btn[data-network='twitter'] img {
      filter:
    }

    #st-2 .st-btn[data-network='twitter']>span {
      color: #fff
    }

    #st-2 .st-btn[data-network='messenger'] {
      background-color: #448AFF
    }

    #st-2 .st-btn[data-network='messenger'] img {
      filter:
    }

    #st-2 .st-btn[data-network='messenger']>span {
      color: #fff
    }

    #st-2 .st-btn[data-network='reddit'] {
      background-color: #ff4500
    }

    #st-2 .st-btn[data-network='reddit'] img {
      filter:
    }

    #st-2 .st-btn[data-network='reddit']>span {
      color: #fff
    }

    #st-2 .st-btn[data-network='whatsapp'] {
      background-color: #25d366
    }

    #st-2 .st-btn[data-network='whatsapp'] img {
      filter:
    }

    #st-2 .st-btn[data-network='whatsapp']>span {
      color: #fff
    }

    #st-2 .st-btn[data-network='telegram'] {
      background-color: #0088cc
    }

    #st-2 .st-btn[data-network='telegram'] img {
      filter:
    }

    #st-2 .st-btn[data-network='telegram']>span {
      color: #fff
    }

    #st-2 .st-btn[data-network='snapchat']>span {
      color: #333
    }

    ;
    }
  </style>
</head>

<body>
  <div id="wrapper" class="watch">
    <header>
      <div class="container">
        <div class="nav-wrapper"> <button class="btn nav-btn" id="nav-menu-btn"><i
              class="fa-solid fa-bars"></i></button> <a href="/home" class="brand"><img
              src="https://animekai.bz/assets/uploads/37585a39fe8c8d8fafbc397bfbf5374ecac859ea6a0886b7dc.png"></a>
          <div id="search"> <button id="search-btn" class="btn nav-btn"><i
                class="fa-solid fa-magnifying-glass"></i></button>
            <div class="inner">
              <form action="/browser" autocomplete="off"> <i class="fa-solid fa-magnifying-glass"></i> <input
                  type="text" name="keyword" placeholder="Search anime"> <a href="/browser"><i
                    class="fa-solid fa-filter"></i> Filter</a> </form>
              <div class="suggestion"></div>
            </div>
          </div> <a class="nav-btn w2g-btn" href="/watch2gether"><i class="fa-solid fa-users-line"></i></a> <a
            class="nav-btn shuffle-btn" href="/random"><i class="fa-solid fa-shuffle"></i></a>
          <div class="nav-menu" id="menu">
            <ul>
              <li> <a href="javascript:;">Genres</a>
                <ul class="c4">
                  <li><a href="/genres/action" title="Action Anime">Action</a></li>
                  <li><a href="/genres/adventure" title="Adventure Anime">Adventure</a></li>
                  <li><a href="/genres/avant-garde" title="Avant Garde Anime">Avant Garde</a></li>
                  <li><a href="/genres/boys-love" title="Boys Love Anime">Boys Love</a></li>
                  <li><a href="/genres/comedy" title="Comedy Anime">Comedy</a></li>
                  <li><a href="/genres/demons" title="Demons Anime">Demons</a></li>
                  <li><a href="/genres/drama" title="Drama Anime">Drama</a></li>
                  <li><a href="/genres/ecchi" title="Ecchi Anime">Ecchi</a></li>
                  <li><a href="/genres/fantasy" title="Fantasy Anime">Fantasy</a></li>
                  <li><a href="/genres/girls-love" title="Girls Love Anime">Girls Love</a></li>
                  <li><a href="/genres/gourmet" title="Gourmet Anime">Gourmet</a></li>
                  <li><a href="/genres/harem" title="Harem Anime">Harem</a></li>
                  <li><a href="/genres/horror" title="Horror Anime">Horror</a></li>
                  <li><a href="/genres/isekai" title="Isekai Anime">Isekai</a></li>
                  <li><a href="/genres/iyashikei" title="Iyashikei Anime">Iyashikei</a></li>
                  <li><a href="/genres/josei" title="Josei Anime">Josei</a></li>
                  <li><a href="/genres/kids" title="Kids Anime">Kids</a></li>
                  <li><a href="/genres/magic" title="Magic Anime">Magic</a></li>
                  <li><a href="/genres/mahou-shoujo" title="Mahou Shoujo Anime">Mahou Shoujo</a></li>
                  <li><a href="/genres/martial-arts" title="Martial Arts Anime">Martial Arts</a></li>
                  <li><a href="/genres/mecha" title="Mecha Anime">Mecha</a></li>
                  <li><a href="/genres/military" title="Military Anime">Military</a></li>
                  <li><a href="/genres/music" title="Music Anime">Music</a></li>
                  <li><a href="/genres/mystery" title="Mystery Anime">Mystery</a></li>
                  <li><a href="/genres/parody" title="Parody Anime">Parody</a></li>
                  <li><a href="/genres/psychological" title="Psychological Anime">Psychological</a></li>
                  <li><a href="/genres/reverse-harem" title="Reverse Harem Anime">Reverse Harem</a></li>
                  <li><a href="/genres/romance" title="Romance Anime">Romance</a></li>
                  <li><a href="/genres/school" title="School Anime">School</a></li>
                  <li><a href="/genres/sci-fi" title="Sci-Fi Anime">Sci-Fi</a></li>
                  <li><a href="/genres/seinen" title="Seinen Anime">Seinen</a></li>
                  <li><a href="/genres/shoujo" title="Shoujo Anime">Shoujo</a></li>
                  <li><a href="/genres/shounen" title="Shounen Anime">Shounen</a></li>
                  <li><a href="/genres/slice-of-life" title="Slice of Life Anime">Slice of Life</a></li>
                  <li><a href="/genres/space" title="Space Anime">Space</a></li>
                  <li><a href="/genres/sports" title="Sports Anime">Sports</a></li>
                  <li><a href="/genres/super-power" title="Super Power Anime">Super Power</a></li>
                  <li><a href="/genres/supernatural" title="Supernatural Anime">Supernatural</a></li>
                  <li><a href="/genres/suspense" title="Suspense Anime">Suspense</a></li>
                  <li><a href="/genres/thriller" title="Thriller Anime">Thriller</a></li>
                  <li><a href="/genres/vampire" title="Vampire Anime">Vampire</a></li>
                </ul>
              </li>
              <li> <a href="javascript:;">Types</a>
                <ul class="c1">
                  <li><a href="/movie">Movies</a></li>
                  <li><a href="/tv">TV Series</a></li>
                  <li><a href="/ova">OVAs</a></li>
                  <li><a href="/ona">ONAs</a></li>
                  <li><a href="/special">Specials</a></li>
                </ul>
              </li>
              <li><a href="/new-releases">New Releases</a></li>
              <li><a href="/updates">Updates</a></li>
              <li><a href="/ongoing">OnGoing</a></li>
              <li><a href="/recent">Recent</a></li>
              <li class="d-block d-md-none"><a href="/random"><i class="fa-solid fa-shuffle"></i> Random</a></li>
              <li class="d-block d-md-none"><a href="/watch2gether"><i class="fa-solid fa-users-line"></i>
                  Watch2gether</a></li>
            </ul>
          </div>
          <div class="lang-sw en"> <span data-value="en" class="active">en</span> <span data-value="jp">jp</span> </div>
          <div class="nav-user">
            <div class="acc-wrap">
              <div class="pathway"> <button class="btn modal-trigger" data-id="signin" type="button"> <i
                    class="fa-solid fa-user"></i> </button> </div>
            </div>
          </div>
        </div>
      </div>
    </header>
    <main>
      <div class="watch-section" itemscope="" itemtype="https://schema.org/WebPage" id="watch-page" data-mal-id="19815"
        data-al-id="19815"
        data-meta="ZZQdeGGgrgMFP1pOTNLtIcE5PlrsPRr2B3gdhWSgnkhtOPAMfwBh1T-yITYayiWHzi6f-ydTmkESdRBVNIQyAg_3gXnMQMZDpGsNIOYWfGp5kCd05EE21QmbGbPTNQVFrFhgkQ_z-i_Gw_2Vp0dnFTVaBWcbeznV8zPNB8bsnywAsB9sl9ChZL95f5YdwvENUojTqx_4_lOEHov3hpGi8HLp-z0hOKUgfvMfBKATBU4UDAo2BgwS5Qz6YDY0RS3IH-s1nfAU-I6mLT-a9zpxMpEBvK5mnrPdXC-X9k2T3SEbQWTlaWSyQsRmPw_lRzOrdQAREdvtrEfbuAxiDEAulQFA2iH2QNYCBM_JaGJL8mjX">
        <div class="watch-section-bg"
          style="background-image: url(https://static1.animekai.bz/e8/i/3/77/67664aa9edf10@1280.jpg)"></div>
        <div class="container">
          <div class="watch-section-wrap" itemprop="mainEntity" itemscope="" itemtype="https://schema.org/Movie">
            <section class="entity-section" style="">
              <div class="poster-wrap">
                <div class="form-check btn-entity form-switch"> <input class="form-check-input" type="checkbox"
                    role="switch" data-bs-toggle="collapse" data-bs-target="#main-entity"> </div>
                <div class="poster-wrap-bg"
                  style="background-image: url(https://static1.animekai.bz/b4/i/8/3e/67664aa9ead2d.jpg);"></div>
                <div class="poster">
                  <div> <img itemprop="image" src="https://static1.animekai.bz/b4/i/8/3e/67664aa9ead2d.jpg"
                      alt="No Game, No Life"> </div>
                </div>
              </div>
              <div class="main-entity collapse" id="main-entity">
                <div class="entity-scroll">
                  <h1 itemprop="name" class="title" data-jp="No Game No Life">No Game, No Life</h1> <small
                    class="al-title text-expand" data-bs-toggle="tooltip" data-bs-placement="bottom"
                    style="cursor: pointer;" data-bs-original-title="Tap to expand">No Game No Life; No Game, No Life;
                    NGNL</small>
                  <div class="info"> <span class="rating">PG 13</span> <span class="sub"><svg>
                        <use href="#sub"></use>
                      </svg>12</span> <span class="dub"><svg>
                        <use href="#dub"></use>
                      </svg>12</span> <span><b>TV</b></span> </div>
                  <div class="desc text-expand" data-bs-toggle="tooltip" data-bs-placement="bottom"
                    style="cursor: pointer;" data-bs-original-title="Tap to expand">Sixteen sentient races inhabit
                    Disboard, a world overseen by Tet, the One True God. The lowest of the sixteen—Imanity—consists of
                    humans, a race with no affinity for magic. In a place where everything is decided through simple
                    games, humankind seems to have no way out of their predicament—but the arrival of two outsiders
                    poses a change. On Earth, stepsiblings Sora and Shiro are two inseparable shut-ins who dominate
                    various online games under the username "Blank." While notorious on the internet, the pair believe
                    that life is merely another dull game. However, after responding to a message from an unknown user,
                    they are suddenly transported to Disboard. The mysterious sender turns out to be Tet, who informs
                    them about the world's absolute rules. After Tet leaves, Sora and Shiro begin their search for more
                    information and a place to stay, taking them to Elkia—Imanity's only remaining kingdom. There, the
                    duo encounters Stephanie Dola, an emotional girl vying for the kingdom's sovereignty. In
                    desperation, she attempts to regain her father's throne, but her foolhardiness makes her goal
                    unachievable. Inspired by the girl's motivation and passion, Sora and Shiro decide to aid Stephanie
                    in getting Elkia back on its feet, ultimately aiming to become the new rulers of the enigmatic
                    realm.</div>
                  <div class="detail">
                    <div>
                      <div>Country: <span> <a href="/countries/japan">Japan</a> </span> </div>
                      <div>Genres: <span> <a href="/genres/adventure">Adventure</a>, <a
                            href="/genres/comedy">Comedy</a>, <a href="/genres/ecchi">Ecchi</a>, <a
                            href="/genres/fantasy">Fantasy</a>, <a href="/genres/isekai">Isekai</a> </span> </div>
                      <div>Premiered: <span><a href="browser?season=spring&amp;year=2014">Spring 2014</a></span> </div>
                      <div>Date aired: <span itemprop="dateCreated">Apr 09, 2014</span> to Jun 25, 2014 </div>
                      <div>Broadcast: <span>Wednesdays at 21:30 JST</span></div>
                      <div>Episodes: <span>12</span></div>
                      <div>Duration: <span>23 min</span></div>
                    </div>
                    <div>
                      <div>Status: <span>Completed</span></div>
                      <div>MAL: <span>8.05 <span class="text-muted">by 1,587,903 users</span> </span> </div>
                      <div>Studios: <span> <a itemprop="director" itemscope="" itemtype="https://schema.org/Person"
                            href="/studios/madhouse"><span itemprop="name">Madhouse</span></a> </span> </div>
                      <div>Producers: <span> <a href="/producers/at-x"><span>AT-X</span></a>, <a
                            href="/producers/frontier-works"><span>Frontier Works</span></a>, <a
                            href="/producers/movic"><span>Movic</span></a>, <a
                            href="/producers/media-factory"><span>Media Factory</span></a> </span> </div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="rate-box" id="anime-rating" itemprop="aggregateRating" itemscope=""
                itemtype="https://schema.org/AggregateRating" data-id="c4Ky-a4" data-alid="19815" data-score="9.71">
                <p class="text-primary">How’d you rate this anime?</p> <span class="value"
                  itemprop="ratingValue">9.71</span> <span>by 174 reviews</span> <span class="d-none"
                  itemprop="bestRating">10</span> <span class="d-none" itemprop="reviewCount">174</span>
                <div class="stars"> <i class="active"></i> <i class="active"></i> <i class="active"></i> <i
                    class="active"></i> <i></i> </div>
              </div>
            </section>
            <section class="player-section">
              <div aria-label="breadcrumb">
                <ol class="breadcrumb">
                  <li class="breadcrumb-item"><a href="/home"><i class="fa-solid fa-house"></i> Home</a></li>
                  <li class="breadcrumb-item"><a href="/tv">TV</a></li>
                  <li class="breadcrumb-item active" data-jp="No Game No Life">No Game, No Life</li>
                </ol>
              </div>
              <div class="player-wrap">
                <div class="player-main playable">
                  <div class="player-bg "
                    style="background-image: url('https://static1.animekai.bz/e8/i/3/77/67664aa9edf10@1280.jpg')"></div>
                  <div id="player"> <button class="play-btn"> <i class="fa-solid fa-play"></i> </button> </div>
                </div>
              </div>
              <div id="player-control">
                <div class="ctrl expand" data-bs-original-title="off"><button class="btn"><i
                      class="fa-solid fa-expand"></i><span>Expand</span></button></div>
                <div class="ctrl light" data-bs-original-title="off"><button class="btn"><i
                      class="fa-solid fa-moon"></i><span>Focus</span></button></div>
                <div class="ctrl autonext"><button class="btn active" data-bs-original-title="on"><i
                      class="fa-solid fa-forward"></i><span>AutoNext</span></button></div>
                <div class="ctrl autoplay"><button class="btn" data-bs-original-title="off"><i
                      class="fa-solid fa-circle-play"></i><span>AutoPlay</span></button></div>
                <div class="ctrl autoskip" data-bs-toggle="tooltip" data-bs-placement="right"
                  data-bs-original-title="S"><button class="btn" data-bs-original-title="off"><i
                      class="fa-solid fa-scissors"></i><span>AutoSkip</span></button></div>
                <div class="ctrl dropdown add-skiptime" style="display: none;"> <button class="btn" type="button"
                    data-bs-toggle="dropdown" data-bs-display="static" data-bs-auto-close="false"><i
                      class="fa-solid fa-stopwatch"></i><span>Add Skiptime</span></button>
                  <div class="dropdown-menu dropdown-menu-end skip-input">
                    <div class="d-flex justify-content-end"><i class="fa-sharp fa-solid fa-circle-info"
                        data-bs-toggle="tooltip"
                        aria-label="Dear hero, your contribution of intro and outro durations can help everyone enjoy a smoother, more seamless experience. Every little effort makes a big difference in our shared journey! Let’s work together to create an even better experience for all. Your support is greatly appreciated!"
                        data-bs-original-title="Dear hero, your contribution of intro and outro durations can help everyone enjoy a smoother, more seamless experience. Every little effort makes a big difference in our shared journey! Let’s work together to create an even better experience for all. Your support is greatly appreciated!"></i>
                    </div> <span class="text-secondary">Intro Duration</span>
                    <div>
                      <div class="input-wrapper"> <span>Begin:</span> <input type="text" name="intro_begin"
                          class="form-control form-control-sm" placeholder="00:00:00" autocomplete="off"> </div>
                      <div class="input-wrapper"> <span>End:</span> <input type="text" name="intro_end"
                          class="form-control form-control-sm input-end" placeholder="00:00:00" autocomplete="off">
                      </div>
                    </div> <span class="mt-2 text-secondary">Outro Duration</span>
                    <div>
                      <div class="input-wrapper"> <span>Begin:</span> <input type="text" name="outro_begin"
                          class="form-control form-control-sm input-start" placeholder="00:00:00" autocomplete="off">
                      </div>
                      <div class="input-wrapper"> <span>End:</span> <input type="text" name="outro_end"
                          class="form-control form-control-sm" placeholder="00:00:00" autocomplete="off"> </div>
                    </div> <button class="submit btn mt-3 w-100 btn-sm btn-primary">Contribute</button>
                  </div>
                </div>
                <div class="ctrl prev-next"> <button class="btn prev" data-bs-toggle="tooltip" data-bs-placement="right"
                    data-bs-original-title="B"><i class="fa-solid fa-backward-step"></i><span>Prev</span></button>
                </div>
                <div class="ctrl prev-next"> <button class="btn next" data-bs-toggle="tooltip" data-bs-placement="right"
                    data-bs-original-title="N"><i class="fa-solid fa-forward-step"></i><span>Next</span></button> </div>
                <div class="ctrl dropdown add2list user-bookmark" data-id="c4Ky-a4" data-alid="19815" data-live="true">
                  <button class="btn" type="button" data-bs-offset="0,20" data-bs-toggle="dropdown"><i
                      class="fa-solid fa-heart"></i><span>Bookmark</span></button>
                  <div class="dropdown-menu dropdown-menu-end"></div>
                </div>
                <div class="ctrl w2g"><button class="btn w2g-trigger" data-id="c4Ky-a4"><i
                      class="fa-solid fa-users-line"></i><span>W2G</span></button></div>
                <div class="ctrl report"><button class="btn modal-trigger" data-id="report"><i
                      class="fa-solid fa-bug"></i><span>Report</span></button></div>
              </div>
              <div class="player-bottom">
                <div id="player-server">
                  <div class="server-note">
                    <p>You are watching <b>Episode 4</b></p> <span>If the current server is not working, please try
                      switching to other servers.</span>
                  </div>
                  <div class="server-wrap">
                    <div class="server-type" data-tabs=".server-wrap .server-items"> <span class="tab active"
                        data-id="sub"> <svg class="sub">
                          <use href="#sub"></use>
                        </svg> Hard Sub </span> <span class="tab " data-id="softsub"> <svg class="sub">
                          <use href="#sub"></use>
                        </svg> Soft Sub </span> <span class="tab " data-id="dub"> <svg class="dub">
                          <use href="#dub"></use>
                        </svg> Dub </span> </div>
                    <div class="server-items lang-group" data-id="sub" style="display: ;"> <span class="server active"
                        data-sid="3" data-eid="c4C99qGo" data-lid="dIC8-KSk4g">Server 1</span> <span class="server"
                        data-sid="2" data-eid="c4C99qGo" data-lid="dIC8-KSk4Q">Server 2</span> </div>
                    <div class="server-items lang-group" data-id="softsub" style="display: none;"> <span class="server"
                        data-sid="3" data-eid="c4O68aWn" data-lid="dIC8-KSg4g">Server 1</span> <span class="server"
                        data-sid="2" data-eid="c4O68aWn" data-lid="dIC8-KSg4Q">Server 2</span> </div>
                    <div class="server-items lang-group" data-id="dub" style="display: none;"> <span class="server"
                        data-sid="3" data-eid="c4Kz8aKk" data-lid="dIWz-Kem4w">Server 1</span> <span class="server"
                        data-sid="2" data-eid="c4Kz8aKk" data-lid="dIWz-Kem4g">Server 2</span> </div>
                  </div>
                </div>
              </div>
            </section>
            <section class="episode-section">
              <div class="head-top">
                <div class="title">Episodes</div>
                <div>
                  <form>
                    <div class="form-group"> <input type="text" class="form-control form-control-sm" placeholder="Find">
                    </div>
                  </form>
                  <div class="subdub-sw"> <span data-value="sub" class="active"><svg class="sub">
                        <use href="#sub"></use>
                      </svg></span> <span data-value="dub" class="active"><svg class="dub">
                        <use href="#dub"></use>
                      </svg></span> </div> <button class="btn list-sw active"><i
                      class="fa-solid fa-square-list"></i></button>
                </div>
              </div>
              <div class="head-bot"> <button class="btn range-nav prev disabled"><i
                    class="fa-solid fa-sharp fa-angle-left"></i></button>
                <div class="dropdown"> <button class="btn range-label dropdown-arrow" type="button"
                    data-bs-toggle="dropdown">001-012</button>
                  <div class="dropdown-menu range-options">
                    <div class="dropdown-item item active" data-value="001-012" active="1">001-012</div>
                  </div>
                </div> <button class="btn range-nav next disabled"><i
                    class="fa-solid fa-sharp fa-angle-right"></i></button>
              </div>
              <div class="eplist titles">
                <ul class="range" data-range="001-012" style="display: block;">
                  <li><a href="https://animekai.bz/watch/no-game-no-life-5xp8#ep=1" num="1" slug="1" langs="3"
                      token="c4HurPL46Rvhjn5Q2I-D" class="" active="1"> 1 <span data-jp="">Beginner</span> </a></li>
                  <li><a href="https://animekai.bz/watch/no-game-no-life-5xp8#ep=2" num="2" slug="2" langs="3"
                      token="Jd7y8fjjqRG6iWkU2ojV" class="" active="1"> 2 <span data-jp="">Challenger</span> </a></li>
                  <li><a href="https://animekai.bz/watch/no-game-no-life-5xp8#ep=3" num="3" slug="3" langs="3"
                      token="Ota5qvzjoU-yjm8fxM3U" class="" active="1"> 3 <span data-jp="">Expert</span> </a></li>
                  <li><a href="https://animekai.bz/watch/no-game-no-life-5xp8#ep=4" num="4" slug="4" langs="3"
                      token="dN_4tqDlokbm239C04mJ" class="active" active="1"> 4 <span data-jp="">Grandmaster</span> </a>
                  </li>
                  <li><a href="https://animekai.bz/watch/no-game-no-life-5xp8#ep=5" num="5" slug="5" langs="3"
                      token="J4L9rPzj6EbvhnUW1saI" class="" active="1"> 5 <span data-jp="">Weak Square</span> </a></li>
                  <li><a href="https://animekai.bz/watch/no-game-no-life-5xp8#ep=6" num="6" slug="6" langs="3"
                      token="OsTnrPzlqA6x0HRCy8mB" class="" active="1"> 6 <span data-jp="">Interesting</span> </a></li>
                  <li><a href="https://animekai.bz/watch/no-game-no-life-5xp8#ep=7" num="7" slug="7" langs="3"
                      token="dIbw-Pjl4w3lm31LzI-A" class="" active="1"> 7 <span data-jp="">Sacrifice</span> </a></li>
                  <li><a href="https://animekai.bz/watch/no-game-no-life-5xp8#ep=8" num="8" slug="8" langs="3"
                      token="KNe_9e_lukism29fiIaX" class="" active="1"> 8 <span data-jp="">Fake End</span> </a></li>
                  <li><a href="https://animekai.bz/watch/no-game-no-life-5xp8#ep=9" num="9" slug="9" langs="3"
                      token="L8Hn8qXjukquhnVRhMnc" class="" active="1"> 9 <span data-jp="">Sky Walk</span> </a></li>
                  <li><a href="https://animekai.bz/watch/no-game-no-life-5xp8#ep=10" num="10" slug="10" langs="3"
                      token="dIbut-D5qBi4knpMy8nb" class="" active="1"> 10 <span data-jp="">Blue Rose</span> </a></li>
                  <li><a href="https://animekai.bz/watch/no-game-no-life-5xp8#ep=11" num="11" slug="11" langs="3"
                      token="LIXzq_j4okag23pC0M-X" class="" active="1"> 11 <span data-jp="">Killing Giant</span> </a>
                  </li>
                  <li><a href="https://animekai.bz/watch/no-game-no-life-5xp8#ep=12" num="12" slug="12" langs="3"
                      token="KYO5rq_xtQbn0HpUjcjY" class="" active="1"> 12 <span data-jp="">Rule Number 10</span> </a>
                  </li>
                </ul>
              </div>
            </section>
          </div>
        </div>
        <div
          style="width: 100%; height: 100%; position: fixed; left: 0px; top: 0px; z-index: 43046721; background: rgb(0, 0, 0); opacity: 0.95; display: none;">
        </div>
      </div>
      <div class="social-share-watch">
        <div class="container">
          <section id="social-sharing" class="justify-content-start">
            <div class="sharing-info">
              <div class="gif-sharing"></div>
              <div class="text-sharing">
                <h4>Love this site?</h4> <span>Share it and let others know!</span>
              </div>
            </div>
            <div class="sharethis-inline-share-buttons st-left st-has-labels st-hidden st-inline-share-buttons"
              data-url="https://animekai.bz/watch/no-game-no-life-5xp8" id="st-2">
              <div class="st-total st-hidden">
                <span class="st-label"></span>
                <span class="st-shares">
                  Shares
                </span>
              </div>
              <div class="st-btn st-first st-remove-label" data-network="facebook" style="display: none;">
                <img alt="facebook sharing button" src="https://platform-cdn.sharethis.com/img/facebook.svg">
                <span class="st-label"></span>
              </div>
              <div class="st-btn st-remove-label" data-network="twitter" style="display: none;">
                <img alt="twitter sharing button" src="https://platform-cdn.sharethis.com/img/twitter.svg">
                <span class="st-label"></span>
              </div>
              <div class="st-btn st-remove-label" data-network="messenger" style="display: none;">
                <img alt="messenger sharing button" src="https://platform-cdn.sharethis.com/img/messenger.svg">
                <span class="st-label"></span>
              </div>
              <div class="st-btn st-remove-label" data-network="reddit" style="display: none;">
                <img alt="reddit sharing button" src="https://platform-cdn.sharethis.com/img/reddit.svg">
                <span class="st-label"></span>
              </div>
              <div class="st-btn st-remove-label" data-network="whatsapp" style="display: none;">
                <img alt="whatsapp sharing button" src="https://platform-cdn.sharethis.com/img/whatsapp.svg">
                <span class="st-label"></span>
              </div>
              <div class="st-btn st-last st-remove-label" data-network="telegram" style="display: none;">
                <img alt="telegram sharing button" src="https://platform-cdn.sharethis.com/img/telegram.svg">
                <span class="st-label"></span>
              </div>
            </div>
          </section>
        </div>
      </div>
      <div class="container">
        <div class="dual-col">
          <aside class="scontent">
            <section id="comment" data-id="t_ey5e">
              <div class="shead justify"> <button type="button"
                  class="onoff-toggle stitle text-uppercase">Comments</button>
                <div class="shead-r">
                  <div class="snav"> <span class="tab" data-id="anime">Anime</span> <span class="tab active"
                      data-id="episode">Episode <span class="ep-num">4</span> <span class="ep-lang">sub</span></span>
                  </div>
                </div>
              </div>
              <div class="alert alert-info"> If you don't mind, please leave a comment and share your thoughts with
                everyone—it will make the website even more lively! Many people are eager to read your comments! 🌸.
                <br> Please take a moment to <a href="https://rentry.co/AnimeKaiCommentPolicy" class="text-primary"
                  target="_blank" rel="nofollow">read the comment rules</a> before posting. </div>
              <div class="body" style="">
                <div id="cm-thread">
                  <div id="cm-widget" data-tid="12548">
                    <div class="cm-head">
                      <div> <span id="cm-count">2 comments</span> </div>
                      <div class="sort-cm"> <a href="#" data-value="best" class="active">Best</a> <a href="#"
                          data-value="newest">Newest</a> <a href="#" data-value="oldest">Oldest</a> </div>
                    </div>
                    <div class="cm-item item-editor" data-parent="0" style="display:">
                      <div class="main">
                        <div class="avatar"> <img
                            src="https://animekai.bz/assets/build/37585a39fe8c8d8fafbc397beead71509e/images/no-avatar.png">
                        </div>
                        <div class="detail">
                          <form class="cm-editor"> <textarea class="form-control" name="content"
                              placeholder="Write your comment.." minlength="6" maxlength="2000" required=""></textarea>
                            <div class="preview content-rendered"> </div>
                            <div class="editor-ctrl" style="display: none;">
                              <div>
                                <div class="toolbar">
                                  <div class="tb-item" data-value="bold" data-bs-toggle="tooltip"
                                    data-bs-placement="bottom" aria-label="Bold" data-bs-original-title="Bold"><i
                                      class="fa-solid fa-bold"></i></div>
                                  <div class="tb-item" data-value="quote" data-bs-toggle="tooltip"
                                    data-bs-placement="bottom" aria-label="Quote" data-bs-original-title="Quote"><i
                                      class="fa-solid fa-quote-left"></i></div>
                                  <div class="tb-item" data-value="spoil" data-bs-toggle="tooltip"
                                    data-bs-placement="bottom" aria-label="Spoil" data-bs-original-title="Spoil"><i
                                      class="fa-solid fa-eye-low-vision"></i></div>
                                  <div class="separator"></div>
                                  <div class="tb-item mode" style="display: none;" data-value="edit"
                                    data-bs-toggle="tooltip" data-bs-placement="bottom" aria-label="Edit"
                                    data-bs-original-title="Edit"><i class="fa-solid fa-pen-to-square"></i></div>
                                  <div class="tb-item mode" data-value="preview" data-bs-toggle="tooltip"
                                    data-bs-placement="bottom" aria-label="Preview" data-bs-original-title="Preview"><i
                                      class="fa-solid fa-eye"></i></div>
                                </div>
                              </div>
                              <div> <button type="button" class="btn btn-cancel">Cancel</button> <button type="submit"
                                  class="btn btn-primary">Send</button> </div>
                            </div>
                          </form>
                        </div>
                      </div>
                    </div>
                    <div class="cm-items">
                      <div class="cm-item " data-id="54689" data-parent="0">
                        <div class="main">
                          <div class="avatar"><a href="/user/nk7n/profile"><img
                                src="/assets/avatars/Pokemon/24.jpg"></a></div>
                          <div class="detail">
                            <div class="header">
                              <div class="collapser"><i></i></div>
                              <div class="username "> <a href="/user/nk7n/profile">ironman</a> </div> <span>1 month ago
                              </span>
                            </div>
                            <div class="content content-rendered"> <span class="timestamp" data-value="834">13:54</span>
                              he could have said KING BOB!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! </div>
                            <div class="ctrls"> <button class="reaction " data-value="like"><i
                                  class="fa-solid fa-thumbs-up"></i><span>0</span></button> <button class="reaction "
                                data-value="dislike"><i class="fa-solid fa-thumbs-down"></i><span>0</span></button>
                              <button class="reply"><i class="fa-solid fa-reply"></i><span>Reply</span></button>
                              <div class="dropdown"> <button type="button" data-bs-toggle="dropdown"> <i
                                    class="fa-solid fa-ellipsis"></i><span>More</span> </button>
                                <ul class="dropdown-menu more">
                                  <li><a class="dropdown-item report" href="#">Report</a></li>
                                  <li><a class="dropdown-item copy-url" href="#">Copy Link</a></li>
                                </ul>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div class="replies"> </div>
                      </div>
                      <div class="cm-item " data-id="142496" data-parent="0">
                        <div class="main">
                          <div class="avatar"><a href="/user/j21z3/profile"><img
                                src="/assets/avatars/Pokemon/09.jpg"></a></div>
                          <div class="detail">
                            <div class="header">
                              <div class="collapser"><i></i></div>
                              <div class="username "> <a href="/user/j21z3/profile">dentbot</a> </div> <span>6 days ago
                              </span>
                            </div>
                            <div class="content content-rendered"> bro out here dropping hella good speeches, something
                              tells me he battled martin luther king jr in a game of speeching </div>
                            <div class="ctrls"> <button class="reaction " data-value="like"><i
                                  class="fa-solid fa-thumbs-up"></i><span>0</span></button> <button class="reaction "
                                data-value="dislike"><i class="fa-solid fa-thumbs-down"></i><span>0</span></button>
                              <button class="reply"><i class="fa-solid fa-reply"></i><span>Reply</span></button>
                              <div class="dropdown"> <button type="button" data-bs-toggle="dropdown"> <i
                                    class="fa-solid fa-ellipsis"></i><span>More</span> </button>
                                <ul class="dropdown-menu more">
                                  <li><a class="dropdown-item report" href="#">Report</a></li>
                                  <li><a class="dropdown-item copy-url" href="#">Copy Link</a></li>
                                </ul>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div class="replies"> </div>
                      </div>
                    </div>
                    <div class="cm-loading"></div>
                    <div class="cm-foot"><button class="btn load-more" style="display: none;">Load More
                        Comments</button></div>
                  </div><template id="cm-report-options">
                    <li><a class="dropdown-item report-option back" href="#"><i class="fa-solid fa-arrow-left-long"></i>
                        Back</a></li>
                    <li><a class="dropdown-item report-option" data-value="spam" href="#">Spam</a></li>
                    <li><a class="dropdown-item report-option" data-value="spoil" href="#">Spoil</a></li>
                    <li><a class="dropdown-item report-option" data-value="advertising" href="#">Advertising</a></li>
                    <li><a class="dropdown-item report-option" data-value="toxic" href="#">Toxic</a></li>
                    <li><a class="dropdown-item report-option" data-value="nsfw" href="#">NSFW</a></li>
                    <li><a class="dropdown-item report-option" data-value="off_topic" href="#">Off-topic</a></li>
                    <li><a class="dropdown-item report-option" data-value="username" href="#">Username</a></li>
                  </template>
                </div>
              </div>
            </section>
          </aside>
          <aside class="sidebar">
            <section class="sidebar-section hide-bg-mobile" id="related-anime">
              <div class="shead justify">
                <div class="stitle">Relations</div>
                <div class="dropdown" data-tabs="" data-label="#related-label"> <button
                    class="btn btn-primary dropdown-arrow" type="button" data-bs-toggle="dropdown"
                    id="related-label">All</button>
                  <div class="dropdown-menu"> <a class="dropdown-item tab active" href="javascript:;"
                      data-id="0">All</a> </div>
                </div>
              </div>
              <div class="tab-body" data-id="0" style="display: block;">
                <div class="aitem-col"> <a href="/watch/no-game-no-life-zero-71p0" class="aitem"
                    style="background-image:url('https://static1.animekai.bz/5e/i/a/88/67664a2c7b6ff@300.jpg');">
                    <div class="detail">
                      <div class="title" data-jp="No Game No Life Zero">No Game, No Life: Zero</div>
                      <div class="info"> <span class="sub"><svg>
                            <use href="#sub"></use>
                          </svg>1</span> <span class="dub"><svg>
                            <use href="#dub"></use>
                          </svg>1</span> <span><b>MOVIE</b></span> <span><b class="text-muted">Prequel</b></span> </div>
                    </div>
                  </a> <a href="/watch/no-game-no-life-specials-82w0" class="aitem"
                    style="background-image:url('https://static1.animekai.bz/07/i/2/3c/6766495a71e0b@300.jpg');">
                    <div class="detail">
                      <div class="title" data-jp="No Game No Life Specials">No Game, No Life Specials</div>
                      <div class="info"> <span class="sub"><svg>
                            <use href="#sub"></use>
                          </svg>6</span> <span class="dub"><svg>
                            <use href="#dub"></use>
                          </svg>6</span> <span><b>6</b></span> <span><b>SPECIAL</b></span> <span><b
                            class="text-muted">Side Story</b></span> </div>
                    </div>
                  </a> </div>
              </div>
            </section>
            <section class="sidebar-section hide-bg-mobile">
              <div class="shead justify">
                <div class="stitle">Recommended</div>
              </div>
              <div class="aitem-col"> <a href="/watch/konosuba-gods-blessing-on-this-wonderful-world-0kp7" class="aitem"
                  style="background-image:url('https://static1.animekai.bz/ce/i/1/ec/676649ce79142@300.jpg');">
                  <div class="detail">
                    <div class="title" data-jp="Kono Subarashii Sekai ni Shukufuku wo!">KonoSuba: God's Blessing on This
                      Wonderful World!</div>
                    <div class="info"> <span class="sub"><svg>
                          <use href="#sub"></use>
                        </svg>10</span> <span class="dub"><svg>
                          <use href="#dub"></use>
                        </svg>10</span> <span><b>10</b></span> <span><b>TV</b></span> </div>
                  </div>
                </a> <a href="/watch/overlord-mkqg" class="aitem"
                  style="background-image:url('https://static1.animekai.bz/e4/i/b/58/6766493ab4e7c@300.jpg');">
                  <div class="detail">
                    <div class="title" data-jp="Overlord">Overlord</div>
                    <div class="info"> <span class="sub"><svg>
                          <use href="#sub"></use>
                        </svg>13</span> <span class="dub"><svg>
                          <use href="#dub"></use>
                        </svg>13</span> <span><b>13</b></span> <span><b>TV</b></span> </div>
                  </div>
                </a> <a href="/watch/code-geass-lelouch-of-the-rebellion-oxrm" class="aitem"
                  style="background-image:url('https://static1.animekai.bz/a6/i/3/52/67664928cd5ca@300.jpg');">
                  <div class="detail">
                    <div class="title" data-jp="Code Geass: Hangyaku no Lelouch">Code Geass: Lelouch of the Rebellion
                    </div>
                    <div class="info"> <span class="sub"><svg>
                          <use href="#sub"></use>
                        </svg>25</span> <span class="dub"><svg>
                          <use href="#dub"></use>
                        </svg>25</span> <span><b>25</b></span> <span><b>TV</b></span> </div>
                  </div>
                </a> <a href="/watch/one-outs-07le" class="aitem"
                  style="background-image:url('https://static1.animekai.bz/ac/i/d/04/67664aa7d3f3d@300.jpg');">
                  <div class="detail">
                    <div class="title" data-jp="One Outs">One Outs</div>
                    <div class="info"> <span class="sub"><svg>
                          <use href="#sub"></use>
                        </svg>25</span> <span><b>25</b></span> <span><b>TV</b></span> </div>
                  </div>
                </a> <a href="/watch/fantascience-world-gulliver-boy-43xm" class="aitem"
                  style="background-image:url('https://static1.animekai.bz/5a/i/4/f3/67664a1f2ada7@300.jpg');">
                  <div class="detail">
                    <div class="title" data-jp="Kuusou Kagaku Sekai Gulliver Boy">Fantascience World Gulliver Boy</div>
                    <div class="info"> <span class="sub"><svg>
                          <use href="#sub"></use>
                        </svg>11</span> <span><b>50</b></span> <span><b>TV</b></span> </div>
                  </div>
                </a> </div>
            </section>
          </aside>
        </div>
      </div>
      <script id="syncData"
        type="application/json">{"page":"episode","name":"No Game, No Life","anime_id":"c4Ky-a4","mal_id":"19815","al_id":"19815","series_url":"https://animekai.bz/watch/no-game-no-life-5xp8","episode":"4"}</script>
    </main>
    <footer>
      <div class="top-footer">
        <div class="container">
          <div class="wrapper">
            <div class="azlist">
              <div>
                <div>A-Z List</div> <span>Searching anime order by alphabet name A to Z.</span>
              </div>
              <ul>
                <li><a href="/az-list">All</a></li>
                <li><a href="/az-list/0-9">0-9</a></li>
                <li><a href="/az-list/A">A</a></li>
                <li><a href="/az-list/B">B</a></li>
                <li><a href="/az-list/C">C</a></li>
                <li><a href="/az-list/D">D</a></li>
                <li><a href="/az-list/E">E</a></li>
                <li><a href="/az-list/F">F</a></li>
                <li><a href="/az-list/G">G</a></li>
                <li><a href="/az-list/H">H</a></li>
                <li><a href="/az-list/I">I</a></li>
                <li><a href="/az-list/J">J</a></li>
                <li><a href="/az-list/K">K</a></li>
                <li><a href="/az-list/L">L</a></li>
                <li><a href="/az-list/M">M</a></li>
                <li><a href="/az-list/N">N</a></li>
                <li><a href="/az-list/O">O</a></li>
                <li><a href="/az-list/P">P</a></li>
                <li><a href="/az-list/Q">Q</a></li>
                <li><a href="/az-list/R">R</a></li>
                <li><a href="/az-list/S">S</a></li>
                <li><a href="/az-list/T">T</a></li>
                <li><a href="/az-list/U">U</a></li>
                <li><a href="/az-list/V">V</a></li>
                <li><a href="/az-list/W">W</a></li>
                <li><a href="/az-list/X">X</a></li>
                <li><a href="/az-list/Y">Y</a></li>
                <li><a href="/az-list/Z">Z</a></li>
              </ul>
            </div>
            <div class="menu-footer"> <a href="javascript:;" class="modal-trigger" data-id="request">REQUEST</a> <a
                href="/contact">CONTACT US</a> </div>
          </div>
        </div>
      </div>
      <div class="bot-footer">
        <div class="container">
          <div class="wrapper">
            <div>
              <div>Copyright ©AnimeKAI. All Rights Reserved</div> <span>This site does not store any files on its
                server. All contents are provided by non-affiliated third parties.</span>
              <div> <span>Socials:</span> <a data-bs-toggle="tooltip" href="http://x.com/animekai_to" target="_blank"
                  rel="nofollow" aria-label="Official X Page" data-bs-original-title="Official X Page"><i
                    class="fa-brands fa-twitter"></i></a> <a data-bs-toggle="tooltip"
                  href="https://discord.gg/at5d9rkfUy" target="_blank" rel="nofollow"
                  aria-label="Unofficial Discord Server" data-bs-original-title="Unofficial Discord Server"><i
                    class="fa-brands fa-discord"></i></a> <a data-bs-toggle="tooltip"
                  href="https://www.reddit.com/r/AnimeKAI/" target="_blank" rel="nofollow"
                  aria-label="Unofficial Reddit Forum" data-bs-original-title="Unofficial Reddit Forum"><i
                    class="fa-brands fa-reddit-alien"></i></a> </div>
            </div>
            <div class="logo-footer"><img
                src="https://animekai.bz/assets/uploads/37585a39fe8c8d8fafbc397bfbf5374ecac859ea6a0886b7dc.png"></div>
          </div>
        </div>
      </div>
    </footer>
  </div><svg class="d-none">
    <symbol version="1.1" id="dub" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px"
      y="0px" xml:space="preserve" viewBox="0 0 8.9 9.6">
      <defs></defs>
      <path d="M7.9.7c-1.1-.9-2.8-.8-3.7.3-.9,1.1-.8,2.8.3,3.7,1.1.9,2.8.8,3.7-.3.9-1.1.8-2.8-.3-3.7Z"></path>
      <path d="M3,3.9L.1,8l1.7,1.4,3.6-3.5c-.5-.1-1-.3-1.5-.7-.4-.4-.8-.8-1-1.4Z"></path>
    </symbol>
    <symbol version="1.1" id="sub" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px"
      y="0px" xml:space="preserve" viewBox="0 0 15 9">
      <path
        d="M5.04346 5.85205H6.92334C6.89827 6.39632 6.75146 6.87614 6.48291 7.2915C6.21436 7.70687 5.84196 8.03092 5.36572 8.26367C4.89307 8.49284 4.33447 8.60742 3.68994 8.60742C3.16715 8.60742 2.69987 8.51969 2.28809 8.34424C1.87988 8.16878 1.53255 7.91634 1.24609 7.58691C0.963216 7.25749 0.746582 6.85824 0.596191 6.38916C0.449382 5.92008 0.375977 5.39193 0.375977 4.80469V4.38037C0.375977 3.79313 0.452962 3.26497 0.606934 2.7959C0.764486 2.32324 0.986491 1.9222 1.27295 1.59277C1.56299 1.25977 1.91032 1.00553 2.31494 0.830078C2.71956 0.654622 3.16895 0.566895 3.66309 0.566895C4.34342 0.566895 4.91813 0.688639 5.38721 0.932129C5.85628 1.17562 6.21973 1.51042 6.47754 1.93652C6.73535 2.35905 6.88753 2.84066 6.93408 3.38135H5.0542C5.04704 3.08773 4.99691 2.84245 4.90381 2.64551C4.81071 2.44499 4.6639 2.2946 4.46338 2.19434C4.26286 2.09408 3.99609 2.04395 3.66309 2.04395C3.43034 2.04395 3.22803 2.08691 3.05615 2.17285C2.88428 2.25879 2.74105 2.39486 2.62646 2.58105C2.51188 2.76725 2.42594 3.00895 2.36865 3.30615C2.31494 3.59977 2.28809 3.95426 2.28809 4.36963V4.80469C2.28809 5.22005 2.31315 5.57454 2.36328 5.86816C2.41341 6.16178 2.49398 6.40169 2.60498 6.58789C2.71598 6.77409 2.85921 6.91195 3.03467 7.00146C3.2137 7.0874 3.43213 7.13037 3.68994 7.13037C3.9764 7.13037 4.2181 7.08561 4.41504 6.99609C4.61198 6.90299 4.76416 6.76335 4.87158 6.57715C4.979 6.38737 5.0363 6.14567 5.04346 5.85205ZM12.2622 5.85205H14.1421C14.117 6.39632 13.9702 6.87614 13.7017 7.2915C13.4331 7.70687 13.0607 8.03092 12.5845 8.26367C12.1118 8.49284 11.5532 8.60742 10.9087 8.60742C10.3859 8.60742 9.91862 8.51969 9.50684 8.34424C9.09863 8.16878 8.7513 7.91634 8.46484 7.58691C8.18197 7.25749 7.96533 6.85824 7.81494 6.38916C7.66813 5.92008 7.59473 5.39193 7.59473 4.80469V4.38037C7.59473 3.79313 7.67171 3.26497 7.82568 2.7959C7.98324 2.32324 8.20524 1.9222 8.4917 1.59277C8.78174 1.25977 9.12907 1.00553 9.53369 0.830078C9.93831 0.654622 10.3877 0.566895 10.8818 0.566895C11.5622 0.566895 12.1369 0.688639 12.606 0.932129C13.075 1.17562 13.4385 1.51042 13.6963 1.93652C13.9541 2.35905 14.1063 2.84066 14.1528 3.38135H12.2729C12.2658 3.08773 12.2157 2.84245 12.1226 2.64551C12.0295 2.44499 11.8826 2.2946 11.6821 2.19434C11.4816 2.09408 11.2148 2.04395 10.8818 2.04395C10.6491 2.04395 10.4468 2.08691 10.2749 2.17285C10.103 2.25879 9.9598 2.39486 9.84521 2.58105C9.73063 2.76725 9.64469 3.00895 9.5874 3.30615C9.53369 3.59977 9.50684 3.95426 9.50684 4.36963V4.80469C9.50684 5.22005 9.5319 5.57454 9.58203 5.86816C9.63216 6.16178 9.71273 6.40169 9.82373 6.58789C9.93473 6.77409 10.078 6.91195 10.2534 7.00146C10.4325 7.0874 10.6509 7.13037 10.9087 7.13037C11.1951 7.13037 11.4368 7.08561 11.6338 6.99609C11.8307 6.90299 11.9829 6.76335 12.0903 6.57715C12.1978 6.38737 12.255 6.14567 12.2622 5.85205Z">
      </path>
    </symbol>
  </svg>
  <script>(function () { function c() { var b = a.contentDocument || a.contentWindow.document; if (b) { var d = b.createElement('script'); d.innerHTML = "window.__CF$cv$params={r:'951c0973bf705778',t:'MTc1MDI2MjgxOC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);"; b.getElementsByTagName('head')[0].appendChild(d) } } if (document.body) { var a = document.createElement('iframe'); a.height = 1; a.width = 1; a.style.position = 'absolute'; a.style.top = 0; a.style.left = 0; a.style.border = 'none'; a.style.visibility = 'hidden'; document.body.appendChild(a); if ('loading' !== document.readyState) c(); else if (window.addEventListener) document.addEventListener('DOMContentLoaded', c); else { var e = document.onreadystatechange || function () { }; document.onreadystatechange = function (b) { e(b); 'loading' !== document.readyState && (document.onreadystatechange = e, c()) } } } })();</script>
  <iframe height="1" width="1"
    style="position: absolute; top: 0px; left: 0px; border: none; visibility: hidden;"></iframe>
</body>

</html>
