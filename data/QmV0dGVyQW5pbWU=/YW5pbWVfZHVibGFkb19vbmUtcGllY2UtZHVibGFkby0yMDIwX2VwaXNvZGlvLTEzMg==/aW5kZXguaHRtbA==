<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="google-site-verification" content="WTIRFeN7V8JvB4kCXIVadZ2Xu_A8qn1BnN7m7vV_Xh8">
  <title>BetterAnime - Assistir One Piece - Dublado (2020) - Episódio 132 até em FULL HD</title>
  <link rel="apple-touch-icon" sizes="180x180" href="https://betteranime.net/img/favicon/apple-touch-icon.png">
  <link rel="apple-touch-icon" sizes="57x57" href="https://betteranime.net/img/favicon/apple-icon-57x57">
  <link rel="apple-touch-icon" sizes="60x60" href="https://betteranime.net/img/favicon/apple-icon-60x60">
  <link rel="apple-touch-icon" sizes="72x72" href="https://betteranime.net/img/favicon/apple-icon-72x72">
  <link rel="apple-touch-icon" sizes="76x76" href="https://betteranime.net/img/favicon/apple-icon-76x76">
  <link rel="apple-touch-icon" sizes="114x114" href="https://betteranime.net/img/favicon/apple-icon-114x114">
  <link rel="apple-touch-icon" sizes="120x120" href="https://betteranime.net/img/favicon/apple-icon-120x120">
  <link rel="apple-touch-icon" sizes="144x144" href="https://betteranime.net/img/favicon/apple-icon-144x144">
  <link rel="apple-touch-icon" sizes="152x152" href="https://betteranime.net/img/favicon/apple-icon-152x152">
  <link rel="apple-touch-icon" sizes="180x180" href="https://betteranime.net/img/favicon/apple-icon-180x180">
  <link rel="icon" type="image/png" sizes="192x192" href="https://betteranime.net/img/favicon/android-icon-192x192">
  <link rel="icon" type="image/png" sizes="32x32" href="https://betteranime.net/img/favicon/favicon-32x32">
  <link rel="icon" type="image/png" sizes="96x96" href="https://betteranime.net/img/favicon/favicon-96x96">
  <link rel="icon" type="image/png" sizes="16x16" href="https://betteranime.net/img/favicon/favicon-16x16">
  <link rel="manifest" href="https://betteranime.net/img/favicon/manifest.json">
  <link rel="mask-icon" href="https://betteranime.net/img/favicon/safari-pinned-tab.svg" color="#5bbad5">
  <link rel="shortcut icon" href="https://betteranime.net/img/favicon/favicon.ico">
  <meta name="msapplication-TileColor" content="#da532c">
  <meta name="msapplication-TileImage" content="https://betteranime.net/img/favicon/ms-icon-144x144.png">
  <meta name="msapplication-config" content="https://betteranime.net/img/favicon/browserconfig.xml">
  <meta name="theme-color" content="#ffffff">


  <!-- Google tag (gtag.js) -->
  <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-C60Y59CHKJ"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-C60Y59CHKJ');
  </script>

  <!-- Fonts -->
  <link rel="dns-prefetch" href="//fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css?family=Nunito|Roboto:300,400,500,700&amp;display=swap|Open+Sans"
    rel="stylesheet">

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css"
    integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l" crossorigin="anonymous">

  <!-- SCRIPTS -->

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"
    integrity="sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg=="
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"
    integrity="sha512-uto9mlQzrs59VwILcLiRYeLKPPbS/bT71da/OEBYEwcdNUk8jYIy+D176RYoop1Da+f9mvkYrmj5MCLZWEtQuA=="
    crossorigin="anonymous"></script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns"
    crossorigin="anonymous"></script>

  <!-- Styles -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" rel="stylesheet">
  <link href="https://betteranime.net/css/all.min.css?v0.1" type="text/css" rel="stylesheet">
  <!-- CSS only -->


  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">
  <link href="https://betteranime.net/css/betterStyle.css?v1.8" rel="stylesheet">

  <style>
    [wire\:loading],
    [wire\:loading\.delay],
    [wire\:loading\.inline-block],
    [wire\:loading\.inline],
    [wire\:loading\.block],
    [wire\:loading\.flex],
    [wire\:loading\.table],
    [wire\:loading\.grid],
    [wire\:loading\.inline-flex] {
      display: none;
    }

    [wire\:loading\.delay\.shortest],
    [wire\:loading\.delay\.shorter],
    [wire\:loading\.delay\.short],
    [wire\:loading\.delay\.long],
    [wire\:loading\.delay\.longer],
    [wire\:loading\.delay\.longest] {
      display: none;
    }

    [wire\:offline] {
      display: none;
    }

    [wire\:dirty]:not(textarea):not(input):not(select) {
      display: none;
    }

    input:-webkit-autofill,
    select:-webkit-autofill,
    textarea:-webkit-autofill {
      animation-duration: 50000s;
      animation-name: livewireautofill;
    }

    @keyframes livewireautofill {
      from {}
    }
  </style>

  <title>BetterAnime</title>
  <meta name="description" content="Assistir One Piece - Dublado (2020) - Episódio 132 em alta qualidade! ">
  <link rel="canonical" href="null">
  <meta property="og:description" content="Assistir One Piece - Dublado (2020) - Episódio 132 em alta qualidade! ">
  <meta property="og:title" content="BetterAnime - O melhor site para assistir animes!">
  <meta property="og:url" content="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-132">
  <meta property="og:image" content="//betterstatic.ga/cover/jZ3Rl9bh0sk97QkZs5umEJvVZjTbCdJHHAJ7FO6k.jpeg">

  <meta name="twitter:description" content="Assistir One Piece - Dublado (2020) - Episódio 132 em alta qualidade! ">
  <meta name="twitter:image0" content="//betterstatic.ga/cover/jZ3Rl9bh0sk97QkZs5umEJvVZjTbCdJHHAJ7FO6k.jpeg">
  <script
    type="application/ld+json">{"@context":"https://schema.org","@type":"WebPage","name":"BetterAnime","description":"Assistir One Piece - Dublado (2020) - Episódio 132 em alta qualidade! ","url":"https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-132","image":"//betterstatic.ga/cover/jZ3Rl9bh0sk97QkZs5umEJvVZjTbCdJHHAJ7FO6k.jpeg"}</script>


  <style>
    .swal2-popup.swal2-toast {
      box-sizing: border-box;
      grid-column: 1/4 !important;
      grid-row: 1/4 !important;
      grid-template-columns: min-content auto min-content;
      padding: 1em;
      overflow-y: hidden;
      background: #fff;
      box-shadow: 0 0 1px rgba(0, 0, 0, .075), 0 1px 2px rgba(0, 0, 0, .075), 1px 2px 4px rgba(0, 0, 0, .075), 1px 3px 8px rgba(0, 0, 0, .075), 2px 4px 16px rgba(0, 0, 0, .075);
      pointer-events: all
    }

    .swal2-popup.swal2-toast>* {
      grid-column: 2
    }

    .swal2-popup.swal2-toast .swal2-title {
      margin: .5em 1em;
      padding: 0;
      font-size: 1em;
      text-align: initial
    }

    .swal2-popup.swal2-toast .swal2-loading {
      justify-content: center
    }

    .swal2-popup.swal2-toast .swal2-input {
      height: 2em;
      margin: .5em;
      font-size: 1em
    }

    .swal2-popup.swal2-toast .swal2-validation-message {
      font-size: 1em
    }

    .swal2-popup.swal2-toast .swal2-footer {
      margin: .5em 0 0;
      padding: .5em 0 0;
      font-size: .8em
    }

    .swal2-popup.swal2-toast .swal2-close {
      grid-column: 3/3;
      grid-row: 1/99;
      align-self: center;
      width: .8em;
      height: .8em;
      margin: 0;
      font-size: 2em
    }

    .swal2-popup.swal2-toast .swal2-html-container {
      margin: .5em 1em;
      padding: 0;
      overflow: initial;
      font-size: 1em;
      text-align: initial
    }

    .swal2-popup.swal2-toast .swal2-html-container:empty {
      padding: 0
    }

    .swal2-popup.swal2-toast .swal2-loader {
      grid-column: 1;
      grid-row: 1/99;
      align-self: center;
      width: 2em;
      height: 2em;
      margin: .25em
    }

    .swal2-popup.swal2-toast .swal2-icon {
      grid-column: 1;
      grid-row: 1/99;
      align-self: center;
      width: 2em;
      min-width: 2em;
      height: 2em;
      margin: 0 .5em 0 0
    }

    .swal2-popup.swal2-toast .swal2-icon .swal2-icon-content {
      display: flex;
      align-items: center;
      font-size: 1.8em;
      font-weight: bold
    }

    .swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring {
      width: 2em;
      height: 2em
    }

    .swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line] {
      top: .875em;
      width: 1.375em
    }

    .swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left] {
      left: .3125em
    }

    .swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right] {
      right: .3125em
    }

    .swal2-popup.swal2-toast .swal2-actions {
      justify-content: flex-start;
      height: auto;
      margin: 0;
      margin-top: .5em;
      padding: 0 .5em
    }

    .swal2-popup.swal2-toast .swal2-styled {
      margin: .25em .5em;
      padding: .4em .6em;
      font-size: 1em
    }

    .swal2-popup.swal2-toast .swal2-success {
      border-color: #a5dc86
    }

    .swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line] {
      position: absolute;
      width: 1.6em;
      height: 3em;
      transform: rotate(45deg);
      border-radius: 50%
    }

    .swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left] {
      top: -0.8em;
      left: -0.5em;
      transform: rotate(-45deg);
      transform-origin: 2em 2em;
      border-radius: 4em 0 0 4em
    }

    .swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right] {
      top: -0.25em;
      left: .9375em;
      transform-origin: 0 1.5em;
      border-radius: 0 4em 4em 0
    }

    .swal2-popup.swal2-toast .swal2-success .swal2-success-ring {
      width: 2em;
      height: 2em
    }

    .swal2-popup.swal2-toast .swal2-success .swal2-success-fix {
      top: 0;
      left: .4375em;
      width: .4375em;
      height: 2.6875em
    }

    .swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line] {
      height: .3125em
    }

    .swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip] {
      top: 1.125em;
      left: .1875em;
      width: .75em
    }

    .swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long] {
      top: .9375em;
      right: .1875em;
      width: 1.375em
    }

    .swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip {
      animation: swal2-toast-animate-success-line-tip .75s
    }

    .swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long {
      animation: swal2-toast-animate-success-line-long .75s
    }

    .swal2-popup.swal2-toast.swal2-show {
      animation: swal2-toast-show .5s
    }

    .swal2-popup.swal2-toast.swal2-hide {
      animation: swal2-toast-hide .1s forwards
    }

    div:where(.swal2-container) {
      display: grid;
      position: fixed;
      z-index: 1060;
      inset: 0;
      box-sizing: border-box;
      grid-template-areas: "top-start     top            top-end" "center-start  center         center-end" "bottom-start  bottom-center  bottom-end";
      grid-template-rows: minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);
      height: 100%;
      padding: .625em;
      overflow-x: hidden;
      transition: background-color .1s;
      -webkit-overflow-scrolling: touch
    }

    div:where(.swal2-container).swal2-backdrop-show,
    div:where(.swal2-container).swal2-noanimation {
      background: rgba(0, 0, 0, .4)
    }

    div:where(.swal2-container).swal2-backdrop-hide {
      background: rgba(0, 0, 0, 0) !important
    }

    div:where(.swal2-container).swal2-top-start,
    div:where(.swal2-container).swal2-center-start,
    div:where(.swal2-container).swal2-bottom-start {
      grid-template-columns: minmax(0, 1fr) auto auto
    }

    div:where(.swal2-container).swal2-top,
    div:where(.swal2-container).swal2-center,
    div:where(.swal2-container).swal2-bottom {
      grid-template-columns: auto minmax(0, 1fr) auto
    }

    div:where(.swal2-container).swal2-top-end,
    div:where(.swal2-container).swal2-center-end,
    div:where(.swal2-container).swal2-bottom-end {
      grid-template-columns: auto auto minmax(0, 1fr)
    }

    div:where(.swal2-container).swal2-top-start>.swal2-popup {
      align-self: start
    }

    div:where(.swal2-container).swal2-top>.swal2-popup {
      grid-column: 2;
      align-self: start;
      justify-self: center
    }

    div:where(.swal2-container).swal2-top-end>.swal2-popup,
    div:where(.swal2-container).swal2-top-right>.swal2-popup {
      grid-column: 3;
      align-self: start;
      justify-self: end
    }

    div:where(.swal2-container).swal2-center-start>.swal2-popup,
    div:where(.swal2-container).swal2-center-left>.swal2-popup {
      grid-row: 2;
      align-self: center
    }

    div:where(.swal2-container).swal2-center>.swal2-popup {
      grid-column: 2;
      grid-row: 2;
      align-self: center;
      justify-self: center
    }

    div:where(.swal2-container).swal2-center-end>.swal2-popup,
    div:where(.swal2-container).swal2-center-right>.swal2-popup {
      grid-column: 3;
      grid-row: 2;
      align-self: center;
      justify-self: end
    }

    div:where(.swal2-container).swal2-bottom-start>.swal2-popup,
    div:where(.swal2-container).swal2-bottom-left>.swal2-popup {
      grid-column: 1;
      grid-row: 3;
      align-self: end
    }

    div:where(.swal2-container).swal2-bottom>.swal2-popup {
      grid-column: 2;
      grid-row: 3;
      justify-self: center;
      align-self: end
    }

    div:where(.swal2-container).swal2-bottom-end>.swal2-popup,
    div:where(.swal2-container).swal2-bottom-right>.swal2-popup {
      grid-column: 3;
      grid-row: 3;
      align-self: end;
      justify-self: end
    }

    div:where(.swal2-container).swal2-grow-row>.swal2-popup,
    div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup {
      grid-column: 1/4;
      width: 100%
    }

    div:where(.swal2-container).swal2-grow-column>.swal2-popup,
    div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup {
      grid-row: 1/4;
      align-self: stretch
    }

    div:where(.swal2-container).swal2-no-transition {
      transition: none !important
    }

    div:where(.swal2-container) div:where(.swal2-popup) {
      display: none;
      position: relative;
      box-sizing: border-box;
      grid-template-columns: minmax(0, 100%);
      width: 32em;
      max-width: 100%;
      padding: 0 0 1.25em;
      border: none;
      border-radius: 5px;
      background: #fff;
      color: #545454;
      font-family: inherit;
      font-size: 1rem
    }

    div:where(.swal2-container) div:where(.swal2-popup):focus {
      outline: none
    }

    div:where(.swal2-container) div:where(.swal2-popup).swal2-loading {
      overflow-y: hidden
    }

    div:where(.swal2-container) h2:where(.swal2-title) {
      position: relative;
      max-width: 100%;
      margin: 0;
      padding: .8em 1em 0;
      color: inherit;
      font-size: 1.875em;
      font-weight: 600;
      text-align: center;
      text-transform: none;
      word-wrap: break-word
    }

    div:where(.swal2-container) div:where(.swal2-actions) {
      display: flex;
      z-index: 1;
      box-sizing: border-box;
      flex-wrap: wrap;
      align-items: center;
      justify-content: center;
      width: auto;
      margin: 1.25em auto 0;
      padding: 0
    }

    div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled[disabled] {
      opacity: .4
    }

    div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:hover {
      background-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1))
    }

    div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:active {
      background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2))
    }

    div:where(.swal2-container) div:where(.swal2-loader) {
      display: none;
      align-items: center;
      justify-content: center;
      width: 2.2em;
      height: 2.2em;
      margin: 0 1.875em;
      animation: swal2-rotate-loading 1.5s linear 0s infinite normal;
      border-width: .25em;
      border-style: solid;
      border-radius: 100%;
      border-color: #2778c4 rgba(0, 0, 0, 0) #2778c4 rgba(0, 0, 0, 0)
    }

    div:where(.swal2-container) button:where(.swal2-styled) {
      margin: .3125em;
      padding: .625em 1.1em;
      transition: box-shadow .1s;
      box-shadow: 0 0 0 3px rgba(0, 0, 0, 0);
      font-weight: 500
    }

    div:where(.swal2-container) button:where(.swal2-styled):not([disabled]) {
      cursor: pointer
    }

    div:where(.swal2-container) button:where(.swal2-styled).swal2-confirm {
      border: 0;
      border-radius: .25em;
      background: initial;
      background-color: #7066e0;
      color: #fff;
      font-size: 1em
    }

    div:where(.swal2-container) button:where(.swal2-styled).swal2-confirm:focus {
      box-shadow: 0 0 0 3px rgba(112, 102, 224, .5)
    }

    div:where(.swal2-container) button:where(.swal2-styled).swal2-deny {
      border: 0;
      border-radius: .25em;
      background: initial;
      background-color: #dc3741;
      color: #fff;
      font-size: 1em
    }

    div:where(.swal2-container) button:where(.swal2-styled).swal2-deny:focus {
      box-shadow: 0 0 0 3px rgba(220, 55, 65, .5)
    }

    div:where(.swal2-container) button:where(.swal2-styled).swal2-cancel {
      border: 0;
      border-radius: .25em;
      background: initial;
      background-color: #6e7881;
      color: #fff;
      font-size: 1em
    }

    div:where(.swal2-container) button:where(.swal2-styled).swal2-cancel:focus {
      box-shadow: 0 0 0 3px rgba(110, 120, 129, .5)
    }

    div:where(.swal2-container) button:where(.swal2-styled).swal2-default-outline:focus {
      box-shadow: 0 0 0 3px rgba(100, 150, 200, .5)
    }

    div:where(.swal2-container) button:where(.swal2-styled):focus {
      outline: none
    }

    div:where(.swal2-container) button:where(.swal2-styled)::-moz-focus-inner {
      border: 0
    }

    div:where(.swal2-container) div:where(.swal2-footer) {
      margin: 1em 0 0;
      padding: 1em 1em 0;
      border-top: 1px solid #eee;
      color: inherit;
      font-size: 1em;
      text-align: center
    }

    div:where(.swal2-container) .swal2-timer-progress-bar-container {
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      grid-column: auto !important;
      overflow: hidden;
      border-bottom-right-radius: 5px;
      border-bottom-left-radius: 5px
    }

    div:where(.swal2-container) div:where(.swal2-timer-progress-bar) {
      width: 100%;
      height: .25em;
      background: rgba(0, 0, 0, .2)
    }

    div:where(.swal2-container) img:where(.swal2-image) {
      max-width: 100%;
      margin: 2em auto 1em
    }

    div:where(.swal2-container) button:where(.swal2-close) {
      z-index: 2;
      align-items: center;
      justify-content: center;
      width: 1.2em;
      height: 1.2em;
      margin-top: 0;
      margin-right: 0;
      margin-bottom: -1.2em;
      padding: 0;
      overflow: hidden;
      transition: color .1s, box-shadow .1s;
      border: none;
      border-radius: 5px;
      background: rgba(0, 0, 0, 0);
      color: #ccc;
      font-family: monospace;
      font-size: 2.5em;
      cursor: pointer;
      justify-self: end
    }

    div:where(.swal2-container) button:where(.swal2-close):hover {
      transform: none;
      background: rgba(0, 0, 0, 0);
      color: #f27474
    }

    div:where(.swal2-container) button:where(.swal2-close):focus {
      outline: none;
      box-shadow: inset 0 0 0 3px rgba(100, 150, 200, .5)
    }

    div:where(.swal2-container) button:where(.swal2-close)::-moz-focus-inner {
      border: 0
    }

    div:where(.swal2-container) .swal2-html-container {
      z-index: 1;
      justify-content: center;
      margin: 1em 1.6em .3em;
      padding: 0;
      overflow: auto;
      color: inherit;
      font-size: 1.125em;
      font-weight: normal;
      line-height: normal;
      text-align: center;
      word-wrap: break-word;
      word-break: break-word
    }

    div:where(.swal2-container) input:where(.swal2-input),
    div:where(.swal2-container) input:where(.swal2-file),
    div:where(.swal2-container) textarea:where(.swal2-textarea),
    div:where(.swal2-container) select:where(.swal2-select),
    div:where(.swal2-container) div:where(.swal2-radio),
    div:where(.swal2-container) label:where(.swal2-checkbox) {
      margin: 1em 2em 3px
    }

    div:where(.swal2-container) input:where(.swal2-input),
    div:where(.swal2-container) input:where(.swal2-file),
    div:where(.swal2-container) textarea:where(.swal2-textarea) {
      box-sizing: border-box;
      width: auto;
      transition: border-color .1s, box-shadow .1s;
      border: 1px solid #d9d9d9;
      border-radius: .1875em;
      background: rgba(0, 0, 0, 0);
      box-shadow: inset 0 1px 1px rgba(0, 0, 0, .06), 0 0 0 3px rgba(0, 0, 0, 0);
      color: inherit;
      font-size: 1.125em
    }

    div:where(.swal2-container) input:where(.swal2-input).swal2-inputerror,
    div:where(.swal2-container) input:where(.swal2-file).swal2-inputerror,
    div:where(.swal2-container) textarea:where(.swal2-textarea).swal2-inputerror {
      border-color: #f27474 !important;
      box-shadow: 0 0 2px #f27474 !important
    }

    div:where(.swal2-container) input:where(.swal2-input):focus,
    div:where(.swal2-container) input:where(.swal2-file):focus,
    div:where(.swal2-container) textarea:where(.swal2-textarea):focus {
      border: 1px solid #b4dbed;
      outline: none;
      box-shadow: inset 0 1px 1px rgba(0, 0, 0, .06), 0 0 0 3px rgba(100, 150, 200, .5)
    }

    div:where(.swal2-container) input:where(.swal2-input)::placeholder,
    div:where(.swal2-container) input:where(.swal2-file)::placeholder,
    div:where(.swal2-container) textarea:where(.swal2-textarea)::placeholder {
      color: #ccc
    }

    div:where(.swal2-container) .swal2-range {
      margin: 1em 2em 3px;
      background: #fff
    }

    div:where(.swal2-container) .swal2-range input {
      width: 80%
    }

    div:where(.swal2-container) .swal2-range output {
      width: 20%;
      color: inherit;
      font-weight: 600;
      text-align: center
    }

    div:where(.swal2-container) .swal2-range input,
    div:where(.swal2-container) .swal2-range output {
      height: 2.625em;
      padding: 0;
      font-size: 1.125em;
      line-height: 2.625em
    }

    div:where(.swal2-container) .swal2-input {
      height: 2.625em;
      padding: 0 .75em
    }

    div:where(.swal2-container) .swal2-file {
      width: 75%;
      margin-right: auto;
      margin-left: auto;
      background: rgba(0, 0, 0, 0);
      font-size: 1.125em
    }

    div:where(.swal2-container) .swal2-textarea {
      height: 6.75em;
      padding: .75em
    }

    div:where(.swal2-container) .swal2-select {
      min-width: 50%;
      max-width: 100%;
      padding: .375em .625em;
      background: rgba(0, 0, 0, 0);
      color: inherit;
      font-size: 1.125em
    }

    div:where(.swal2-container) .swal2-radio,
    div:where(.swal2-container) .swal2-checkbox {
      align-items: center;
      justify-content: center;
      background: #fff;
      color: inherit
    }

    div:where(.swal2-container) .swal2-radio label,
    div:where(.swal2-container) .swal2-checkbox label {
      margin: 0 .6em;
      font-size: 1.125em
    }

    div:where(.swal2-container) .swal2-radio input,
    div:where(.swal2-container) .swal2-checkbox input {
      flex-shrink: 0;
      margin: 0 .4em
    }

    div:where(.swal2-container) label:where(.swal2-input-label) {
      display: flex;
      justify-content: center;
      margin: 1em auto 0
    }

    div:where(.swal2-container) div:where(.swal2-validation-message) {
      align-items: center;
      justify-content: center;
      margin: 1em 0 0;
      padding: .625em;
      overflow: hidden;
      background: #f0f0f0;
      color: #666;
      font-size: 1em;
      font-weight: 300
    }

    div:where(.swal2-container) div:where(.swal2-validation-message)::before {
      content: "!";
      display: inline-block;
      width: 1.5em;
      min-width: 1.5em;
      height: 1.5em;
      margin: 0 .625em;
      border-radius: 50%;
      background-color: #f27474;
      color: #fff;
      font-weight: 600;
      line-height: 1.5em;
      text-align: center
    }

    div:where(.swal2-container) .swal2-progress-steps {
      flex-wrap: wrap;
      align-items: center;
      max-width: 100%;
      margin: 1.25em auto;
      padding: 0;
      background: rgba(0, 0, 0, 0);
      font-weight: 600
    }

    div:where(.swal2-container) .swal2-progress-steps li {
      display: inline-block;
      position: relative
    }

    div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step {
      z-index: 20;
      flex-shrink: 0;
      width: 2em;
      height: 2em;
      border-radius: 2em;
      background: #2778c4;
      color: #fff;
      line-height: 2em;
      text-align: center
    }

    div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step {
      background: #2778c4
    }

    div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step {
      background: #add8e6;
      color: #fff
    }

    div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line {
      background: #add8e6
    }

    div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step-line {
      z-index: 10;
      flex-shrink: 0;
      width: 2.5em;
      height: .4em;
      margin: 0 -1px;
      background: #2778c4
    }

    div:where(.swal2-icon) {
      position: relative;
      box-sizing: content-box;
      justify-content: center;
      width: 5em;
      height: 5em;
      margin: 2.5em auto .6em;
      border: 0.25em solid rgba(0, 0, 0, 0);
      border-radius: 50%;
      border-color: #000;
      font-family: inherit;
      line-height: 5em;
      cursor: default;
      user-select: none
    }

    div:where(.swal2-icon) .swal2-icon-content {
      display: flex;
      align-items: center;
      font-size: 3.75em
    }

    div:where(.swal2-icon).swal2-error {
      border-color: #f27474;
      color: #f27474
    }

    div:where(.swal2-icon).swal2-error .swal2-x-mark {
      position: relative;
      flex-grow: 1
    }

    div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line] {
      display: block;
      position: absolute;
      top: 2.3125em;
      width: 2.9375em;
      height: .3125em;
      border-radius: .125em;
      background-color: #f27474
    }

    div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=left] {
      left: 1.0625em;
      transform: rotate(45deg)
    }

    div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=right] {
      right: 1em;
      transform: rotate(-45deg)
    }

    div:where(.swal2-icon).swal2-error.swal2-icon-show {
      animation: swal2-animate-error-icon .5s
    }

    div:where(.swal2-icon).swal2-error.swal2-icon-show .swal2-x-mark {
      animation: swal2-animate-error-x-mark .5s
    }

    div:where(.swal2-icon).swal2-warning {
      border-color: #facea8;
      color: #f8bb86
    }

    div:where(.swal2-icon).swal2-warning.swal2-icon-show {
      animation: swal2-animate-error-icon .5s
    }

    div:where(.swal2-icon).swal2-warning.swal2-icon-show .swal2-icon-content {
      animation: swal2-animate-i-mark .5s
    }

    div:where(.swal2-icon).swal2-info {
      border-color: #9de0f6;
      color: #3fc3ee
    }

    div:where(.swal2-icon).swal2-info.swal2-icon-show {
      animation: swal2-animate-error-icon .5s
    }

    div:where(.swal2-icon).swal2-info.swal2-icon-show .swal2-icon-content {
      animation: swal2-animate-i-mark .8s
    }

    div:where(.swal2-icon).swal2-question {
      border-color: #c9dae1;
      color: #87adbd
    }

    div:where(.swal2-icon).swal2-question.swal2-icon-show {
      animation: swal2-animate-error-icon .5s
    }

    div:where(.swal2-icon).swal2-question.swal2-icon-show .swal2-icon-content {
      animation: swal2-animate-question-mark .8s
    }

    div:where(.swal2-icon).swal2-success {
      border-color: #a5dc86;
      color: #a5dc86
    }

    div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line] {
      position: absolute;
      width: 3.75em;
      height: 7.5em;
      transform: rotate(45deg);
      border-radius: 50%
    }

    div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=left] {
      top: -0.4375em;
      left: -2.0635em;
      transform: rotate(-45deg);
      transform-origin: 3.75em 3.75em;
      border-radius: 7.5em 0 0 7.5em
    }

    div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=right] {
      top: -0.6875em;
      left: 1.875em;
      transform: rotate(-45deg);
      transform-origin: 0 3.75em;
      border-radius: 0 7.5em 7.5em 0
    }

    div:where(.swal2-icon).swal2-success .swal2-success-ring {
      position: absolute;
      z-index: 2;
      top: -0.25em;
      left: -0.25em;
      box-sizing: content-box;
      width: 100%;
      height: 100%;
      border: .25em solid rgba(165, 220, 134, .3);
      border-radius: 50%
    }

    div:where(.swal2-icon).swal2-success .swal2-success-fix {
      position: absolute;
      z-index: 1;
      top: .5em;
      left: 1.625em;
      width: .4375em;
      height: 5.625em;
      transform: rotate(-45deg)
    }

    div:where(.swal2-icon).swal2-success [class^=swal2-success-line] {
      display: block;
      position: absolute;
      z-index: 2;
      height: .3125em;
      border-radius: .125em;
      background-color: #a5dc86
    }

    div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=tip] {
      top: 2.875em;
      left: .8125em;
      width: 1.5625em;
      transform: rotate(45deg)
    }

    div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=long] {
      top: 2.375em;
      right: .5em;
      width: 2.9375em;
      transform: rotate(-45deg)
    }

    div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-tip {
      animation: swal2-animate-success-line-tip .75s
    }

    div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-long {
      animation: swal2-animate-success-line-long .75s
    }

    div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-circular-line-right {
      animation: swal2-rotate-success-circular-line 4.25s ease-in
    }

    [class^=swal2] {
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0)
    }

    .swal2-show {
      animation: swal2-show .3s
    }

    .swal2-hide {
      animation: swal2-hide .15s forwards
    }

    .swal2-noanimation {
      transition: none
    }

    .swal2-scrollbar-measure {
      position: absolute;
      top: -9999px;
      width: 50px;
      height: 50px;
      overflow: scroll
    }

    .swal2-rtl .swal2-close {
      margin-right: initial;
      margin-left: 0
    }

    .swal2-rtl .swal2-timer-progress-bar {
      right: 0;
      left: auto
    }

    @keyframes swal2-toast-show {
      0% {
        transform: translateY(-0.625em) rotateZ(2deg)
      }

      33% {
        transform: translateY(0) rotateZ(-2deg)
      }

      66% {
        transform: translateY(0.3125em) rotateZ(2deg)
      }

      100% {
        transform: translateY(0) rotateZ(0deg)
      }
    }

    @keyframes swal2-toast-hide {
      100% {
        transform: rotateZ(1deg);
        opacity: 0
      }
    }

    @keyframes swal2-toast-animate-success-line-tip {
      0% {
        top: .5625em;
        left: .0625em;
        width: 0
      }

      54% {
        top: .125em;
        left: .125em;
        width: 0
      }

      70% {
        top: .625em;
        left: -0.25em;
        width: 1.625em
      }

      84% {
        top: 1.0625em;
        left: .75em;
        width: .5em
      }

      100% {
        top: 1.125em;
        left: .1875em;
        width: .75em
      }
    }

    @keyframes swal2-toast-animate-success-line-long {
      0% {
        top: 1.625em;
        right: 1.375em;
        width: 0
      }

      65% {
        top: 1.25em;
        right: .9375em;
        width: 0
      }

      84% {
        top: .9375em;
        right: 0;
        width: 1.125em
      }

      100% {
        top: .9375em;
        right: .1875em;
        width: 1.375em
      }
    }

    @keyframes swal2-show {
      0% {
        transform: scale(0.7)
      }

      45% {
        transform: scale(1.05)
      }

      80% {
        transform: scale(0.95)
      }

      100% {
        transform: scale(1)
      }
    }

    @keyframes swal2-hide {
      0% {
        transform: scale(1);
        opacity: 1
      }

      100% {
        transform: scale(0.5);
        opacity: 0
      }
    }

    @keyframes swal2-animate-success-line-tip {
      0% {
        top: 1.1875em;
        left: .0625em;
        width: 0
      }

      54% {
        top: 1.0625em;
        left: .125em;
        width: 0
      }

      70% {
        top: 2.1875em;
        left: -0.375em;
        width: 3.125em
      }

      84% {
        top: 3em;
        left: 1.3125em;
        width: 1.0625em
      }

      100% {
        top: 2.8125em;
        left: .8125em;
        width: 1.5625em
      }
    }

    @keyframes swal2-animate-success-line-long {
      0% {
        top: 3.375em;
        right: 2.875em;
        width: 0
      }

      65% {
        top: 3.375em;
        right: 2.875em;
        width: 0
      }

      84% {
        top: 2.1875em;
        right: 0;
        width: 3.4375em
      }

      100% {
        top: 2.375em;
        right: .5em;
        width: 2.9375em
      }
    }

    @keyframes swal2-rotate-success-circular-line {
      0% {
        transform: rotate(-45deg)
      }

      5% {
        transform: rotate(-45deg)
      }

      12% {
        transform: rotate(-405deg)
      }

      100% {
        transform: rotate(-405deg)
      }
    }

    @keyframes swal2-animate-error-x-mark {
      0% {
        margin-top: 1.625em;
        transform: scale(0.4);
        opacity: 0
      }

      50% {
        margin-top: 1.625em;
        transform: scale(0.4);
        opacity: 0
      }

      80% {
        margin-top: -0.375em;
        transform: scale(1.15)
      }

      100% {
        margin-top: 0;
        transform: scale(1);
        opacity: 1
      }
    }

    @keyframes swal2-animate-error-icon {
      0% {
        transform: rotateX(100deg);
        opacity: 0
      }

      100% {
        transform: rotateX(0deg);
        opacity: 1
      }
    }

    @keyframes swal2-rotate-loading {
      0% {
        transform: rotate(0deg)
      }

      100% {
        transform: rotate(360deg)
      }
    }

    @keyframes swal2-animate-question-mark {
      0% {
        transform: rotateY(-360deg)
      }

      100% {
        transform: rotateY(0)
      }
    }

    @keyframes swal2-animate-i-mark {
      0% {
        transform: rotateZ(45deg);
        opacity: 0
      }

      25% {
        transform: rotateZ(-25deg);
        opacity: .4
      }

      50% {
        transform: rotateZ(15deg);
        opacity: .8
      }

      75% {
        transform: rotateZ(-5deg);
        opacity: 1
      }

      100% {
        transform: rotateX(0);
        opacity: 1
      }
    }

    body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) {
      overflow: hidden
    }

    body.swal2-height-auto {
      height: auto !important
    }

    body.swal2-no-backdrop .swal2-container {
      background-color: rgba(0, 0, 0, 0) !important;
      pointer-events: none
    }

    body.swal2-no-backdrop .swal2-container .swal2-popup {
      pointer-events: all
    }

    body.swal2-no-backdrop .swal2-container .swal2-modal {
      box-shadow: 0 0 10px rgba(0, 0, 0, .4)
    }

    @media print {
      body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) {
        overflow-y: scroll !important
      }

      body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true] {
        display: none
      }

      body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container {
        position: static !important
      }
    }

    body.swal2-toast-shown .swal2-container {
      box-sizing: border-box;
      width: 360px;
      max-width: 100%;
      background-color: rgba(0, 0, 0, 0);
      pointer-events: none
    }

    body.swal2-toast-shown .swal2-container.swal2-top {
      inset: 0 auto auto 50%;
      transform: translateX(-50%)
    }

    body.swal2-toast-shown .swal2-container.swal2-top-end,
    body.swal2-toast-shown .swal2-container.swal2-top-right {
      inset: 0 0 auto auto
    }

    body.swal2-toast-shown .swal2-container.swal2-top-start,
    body.swal2-toast-shown .swal2-container.swal2-top-left {
      inset: 0 auto auto 0
    }

    body.swal2-toast-shown .swal2-container.swal2-center-start,
    body.swal2-toast-shown .swal2-container.swal2-center-left {
      inset: 50% auto auto 0;
      transform: translateY(-50%)
    }

    body.swal2-toast-shown .swal2-container.swal2-center {
      inset: 50% auto auto 50%;
      transform: translate(-50%, -50%)
    }

    body.swal2-toast-shown .swal2-container.swal2-center-end,
    body.swal2-toast-shown .swal2-container.swal2-center-right {
      inset: 50% 0 auto auto;
      transform: translateY(-50%)
    }

    body.swal2-toast-shown .swal2-container.swal2-bottom-start,
    body.swal2-toast-shown .swal2-container.swal2-bottom-left {
      inset: auto auto 0 0
    }

    body.swal2-toast-shown .swal2-container.swal2-bottom {
      inset: auto auto 0 50%;
      transform: translateX(-50%)
    }

    body.swal2-toast-shown .swal2-container.swal2-bottom-end,
    body.swal2-toast-shown .swal2-container.swal2-bottom-right {
      inset: auto 0 0 auto
    }
  </style>
  <script src="https://betteranime.disqus.com/embed.js" data-timestamp="1698072291674"></script>
  <script src="https://c.disquscdn.com/next/embed/alfie_v4.63f1ab6d6b9d5807dc0c94ef3fe0b851.js" async=""
    charset="UTF-8"></script>
</head>

<body class="d-flex flex-column">
  <header class="container py-4">
    <h1 class="font-zero">BetterAnime</h1>

    <nav class="navbar navbar-expand-lg navbar-dark transparent navbar-toggler-left">
      <h2 class="font-zero">Navegação do Site</h2>
      <a class="navbar-brand header-logo" href="https://betteranime.net"><img
          src="https://betteranime.net/img/logo_shadow.png"></a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>

      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
          <li class="nav-item active">
            <a class="nav-link" href="https://betteranime.net">Home</a>
          </li>

          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown"
              aria-haspopup="true" aria-expanded="false">
              Lista
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
              <a class="dropdown-item" href="https://betteranime.net/animes">Animes</a>
              <a class="dropdown-item" href="https://betteranime.net/filmes">Filmes</a>
              <div class="dropdown-divider"></div>
              <a class="dropdown-item" href="https://betteranime.net/pesquisa">Todos</a>
            </div>
          </li>

          <li class="nav-item">
            <a class="nav-link" href="https://discord.gg/betteranime" tabindex="-1" aria-disabled="true"><i
                class="fab fa-discord"></i> Discord</a>
          </li>

          <li class="nav-item">
            <a class="nav-link" href="https://betteranime.net/contatos" tabindex="-1" aria-disabled="true">Contato</a>
          </li>

        </ul>
      </div>
      <div class="d-flex align-items-center" id="rightMenu">
        <form method="GET" id="search-form" class="header-search" action="https://betteranime.net/pesquisa">
          <input type="text" class="form-control advanced2AutoComplete" name="titulo" id="search_data"
            placeholder="Buscar..." autocomplete="off">
          <i class="fa fa-search" id="btn-search"></i>
        </form>

        <div>
          <a title="Anime Aleatório" class="circle-background mr-3" href="https://betteranime.net/random">
            <i class="fas fa-dice fa-lg"></i>
          </a>
        </div>

        <div class="profile">
          <div class="dropdown">
            <button class="btn btn-secondary" type="button" id="dropdownMenuButton" data-toggle="dropdown"
              aria-haspopup="true" aria-expanded="false"><i class="fas fa-user"></i>
            </button>

            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
              <a class="dropdown-item" href="https://betteranime.net/login">Login</a>
              <a class="dropdown-item" href="https://betteranime.net/register">Registrar</a>
            </div>
          </div>
        </div>
      </div>

    </nav>
  </header>
  <div id="page-content">
    <div id="launcherBg">
      <div class="banner-background">
        <img src="https://betteranime.net/img/fundo2.jpg" alt="BetterAnime">
      </div>
    </div>











    <main class="container d-flex mt-5">
      <div class="infos_left">
        <div class="anime-info">
          <p>Anime - Duração: <span class="text-blur">24 min</span></p>
          <div class="anime-title">
            <h2><a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020">One Piece - Dublado (2020)</a>
            </h2>
            <h3>Episódio 132</h3>
          </div>

          <p>Ano - <span class="pr-2 text-blur">1999</span> Qualidade - <span class="text-blur">FULL HD</span></p>
          <div class="anime-down-share">
            <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-132/download"
              class="btn btn-down">Baixar</a>
            <a href="" class="btn btn-share" data-toggle="tooltip" title=""
              data-original-title="Compartilhar no Facebook"><i class="fab fa-facebook-f"></i></a>
            <a href="" class="btn btn-share" data-toggle="tooltip" title=""
              data-original-title="Compartilhar no Twitter"><i class="fab fa-twitter"></i></a>
          </div>
        </div>
      </div>
    </main>

    <div class="container player mt-1">
      <div class="d-flex pb-3">
        <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-131"
          class="btn-control mr-auto"><i class="fas fa-arrow-left"></i> Anterior</a>
        <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-133"
          class="btn-control ml-auto">Próximo <i class="fas fa-arrow-right"></i></a>
      </div>

      <div class="d-flex flex-direction-column">
        <div class="better_player" id="player-cont">
          <div id="better_playcont" class="play isnd">
            <div class="pframe">
              <iframe
                src="https://betteranime.net/player?hash=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlcGlzb2RlX2lkIjo5MDI1MywicXVhbGl0eSI6InNkIiwiaXBfYWRkcmVzcyI6IjE3Ny41NC4xNTcuMTgyIiwiaWF0IjoxNjk4MDcyMjg5LCJleHAiOjE2OTgwNzIzNDl9.vdPCylurkMDYmjfWnJHb_GfHduzGdPA4s5gelOgtRLk"
                id="playerFrame" width="100%" height="100%" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
            </div>
          </div>
        </div>
      </div>

      <div class="row mt-2">
        <div class="col-md-12 col-lg-5 mb-3" id="qualitiesColumn">
          <button type="button" id="quality480p" name="qualityButton" onclick="changePlayerResolution('480p')"
            class="btn btn-outline-primary  active  mr-2">480p</button>
          <button type="button" id="quality720p" name="qualityButton" onclick="changePlayerResolution('720p')"
            class="btn btn-outline-secondary  mr-2">720p</button>
          <button type="button" id="quality1080p" name="qualityButton" onclick="changePlayerResolution('1080p')"
            class="btn btn-outline-danger ">1080p</button>
        </div>
      </div>

      <div class="d-flex justify-content-between pt-2">
        <div class="align-self-center">
          <p class="views">66914 <span>Visualizações</span></p>
        </div>
        <div class="d-flex justify-content-end">
          <a href="https://betteranime.net/login" class="btn-control"><i class="fas fa-exclamation bg-warning"></i>
            Reportar
            Problema</a>
        </div>
      </div>
      <div class="d-flex mt-5 justify-content-center overflow-hidden">
      </div>
    </div>

    <section class="container mb-5">
      <h2 class="font-zero">Episódios</h2>

      <div class="episode-toggle" id="episodeToggle">
        <a data-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false"
          aria-controls="collapseExample">
          Lista de Episódios
          <i class="fas fa-arrow-down"></i>
        </a>
      </div>

      <div class="collapse" id="collapseExample">
        <div wire:id="TJf1glaaPStmu0wlYgsw">
          <ul class="list-group mb-3">
            <div style="overflow: hidden;">
              <ul class="list-group" id="episodesList">
                <li class="list-group-item">
                  <div class="w-100">
                    <input type="text" wire:model="searchTerm" class="form-control w-100" placeholder="Pesquisar...">
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-01">
                    <h3>Episódio 01</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-01" role="button"
                      title="One Piece - Dublado (2020) - Episódio 01">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-01/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 01">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-02">
                    <h3>Episódio 02</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-02" role="button"
                      title="One Piece - Dublado (2020) - Episódio 02">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-02/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 02">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-03">
                    <h3>Episódio 03</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-03" role="button"
                      title="One Piece - Dublado (2020) - Episódio 03">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-03/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 03">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-04">
                    <h3>Episódio 04</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-04" role="button"
                      title="One Piece - Dublado (2020) - Episódio 04">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-04/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 04">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-05">
                    <h3>Episódio 05</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-05" role="button"
                      title="One Piece - Dublado (2020) - Episódio 05">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-05/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 05">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-06">
                    <h3>Episódio 06</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-06" role="button"
                      title="One Piece - Dublado (2020) - Episódio 06">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-06/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 06">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-07">
                    <h3>Episódio 07</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-07" role="button"
                      title="One Piece - Dublado (2020) - Episódio 07">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-07/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 07">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-08">
                    <h3>Episódio 08</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-08" role="button"
                      title="One Piece - Dublado (2020) - Episódio 08">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-08/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 08">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-09">
                    <h3>Episódio 09</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-09" role="button"
                      title="One Piece - Dublado (2020) - Episódio 09">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-09/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 09">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-10">
                    <h3>Episódio 10</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-10" role="button"
                      title="One Piece - Dublado (2020) - Episódio 10">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-10/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 10">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-11">
                    <h3>Episódio 11</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-11" role="button"
                      title="One Piece - Dublado (2020) - Episódio 11">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-11/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 11">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-12">
                    <h3>Episódio 12</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-12" role="button"
                      title="One Piece - Dublado (2020) - Episódio 12">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-12/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 12">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-13">
                    <h3>Episódio 13</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-13" role="button"
                      title="One Piece - Dublado (2020) - Episódio 13">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-13/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 13">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-14">
                    <h3>Episódio 14</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-14" role="button"
                      title="One Piece - Dublado (2020) - Episódio 14">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-14/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 14">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-15">
                    <h3>Episódio 15</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-15" role="button"
                      title="One Piece - Dublado (2020) - Episódio 15">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-15/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 15">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-16">
                    <h3>Episódio 16</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-16" role="button"
                      title="One Piece - Dublado (2020) - Episódio 16">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-16/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 16">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-17">
                    <h3>Episódio 17</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-17" role="button"
                      title="One Piece - Dublado (2020) - Episódio 17">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-17/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 17">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-18">
                    <h3>Episódio 18</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-18" role="button"
                      title="One Piece - Dublado (2020) - Episódio 18">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-18/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 18">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-19">
                    <h3>Episódio 19</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-19" role="button"
                      title="One Piece - Dublado (2020) - Episódio 19">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-19/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 19">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-20">
                    <h3>Episódio 20</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-20" role="button"
                      title="One Piece - Dublado (2020) - Episódio 20">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-20/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 20">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-21">
                    <h3>Episódio 21</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-21" role="button"
                      title="One Piece - Dublado (2020) - Episódio 21">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-21/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 21">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-22">
                    <h3>Episódio 22</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-22" role="button"
                      title="One Piece - Dublado (2020) - Episódio 22">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-22/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 22">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-23">
                    <h3>Episódio 23</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-23" role="button"
                      title="One Piece - Dublado (2020) - Episódio 23">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-23/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 23">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-24">
                    <h3>Episódio 24</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-24" role="button"
                      title="One Piece - Dublado (2020) - Episódio 24">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-24/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 24">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-25">
                    <h3>Episódio 25</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-25" role="button"
                      title="One Piece - Dublado (2020) - Episódio 25">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-25/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 25">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-26">
                    <h3>Episódio 26</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-26" role="button"
                      title="One Piece - Dublado (2020) - Episódio 26">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-26/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 26">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-27">
                    <h3>Episódio 27</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-27" role="button"
                      title="One Piece - Dublado (2020) - Episódio 27">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-27/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 27">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-28">
                    <h3>Episódio 28</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-28" role="button"
                      title="One Piece - Dublado (2020) - Episódio 28">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-28/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 28">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-29">
                    <h3>Episódio 29</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-29" role="button"
                      title="One Piece - Dublado (2020) - Episódio 29">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-29/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 29">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-30">
                    <h3>Episódio 30</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-30" role="button"
                      title="One Piece - Dublado (2020) - Episódio 30">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-30/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 30">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-31">
                    <h3>Episódio 31</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-31" role="button"
                      title="One Piece - Dublado (2020) - Episódio 31">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-31/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 31">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-32">
                    <h3>Episódio 32</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-32" role="button"
                      title="One Piece - Dublado (2020) - Episódio 32">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-32/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 32">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-33">
                    <h3>Episódio 33</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-33" role="button"
                      title="One Piece - Dublado (2020) - Episódio 33">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-33/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 33">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-34">
                    <h3>Episódio 34</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-34" role="button"
                      title="One Piece - Dublado (2020) - Episódio 34">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-34/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 34">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-35">
                    <h3>Episódio 35</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-35" role="button"
                      title="One Piece - Dublado (2020) - Episódio 35">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-35/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 35">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-36">
                    <h3>Episódio 36</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-36" role="button"
                      title="One Piece - Dublado (2020) - Episódio 36">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-36/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 36">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-37">
                    <h3>Episódio 37</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-37" role="button"
                      title="One Piece - Dublado (2020) - Episódio 37">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-37/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 37">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-38">
                    <h3>Episódio 38</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-38" role="button"
                      title="One Piece - Dublado (2020) - Episódio 38">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-38/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 38">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-39">
                    <h3>Episódio 39</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-39" role="button"
                      title="One Piece - Dublado (2020) - Episódio 39">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-39/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 39">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-40">
                    <h3>Episódio 40</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-40" role="button"
                      title="One Piece - Dublado (2020) - Episódio 40">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-40/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 40">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-41">
                    <h3>Episódio 41</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-41" role="button"
                      title="One Piece - Dublado (2020) - Episódio 41">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-41/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 41">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-42">
                    <h3>Episódio 42</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-42" role="button"
                      title="One Piece - Dublado (2020) - Episódio 42">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-42/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 42">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-43">
                    <h3>Episódio 43</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-43" role="button"
                      title="One Piece - Dublado (2020) - Episódio 43">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-43/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 43">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-44">
                    <h3>Episódio 44</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-44" role="button"
                      title="One Piece - Dublado (2020) - Episódio 44">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-44/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 44">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-45">
                    <h3>Episódio 45</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-45" role="button"
                      title="One Piece - Dublado (2020) - Episódio 45">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-45/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 45">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-46">
                    <h3>Episódio 46</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-46" role="button"
                      title="One Piece - Dublado (2020) - Episódio 46">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-46/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 46">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-47">
                    <h3>Episódio 47</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-47" role="button"
                      title="One Piece - Dublado (2020) - Episódio 47">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-47/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 47">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-48">
                    <h3>Episódio 48</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-48" role="button"
                      title="One Piece - Dublado (2020) - Episódio 48">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-48/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 48">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-49">
                    <h3>Episódio 49</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-49" role="button"
                      title="One Piece - Dublado (2020) - Episódio 49">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-49/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 49">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-50">
                    <h3>Episódio 50</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-50" role="button"
                      title="One Piece - Dublado (2020) - Episódio 50">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-50/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 50">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-51">
                    <h3>Episódio 51</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-51" role="button"
                      title="One Piece - Dublado (2020) - Episódio 51">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-51/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 51">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-52">
                    <h3>Episódio 52</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-52" role="button"
                      title="One Piece - Dublado (2020) - Episódio 52">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-52/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 52">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-53">
                    <h3>Episódio 53</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-53" role="button"
                      title="One Piece - Dublado (2020) - Episódio 53">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-53/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 53">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-54">
                    <h3>Episódio 54</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-54" role="button"
                      title="One Piece - Dublado (2020) - Episódio 54">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-54/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 54">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-55">
                    <h3>Episódio 55</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-55" role="button"
                      title="One Piece - Dublado (2020) - Episódio 55">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-55/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 55">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-56">
                    <h3>Episódio 56</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-56" role="button"
                      title="One Piece - Dublado (2020) - Episódio 56">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-56/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 56">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-57">
                    <h3>Episódio 57</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-57" role="button"
                      title="One Piece - Dublado (2020) - Episódio 57">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-57/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 57">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-58">
                    <h3>Episódio 58</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-58" role="button"
                      title="One Piece - Dublado (2020) - Episódio 58">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-58/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 58">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-59">
                    <h3>Episódio 59</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-59" role="button"
                      title="One Piece - Dublado (2020) - Episódio 59">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-59/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 59">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-60">
                    <h3>Episódio 60</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-60" role="button"
                      title="One Piece - Dublado (2020) - Episódio 60">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-60/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 60">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-61">
                    <h3>Episódio 61</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-61" role="button"
                      title="One Piece - Dublado (2020) - Episódio 61">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-61/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 61">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-62">
                    <h3>Episódio 62</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-62" role="button"
                      title="One Piece - Dublado (2020) - Episódio 62">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-62/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 62">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-63">
                    <h3>Episódio 63</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-63" role="button"
                      title="One Piece - Dublado (2020) - Episódio 63">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-63/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 63">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-64">
                    <h3>Episódio 64</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-64" role="button"
                      title="One Piece - Dublado (2020) - Episódio 64">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-64/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 64">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-65">
                    <h3>Episódio 65</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-65" role="button"
                      title="One Piece - Dublado (2020) - Episódio 65">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-65/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 65">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-66">
                    <h3>Episódio 66</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-66" role="button"
                      title="One Piece - Dublado (2020) - Episódio 66">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-66/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 66">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-67">
                    <h3>Episódio 67</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-67" role="button"
                      title="One Piece - Dublado (2020) - Episódio 67">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-67/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 67">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-68">
                    <h3>Episódio 68</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-68" role="button"
                      title="One Piece - Dublado (2020) - Episódio 68">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-68/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 68">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-69">
                    <h3>Episódio 69</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-69" role="button"
                      title="One Piece - Dublado (2020) - Episódio 69">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-69/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 69">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-70">
                    <h3>Episódio 70</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-70" role="button"
                      title="One Piece - Dublado (2020) - Episódio 70">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-70/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 70">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-71">
                    <h3>Episódio 71</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-71" role="button"
                      title="One Piece - Dublado (2020) - Episódio 71">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-71/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 71">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-72">
                    <h3>Episódio 72</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-72" role="button"
                      title="One Piece - Dublado (2020) - Episódio 72">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-72/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 72">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-73">
                    <h3>Episódio 73</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-73" role="button"
                      title="One Piece - Dublado (2020) - Episódio 73">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-73/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 73">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-74">
                    <h3>Episódio 74</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-74" role="button"
                      title="One Piece - Dublado (2020) - Episódio 74">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-74/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 74">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-75">
                    <h3>Episódio 75</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-75" role="button"
                      title="One Piece - Dublado (2020) - Episódio 75">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-75/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 75">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-76">
                    <h3>Episódio 76</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-76" role="button"
                      title="One Piece - Dublado (2020) - Episódio 76">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-76/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 76">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-77">
                    <h3>Episódio 77</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-77" role="button"
                      title="One Piece - Dublado (2020) - Episódio 77">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-77/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 77">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-78">
                    <h3>Episódio 78</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-78" role="button"
                      title="One Piece - Dublado (2020) - Episódio 78">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-78/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 78">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-79">
                    <h3>Episódio 79</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-79" role="button"
                      title="One Piece - Dublado (2020) - Episódio 79">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-79/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 79">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-80">
                    <h3>Episódio 80</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-80" role="button"
                      title="One Piece - Dublado (2020) - Episódio 80">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-80/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 80">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-81">
                    <h3>Episódio 81</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-81" role="button"
                      title="One Piece - Dublado (2020) - Episódio 81">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-81/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 81">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-82">
                    <h3>Episódio 82</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-82" role="button"
                      title="One Piece - Dublado (2020) - Episódio 82">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-82/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 82">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-83">
                    <h3>Episódio 83</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-83" role="button"
                      title="One Piece - Dublado (2020) - Episódio 83">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-83/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 83">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-84">
                    <h3>Episódio 84</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-84" role="button"
                      title="One Piece - Dublado (2020) - Episódio 84">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-84/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 84">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-85">
                    <h3>Episódio 85</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-85" role="button"
                      title="One Piece - Dublado (2020) - Episódio 85">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-85/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 85">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-86">
                    <h3>Episódio 86</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-86" role="button"
                      title="One Piece - Dublado (2020) - Episódio 86">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-86/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 86">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-87">
                    <h3>Episódio 87</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-87" role="button"
                      title="One Piece - Dublado (2020) - Episódio 87">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-87/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 87">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-88">
                    <h3>Episódio 88</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-88" role="button"
                      title="One Piece - Dublado (2020) - Episódio 88">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-88/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 88">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-89">
                    <h3>Episódio 89</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-89" role="button"
                      title="One Piece - Dublado (2020) - Episódio 89">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-89/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 89">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-90">
                    <h3>Episódio 90</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-90" role="button"
                      title="One Piece - Dublado (2020) - Episódio 90">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-90/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 90">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-91">
                    <h3>Episódio 91</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-91" role="button"
                      title="One Piece - Dublado (2020) - Episódio 91">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-91/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 91">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-92">
                    <h3>Episódio 92</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-92" role="button"
                      title="One Piece - Dublado (2020) - Episódio 92">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-92/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 92">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-93">
                    <h3>Episódio 93</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-93" role="button"
                      title="One Piece - Dublado (2020) - Episódio 93">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-93/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 93">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-94">
                    <h3>Episódio 94</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-94" role="button"
                      title="One Piece - Dublado (2020) - Episódio 94">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-94/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 94">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-95">
                    <h3>Episódio 95</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-95" role="button"
                      title="One Piece - Dublado (2020) - Episódio 95">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-95/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 95">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-96">
                    <h3>Episódio 96</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-96" role="button"
                      title="One Piece - Dublado (2020) - Episódio 96">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-96/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 96">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-97">
                    <h3>Episódio 97</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-97" role="button"
                      title="One Piece - Dublado (2020) - Episódio 97">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-97/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 97">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-98">
                    <h3>Episódio 98</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-98" role="button"
                      title="One Piece - Dublado (2020) - Episódio 98">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-98/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 98">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-99">
                    <h3>Episódio 99</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-99" role="button"
                      title="One Piece - Dublado (2020) - Episódio 99">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-99/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 99">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-100">
                    <h3>Episódio 100</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-100" role="button"
                      title="One Piece - Dublado (2020) - Episódio 100">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-100/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 100">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-101">
                    <h3>Episódio 101</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-101" role="button"
                      title="One Piece - Dublado (2020) - Episódio 101">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-101/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 101">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-102">
                    <h3>Episódio 102</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-102" role="button"
                      title="One Piece - Dublado (2020) - Episódio 102">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-102/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 102">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-103">
                    <h3>Episódio 103</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-103" role="button"
                      title="One Piece - Dublado (2020) - Episódio 103">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-103/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 103">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-104">
                    <h3>Episódio 104</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-104" role="button"
                      title="One Piece - Dublado (2020) - Episódio 104">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-104/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 104">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-105">
                    <h3>Episódio 105</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-105" role="button"
                      title="One Piece - Dublado (2020) - Episódio 105">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-105/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 105">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-106">
                    <h3>Episódio 106</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-106" role="button"
                      title="One Piece - Dublado (2020) - Episódio 106">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-106/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 106">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-107">
                    <h3>Episódio 107</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-107" role="button"
                      title="One Piece - Dublado (2020) - Episódio 107">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-107/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 107">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-108">
                    <h3>Episódio 108</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-108" role="button"
                      title="One Piece - Dublado (2020) - Episódio 108">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-108/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 108">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-109">
                    <h3>Episódio 109</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-109" role="button"
                      title="One Piece - Dublado (2020) - Episódio 109">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-109/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 109">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-110">
                    <h3>Episódio 110</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-110" role="button"
                      title="One Piece - Dublado (2020) - Episódio 110">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-110/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 110">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-111">
                    <h3>Episódio 111</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-111" role="button"
                      title="One Piece - Dublado (2020) - Episódio 111">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-111/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 111">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-112">
                    <h3>Episódio 112</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-112" role="button"
                      title="One Piece - Dublado (2020) - Episódio 112">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-112/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 112">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-113">
                    <h3>Episódio 113</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-113" role="button"
                      title="One Piece - Dublado (2020) - Episódio 113">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-113/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 113">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-114">
                    <h3>Episódio 114</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-114" role="button"
                      title="One Piece - Dublado (2020) - Episódio 114">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-114/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 114">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-115">
                    <h3>Episódio 115</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-115" role="button"
                      title="One Piece - Dublado (2020) - Episódio 115">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-115/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 115">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-116">
                    <h3>Episódio 116</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-116" role="button"
                      title="One Piece - Dublado (2020) - Episódio 116">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-116/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 116">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-117">
                    <h3>Episódio 117</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-117" role="button"
                      title="One Piece - Dublado (2020) - Episódio 117">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-117/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 117">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-118">
                    <h3>Episódio 118</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-118" role="button"
                      title="One Piece - Dublado (2020) - Episódio 118">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-118/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 118">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-119">
                    <h3>Episódio 119</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-119" role="button"
                      title="One Piece - Dublado (2020) - Episódio 119">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-119/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 119">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-120">
                    <h3>Episódio 120</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-120" role="button"
                      title="One Piece - Dublado (2020) - Episódio 120">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-120/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 120">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-121">
                    <h3>Episódio 121</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-121" role="button"
                      title="One Piece - Dublado (2020) - Episódio 121">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-121/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 121">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-122">
                    <h3>Episódio 122</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-122" role="button"
                      title="One Piece - Dublado (2020) - Episódio 122">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-122/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 122">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-123">
                    <h3>Episódio 123</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-123" role="button"
                      title="One Piece - Dublado (2020) - Episódio 123">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-123/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 123">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-124">
                    <h3>Episódio 124</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-124" role="button"
                      title="One Piece - Dublado (2020) - Episódio 124">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-124/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 124">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-125">
                    <h3>Episódio 125</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-125" role="button"
                      title="One Piece - Dublado (2020) - Episódio 125">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-125/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 125">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-126">
                    <h3>Episódio 126</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-126" role="button"
                      title="One Piece - Dublado (2020) - Episódio 126">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-126/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 126">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-127">
                    <h3>Episódio 127</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-127" role="button"
                      title="One Piece - Dublado (2020) - Episódio 127">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-127/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 127">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-128">
                    <h3>Episódio 128</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-128" role="button"
                      title="One Piece - Dublado (2020) - Episódio 128">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-128/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 128">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-129">
                    <h3>Episódio 129</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-129" role="button"
                      title="One Piece - Dublado (2020) - Episódio 129">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-129/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 129">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-130">
                    <h3>Episódio 130</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-130" role="button"
                      title="One Piece - Dublado (2020) - Episódio 130">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-130/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 130">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-131">
                    <h3>Episódio 131</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-131" role="button"
                      title="One Piece - Dublado (2020) - Episódio 131">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-131/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 131">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-132">
                    <h3>Episódio 132</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-132" role="button"
                      title="One Piece - Dublado (2020) - Episódio 132">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-132/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 132">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-133">
                    <h3>Episódio 133</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-133" role="button"
                      title="One Piece - Dublado (2020) - Episódio 133">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-133/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 133">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-134">
                    <h3>Episódio 134</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-134" role="button"
                      title="One Piece - Dublado (2020) - Episódio 134">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-134/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 134">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-135">
                    <h3>Episódio 135</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-135" role="button"
                      title="One Piece - Dublado (2020) - Episódio 135">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-135/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 135">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-136">
                    <h3>Episódio 136</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-136" role="button"
                      title="One Piece - Dublado (2020) - Episódio 136">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-136/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 136">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-137">
                    <h3>Episódio 137</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-137" role="button"
                      title="One Piece - Dublado (2020) - Episódio 137">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-137/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 137">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-138">
                    <h3>Episódio 138</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-138" role="button"
                      title="One Piece - Dublado (2020) - Episódio 138">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-138/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 138">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-139">
                    <h3>Episódio 139</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-139" role="button"
                      title="One Piece - Dublado (2020) - Episódio 139">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-139/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 139">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-140">
                    <h3>Episódio 140</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-140" role="button"
                      title="One Piece - Dublado (2020) - Episódio 140">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-140/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 140">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-141">
                    <h3>Episódio 141</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-141" role="button"
                      title="One Piece - Dublado (2020) - Episódio 141">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-141/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 141">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-142">
                    <h3>Episódio 142</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-142" role="button"
                      title="One Piece - Dublado (2020) - Episódio 142">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-142/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 142">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-143">
                    <h3>Episódio 143</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-143" role="button"
                      title="One Piece - Dublado (2020) - Episódio 143">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-143/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 143">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-144">
                    <h3>Episódio 144</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-144" role="button"
                      title="One Piece - Dublado (2020) - Episódio 144">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-144/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 144">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-145">
                    <h3>Episódio 145</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-145" role="button"
                      title="One Piece - Dublado (2020) - Episódio 145">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-145/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 145">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-146">
                    <h3>Episódio 146</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-146" role="button"
                      title="One Piece - Dublado (2020) - Episódio 146">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-146/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 146">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-147">
                    <h3>Episódio 147</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-147" role="button"
                      title="One Piece - Dublado (2020) - Episódio 147">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-147/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 147">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-148">
                    <h3>Episódio 148</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-148" role="button"
                      title="One Piece - Dublado (2020) - Episódio 148">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-148/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 148">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-149">
                    <h3>Episódio 149</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-149" role="button"
                      title="One Piece - Dublado (2020) - Episódio 149">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-149/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 149">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-150">
                    <h3>Episódio 150</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-150" role="button"
                      title="One Piece - Dublado (2020) - Episódio 150">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-150/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 150">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-151">
                    <h3>Episódio 151</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-151" role="button"
                      title="One Piece - Dublado (2020) - Episódio 151">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-151/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 151">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-152">
                    <h3>Episódio 152</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-152" role="button"
                      title="One Piece - Dublado (2020) - Episódio 152">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-152/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 152">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-153">
                    <h3>Episódio 153</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-153" role="button"
                      title="One Piece - Dublado (2020) - Episódio 153">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-153/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 153">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-154">
                    <h3>Episódio 154</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-154" role="button"
                      title="One Piece - Dublado (2020) - Episódio 154">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-154/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 154">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-155">
                    <h3>Episódio 155</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-155" role="button"
                      title="One Piece - Dublado (2020) - Episódio 155">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-155/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 155">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-156">
                    <h3>Episódio 156</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-156" role="button"
                      title="One Piece - Dublado (2020) - Episódio 156">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-156/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 156">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-157">
                    <h3>Episódio 157</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-157" role="button"
                      title="One Piece - Dublado (2020) - Episódio 157">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-157/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 157">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-158">
                    <h3>Episódio 158</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-158" role="button"
                      title="One Piece - Dublado (2020) - Episódio 158">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-158/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 158">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-159">
                    <h3>Episódio 159</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-159" role="button"
                      title="One Piece - Dublado (2020) - Episódio 159">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-159/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 159">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-160">
                    <h3>Episódio 160</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-160" role="button"
                      title="One Piece - Dublado (2020) - Episódio 160">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-160/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 160">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-161">
                    <h3>Episódio 161</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-161" role="button"
                      title="One Piece - Dublado (2020) - Episódio 161">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-161/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 161">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-162">
                    <h3>Episódio 162</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-162" role="button"
                      title="One Piece - Dublado (2020) - Episódio 162">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-162/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 162">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-163">
                    <h3>Episódio 163</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-163" role="button"
                      title="One Piece - Dublado (2020) - Episódio 163">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-163/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 163">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-164">
                    <h3>Episódio 164</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-164" role="button"
                      title="One Piece - Dublado (2020) - Episódio 164">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-164/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 164">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-165">
                    <h3>Episódio 165</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-165" role="button"
                      title="One Piece - Dublado (2020) - Episódio 165">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-165/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 165">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-166">
                    <h3>Episódio 166</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-166" role="button"
                      title="One Piece - Dublado (2020) - Episódio 166">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-166/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 166">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-167">
                    <h3>Episódio 167</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-167" role="button"
                      title="One Piece - Dublado (2020) - Episódio 167">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-167/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 167">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-168">
                    <h3>Episódio 168</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-168" role="button"
                      title="One Piece - Dublado (2020) - Episódio 168">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-168/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 168">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-169">
                    <h3>Episódio 169</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-169" role="button"
                      title="One Piece - Dublado (2020) - Episódio 169">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-169/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 169">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-170">
                    <h3>Episódio 170</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-170" role="button"
                      title="One Piece - Dublado (2020) - Episódio 170">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-170/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 170">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-171">
                    <h3>Episódio 171</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-171" role="button"
                      title="One Piece - Dublado (2020) - Episódio 171">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-171/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 171">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-172">
                    <h3>Episódio 172</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-172" role="button"
                      title="One Piece - Dublado (2020) - Episódio 172">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-172/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 172">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-173">
                    <h3>Episódio 173</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-173" role="button"
                      title="One Piece - Dublado (2020) - Episódio 173">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-173/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 173">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-174">
                    <h3>Episódio 174</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-174" role="button"
                      title="One Piece - Dublado (2020) - Episódio 174">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-174/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 174">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-175">
                    <h3>Episódio 175</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-175" role="button"
                      title="One Piece - Dublado (2020) - Episódio 175">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-175/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 175">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-176">
                    <h3>Episódio 176</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-176" role="button"
                      title="One Piece - Dublado (2020) - Episódio 176">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-176/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 176">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-177">
                    <h3>Episódio 177</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-177" role="button"
                      title="One Piece - Dublado (2020) - Episódio 177">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-177/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 177">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-178">
                    <h3>Episódio 178</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-178" role="button"
                      title="One Piece - Dublado (2020) - Episódio 178">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-178/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 178">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-179">
                    <h3>Episódio 179</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-179" role="button"
                      title="One Piece - Dublado (2020) - Episódio 179">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-179/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 179">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-180">
                    <h3>Episódio 180</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-180" role="button"
                      title="One Piece - Dublado (2020) - Episódio 180">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-180/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 180">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-181">
                    <h3>Episódio 181</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-181" role="button"
                      title="One Piece - Dublado (2020) - Episódio 181">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-181/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 181">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-182">
                    <h3>Episódio 182</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-182" role="button"
                      title="One Piece - Dublado (2020) - Episódio 182">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-182/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 182">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-183">
                    <h3>Episódio 183</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-183" role="button"
                      title="One Piece - Dublado (2020) - Episódio 183">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-183/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 183">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-184">
                    <h3>Episódio 184</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-184" role="button"
                      title="One Piece - Dublado (2020) - Episódio 184">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-184/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 184">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-185">
                    <h3>Episódio 185</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-185" role="button"
                      title="One Piece - Dublado (2020) - Episódio 185">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-185/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 185">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-186">
                    <h3>Episódio 186</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-186" role="button"
                      title="One Piece - Dublado (2020) - Episódio 186">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-186/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 186">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-187">
                    <h3>Episódio 187</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-187" role="button"
                      title="One Piece - Dublado (2020) - Episódio 187">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-187/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 187">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-188">
                    <h3>Episódio 188</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-188" role="button"
                      title="One Piece - Dublado (2020) - Episódio 188">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-188/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 188">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-189">
                    <h3>Episódio 189</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-189" role="button"
                      title="One Piece - Dublado (2020) - Episódio 189">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-189/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 189">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-190">
                    <h3>Episódio 190</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-190" role="button"
                      title="One Piece - Dublado (2020) - Episódio 190">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-190/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 190">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-191">
                    <h3>Episódio 191</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-191" role="button"
                      title="One Piece - Dublado (2020) - Episódio 191">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-191/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 191">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-192">
                    <h3>Episódio 192</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-192" role="button"
                      title="One Piece - Dublado (2020) - Episódio 192">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-192/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 192">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-193">
                    <h3>Episódio 193</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-193" role="button"
                      title="One Piece - Dublado (2020) - Episódio 193">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-193/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 193">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-194">
                    <h3>Episódio 194</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-194" role="button"
                      title="One Piece - Dublado (2020) - Episódio 194">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-194/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 194">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-195">
                    <h3>Episódio 195</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-195" role="button"
                      title="One Piece - Dublado (2020) - Episódio 195">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-195/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 195">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-196">
                    <h3>Episódio 196</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-196" role="button"
                      title="One Piece - Dublado (2020) - Episódio 196">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-196/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 196">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-197">
                    <h3>Episódio 197</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-197" role="button"
                      title="One Piece - Dublado (2020) - Episódio 197">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-197/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 197">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-198">
                    <h3>Episódio 198</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-198" role="button"
                      title="One Piece - Dublado (2020) - Episódio 198">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-198/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 198">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-199">
                    <h3>Episódio 199</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-199" role="button"
                      title="One Piece - Dublado (2020) - Episódio 199">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-199/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 199">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-200">
                    <h3>Episódio 200</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-200" role="button"
                      title="One Piece - Dublado (2020) - Episódio 200">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-200/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 200">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-201">
                    <h3>Episódio 201</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-201" role="button"
                      title="One Piece - Dublado (2020) - Episódio 201">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-201/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 201">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-202">
                    <h3>Episódio 202</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-202" role="button"
                      title="One Piece - Dublado (2020) - Episódio 202">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-202/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 202">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-203">
                    <h3>Episódio 203</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-203" role="button"
                      title="One Piece - Dublado (2020) - Episódio 203">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-203/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 203">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-204">
                    <h3>Episódio 204</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-204" role="button"
                      title="One Piece - Dublado (2020) - Episódio 204">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-204/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 204">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-205">
                    <h3>Episódio 205</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-205" role="button"
                      title="One Piece - Dublado (2020) - Episódio 205">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-205/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 205">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-206">
                    <h3>Episódio 206</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-206" role="button"
                      title="One Piece - Dublado (2020) - Episódio 206">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-206/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 206">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-207">
                    <h3>Episódio 207</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-207" role="button"
                      title="One Piece - Dublado (2020) - Episódio 207">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-207/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 207">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-208">
                    <h3>Episódio 208</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-208" role="button"
                      title="One Piece - Dublado (2020) - Episódio 208">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-208/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 208">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-209">
                    <h3>Episódio 209</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-209" role="button"
                      title="One Piece - Dublado (2020) - Episódio 209">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-209/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 209">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-210">
                    <h3>Episódio 210</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-210" role="button"
                      title="One Piece - Dublado (2020) - Episódio 210">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-210/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 210">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-211">
                    <h3>Episódio 211</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-211" role="button"
                      title="One Piece - Dublado (2020) - Episódio 211">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-211/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 211">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-212">
                    <h3>Episódio 212</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-212" role="button"
                      title="One Piece - Dublado (2020) - Episódio 212">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-212/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 212">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-213">
                    <h3>Episódio 213</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-213" role="button"
                      title="One Piece - Dublado (2020) - Episódio 213">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-213/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 213">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-214">
                    <h3>Episódio 214</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-214" role="button"
                      title="One Piece - Dublado (2020) - Episódio 214">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-214/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 214">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-215">
                    <h3>Episódio 215</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-215" role="button"
                      title="One Piece - Dublado (2020) - Episódio 215">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-215/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 215">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-216">
                    <h3>Episódio 216</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-216" role="button"
                      title="One Piece - Dublado (2020) - Episódio 216">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-216/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 216">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-217">
                    <h3>Episódio 217</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-217" role="button"
                      title="One Piece - Dublado (2020) - Episódio 217">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-217/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 217">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-218">
                    <h3>Episódio 218</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-218" role="button"
                      title="One Piece - Dublado (2020) - Episódio 218">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-218/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 218">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-219">
                    <h3>Episódio 219</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-219" role="button"
                      title="One Piece - Dublado (2020) - Episódio 219">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-219/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 219">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-220">
                    <h3>Episódio 220</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-220" role="button"
                      title="One Piece - Dublado (2020) - Episódio 220">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-220/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 220">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-221">
                    <h3>Episódio 221</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-221" role="button"
                      title="One Piece - Dublado (2020) - Episódio 221">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-221/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 221">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-222">
                    <h3>Episódio 222</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-222" role="button"
                      title="One Piece - Dublado (2020) - Episódio 222">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-222/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 222">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-223">
                    <h3>Episódio 223</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-223" role="button"
                      title="One Piece - Dublado (2020) - Episódio 223">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-223/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 223">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-224">
                    <h3>Episódio 224</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-224" role="button"
                      title="One Piece - Dublado (2020) - Episódio 224">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-224/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 224">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-225">
                    <h3>Episódio 225</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-225" role="button"
                      title="One Piece - Dublado (2020) - Episódio 225">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-225/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 225">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-226">
                    <h3>Episódio 226</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-226" role="button"
                      title="One Piece - Dublado (2020) - Episódio 226">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-226/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 226">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-227">
                    <h3>Episódio 227</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-227" role="button"
                      title="One Piece - Dublado (2020) - Episódio 227">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-227/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 227">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-228">
                    <h3>Episódio 228</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-228" role="button"
                      title="One Piece - Dublado (2020) - Episódio 228">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-228/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 228">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-229">
                    <h3>Episódio 229</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-229" role="button"
                      title="One Piece - Dublado (2020) - Episódio 229">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-229/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 229">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-230">
                    <h3>Episódio 230</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-230" role="button"
                      title="One Piece - Dublado (2020) - Episódio 230">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-230/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 230">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-231">
                    <h3>Episódio 231</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-231" role="button"
                      title="One Piece - Dublado (2020) - Episódio 231">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-231/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 231">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-232">
                    <h3>Episódio 232</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-232" role="button"
                      title="One Piece - Dublado (2020) - Episódio 232">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-232/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 232">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-233">
                    <h3>Episódio 233</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-233" role="button"
                      title="One Piece - Dublado (2020) - Episódio 233">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-233/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 233">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-234">
                    <h3>Episódio 234</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-234" role="button"
                      title="One Piece - Dublado (2020) - Episódio 234">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-234/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 234">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-235">
                    <h3>Episódio 235</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-235" role="button"
                      title="One Piece - Dublado (2020) - Episódio 235">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-235/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 235">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-236">
                    <h3>Episódio 236</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-236" role="button"
                      title="One Piece - Dublado (2020) - Episódio 236">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-236/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 236">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-237">
                    <h3>Episódio 237</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-237" role="button"
                      title="One Piece - Dublado (2020) - Episódio 237">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-237/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 237">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-238">
                    <h3>Episódio 238</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-238" role="button"
                      title="One Piece - Dublado (2020) - Episódio 238">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-238/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 238">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-239">
                    <h3>Episódio 239</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-239" role="button"
                      title="One Piece - Dublado (2020) - Episódio 239">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-239/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 239">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-240">
                    <h3>Episódio 240</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-240" role="button"
                      title="One Piece - Dublado (2020) - Episódio 240">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-240/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 240">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-241">
                    <h3>Episódio 241</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-241" role="button"
                      title="One Piece - Dublado (2020) - Episódio 241">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-241/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 241">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-242">
                    <h3>Episódio 242</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-242" role="button"
                      title="One Piece - Dublado (2020) - Episódio 242">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-242/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 242">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-243">
                    <h3>Episódio 243</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-243" role="button"
                      title="One Piece - Dublado (2020) - Episódio 243">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-243/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 243">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-244">
                    <h3>Episódio 244</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-244" role="button"
                      title="One Piece - Dublado (2020) - Episódio 244">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-244/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 244">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-245">
                    <h3>Episódio 245</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-245" role="button"
                      title="One Piece - Dublado (2020) - Episódio 245">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-245/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 245">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-246">
                    <h3>Episódio 246</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-246" role="button"
                      title="One Piece - Dublado (2020) - Episódio 246">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-246/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 246">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-247">
                    <h3>Episódio 247</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-247" role="button"
                      title="One Piece - Dublado (2020) - Episódio 247">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-247/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 247">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-248">
                    <h3>Episódio 248</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-248" role="button"
                      title="One Piece - Dublado (2020) - Episódio 248">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-248/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 248">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-249">
                    <h3>Episódio 249</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-249" role="button"
                      title="One Piece - Dublado (2020) - Episódio 249">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-249/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 249">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-250">
                    <h3>Episódio 250</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-250" role="button"
                      title="One Piece - Dublado (2020) - Episódio 250">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-250/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 250">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-251">
                    <h3>Episódio 251</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-251" role="button"
                      title="One Piece - Dublado (2020) - Episódio 251">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-251/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 251">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-252">
                    <h3>Episódio 252</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-252" role="button"
                      title="One Piece - Dublado (2020) - Episódio 252">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-252/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 252">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-253">
                    <h3>Episódio 253</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-253" role="button"
                      title="One Piece - Dublado (2020) - Episódio 253">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-253/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 253">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-254">
                    <h3>Episódio 254</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-254" role="button"
                      title="One Piece - Dublado (2020) - Episódio 254">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-254/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 254">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-255">
                    <h3>Episódio 255</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-255" role="button"
                      title="One Piece - Dublado (2020) - Episódio 255">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-255/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 255">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-256">
                    <h3>Episódio 256</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-256" role="button"
                      title="One Piece - Dublado (2020) - Episódio 256">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-256/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 256">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-257">
                    <h3>Episódio 257</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-257" role="button"
                      title="One Piece - Dublado (2020) - Episódio 257">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-257/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 257">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-258">
                    <h3>Episódio 258</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-258" role="button"
                      title="One Piece - Dublado (2020) - Episódio 258">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-258/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 258">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-259">
                    <h3>Episódio 259</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-259" role="button"
                      title="One Piece - Dublado (2020) - Episódio 259">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-259/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 259">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-260">
                    <h3>Episódio 260</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-260" role="button"
                      title="One Piece - Dublado (2020) - Episódio 260">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-260/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 260">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-261">
                    <h3>Episódio 261</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-261" role="button"
                      title="One Piece - Dublado (2020) - Episódio 261">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-261/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 261">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-262">
                    <h3>Episódio 262</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-262" role="button"
                      title="One Piece - Dublado (2020) - Episódio 262">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-262/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 262">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-263">
                    <h3>Episódio 263</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-263" role="button"
                      title="One Piece - Dublado (2020) - Episódio 263">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-263/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 263">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-264">
                    <h3>Episódio 264</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-264" role="button"
                      title="One Piece - Dublado (2020) - Episódio 264">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-264/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 264">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-265">
                    <h3>Episódio 265</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-265" role="button"
                      title="One Piece - Dublado (2020) - Episódio 265">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-265/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 265">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-266">
                    <h3>Episódio 266</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-266" role="button"
                      title="One Piece - Dublado (2020) - Episódio 266">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-266/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 266">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-267">
                    <h3>Episódio 267</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-267" role="button"
                      title="One Piece - Dublado (2020) - Episódio 267">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-267/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 267">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-268">
                    <h3>Episódio 268</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-268" role="button"
                      title="One Piece - Dublado (2020) - Episódio 268">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-268/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 268">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-269">
                    <h3>Episódio 269</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-269" role="button"
                      title="One Piece - Dublado (2020) - Episódio 269">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-269/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 269">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-270">
                    <h3>Episódio 270</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-270" role="button"
                      title="One Piece - Dublado (2020) - Episódio 270">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-270/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 270">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-271">
                    <h3>Episódio 271</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-271" role="button"
                      title="One Piece - Dublado (2020) - Episódio 271">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-271/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 271">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-272">
                    <h3>Episódio 272</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-272" role="button"
                      title="One Piece - Dublado (2020) - Episódio 272">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-272/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 272">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-273">
                    <h3>Episódio 273</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-273" role="button"
                      title="One Piece - Dublado (2020) - Episódio 273">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-273/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 273">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-274">
                    <h3>Episódio 274</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-274" role="button"
                      title="One Piece - Dublado (2020) - Episódio 274">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-274/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 274">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-275">
                    <h3>Episódio 275</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-275" role="button"
                      title="One Piece - Dublado (2020) - Episódio 275">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-275/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 275">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-276">
                    <h3>Episódio 276</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-276" role="button"
                      title="One Piece - Dublado (2020) - Episódio 276">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-276/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 276">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-277">
                    <h3>Episódio 277</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-277" role="button"
                      title="One Piece - Dublado (2020) - Episódio 277">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-277/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 277">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-278">
                    <h3>Episódio 278</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-278" role="button"
                      title="One Piece - Dublado (2020) - Episódio 278">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-278/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 278">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-279">
                    <h3>Episódio 279</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-279" role="button"
                      title="One Piece - Dublado (2020) - Episódio 279">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-279/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 279">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-280">
                    <h3>Episódio 280</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-280" role="button"
                      title="One Piece - Dublado (2020) - Episódio 280">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-280/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 280">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-281">
                    <h3>Episódio 281</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-281" role="button"
                      title="One Piece - Dublado (2020) - Episódio 281">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-281/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 281">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-282">
                    <h3>Episódio 282</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-282" role="button"
                      title="One Piece - Dublado (2020) - Episódio 282">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-282/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 282">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-283">
                    <h3>Episódio 283</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-283" role="button"
                      title="One Piece - Dublado (2020) - Episódio 283">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-283/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 283">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-284">
                    <h3>Episódio 284</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-284" role="button"
                      title="One Piece - Dublado (2020) - Episódio 284">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-284/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 284">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-285">
                    <h3>Episódio 285</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-285" role="button"
                      title="One Piece - Dublado (2020) - Episódio 285">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-285/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 285">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-286">
                    <h3>Episódio 286</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-286" role="button"
                      title="One Piece - Dublado (2020) - Episódio 286">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-286/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 286">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-287">
                    <h3>Episódio 287</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-287" role="button"
                      title="One Piece - Dublado (2020) - Episódio 287">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-287/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 287">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-288">
                    <h3>Episódio 288</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-288" role="button"
                      title="One Piece - Dublado (2020) - Episódio 288">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-288/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 288">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-289">
                    <h3>Episódio 289</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-289" role="button"
                      title="One Piece - Dublado (2020) - Episódio 289">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-289/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 289">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-290">
                    <h3>Episódio 290</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-290" role="button"
                      title="One Piece - Dublado (2020) - Episódio 290">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-290/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 290">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-291">
                    <h3>Episódio 291</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-291" role="button"
                      title="One Piece - Dublado (2020) - Episódio 291">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-291/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 291">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-292">
                    <h3>Episódio 292</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-292" role="button"
                      title="One Piece - Dublado (2020) - Episódio 292">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-292/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 292">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-293">
                    <h3>Episódio 293</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-293" role="button"
                      title="One Piece - Dublado (2020) - Episódio 293">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-293/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 293">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-294">
                    <h3>Episódio 294</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-294" role="button"
                      title="One Piece - Dublado (2020) - Episódio 294">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-294/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 294">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-295">
                    <h3>Episódio 295</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-295" role="button"
                      title="One Piece - Dublado (2020) - Episódio 295">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-295/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 295">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-296">
                    <h3>Episódio 296</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-296" role="button"
                      title="One Piece - Dublado (2020) - Episódio 296">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-296/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 296">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-297">
                    <h3>Episódio 297</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-297" role="button"
                      title="One Piece - Dublado (2020) - Episódio 297">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-297/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 297">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-298">
                    <h3>Episódio 298</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-298" role="button"
                      title="One Piece - Dublado (2020) - Episódio 298">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-298/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 298">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-299">
                    <h3>Episódio 299</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-299" role="button"
                      title="One Piece - Dublado (2020) - Episódio 299">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-299/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 299">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-300">
                    <h3>Episódio 300</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-300" role="button"
                      title="One Piece - Dublado (2020) - Episódio 300">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-300/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 300">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-301">
                    <h3>Episódio 301</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-301" role="button"
                      title="One Piece - Dublado (2020) - Episódio 301">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-301/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 301">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-302">
                    <h3>Episódio 302</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-302" role="button"
                      title="One Piece - Dublado (2020) - Episódio 302">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-302/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 302">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-303">
                    <h3>Episódio 303</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-303" role="button"
                      title="One Piece - Dublado (2020) - Episódio 303">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-303/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 303">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-304">
                    <h3>Episódio 304</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-304" role="button"
                      title="One Piece - Dublado (2020) - Episódio 304">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-304/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 304">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-305">
                    <h3>Episódio 305</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-305" role="button"
                      title="One Piece - Dublado (2020) - Episódio 305">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-305/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 305">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-306">
                    <h3>Episódio 306</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-306" role="button"
                      title="One Piece - Dublado (2020) - Episódio 306">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-306/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 306">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-307">
                    <h3>Episódio 307</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-307" role="button"
                      title="One Piece - Dublado (2020) - Episódio 307">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-307/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 307">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-308">
                    <h3>Episódio 308</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-308" role="button"
                      title="One Piece - Dublado (2020) - Episódio 308">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-308/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 308">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-309">
                    <h3>Episódio 309</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-309" role="button"
                      title="One Piece - Dublado (2020) - Episódio 309">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-309/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 309">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-310">
                    <h3>Episódio 310</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-310" role="button"
                      title="One Piece - Dublado (2020) - Episódio 310">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-310/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 310">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-311">
                    <h3>Episódio 311</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-311" role="button"
                      title="One Piece - Dublado (2020) - Episódio 311">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-311/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 311">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-312">
                    <h3>Episódio 312</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-312" role="button"
                      title="One Piece - Dublado (2020) - Episódio 312">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-312/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 312">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-313">
                    <h3>Episódio 313</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-313" role="button"
                      title="One Piece - Dublado (2020) - Episódio 313">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-313/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 313">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-314">
                    <h3>Episódio 314</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-314" role="button"
                      title="One Piece - Dublado (2020) - Episódio 314">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-314/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 314">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-315">
                    <h3>Episódio 315</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-315" role="button"
                      title="One Piece - Dublado (2020) - Episódio 315">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-315/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 315">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-316">
                    <h3>Episódio 316</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-316" role="button"
                      title="One Piece - Dublado (2020) - Episódio 316">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-316/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 316">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-317">
                    <h3>Episódio 317</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-317" role="button"
                      title="One Piece - Dublado (2020) - Episódio 317">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-317/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 317">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-318">
                    <h3>Episódio 318</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-318" role="button"
                      title="One Piece - Dublado (2020) - Episódio 318">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-318/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 318">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-319">
                    <h3>Episódio 319</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-319" role="button"
                      title="One Piece - Dublado (2020) - Episódio 319">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-319/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 319">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-320">
                    <h3>Episódio 320</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-320" role="button"
                      title="One Piece - Dublado (2020) - Episódio 320">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-320/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 320">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-321">
                    <h3>Episódio 321</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-321" role="button"
                      title="One Piece - Dublado (2020) - Episódio 321">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-321/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 321">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-322">
                    <h3>Episódio 322</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-322" role="button"
                      title="One Piece - Dublado (2020) - Episódio 322">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-322/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 322">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-323">
                    <h3>Episódio 323</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-323" role="button"
                      title="One Piece - Dublado (2020) - Episódio 323">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-323/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 323">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-324">
                    <h3>Episódio 324</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-324" role="button"
                      title="One Piece - Dublado (2020) - Episódio 324">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-324/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 324">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-325">
                    <h3>Episódio 325</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-325" role="button"
                      title="One Piece - Dublado (2020) - Episódio 325">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-325/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 325">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-326">
                    <h3>Episódio 326</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-326" role="button"
                      title="One Piece - Dublado (2020) - Episódio 326">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-326/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 326">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-327">
                    <h3>Episódio 327</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-327" role="button"
                      title="One Piece - Dublado (2020) - Episódio 327">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-327/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 327">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-328">
                    <h3>Episódio 328</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-328" role="button"
                      title="One Piece - Dublado (2020) - Episódio 328">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-328/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 328">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-329">
                    <h3>Episódio 329</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-329" role="button"
                      title="One Piece - Dublado (2020) - Episódio 329">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-329/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 329">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-330">
                    <h3>Episódio 330</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-330" role="button"
                      title="One Piece - Dublado (2020) - Episódio 330">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-330/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 330">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-331">
                    <h3>Episódio 331</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-331" role="button"
                      title="One Piece - Dublado (2020) - Episódio 331">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-331/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 331">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-332">
                    <h3>Episódio 332</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-332" role="button"
                      title="One Piece - Dublado (2020) - Episódio 332">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-332/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 332">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-333">
                    <h3>Episódio 333</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-333" role="button"
                      title="One Piece - Dublado (2020) - Episódio 333">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-333/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 333">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-334">
                    <h3>Episódio 334</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-334" role="button"
                      title="One Piece - Dublado (2020) - Episódio 334">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-334/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 334">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-335">
                    <h3>Episódio 335</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-335" role="button"
                      title="One Piece - Dublado (2020) - Episódio 335">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-335/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 335">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-336">
                    <h3>Episódio 336</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-336" role="button"
                      title="One Piece - Dublado (2020) - Episódio 336">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-336/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 336">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-337">
                    <h3>Episódio 337</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-337" role="button"
                      title="One Piece - Dublado (2020) - Episódio 337">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-337/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 337">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-338">
                    <h3>Episódio 338</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-338" role="button"
                      title="One Piece - Dublado (2020) - Episódio 338">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-338/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 338">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-339">
                    <h3>Episódio 339</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-339" role="button"
                      title="One Piece - Dublado (2020) - Episódio 339">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-339/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 339">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-340">
                    <h3>Episódio 340</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-340" role="button"
                      title="One Piece - Dublado (2020) - Episódio 340">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-340/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 340">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-341">
                    <h3>Episódio 341</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-341" role="button"
                      title="One Piece - Dublado (2020) - Episódio 341">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-341/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 341">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-342">
                    <h3>Episódio 342</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-342" role="button"
                      title="One Piece - Dublado (2020) - Episódio 342">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-342/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 342">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-343">
                    <h3>Episódio 343</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-343" role="button"
                      title="One Piece - Dublado (2020) - Episódio 343">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-343/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 343">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-344">
                    <h3>Episódio 344</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-344" role="button"
                      title="One Piece - Dublado (2020) - Episódio 344">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-344/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 344">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-345">
                    <h3>Episódio 345</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-345" role="button"
                      title="One Piece - Dublado (2020) - Episódio 345">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-345/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 345">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-346">
                    <h3>Episódio 346</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-346" role="button"
                      title="One Piece - Dublado (2020) - Episódio 346">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-346/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 346">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-347">
                    <h3>Episódio 347</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-347" role="button"
                      title="One Piece - Dublado (2020) - Episódio 347">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-347/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 347">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-348">
                    <h3>Episódio 348</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-348" role="button"
                      title="One Piece - Dublado (2020) - Episódio 348">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-348/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 348">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-349">
                    <h3>Episódio 349</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-349" role="button"
                      title="One Piece - Dublado (2020) - Episódio 349">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-349/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 349">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-350">
                    <h3>Episódio 350</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-350" role="button"
                      title="One Piece - Dublado (2020) - Episódio 350">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-350/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 350">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-351">
                    <h3>Episódio 351</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-351" role="button"
                      title="One Piece - Dublado (2020) - Episódio 351">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-351/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 351">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-352">
                    <h3>Episódio 352</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-352" role="button"
                      title="One Piece - Dublado (2020) - Episódio 352">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-352/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 352">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-353">
                    <h3>Episódio 353</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-353" role="button"
                      title="One Piece - Dublado (2020) - Episódio 353">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-353/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 353">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-354">
                    <h3>Episódio 354</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-354" role="button"
                      title="One Piece - Dublado (2020) - Episódio 354">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-354/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 354">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-355">
                    <h3>Episódio 355</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-355" role="button"
                      title="One Piece - Dublado (2020) - Episódio 355">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-355/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 355">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-356">
                    <h3>Episódio 356</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-356" role="button"
                      title="One Piece - Dublado (2020) - Episódio 356">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-356/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 356">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-357">
                    <h3>Episódio 357</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-357" role="button"
                      title="One Piece - Dublado (2020) - Episódio 357">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-357/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 357">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-358">
                    <h3>Episódio 358</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-358" role="button"
                      title="One Piece - Dublado (2020) - Episódio 358">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-358/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 358">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-359">
                    <h3>Episódio 359</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-359" role="button"
                      title="One Piece - Dublado (2020) - Episódio 359">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-359/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 359">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-360">
                    <h3>Episódio 360</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-360" role="button"
                      title="One Piece - Dublado (2020) - Episódio 360">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-360/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 360">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-361">
                    <h3>Episódio 361</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-361" role="button"
                      title="One Piece - Dublado (2020) - Episódio 361">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-361/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 361">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-362">
                    <h3>Episódio 362</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-362" role="button"
                      title="One Piece - Dublado (2020) - Episódio 362">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-362/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 362">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-363">
                    <h3>Episódio 363</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-363" role="button"
                      title="One Piece - Dublado (2020) - Episódio 363">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-363/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 363">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-364">
                    <h3>Episódio 364</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-364" role="button"
                      title="One Piece - Dublado (2020) - Episódio 364">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-364/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 364">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-365">
                    <h3>Episódio 365</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-365" role="button"
                      title="One Piece - Dublado (2020) - Episódio 365">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-365/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 365">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-366">
                    <h3>Episódio 366</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-366" role="button"
                      title="One Piece - Dublado (2020) - Episódio 366">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-366/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 366">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-367">
                    <h3>Episódio 367</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-367" role="button"
                      title="One Piece - Dublado (2020) - Episódio 367">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-367/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 367">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-368">
                    <h3>Episódio 368</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-368" role="button"
                      title="One Piece - Dublado (2020) - Episódio 368">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-368/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 368">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-369">
                    <h3>Episódio 369</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-369" role="button"
                      title="One Piece - Dublado (2020) - Episódio 369">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-369/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 369">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-370">
                    <h3>Episódio 370</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-370" role="button"
                      title="One Piece - Dublado (2020) - Episódio 370">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-370/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 370">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-371">
                    <h3>Episódio 371</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-371" role="button"
                      title="One Piece - Dublado (2020) - Episódio 371">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-371/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 371">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-372">
                    <h3>Episódio 372</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-372" role="button"
                      title="One Piece - Dublado (2020) - Episódio 372">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-372/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 372">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-373">
                    <h3>Episódio 373</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-373" role="button"
                      title="One Piece - Dublado (2020) - Episódio 373">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-373/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 373">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-374">
                    <h3>Episódio 374</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-374" role="button"
                      title="One Piece - Dublado (2020) - Episódio 374">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-374/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 374">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-375">
                    <h3>Episódio 375</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-375" role="button"
                      title="One Piece - Dublado (2020) - Episódio 375">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-375/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 375">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-376">
                    <h3>Episódio 376</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-376" role="button"
                      title="One Piece - Dublado (2020) - Episódio 376">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-376/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 376">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-377">
                    <h3>Episódio 377</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-377" role="button"
                      title="One Piece - Dublado (2020) - Episódio 377">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-377/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 377">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-378">
                    <h3>Episódio 378</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-378" role="button"
                      title="One Piece - Dublado (2020) - Episódio 378">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-378/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 378">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-379">
                    <h3>Episódio 379</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-379" role="button"
                      title="One Piece - Dublado (2020) - Episódio 379">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-379/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 379">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-380">
                    <h3>Episódio 380</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-380" role="button"
                      title="One Piece - Dublado (2020) - Episódio 380">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-380/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 380">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <a href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-381">
                    <h3>Episódio 381</h3>
                  </a>
                  <div>
                    <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                        class="far fa-eye-slash"></i>
                      <span class="ml-2">Visto</span>
                    </button>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-381" role="button"
                      title="One Piece - Dublado (2020) - Episódio 381">
                      <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                    </a>
                    <a class="btn btn-primary"
                      href="https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-381/download"
                      role="button" title="One Piece - Dublado (2020) - Episódio 381">
                      <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                    </a>
                  </div>
                </li>
              </ul>
            </div>
          </ul>
        </div>

        <!-- Livewire Component wire-end:TJf1glaaPStmu0wlYgsw -->
      </div>

      <div id="disqus_thread" class="mt-4"><iframe id="dsq-app9480" name="dsq-app9480" allowtransparency="true"
          frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%"
          src="https://disqus.com/embed/comments/?base=default&amp;f=betteranime&amp;t_i=route%2Fanime%2Fdublado%2Fone-piece-dublado-2020%2Fepisodio-132&amp;t_u=https%3A%2F%2Fbetteranime.net%2Fanime%2Fdublado%2Fone-piece-dublado-2020%2Fepisodio-132&amp;t_e=One%20Piece%20-%20Dublado%20(2020)%20-%20Epis%C3%B3dio%20132&amp;t_d=BetterAnime%20-%20Assistir%20One%20Piece%20-%20Dublado%20(2020)%20-%20Epis%C3%B3dio%20132%20at%C3%A9%20em%20FULL%20HD&amp;t_t=One%20Piece%20-%20Dublado%20(2020)%20-%20Epis%C3%B3dio%20132&amp;s_o=default#version=85f18815da9bc578a42b3f441810cbc7"
          style="width: 1px !important; min-width: 100% !important; border: none !important; overflow: hidden !important; height: 3772px !important;"
          horizontalscrolling="no" verticalscrolling="no"></iframe></div>
    </section>
  </div>

  <footer id="sticky-footer">
    <div class="hover"></div>
    <div class="footer-logo">
      <a href="https://betteranime.net">Better Anime</a>
      <span>© Copyright Better Anime 2023 - Todos os direitos reservados</span>
    </div>
    <div class="footer-nav">
      <nav>
        <h2 class="font-zero">Navegação - Sitemap</h2>
        <ul>
          <li><a href="https://betteranime.net">Home</a></li>
          <li><a href="https://betteranime.net/animes">Animes</a></li>
          <li><a href="https://betteranime.net/lancamentos-rss">RSS</a></li>
          <li><a href="https://betteranime.net/politica-privacidade">Política de Privacidade</a></li>
          <li><a href="https://betteranime.net/termos">Termos de Uso</a></li>
          <li><a href="https://betteranime.net/contatos">Contato</a></li>
        </ul>
      </nav>
    </div>

    <div class="mb-2" style="z-index: 1">
      <a href="https://play.google.com/store/apps/details?id=com.betteranimev3" target="_blank">
        <img height="60px" width="155" src="https://betteranime.net/img/social/google-play-badge.png" alt="Google Play">
      </a>
    </div>
    <div class="d-flex social-links">
      <a href="https://www.facebook.com/BetterAnimeOficial/" target="_blank">
        <img width="30" height="30" src="https://betteranime.net/img/social/002-facebook.png" alt="facebook">
      </a>
      <a href="https://www.instagram.com/betteranime_oficial/" target="_blank" class="mx-2">
        <img width="30" height="30" src="https://betteranime.net/img/social/001-instagram.png" alt="instagram">
      </a>
      <a href="https://twitter.com/BetteranimeO" target="_blank">
        <img width="30" height="30" src="https://betteranime.net/img/social/003-twitter.png" alt="twitter">
      </a>
    </div>
  </footer>

  <!-- NEEDED JS -->

  <!-- Scripts -->


  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
    integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous">
    </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>

  <script
    src="https://cdn.jsdelivr.net/gh/xcash/bootstrap-autocomplete@master/dist/latest/bootstrap-autocomplete.min.js"></script>


  <!-- END NEEDED JS -->


  <script type="text/javascript" src="https://betteranime.net/js/betterList.js?v0.2"></script>
  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    /**** Livewire Alert Scripts ****/
    (() => { var __webpack_modules__ = { 757: (e, t, r) => { e.exports = r(666) }, 666: e => { var t = function (e) { "use strict"; var t, r = Object.prototype, n = r.hasOwnProperty, o = "function" == typeof Symbol ? Symbol : {}, i = o.iterator || "@@iterator", a = o.asyncIterator || "@@asyncIterator", c = o.toStringTag || "@@toStringTag"; function s(e, t, r) { return Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }), e[t] } try { s({}, "") } catch (e) { s = function (e, t, r) { return e[t] = r } } function l(e, t, r, n) { var o = t && t.prototype instanceof y ? t : y, i = Object.create(o.prototype), a = new x(n || []); return i._invoke = function (e, t, r) { var n = f; return function (o, i) { if (n === p) throw new Error("Generator is already running"); if (n === d) { if ("throw" === o) throw i; return S() } for (r.method = o, r.arg = i; ;) { var a = r.delegate; if (a) { var c = L(a, r); if (c) { if (c === h) continue; return c } } if ("next" === r.method) r.sent = r._sent = r.arg; else if ("throw" === r.method) { if (n === f) throw n = d, r.arg; r.dispatchException(r.arg) } else "return" === r.method && r.abrupt("return", r.arg); n = p; var s = u(e, t, r); if ("normal" === s.type) { if (n = r.done ? d : _, s.arg === h) continue; return { value: s.arg, done: r.done } } "throw" === s.type && (n = d, r.method = "throw", r.arg = s.arg) } } }(e, r, a), i } function u(e, t, r) { try { return { type: "normal", arg: e.call(t, r) } } catch (e) { return { type: "throw", arg: e } } } e.wrap = l; var f = "suspendedStart", _ = "suspendedYield", p = "executing", d = "completed", h = {}; function y() { } function v() { } function m() { } var b = {}; s(b, i, (function () { return this })); var w = Object.getPrototypeOf, g = w && w(w(D([]))); g && g !== r && n.call(g, i) && (b = g); var O = m.prototype = y.prototype = Object.create(b); function E(e) { ["next", "throw", "return"].forEach((function (t) { s(e, t, (function (e) { return this._invoke(t, e) })) })) } function k(e, t) { function r(o, i, a, c) { var s = u(e[o], e, i); if ("throw" !== s.type) { var l = s.arg, f = l.value; return f && "object" == typeof f && n.call(f, "__await") ? t.resolve(f.__await).then((function (e) { r("next", e, a, c) }), (function (e) { r("throw", e, a, c) })) : t.resolve(f).then((function (e) { l.value = e, a(l) }), (function (e) { return r("throw", e, a, c) })) } c(s.arg) } var o; this._invoke = function (e, n) { function i() { return new t((function (t, o) { r(e, n, t, o) })) } return o = o ? o.then(i, i) : i() } } function L(e, r) { var n = e.iterator[r.method]; if (n === t) { if (r.delegate = null, "throw" === r.method) { if (e.iterator.return && (r.method = "return", r.arg = t, L(e, r), "throw" === r.method)) return h; r.method = "throw", r.arg = new TypeError("The iterator does not provide a 'throw' method") } return h } var o = u(n, e.iterator, r.arg); if ("throw" === o.type) return r.method = "throw", r.arg = o.arg, r.delegate = null, h; var i = o.arg; return i ? i.done ? (r[e.resultName] = i.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, h) : i : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, h) } function j(e) { var t = { tryLoc: e[0] }; 1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t) } function P(e) { var t = e.completion || {}; t.type = "normal", delete t.arg, e.completion = t } function x(e) { this.tryEntries = [{ tryLoc: "root" }], e.forEach(j, this), this.reset(!0) } function D(e) { if (e) { var r = e[i]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, a = function r() { for (; ++o < e.length;)if (n.call(e, o)) return r.value = e[o], r.done = !1, r; return r.value = t, r.done = !0, r }; return a.next = a } } return { next: S } } function S() { return { value: t, done: !0 } } return v.prototype = m, s(O, "constructor", m), s(m, "constructor", v), v.displayName = s(m, c, "GeneratorFunction"), e.isGeneratorFunction = function (e) { var t = "function" == typeof e && e.constructor; return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name)) }, e.mark = function (e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, m) : (e.__proto__ = m, s(e, c, "GeneratorFunction")), e.prototype = Object.create(O), e }, e.awrap = function (e) { return { __await: e } }, E(k.prototype), s(k.prototype, a, (function () { return this })), e.AsyncIterator = k, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new k(l(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then((function (e) { return e.done ? e.value : a.next() })) }, E(O), s(O, c, "Generator"), s(O, i, (function () { return this })), s(O, "toString", (function () { return "[object Generator]" })), e.keys = function (e) { var t = []; for (var r in e) t.push(r); return t.reverse(), function r() { for (; t.length;) { var n = t.pop(); if (n in e) return r.value = n, r.done = !1, r } return r.done = !0, r } }, e.values = D, x.prototype = { constructor: x, reset: function (e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(P), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t) }, stop: function () { this.done = !0; var e = this.tryEntries[0].completion; if ("throw" === e.type) throw e.arg; return this.rval }, dispatchException: function (e) { if (this.done) throw e; var r = this; function o(n, o) { return c.type = "throw", c.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var a = this.tryEntries[i], c = a.completion; if ("root" === a.tryLoc) return o("end"); if (a.tryLoc <= this.prev) { var s = n.call(a, "catchLoc"), l = n.call(a, "finallyLoc"); if (s && l) { if (this.prev < a.catchLoc) return o(a.catchLoc, !0); if (this.prev < a.finallyLoc) return o(a.finallyLoc) } else if (s) { if (this.prev < a.catchLoc) return o(a.catchLoc, !0) } else { if (!l) throw new Error("try statement without catch or finally"); if (this.prev < a.finallyLoc) return o(a.finallyLoc) } } } }, abrupt: function (e, t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break } } i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = e, a.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, h) : this.complete(a) }, complete: function (e, t) { if ("throw" === e.type) throw e.arg; return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), h }, finish: function (e) { for (var t = this.tryEntries.length - 1; t >= 0; --t) { var r = this.tryEntries[t]; if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), P(r), h } }, catch: function (e) { for (var t = this.tryEntries.length - 1; t >= 0; --t) { var r = this.tryEntries[t]; if (r.tryLoc === e) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; P(r) } return o } } throw new Error("illegal catch attempt") }, delegateYield: function (e, r, n) { return this.delegate = { iterator: D(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), h } }, e }(e.exports); try { regeneratorRuntime = t } catch (e) { "object" == typeof globalThis ? globalThis.regeneratorRuntime = t : Function("r", "regeneratorRuntime = r")(t) } } }, __webpack_module_cache__ = {}; function __webpack_require__(e) { var t = __webpack_module_cache__[e]; if (void 0 !== t) return t.exports; var r = __webpack_module_cache__[e] = { exports: {} }; return __webpack_modules__[e](r, r.exports, __webpack_require__), r.exports } __webpack_require__.n = e => { var t = e && e.__esModule ? () => e.default : () => e; return __webpack_require__.d(t, { a: t }), t }, __webpack_require__.d = (e, t) => { for (var r in t) __webpack_require__.o(t, r) && !__webpack_require__.o(e, r) && Object.defineProperty(e, r, { enumerable: !0, get: t[r] }) }, __webpack_require__.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t); var __webpack_exports__ = {}; (() => { "use strict"; var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(757), _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__); function ownKeys(e, t) { var r = Object.keys(e); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); t && (n = n.filter((function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable }))), r.push.apply(r, n) } return r } function _objectSpread(e) { for (var t = 1; t < arguments.length; t++) { var r = null != arguments[t] ? arguments[t] : {}; t % 2 ? ownKeys(Object(r), !0).forEach((function (t) { _defineProperty(e, t, r[t]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : ownKeys(Object(r)).forEach((function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t)) })) } return e } function _defineProperty(e, t, r) { return t in e ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = r, e } function asyncGeneratorStep(e, t, r, n, o, i, a) { try { var c = e[i](a), s = c.value } catch (e) { return void r(e) } c.done ? t(s) : Promise.resolve(s).then(n, o) } function _asyncToGenerator(e) { return function () { var t = this, r = arguments; return new Promise((function (n, o) { var i = e.apply(t, r); function a(e) { asyncGeneratorStep(i, n, o, a, c, "next", e) } function c(e) { asyncGeneratorStep(i, n, o, a, c, "throw", e) } a(void 0) })) } } function evalCallbacksOptions(options) { for (var callbacksKeysAllowed = ["allowOutsideClick", "allowEscapeKey", "allowEnterKey", "loaderHtml", "inputOptions", "inputValidator", "preConfirm", "preDeny", "didClose", "didDestroy", "didOpen", "didRender", "willClose", "willOpen"], _i = 0, _callbacksKeysAllowed = callbacksKeysAllowed; _i < _callbacksKeysAllowed.length; _i++) { var callbackKey = _callbacksKeysAllowed[_i]; options.hasOwnProperty(callbackKey) && ("string" == typeof options[callbackKey] || options[callbackKey] instanceof String) && options[callbackKey] && "" != options[callbackKey].trim() && (options[callbackKey] = eval(options[callbackKey])) } } function afterAlertInteraction(e) { if (e.confirmed) return "self" === e.onConfirmed.component ? void Livewire.find(e.onConfirmed.id).emitSelf(e.onConfirmed.listener, e.result) : void Livewire.emitTo(e.onConfirmed.component, e.onConfirmed.listener, e.result); if (e.isDenied) return "self" === e.onDenied.component ? void Livewire.find(e.onDenied.id).emitSelf(e.onDenied.listener, e.result) : void Livewire.emitTo(e.onDenied.component, e.onDenied.listener, e.result); if (e.onProgressFinished && e.dismiss === Swal.DismissReason.timer) return "self" === e.onProgressFinished.component ? void Livewire.find(e.onProgressFinished.id).emitSelf(e.onProgressFinished.listener, e.result) : void Livewire.emitTo(e.onProgressFinished.component, e.onProgressFinished.listener, e.result); if (e.onDismissed) { if ("self" === e.onDismissed.component) return void Livewire.find(e.onDismissed.id).emit(e.onDismissed.listener, e.result); Livewire.emitTo(e.onDismissed.component, e.onDismissed.listener, e.result) } } window.addEventListener("alert", function () { var e = _asyncToGenerator(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark((function e(t) { var r, n, o, i, a, c, s, l; return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap((function (e) { for (; ;)switch (e.prev = e.next) { case 0: return o = t.detail.message, i = null !== (r = t.detail.type) && void 0 !== r ? r : null, a = t.detail.data, c = t.detail.events, evalCallbacksOptions(s = t.detail.options), e.next = 8, Swal.fire(_objectSpread({ title: o, icon: i }, s)); case 8: afterAlertInteraction(_objectSpread(_objectSpread(_objectSpread({ confirmed: (l = e.sent).isConfirmed, denied: l.isDenied, dismiss: l.dismiss, result: _objectSpread(_objectSpread({}, l), {}, { data: _objectSpread(_objectSpread({}, a), {}, { inputAttributes: null !== (n = s.inputAttributes) && void 0 !== n ? n : null }) }) }, c), l), s)); case 10: case "end": return e.stop() } }), e) }))); return function (t) { return e.apply(this, arguments) } }()), window.flashAlert = function () { var e = _asyncToGenerator(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark((function e(t) { var r, n, o, i, a, c, s; return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap((function (e) { for (; ;)switch (e.prev = e.next) { case 0: return i = t.events, a = t.events.data, evalCallbacksOptions(c = t.options), e.next = 6, Swal.fire(_objectSpread({ title: null !== (r = t.message) && void 0 !== r ? r : "", icon: null !== (n = t.type) && void 0 !== n ? n : null }, c)); case 6: afterAlertInteraction(_objectSpread(_objectSpread({ confirmed: (s = e.sent).isConfirmed, denied: s.isDenied, dismiss: s.dismiss, result: _objectSpread(_objectSpread({}, s), {}, { data: _objectSpread(_objectSpread({}, a), {}, { inputAttributes: null !== (o = c.inputAttributes) && void 0 !== o ? o : null }) }) }, i), t.options)); case 8: case "end": return e.stop() } }), e) }))); return function (t) { return e.apply(this, arguments) } }() })() })();
  </script>


  <script>
    // TOOLTIP :D
    $(function () {
      $('[data-toggle="tooltip"]').tooltip()
    });

    var disqus_config = function () {
      this.page.url = "https://betteranime.net/anime/dublado/one-piece-dublado-2020/episodio-132";
      this.page.identifier = "route/anime/dublado/one-piece-dublado-2020/episodio-132";
      this.page.title = "One Piece - Dublado (2020) - Episódio 132";
    };

    (function () {  // DON'T EDIT BELOW THIS LINE
      var d = document, s = d.createElement('script');

      s.src = 'https://betteranime.disqus.com/embed.js';

      s.setAttribute('data-timestamp', +new Date());
      (d.head || d.body).appendChild(s);
    })();

    function isEmpty(str) {
      return (!str || str.length === 0);
    }

    function changePlayerResolution(quality) {
      let qualityString = [];
      qualityString["480p"] = "bWIq5xEBeNmMaHKCa/USJjJGLAN0Trj4C2N23vq9mvq0OcFjPeYIYeZ0PU1dJJEKYcOGlkTrxpGFTJrM3YFN/CveSliD86FNzj19gV7KQmren9sDfQ==";
      qualityString["720p"] = "bWIq5xEBeNmMaHKCa/USJjJGLAN0Trj4C2N23vq9gfq0OcFjPeYIYeZ0PU1dJJEKYcOGlkTrxpGFTJrM3YFN/CveSliD86FNzj19gV7KQmren9sDfQ==";
      qualityString["1080p"] = "bWIq5xEBeNmMaHKCa/USJjJGLAN0Trj4C2N23vq9j+v6eatOb5VLbPJZOVpKdM5bI9aLmkDo346FT5rM0IRB4TGJEATI5LxOhXUpxEXIQ2vSn9MNNYsZ52U=";
      const url = "https://betteranime.net/changePlayer", info = qualityString[quality]; $.ajax({ method: "POST", data: { _token: "GJKNNHbRpGxMJlrktKUQ61aBii1GJRs2ql9pwGmt", info: info }, url: url }).done(function (t) { document.getElementById("playerFrame").src = t.frameLink, $("#qualitiesColumn button.active").removeClass("active"), $(`#quality${quality}`).addClass("active") });
    }
  </script>

  <script src="https://betteranime.net/js/script.js"></script>
  <script src="/livewire/livewire.js?id=90730a3b0e7144480175" data-turbo-eval="false"
    data-turbolinks-eval="false"></script>
  <script data-turbo-eval="false"
    data-turbolinks-eval="false">window.livewire = new Livewire(); window.Livewire = window.livewire; window.livewire_app_url = ''; window.livewire_token = 'GJKNNHbRpGxMJlrktKUQ61aBii1GJRs2ql9pwGmt'; window.deferLoadingAlpine = function (callback) { window.addEventListener('livewire:load', function () { callback(); }); }; let started = false; window.addEventListener('alpine:initializing', function () { if (!started) { window.livewire.start(); started = true; } }); document.addEventListener("DOMContentLoaded", function () { if (!started) { window.livewire.start(); started = true; } });</script>

  <script>(function (d, z, s) { s.src = 'https://' + d + '/400/' + z; try { (document.body || document.documentElement).appendChild(s) } catch (e) { } })('outoctillerytor.com', 6336489, document.createElement('script'))</script>
  <script src="https://outoctillerytor.com/400/6336489"></script>



  <iframe style="display: none;"></iframe>
  <div data-lastpass-root=""
    style="position: absolute !important; top: 0px !important; left: 0px !important; height: 0px !important; width: 0px !important;">
    <div data-lastpass-infield="true" style="position: absolute !important; top: 0px !important; left: 0px !important;">
    </div>
  </div>
</body>

</html>
