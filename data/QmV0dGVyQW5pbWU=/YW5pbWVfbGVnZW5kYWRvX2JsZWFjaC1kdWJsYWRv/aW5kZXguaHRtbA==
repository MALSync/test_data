<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="google-site-verification" content="WTIRFeN7V8JvB4kCXIVadZ2Xu_A8qn1BnN7m7vV_Xh8">
  <title>BetterAnime - Assistir Bleach - Dublado</title>
  <link rel="apple-touch-icon" sizes="180x180" href="https://betteranime.net/img/favicon/apple-touch-icon.png">
  <link rel="apple-touch-icon" sizes="57x57" href="https://betteranime.net/img/favicon/apple-icon-57x57">
  <link rel="apple-touch-icon" sizes="60x60" href="https://betteranime.net/img/favicon/apple-icon-60x60">
  <link rel="apple-touch-icon" sizes="72x72" href="https://betteranime.net/img/favicon/apple-icon-72x72">
  <link rel="apple-touch-icon" sizes="76x76" href="https://betteranime.net/img/favicon/apple-icon-76x76">
  <link rel="apple-touch-icon" sizes="114x114" href="https://betteranime.net/img/favicon/apple-icon-114x114">
  <link rel="apple-touch-icon" sizes="120x120" href="https://betteranime.net/img/favicon/apple-icon-120x120">
  <link rel="apple-touch-icon" sizes="144x144" href="https://betteranime.net/img/favicon/apple-icon-144x144">
  <link rel="apple-touch-icon" sizes="152x152" href="https://betteranime.net/img/favicon/apple-icon-152x152">
  <link rel="apple-touch-icon" sizes="180x180" href="https://betteranime.net/img/favicon/apple-icon-180x180">
  <link rel="icon" type="image/png" sizes="192x192" href="https://betteranime.net/img/favicon/android-icon-192x192">
  <link rel="icon" type="image/png" sizes="32x32" href="https://betteranime.net/img/favicon/favicon-32x32">
  <link rel="icon" type="image/png" sizes="96x96" href="https://betteranime.net/img/favicon/favicon-96x96">
  <link rel="icon" type="image/png" sizes="16x16" href="https://betteranime.net/img/favicon/favicon-16x16">
  <link rel="manifest" href="https://betteranime.net/img/favicon/manifest.json">
  <link rel="mask-icon" href="https://betteranime.net/img/favicon/safari-pinned-tab.svg" color="#5bbad5">
  <link rel="shortcut icon" href="https://betteranime.net/img/favicon/favicon.ico">
  <meta name="msapplication-TileColor" content="#da532c">
  <meta name="msapplication-TileImage" content="https://betteranime.net/img/favicon/ms-icon-144x144.png">
  <meta name="msapplication-config" content="https://betteranime.net/img/favicon/browserconfig.xml">
  <meta name="theme-color" content="#ffffff">


  <!-- Google tag (gtag.js) -->
  <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-C60Y59CHKJ"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-C60Y59CHKJ');
  </script>

  <!-- Fonts -->
  <link rel="dns-prefetch" href="//fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css?family=Nunito|Roboto:300,400,500,700&amp;display=swap|Open+Sans"
    rel="stylesheet">

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css"
    integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l" crossorigin="anonymous">

  <!-- SCRIPTS -->

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"
    integrity="sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg=="
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"
    integrity="sha512-uto9mlQzrs59VwILcLiRYeLKPPbS/bT71da/OEBYEwcdNUk8jYIy+D176RYoop1Da+f9mvkYrmj5MCLZWEtQuA=="
    crossorigin="anonymous"></script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns"
    crossorigin="anonymous"></script>

  <!-- Styles -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" rel="stylesheet">
  <link href="https://betteranime.net/css/all.min.css?v0.1" type="text/css" rel="stylesheet">
  <!-- CSS only -->


  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">
  <link href="https://betteranime.net/css/betterStyle.css?v1.8" rel="stylesheet">

  <style>
    [wire\:loading],
    [wire\:loading\.delay],
    [wire\:loading\.inline-block],
    [wire\:loading\.inline],
    [wire\:loading\.block],
    [wire\:loading\.flex],
    [wire\:loading\.table],
    [wire\:loading\.grid],
    [wire\:loading\.inline-flex] {
      display: none;
    }

    [wire\:loading\.delay\.shortest],
    [wire\:loading\.delay\.shorter],
    [wire\:loading\.delay\.short],
    [wire\:loading\.delay\.long],
    [wire\:loading\.delay\.longer],
    [wire\:loading\.delay\.longest] {
      display: none;
    }

    [wire\:offline] {
      display: none;
    }

    [wire\:dirty]:not(textarea):not(input):not(select) {
      display: none;
    }

    input:-webkit-autofill,
    select:-webkit-autofill,
    textarea:-webkit-autofill {
      animation-duration: 50000s;
      animation-name: livewireautofill;
    }

    @keyframes livewireautofill {
      from {}
    }
  </style>

  <title>BetterAnime - Assistir Bleach - Dublado Legendado no BetterAnime!</title>
  <meta name="description" content="Assista Bleach - Dublado Legendado em alta qualidade! ">
  <link rel="canonical" href="null">
  <meta property="og:title" content="Assistir Bleach - Dublado Legendado no BetterAnime!">
  <meta property="og:description" content="Assista Bleach - Dublado Legendado em alta qualidade! ">
  <meta property="og:url" content="https://betteranime.net/anime/legendado/bleach-dublado">
  <meta property="og:image" content="//betterstatic.ga/cover/97Gs7SZVjjp1Gv7NZONcCPUkklmlqIno0aTWBKvj.jpeg">

  <meta name="twitter:title" content="Assistir Bleach - Dublado Legendado no BetterAnime!">
  <meta name="twitter:description" content="Assista Bleach - Dublado Legendado em alta qualidade! ">
  <meta name="twitter:image0" content="//betterstatic.ga/cover/97Gs7SZVjjp1Gv7NZONcCPUkklmlqIno0aTWBKvj.jpeg">
  <script
    type="application/ld+json">{"@context":"https://schema.org","@type":"WebPage","name":"Assistir Bleach - Dublado Legendado no BetterAnime!","description":"Assista Bleach - Dublado Legendado em alta qualidade! ","url":"https://betteranime.net/anime/legendado/bleach-dublado","image":"//betterstatic.ga/cover/97Gs7SZVjjp1Gv7NZONcCPUkklmlqIno0aTWBKvj.jpeg"}</script>


  <script src="https://betteranime.disqus.com/embed.js" data-timestamp="1698072268813"></script>
  <script src="https://c.disquscdn.com/next/embed/alfie_v4.63f1ab6d6b9d5807dc0c94ef3fe0b851.js" async=""
    charset="UTF-8"></script>
</head>

<body class="d-flex flex-column">
  <header class="container py-4">
    <h1 class="font-zero">BetterAnime</h1>

    <nav class="navbar navbar-expand-lg navbar-dark transparent navbar-toggler-left">
      <h2 class="font-zero">Navegação do Site</h2>
      <a class="navbar-brand header-logo" href="https://betteranime.net"><img
          src="https://betteranime.net/img/logo_shadow.png"></a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>

      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
          <li class="nav-item active">
            <a class="nav-link" href="https://betteranime.net">Home</a>
          </li>

          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown"
              aria-haspopup="true" aria-expanded="false">
              Lista
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
              <a class="dropdown-item" href="https://betteranime.net/animes">Animes</a>
              <a class="dropdown-item" href="https://betteranime.net/filmes">Filmes</a>
              <div class="dropdown-divider"></div>
              <a class="dropdown-item" href="https://betteranime.net/pesquisa">Todos</a>
            </div>
          </li>

          <li class="nav-item">
            <a class="nav-link" href="https://discord.gg/betteranime" tabindex="-1" aria-disabled="true"><i
                class="fab fa-discord"></i> Discord</a>
          </li>

          <li class="nav-item">
            <a class="nav-link" href="https://betteranime.net/contatos" tabindex="-1" aria-disabled="true">Contato</a>
          </li>

        </ul>
      </div>
      <div class="d-flex align-items-center" id="rightMenu">
        <form method="GET" id="search-form" class="header-search" action="https://betteranime.net/pesquisa">
          <input type="text" class="form-control advanced2AutoComplete" name="titulo" id="search_data"
            placeholder="Buscar..." autocomplete="off">
          <i class="fa fa-search" id="btn-search"></i>
        </form>

        <div>
          <a title="Anime Aleatório" class="circle-background mr-3" href="https://betteranime.net/random">
            <i class="fas fa-dice fa-lg"></i>
          </a>
        </div>

        <div class="profile">
          <div class="dropdown">
            <button class="btn btn-secondary" type="button" id="dropdownMenuButton" data-toggle="dropdown"
              aria-haspopup="true" aria-expanded="false"><i class="fas fa-user"></i>
            </button>

            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
              <a class="dropdown-item" href="https://betteranime.net/login">Login</a>
              <a class="dropdown-item" href="https://betteranime.net/register">Registrar</a>
            </div>
          </div>
        </div>
      </div>

    </nav>
  </header>
  <div id="page-content">
    <div id="launcherBg">
      <div class="banner-background">
        <img src="https://betteranime.net/img/fundo2.jpg" alt="BetterAnime">
      </div>
    </div>











    <main class="container d-flex my-5">
      <div class="infos_left">
        <div class="anime-info">
          <p>Anime - Duração: <span class="text-blur">24 min per ep</span></p>

          <h2 class="pt-5">Bleach - Dublado</h2>

          <p>Ano - <span class="pr-2 text-blur">2004</span> Qualidade - <span class="text-blur">FULL HD</span></p>
          <div class="anime-down-share">
            <a href="https://betteranime.net/login" class="btn btn-share" data-toggle="tooltip"
              style="background: rgba(255, 193, 7, 0.5)" title="" data-original-title="Login para Favoritar"><i
                class="far fa-heart"></i></a>
            <a href="" class="btn btn-share" data-toggle="tooltip" title=""
              data-original-title="Compartilhar no Facebook"><i class="fab fa-facebook-f"></i></a>
            <a href="" class="btn btn-share" data-toggle="tooltip" title=""
              data-original-title="Compartilhar no Twitter"><i class="fab fa-twitter"></i></a>
          </div>
          <div class="anime-description">
            <p>Ichigo Kurosaki é um garoto de 15 anos que tem uma estranha capacidade de ver, tocar e falar com
              espíritos de pessoas mortas. Logo que a shinigami Rukia Kuchiki toma conhecimento dos poderes de Ichigo,
              vai atrás dele para investigar, e acaba em uma luta com um Hollow que foi atraído pelo forte poder
              espiritual de Ichigo. Antes de ser derrotada pela criatura, Rukia passa seus poderes a Ichigo, o qual se
              torna um shinigami, e após derrotar o Hollow ingressa em uma jornada para proteger os humanos e os
              espíritos da ameaça dos Hollows.</p>
          </div>

          <div class="anime-genres">
            <a href="https://betteranime.net/animes?generos%5B%5D=acao">Ação</a>
            <a href="https://betteranime.net/animes?generos%5B%5D=aventura">Aventura</a>
            <a href="https://betteranime.net/animes?generos%5B%5D=comedia">Comédia</a>
            <a href="https://betteranime.net/animes?generos%5B%5D=shounen">Shounen</a>
            <a href="https://betteranime.net/animes?generos%5B%5D=sobrenatural">Sobrenatural</a>
            <a href="https://betteranime.net/animes?generos%5B%5D=super-poderes">Super Poderes</a>
          </div>
          <p>Título Alternativo: <span>Bleach</span></p>
          <p>Episódios: <span>366</span></p>
          <p>Fansub: <span>Oficial</span></p>
          <p>Estado: <span>Completo</span></p>
          <p>Idioma: <span>Legendado</span></p>
          <p>Tipo: <span>WEB</span></p>
          <p>Produtor(a): <span>TV Tokyo, Aniplex, Dentsu, TV Tokyo Music, Studio Kelmadick, Shueisha</span></p>
          <p>Estúdio: <span>Studio Pierrot</span></p>
        </div>
      </div>
      <div class="infos-img text-center">
        <img src="//betterstatic.ga/cover/97Gs7SZVjjp1Gv7NZONcCPUkklmlqIno0aTWBKvj.jpeg" alt="Bleach - Dublado"
          width="185px" height="250px">
        <p>16104239 <span>Visualizações</span></p>
      </div>
    </main>




    <section class="container">

      <div wire:id="RZd14q3CHtmHqShI2M9r">
        <div class="d-flex justify-content-end">
          <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning mb-3">
            <i class="far fa-eye-slash"></i>
            <span>Marcar todos como Visto</span>
          </button>
        </div>

        <h2 class="font-zero">Episódios</h2>
        <ul class="list-group mb-3">
          <div style="overflow: hidden;">
            <ul class="list-group" id="episodesList">
              <li class="list-group-item">
                <div class="w-100">
                  <input type="text" wire:model="searchTerm" class="form-control w-100" placeholder="Pesquisar...">
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-01">
                  <h3>Episódio 01</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-01"
                    role="button" title="Bleach - Dublado - Episódio 01">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-01/download" role="button"
                    title="Bleach - Dublado - Episódio 01">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-02">
                  <h3>Episódio 02</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-02"
                    role="button" title="Bleach - Dublado - Episódio 02">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-02/download" role="button"
                    title="Bleach - Dublado - Episódio 02">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-03">
                  <h3>Episódio 03</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-03"
                    role="button" title="Bleach - Dublado - Episódio 03">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-03/download" role="button"
                    title="Bleach - Dublado - Episódio 03">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-04">
                  <h3>Episódio 04</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-04"
                    role="button" title="Bleach - Dublado - Episódio 04">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-04/download" role="button"
                    title="Bleach - Dublado - Episódio 04">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-05">
                  <h3>Episódio 05</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-05"
                    role="button" title="Bleach - Dublado - Episódio 05">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-05/download" role="button"
                    title="Bleach - Dublado - Episódio 05">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-06">
                  <h3>Episódio 06</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-06"
                    role="button" title="Bleach - Dublado - Episódio 06">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-06/download" role="button"
                    title="Bleach - Dublado - Episódio 06">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-07">
                  <h3>Episódio 07</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-07"
                    role="button" title="Bleach - Dublado - Episódio 07">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-07/download" role="button"
                    title="Bleach - Dublado - Episódio 07">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-08">
                  <h3>Episódio 08</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-08"
                    role="button" title="Bleach - Dublado - Episódio 08">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-08/download" role="button"
                    title="Bleach - Dublado - Episódio 08">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-09">
                  <h3>Episódio 09</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-09"
                    role="button" title="Bleach - Dublado - Episódio 09">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-09/download" role="button"
                    title="Bleach - Dublado - Episódio 09">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-10">
                  <h3>Episódio 10</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-10"
                    role="button" title="Bleach - Dublado - Episódio 10">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-10/download" role="button"
                    title="Bleach - Dublado - Episódio 10">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-11">
                  <h3>Episódio 11</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-11"
                    role="button" title="Bleach - Dublado - Episódio 11">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-11/download" role="button"
                    title="Bleach - Dublado - Episódio 11">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-12">
                  <h3>Episódio 12</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-12"
                    role="button" title="Bleach - Dublado - Episódio 12">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-12/download" role="button"
                    title="Bleach - Dublado - Episódio 12">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-13">
                  <h3>Episódio 13</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-13"
                    role="button" title="Bleach - Dublado - Episódio 13">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-13/download" role="button"
                    title="Bleach - Dublado - Episódio 13">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-14">
                  <h3>Episódio 14</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-14"
                    role="button" title="Bleach - Dublado - Episódio 14">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-14/download" role="button"
                    title="Bleach - Dublado - Episódio 14">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-15">
                  <h3>Episódio 15</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-15"
                    role="button" title="Bleach - Dublado - Episódio 15">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-15/download" role="button"
                    title="Bleach - Dublado - Episódio 15">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-16">
                  <h3>Episódio 16</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-16"
                    role="button" title="Bleach - Dublado - Episódio 16">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-16/download" role="button"
                    title="Bleach - Dublado - Episódio 16">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-17">
                  <h3>Episódio 17</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-17"
                    role="button" title="Bleach - Dublado - Episódio 17">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-17/download" role="button"
                    title="Bleach - Dublado - Episódio 17">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-18">
                  <h3>Episódio 18</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-18"
                    role="button" title="Bleach - Dublado - Episódio 18">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-18/download" role="button"
                    title="Bleach - Dublado - Episódio 18">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-19">
                  <h3>Episódio 19</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-19"
                    role="button" title="Bleach - Dublado - Episódio 19">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-19/download" role="button"
                    title="Bleach - Dublado - Episódio 19">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-20">
                  <h3>Episódio 20</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-20"
                    role="button" title="Bleach - Dublado - Episódio 20">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-20/download" role="button"
                    title="Bleach - Dublado - Episódio 20">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-21">
                  <h3>Episódio 21</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-21"
                    role="button" title="Bleach - Dublado - Episódio 21">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-21/download" role="button"
                    title="Bleach - Dublado - Episódio 21">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-22">
                  <h3>Episódio 22</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-22"
                    role="button" title="Bleach - Dublado - Episódio 22">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-22/download" role="button"
                    title="Bleach - Dublado - Episódio 22">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-23">
                  <h3>Episódio 23</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-23"
                    role="button" title="Bleach - Dublado - Episódio 23">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-23/download" role="button"
                    title="Bleach - Dublado - Episódio 23">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-24">
                  <h3>Episódio 24</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-24"
                    role="button" title="Bleach - Dublado - Episódio 24">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-24/download" role="button"
                    title="Bleach - Dublado - Episódio 24">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-25">
                  <h3>Episódio 25</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-25"
                    role="button" title="Bleach - Dublado - Episódio 25">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-25/download" role="button"
                    title="Bleach - Dublado - Episódio 25">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-26">
                  <h3>Episódio 26</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-26"
                    role="button" title="Bleach - Dublado - Episódio 26">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-26/download" role="button"
                    title="Bleach - Dublado - Episódio 26">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-27">
                  <h3>Episódio 27</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-27"
                    role="button" title="Bleach - Dublado - Episódio 27">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-27/download" role="button"
                    title="Bleach - Dublado - Episódio 27">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-28">
                  <h3>Episódio 28</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-28"
                    role="button" title="Bleach - Dublado - Episódio 28">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-28/download" role="button"
                    title="Bleach - Dublado - Episódio 28">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-29">
                  <h3>Episódio 29</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-29"
                    role="button" title="Bleach - Dublado - Episódio 29">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-29/download" role="button"
                    title="Bleach - Dublado - Episódio 29">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-30">
                  <h3>Episódio 30</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-30"
                    role="button" title="Bleach - Dublado - Episódio 30">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-30/download" role="button"
                    title="Bleach - Dublado - Episódio 30">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-31">
                  <h3>Episódio 31</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-31"
                    role="button" title="Bleach - Dublado - Episódio 31">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-31/download" role="button"
                    title="Bleach - Dublado - Episódio 31">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-32">
                  <h3>Episódio 32</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-32"
                    role="button" title="Bleach - Dublado - Episódio 32">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-32/download" role="button"
                    title="Bleach - Dublado - Episódio 32">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-33">
                  <h3>Episódio 33</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-33"
                    role="button" title="Bleach - Dublado - Episódio 33">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-33/download" role="button"
                    title="Bleach - Dublado - Episódio 33">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-34">
                  <h3>Episódio 34</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-34"
                    role="button" title="Bleach - Dublado - Episódio 34">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-34/download" role="button"
                    title="Bleach - Dublado - Episódio 34">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-35">
                  <h3>Episódio 35</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-35"
                    role="button" title="Bleach - Dublado - Episódio 35">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-35/download" role="button"
                    title="Bleach - Dublado - Episódio 35">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-36">
                  <h3>Episódio 36</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-36"
                    role="button" title="Bleach - Dublado - Episódio 36">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-36/download" role="button"
                    title="Bleach - Dublado - Episódio 36">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-37">
                  <h3>Episódio 37</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-37"
                    role="button" title="Bleach - Dublado - Episódio 37">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-37/download" role="button"
                    title="Bleach - Dublado - Episódio 37">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-38">
                  <h3>Episódio 38</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-38"
                    role="button" title="Bleach - Dublado - Episódio 38">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-38/download" role="button"
                    title="Bleach - Dublado - Episódio 38">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-39">
                  <h3>Episódio 39</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-39"
                    role="button" title="Bleach - Dublado - Episódio 39">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-39/download" role="button"
                    title="Bleach - Dublado - Episódio 39">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-40">
                  <h3>Episódio 40</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-40"
                    role="button" title="Bleach - Dublado - Episódio 40">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-40/download" role="button"
                    title="Bleach - Dublado - Episódio 40">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-41">
                  <h3>Episódio 41</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-41"
                    role="button" title="Bleach - Dublado - Episódio 41">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-41/download" role="button"
                    title="Bleach - Dublado - Episódio 41">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-42">
                  <h3>Episódio 42</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-42"
                    role="button" title="Bleach - Dublado - Episódio 42">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-42/download" role="button"
                    title="Bleach - Dublado - Episódio 42">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-43">
                  <h3>Episódio 43</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-43"
                    role="button" title="Bleach - Dublado - Episódio 43">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-43/download" role="button"
                    title="Bleach - Dublado - Episódio 43">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-44">
                  <h3>Episódio 44</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-44"
                    role="button" title="Bleach - Dublado - Episódio 44">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-44/download" role="button"
                    title="Bleach - Dublado - Episódio 44">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-45">
                  <h3>Episódio 45</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-45"
                    role="button" title="Bleach - Dublado - Episódio 45">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-45/download" role="button"
                    title="Bleach - Dublado - Episódio 45">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-46">
                  <h3>Episódio 46</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-46"
                    role="button" title="Bleach - Dublado - Episódio 46">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-46/download" role="button"
                    title="Bleach - Dublado - Episódio 46">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-47">
                  <h3>Episódio 47</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-47"
                    role="button" title="Bleach - Dublado - Episódio 47">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-47/download" role="button"
                    title="Bleach - Dublado - Episódio 47">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-48">
                  <h3>Episódio 48</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-48"
                    role="button" title="Bleach - Dublado - Episódio 48">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-48/download" role="button"
                    title="Bleach - Dublado - Episódio 48">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-49">
                  <h3>Episódio 49</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-49"
                    role="button" title="Bleach - Dublado - Episódio 49">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-49/download" role="button"
                    title="Bleach - Dublado - Episódio 49">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-50">
                  <h3>Episódio 50</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-50"
                    role="button" title="Bleach - Dublado - Episódio 50">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-50/download" role="button"
                    title="Bleach - Dublado - Episódio 50">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-51">
                  <h3>Episódio 51</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-51"
                    role="button" title="Bleach - Dublado - Episódio 51">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-51/download" role="button"
                    title="Bleach - Dublado - Episódio 51">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-52">
                  <h3>Episódio 52</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-52"
                    role="button" title="Bleach - Dublado - Episódio 52">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-52/download" role="button"
                    title="Bleach - Dublado - Episódio 52">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-53">
                  <h3>Episódio 53</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-53"
                    role="button" title="Bleach - Dublado - Episódio 53">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-53/download" role="button"
                    title="Bleach - Dublado - Episódio 53">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-54">
                  <h3>Episódio 54</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-54"
                    role="button" title="Bleach - Dublado - Episódio 54">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-54/download" role="button"
                    title="Bleach - Dublado - Episódio 54">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-55">
                  <h3>Episódio 55</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-55"
                    role="button" title="Bleach - Dublado - Episódio 55">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-55/download" role="button"
                    title="Bleach - Dublado - Episódio 55">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-56">
                  <h3>Episódio 56</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-56"
                    role="button" title="Bleach - Dublado - Episódio 56">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-56/download" role="button"
                    title="Bleach - Dublado - Episódio 56">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-57">
                  <h3>Episódio 57</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-57"
                    role="button" title="Bleach - Dublado - Episódio 57">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-57/download" role="button"
                    title="Bleach - Dublado - Episódio 57">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-58">
                  <h3>Episódio 58</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-58"
                    role="button" title="Bleach - Dublado - Episódio 58">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-58/download" role="button"
                    title="Bleach - Dublado - Episódio 58">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-59">
                  <h3>Episódio 59</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-59"
                    role="button" title="Bleach - Dublado - Episódio 59">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-59/download" role="button"
                    title="Bleach - Dublado - Episódio 59">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-60">
                  <h3>Episódio 60</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-60"
                    role="button" title="Bleach - Dublado - Episódio 60">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-60/download" role="button"
                    title="Bleach - Dublado - Episódio 60">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-61">
                  <h3>Episódio 61</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-61"
                    role="button" title="Bleach - Dublado - Episódio 61">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-61/download" role="button"
                    title="Bleach - Dublado - Episódio 61">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-62">
                  <h3>Episódio 62</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-62"
                    role="button" title="Bleach - Dublado - Episódio 62">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-62/download" role="button"
                    title="Bleach - Dublado - Episódio 62">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-63">
                  <h3>Episódio 63</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-63"
                    role="button" title="Bleach - Dublado - Episódio 63">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-63/download" role="button"
                    title="Bleach - Dublado - Episódio 63">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-64">
                  <h3>Episódio 64</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-64"
                    role="button" title="Bleach - Dublado - Episódio 64">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-64/download" role="button"
                    title="Bleach - Dublado - Episódio 64">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-65">
                  <h3>Episódio 65</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-65"
                    role="button" title="Bleach - Dublado - Episódio 65">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-65/download" role="button"
                    title="Bleach - Dublado - Episódio 65">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-66">
                  <h3>Episódio 66</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-66"
                    role="button" title="Bleach - Dublado - Episódio 66">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-66/download" role="button"
                    title="Bleach - Dublado - Episódio 66">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-67">
                  <h3>Episódio 67</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-67"
                    role="button" title="Bleach - Dublado - Episódio 67">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-67/download" role="button"
                    title="Bleach - Dublado - Episódio 67">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-68">
                  <h3>Episódio 68</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-68"
                    role="button" title="Bleach - Dublado - Episódio 68">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-68/download" role="button"
                    title="Bleach - Dublado - Episódio 68">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-69">
                  <h3>Episódio 69</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-69"
                    role="button" title="Bleach - Dublado - Episódio 69">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-69/download" role="button"
                    title="Bleach - Dublado - Episódio 69">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-70">
                  <h3>Episódio 70</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-70"
                    role="button" title="Bleach - Dublado - Episódio 70">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-70/download" role="button"
                    title="Bleach - Dublado - Episódio 70">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-71">
                  <h3>Episódio 71</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-71"
                    role="button" title="Bleach - Dublado - Episódio 71">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-71/download" role="button"
                    title="Bleach - Dublado - Episódio 71">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-72">
                  <h3>Episódio 72</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-72"
                    role="button" title="Bleach - Dublado - Episódio 72">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-72/download" role="button"
                    title="Bleach - Dublado - Episódio 72">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-73">
                  <h3>Episódio 73</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-73"
                    role="button" title="Bleach - Dublado - Episódio 73">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-73/download" role="button"
                    title="Bleach - Dublado - Episódio 73">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-74">
                  <h3>Episódio 74</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-74"
                    role="button" title="Bleach - Dublado - Episódio 74">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-74/download" role="button"
                    title="Bleach - Dublado - Episódio 74">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-75">
                  <h3>Episódio 75</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-75"
                    role="button" title="Bleach - Dublado - Episódio 75">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-75/download" role="button"
                    title="Bleach - Dublado - Episódio 75">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-76">
                  <h3>Episódio 76</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-76"
                    role="button" title="Bleach - Dublado - Episódio 76">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-76/download" role="button"
                    title="Bleach - Dublado - Episódio 76">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-77">
                  <h3>Episódio 77</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-77"
                    role="button" title="Bleach - Dublado - Episódio 77">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-77/download" role="button"
                    title="Bleach - Dublado - Episódio 77">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-78">
                  <h3>Episódio 78</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-78"
                    role="button" title="Bleach - Dublado - Episódio 78">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-78/download" role="button"
                    title="Bleach - Dublado - Episódio 78">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-79">
                  <h3>Episódio 79</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-79"
                    role="button" title="Bleach - Dublado - Episódio 79">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-79/download" role="button"
                    title="Bleach - Dublado - Episódio 79">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-80">
                  <h3>Episódio 80</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-80"
                    role="button" title="Bleach - Dublado - Episódio 80">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-80/download" role="button"
                    title="Bleach - Dublado - Episódio 80">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-81">
                  <h3>Episódio 81</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-81"
                    role="button" title="Bleach - Dublado - Episódio 81">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-81/download" role="button"
                    title="Bleach - Dublado - Episódio 81">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-82">
                  <h3>Episódio 82</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-82"
                    role="button" title="Bleach - Dublado - Episódio 82">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-82/download" role="button"
                    title="Bleach - Dublado - Episódio 82">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-83">
                  <h3>Episódio 83</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-83"
                    role="button" title="Bleach - Dublado - Episódio 83">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-83/download" role="button"
                    title="Bleach - Dublado - Episódio 83">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-84">
                  <h3>Episódio 84</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-84"
                    role="button" title="Bleach - Dublado - Episódio 84">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-84/download" role="button"
                    title="Bleach - Dublado - Episódio 84">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-85">
                  <h3>Episódio 85</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-85"
                    role="button" title="Bleach - Dublado - Episódio 85">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-85/download" role="button"
                    title="Bleach - Dublado - Episódio 85">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-86">
                  <h3>Episódio 86</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-86"
                    role="button" title="Bleach - Dublado - Episódio 86">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-86/download" role="button"
                    title="Bleach - Dublado - Episódio 86">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-87">
                  <h3>Episódio 87</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-87"
                    role="button" title="Bleach - Dublado - Episódio 87">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-87/download" role="button"
                    title="Bleach - Dublado - Episódio 87">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-88">
                  <h3>Episódio 88</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-88"
                    role="button" title="Bleach - Dublado - Episódio 88">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-88/download" role="button"
                    title="Bleach - Dublado - Episódio 88">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-89">
                  <h3>Episódio 89</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-89"
                    role="button" title="Bleach - Dublado - Episódio 89">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-89/download" role="button"
                    title="Bleach - Dublado - Episódio 89">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-90">
                  <h3>Episódio 90</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-90"
                    role="button" title="Bleach - Dublado - Episódio 90">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-90/download" role="button"
                    title="Bleach - Dublado - Episódio 90">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-91">
                  <h3>Episódio 91</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-91"
                    role="button" title="Bleach - Dublado - Episódio 91">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-91/download" role="button"
                    title="Bleach - Dublado - Episódio 91">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-92">
                  <h3>Episódio 92</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-92"
                    role="button" title="Bleach - Dublado - Episódio 92">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-92/download" role="button"
                    title="Bleach - Dublado - Episódio 92">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-93">
                  <h3>Episódio 93</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-93"
                    role="button" title="Bleach - Dublado - Episódio 93">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-93/download" role="button"
                    title="Bleach - Dublado - Episódio 93">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-94">
                  <h3>Episódio 94</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-94"
                    role="button" title="Bleach - Dublado - Episódio 94">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-94/download" role="button"
                    title="Bleach - Dublado - Episódio 94">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-95">
                  <h3>Episódio 95</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-95"
                    role="button" title="Bleach - Dublado - Episódio 95">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-95/download" role="button"
                    title="Bleach - Dublado - Episódio 95">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-96">
                  <h3>Episódio 96</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-96"
                    role="button" title="Bleach - Dublado - Episódio 96">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-96/download" role="button"
                    title="Bleach - Dublado - Episódio 96">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-97">
                  <h3>Episódio 97</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-97"
                    role="button" title="Bleach - Dublado - Episódio 97">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-97/download" role="button"
                    title="Bleach - Dublado - Episódio 97">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-98">
                  <h3>Episódio 98</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-98"
                    role="button" title="Bleach - Dublado - Episódio 98">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-98/download" role="button"
                    title="Bleach - Dublado - Episódio 98">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-99">
                  <h3>Episódio 99</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-99"
                    role="button" title="Bleach - Dublado - Episódio 99">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-99/download" role="button"
                    title="Bleach - Dublado - Episódio 99">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-100">
                  <h3>Episódio 100</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-100"
                    role="button" title="Bleach - Dublado - Episódio 100">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-100/download" role="button"
                    title="Bleach - Dublado - Episódio 100">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-101">
                  <h3>Episódio 101</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-101"
                    role="button" title="Bleach - Dublado - Episódio 101">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-101/download" role="button"
                    title="Bleach - Dublado - Episódio 101">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-102">
                  <h3>Episódio 102</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-102"
                    role="button" title="Bleach - Dublado - Episódio 102">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-102/download" role="button"
                    title="Bleach - Dublado - Episódio 102">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-103">
                  <h3>Episódio 103</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-103"
                    role="button" title="Bleach - Dublado - Episódio 103">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-103/download" role="button"
                    title="Bleach - Dublado - Episódio 103">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-104">
                  <h3>Episódio 104</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-104"
                    role="button" title="Bleach - Dublado - Episódio 104">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-104/download" role="button"
                    title="Bleach - Dublado - Episódio 104">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-105">
                  <h3>Episódio 105</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-105"
                    role="button" title="Bleach - Dublado - Episódio 105">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-105/download" role="button"
                    title="Bleach - Dublado - Episódio 105">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-106">
                  <h3>Episódio 106</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-106"
                    role="button" title="Bleach - Dublado - Episódio 106">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-106/download" role="button"
                    title="Bleach - Dublado - Episódio 106">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-107">
                  <h3>Episódio 107</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-107"
                    role="button" title="Bleach - Dublado - Episódio 107">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-107/download" role="button"
                    title="Bleach - Dublado - Episódio 107">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-108">
                  <h3>Episódio 108</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-108"
                    role="button" title="Bleach - Dublado - Episódio 108">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-108/download" role="button"
                    title="Bleach - Dublado - Episódio 108">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-109">
                  <h3>Episódio 109</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-109"
                    role="button" title="Bleach - Dublado - Episódio 109">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-109/download" role="button"
                    title="Bleach - Dublado - Episódio 109">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-110">
                  <h3>Episódio 110</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-110"
                    role="button" title="Bleach - Dublado - Episódio 110">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-110/download" role="button"
                    title="Bleach - Dublado - Episódio 110">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-111">
                  <h3>Episódio 111</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-111"
                    role="button" title="Bleach - Dublado - Episódio 111">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-111/download" role="button"
                    title="Bleach - Dublado - Episódio 111">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-112">
                  <h3>Episódio 112</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-112"
                    role="button" title="Bleach - Dublado - Episódio 112">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-112/download" role="button"
                    title="Bleach - Dublado - Episódio 112">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-113">
                  <h3>Episódio 113</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-113"
                    role="button" title="Bleach - Dublado - Episódio 113">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-113/download" role="button"
                    title="Bleach - Dublado - Episódio 113">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-114">
                  <h3>Episódio 114</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-114"
                    role="button" title="Bleach - Dublado - Episódio 114">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-114/download" role="button"
                    title="Bleach - Dublado - Episódio 114">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-115">
                  <h3>Episódio 115</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-115"
                    role="button" title="Bleach - Dublado - Episódio 115">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-115/download" role="button"
                    title="Bleach - Dublado - Episódio 115">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-116">
                  <h3>Episódio 116</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-116"
                    role="button" title="Bleach - Dublado - Episódio 116">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-116/download" role="button"
                    title="Bleach - Dublado - Episódio 116">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-117">
                  <h3>Episódio 117</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-117"
                    role="button" title="Bleach - Dublado - Episódio 117">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-117/download" role="button"
                    title="Bleach - Dublado - Episódio 117">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-118">
                  <h3>Episódio 118</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-118"
                    role="button" title="Bleach - Dublado - Episódio 118">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-118/download" role="button"
                    title="Bleach - Dublado - Episódio 118">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-119">
                  <h3>Episódio 119</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-119"
                    role="button" title="Bleach - Dublado - Episódio 119">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-119/download" role="button"
                    title="Bleach - Dublado - Episódio 119">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-120">
                  <h3>Episódio 120</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-120"
                    role="button" title="Bleach - Dublado - Episódio 120">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-120/download" role="button"
                    title="Bleach - Dublado - Episódio 120">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-121">
                  <h3>Episódio 121</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-121"
                    role="button" title="Bleach - Dublado - Episódio 121">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-121/download" role="button"
                    title="Bleach - Dublado - Episódio 121">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-122">
                  <h3>Episódio 122</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-122"
                    role="button" title="Bleach - Dublado - Episódio 122">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-122/download" role="button"
                    title="Bleach - Dublado - Episódio 122">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-123">
                  <h3>Episódio 123</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-123"
                    role="button" title="Bleach - Dublado - Episódio 123">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-123/download" role="button"
                    title="Bleach - Dublado - Episódio 123">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-124">
                  <h3>Episódio 124</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-124"
                    role="button" title="Bleach - Dublado - Episódio 124">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-124/download" role="button"
                    title="Bleach - Dublado - Episódio 124">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-125">
                  <h3>Episódio 125</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-125"
                    role="button" title="Bleach - Dublado - Episódio 125">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-125/download" role="button"
                    title="Bleach - Dublado - Episódio 125">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-126">
                  <h3>Episódio 126</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-126"
                    role="button" title="Bleach - Dublado - Episódio 126">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-126/download" role="button"
                    title="Bleach - Dublado - Episódio 126">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-127">
                  <h3>Episódio 127</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-127"
                    role="button" title="Bleach - Dublado - Episódio 127">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-127/download" role="button"
                    title="Bleach - Dublado - Episódio 127">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-128">
                  <h3>Episódio 128</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-128"
                    role="button" title="Bleach - Dublado - Episódio 128">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-128/download" role="button"
                    title="Bleach - Dublado - Episódio 128">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-129">
                  <h3>Episódio 129</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-129"
                    role="button" title="Bleach - Dublado - Episódio 129">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-129/download" role="button"
                    title="Bleach - Dublado - Episódio 129">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-130">
                  <h3>Episódio 130</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-130"
                    role="button" title="Bleach - Dublado - Episódio 130">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-130/download" role="button"
                    title="Bleach - Dublado - Episódio 130">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-131">
                  <h3>Episódio 131</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-131"
                    role="button" title="Bleach - Dublado - Episódio 131">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-131/download" role="button"
                    title="Bleach - Dublado - Episódio 131">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-132">
                  <h3>Episódio 132</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-132"
                    role="button" title="Bleach - Dublado - Episódio 132">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-132/download" role="button"
                    title="Bleach - Dublado - Episódio 132">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-133">
                  <h3>Episódio 133</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-133"
                    role="button" title="Bleach - Dublado - Episódio 133">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-133/download" role="button"
                    title="Bleach - Dublado - Episódio 133">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-134">
                  <h3>Episódio 134</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-134"
                    role="button" title="Bleach - Dublado - Episódio 134">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-134/download" role="button"
                    title="Bleach - Dublado - Episódio 134">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-135">
                  <h3>Episódio 135</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-135"
                    role="button" title="Bleach - Dublado - Episódio 135">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-135/download" role="button"
                    title="Bleach - Dublado - Episódio 135">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-136">
                  <h3>Episódio 136</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-136"
                    role="button" title="Bleach - Dublado - Episódio 136">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-136/download" role="button"
                    title="Bleach - Dublado - Episódio 136">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-137">
                  <h3>Episódio 137</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-137"
                    role="button" title="Bleach - Dublado - Episódio 137">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-137/download" role="button"
                    title="Bleach - Dublado - Episódio 137">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-138">
                  <h3>Episódio 138</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-138"
                    role="button" title="Bleach - Dublado - Episódio 138">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-138/download" role="button"
                    title="Bleach - Dublado - Episódio 138">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-139">
                  <h3>Episódio 139</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-139"
                    role="button" title="Bleach - Dublado - Episódio 139">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-139/download" role="button"
                    title="Bleach - Dublado - Episódio 139">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-140">
                  <h3>Episódio 140</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-140"
                    role="button" title="Bleach - Dublado - Episódio 140">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-140/download" role="button"
                    title="Bleach - Dublado - Episódio 140">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-141">
                  <h3>Episódio 141</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-141"
                    role="button" title="Bleach - Dublado - Episódio 141">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-141/download" role="button"
                    title="Bleach - Dublado - Episódio 141">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-142">
                  <h3>Episódio 142</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-142"
                    role="button" title="Bleach - Dublado - Episódio 142">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-142/download" role="button"
                    title="Bleach - Dublado - Episódio 142">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-143">
                  <h3>Episódio 143</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-143"
                    role="button" title="Bleach - Dublado - Episódio 143">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-143/download" role="button"
                    title="Bleach - Dublado - Episódio 143">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-144">
                  <h3>Episódio 144</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-144"
                    role="button" title="Bleach - Dublado - Episódio 144">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-144/download" role="button"
                    title="Bleach - Dublado - Episódio 144">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-145">
                  <h3>Episódio 145</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-145"
                    role="button" title="Bleach - Dublado - Episódio 145">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-145/download" role="button"
                    title="Bleach - Dublado - Episódio 145">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-146">
                  <h3>Episódio 146</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-146"
                    role="button" title="Bleach - Dublado - Episódio 146">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-146/download" role="button"
                    title="Bleach - Dublado - Episódio 146">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-147">
                  <h3>Episódio 147</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-147"
                    role="button" title="Bleach - Dublado - Episódio 147">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-147/download" role="button"
                    title="Bleach - Dublado - Episódio 147">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-148">
                  <h3>Episódio 148</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-148"
                    role="button" title="Bleach - Dublado - Episódio 148">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-148/download" role="button"
                    title="Bleach - Dublado - Episódio 148">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-149">
                  <h3>Episódio 149</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-149"
                    role="button" title="Bleach - Dublado - Episódio 149">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-149/download" role="button"
                    title="Bleach - Dublado - Episódio 149">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-150">
                  <h3>Episódio 150</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-150"
                    role="button" title="Bleach - Dublado - Episódio 150">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-150/download" role="button"
                    title="Bleach - Dublado - Episódio 150">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-151">
                  <h3>Episódio 151</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-151"
                    role="button" title="Bleach - Dublado - Episódio 151">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-151/download" role="button"
                    title="Bleach - Dublado - Episódio 151">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-152">
                  <h3>Episódio 152</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-152"
                    role="button" title="Bleach - Dublado - Episódio 152">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-152/download" role="button"
                    title="Bleach - Dublado - Episódio 152">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-153">
                  <h3>Episódio 153</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-153"
                    role="button" title="Bleach - Dublado - Episódio 153">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-153/download" role="button"
                    title="Bleach - Dublado - Episódio 153">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-154">
                  <h3>Episódio 154</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-154"
                    role="button" title="Bleach - Dublado - Episódio 154">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-154/download" role="button"
                    title="Bleach - Dublado - Episódio 154">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-155">
                  <h3>Episódio 155</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-155"
                    role="button" title="Bleach - Dublado - Episódio 155">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-155/download" role="button"
                    title="Bleach - Dublado - Episódio 155">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-156">
                  <h3>Episódio 156</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-156"
                    role="button" title="Bleach - Dublado - Episódio 156">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-156/download" role="button"
                    title="Bleach - Dublado - Episódio 156">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-157">
                  <h3>Episódio 157</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-157"
                    role="button" title="Bleach - Dublado - Episódio 157">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-157/download" role="button"
                    title="Bleach - Dublado - Episódio 157">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-158">
                  <h3>Episódio 158</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-158"
                    role="button" title="Bleach - Dublado - Episódio 158">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-158/download" role="button"
                    title="Bleach - Dublado - Episódio 158">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-159">
                  <h3>Episódio 159</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-159"
                    role="button" title="Bleach - Dublado - Episódio 159">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-159/download" role="button"
                    title="Bleach - Dublado - Episódio 159">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-160">
                  <h3>Episódio 160</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-160"
                    role="button" title="Bleach - Dublado - Episódio 160">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-160/download" role="button"
                    title="Bleach - Dublado - Episódio 160">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-161">
                  <h3>Episódio 161</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-161"
                    role="button" title="Bleach - Dublado - Episódio 161">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-161/download" role="button"
                    title="Bleach - Dublado - Episódio 161">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-162">
                  <h3>Episódio 162</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-162"
                    role="button" title="Bleach - Dublado - Episódio 162">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-162/download" role="button"
                    title="Bleach - Dublado - Episódio 162">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-163">
                  <h3>Episódio 163</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-163"
                    role="button" title="Bleach - Dublado - Episódio 163">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-163/download" role="button"
                    title="Bleach - Dublado - Episódio 163">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-164">
                  <h3>Episódio 164</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-164"
                    role="button" title="Bleach - Dublado - Episódio 164">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-164/download" role="button"
                    title="Bleach - Dublado - Episódio 164">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-165">
                  <h3>Episódio 165</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-165"
                    role="button" title="Bleach - Dublado - Episódio 165">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-165/download" role="button"
                    title="Bleach - Dublado - Episódio 165">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-166">
                  <h3>Episódio 166</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-166"
                    role="button" title="Bleach - Dublado - Episódio 166">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-166/download" role="button"
                    title="Bleach - Dublado - Episódio 166">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-167">
                  <h3>Episódio 167</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-167"
                    role="button" title="Bleach - Dublado - Episódio 167">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-167/download" role="button"
                    title="Bleach - Dublado - Episódio 167">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-168">
                  <h3>Episódio 168</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-168"
                    role="button" title="Bleach - Dublado - Episódio 168">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-168/download" role="button"
                    title="Bleach - Dublado - Episódio 168">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-169">
                  <h3>Episódio 169</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-169"
                    role="button" title="Bleach - Dublado - Episódio 169">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-169/download" role="button"
                    title="Bleach - Dublado - Episódio 169">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-170">
                  <h3>Episódio 170</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-170"
                    role="button" title="Bleach - Dublado - Episódio 170">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-170/download" role="button"
                    title="Bleach - Dublado - Episódio 170">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-171">
                  <h3>Episódio 171</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-171"
                    role="button" title="Bleach - Dublado - Episódio 171">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-171/download" role="button"
                    title="Bleach - Dublado - Episódio 171">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-172">
                  <h3>Episódio 172</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-172"
                    role="button" title="Bleach - Dublado - Episódio 172">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-172/download" role="button"
                    title="Bleach - Dublado - Episódio 172">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-173">
                  <h3>Episódio 173</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-173"
                    role="button" title="Bleach - Dublado - Episódio 173">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-173/download" role="button"
                    title="Bleach - Dublado - Episódio 173">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-174">
                  <h3>Episódio 174</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-174"
                    role="button" title="Bleach - Dublado - Episódio 174">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-174/download" role="button"
                    title="Bleach - Dublado - Episódio 174">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-175">
                  <h3>Episódio 175</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-175"
                    role="button" title="Bleach - Dublado - Episódio 175">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-175/download" role="button"
                    title="Bleach - Dublado - Episódio 175">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-176">
                  <h3>Episódio 176</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-176"
                    role="button" title="Bleach - Dublado - Episódio 176">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-176/download" role="button"
                    title="Bleach - Dublado - Episódio 176">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-177">
                  <h3>Episódio 177</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-177"
                    role="button" title="Bleach - Dublado - Episódio 177">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-177/download" role="button"
                    title="Bleach - Dublado - Episódio 177">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-178">
                  <h3>Episódio 178</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-178"
                    role="button" title="Bleach - Dublado - Episódio 178">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-178/download" role="button"
                    title="Bleach - Dublado - Episódio 178">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-179">
                  <h3>Episódio 179</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-179"
                    role="button" title="Bleach - Dublado - Episódio 179">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-179/download" role="button"
                    title="Bleach - Dublado - Episódio 179">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-180">
                  <h3>Episódio 180</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-180"
                    role="button" title="Bleach - Dublado - Episódio 180">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-180/download" role="button"
                    title="Bleach - Dublado - Episódio 180">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-181">
                  <h3>Episódio 181</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-181"
                    role="button" title="Bleach - Dublado - Episódio 181">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-181/download" role="button"
                    title="Bleach - Dublado - Episódio 181">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-182">
                  <h3>Episódio 182</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-182"
                    role="button" title="Bleach - Dublado - Episódio 182">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-182/download" role="button"
                    title="Bleach - Dublado - Episódio 182">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-183">
                  <h3>Episódio 183</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-183"
                    role="button" title="Bleach - Dublado - Episódio 183">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-183/download" role="button"
                    title="Bleach - Dublado - Episódio 183">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-184">
                  <h3>Episódio 184</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-184"
                    role="button" title="Bleach - Dublado - Episódio 184">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-184/download" role="button"
                    title="Bleach - Dublado - Episódio 184">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-185">
                  <h3>Episódio 185</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-185"
                    role="button" title="Bleach - Dublado - Episódio 185">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-185/download" role="button"
                    title="Bleach - Dublado - Episódio 185">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-186">
                  <h3>Episódio 186</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-186"
                    role="button" title="Bleach - Dublado - Episódio 186">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-186/download" role="button"
                    title="Bleach - Dublado - Episódio 186">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-187">
                  <h3>Episódio 187</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-187"
                    role="button" title="Bleach - Dublado - Episódio 187">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-187/download" role="button"
                    title="Bleach - Dublado - Episódio 187">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-188">
                  <h3>Episódio 188</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-188"
                    role="button" title="Bleach - Dublado - Episódio 188">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-188/download" role="button"
                    title="Bleach - Dublado - Episódio 188">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-189">
                  <h3>Episódio 189</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-189"
                    role="button" title="Bleach - Dublado - Episódio 189">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-189/download" role="button"
                    title="Bleach - Dublado - Episódio 189">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-190">
                  <h3>Episódio 190</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-190"
                    role="button" title="Bleach - Dublado - Episódio 190">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-190/download" role="button"
                    title="Bleach - Dublado - Episódio 190">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-191">
                  <h3>Episódio 191</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-191"
                    role="button" title="Bleach - Dublado - Episódio 191">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-191/download" role="button"
                    title="Bleach - Dublado - Episódio 191">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-192">
                  <h3>Episódio 192</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-192"
                    role="button" title="Bleach - Dublado - Episódio 192">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-192/download" role="button"
                    title="Bleach - Dublado - Episódio 192">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-193">
                  <h3>Episódio 193</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-193"
                    role="button" title="Bleach - Dublado - Episódio 193">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-193/download" role="button"
                    title="Bleach - Dublado - Episódio 193">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-194">
                  <h3>Episódio 194</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-194"
                    role="button" title="Bleach - Dublado - Episódio 194">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-194/download" role="button"
                    title="Bleach - Dublado - Episódio 194">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-195">
                  <h3>Episódio 195</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-195"
                    role="button" title="Bleach - Dublado - Episódio 195">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-195/download" role="button"
                    title="Bleach - Dublado - Episódio 195">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-196">
                  <h3>Episódio 196</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-196"
                    role="button" title="Bleach - Dublado - Episódio 196">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-196/download" role="button"
                    title="Bleach - Dublado - Episódio 196">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-197">
                  <h3>Episódio 197</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-197"
                    role="button" title="Bleach - Dublado - Episódio 197">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-197/download" role="button"
                    title="Bleach - Dublado - Episódio 197">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-198">
                  <h3>Episódio 198</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-198"
                    role="button" title="Bleach - Dublado - Episódio 198">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-198/download" role="button"
                    title="Bleach - Dublado - Episódio 198">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-199">
                  <h3>Episódio 199</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-199"
                    role="button" title="Bleach - Dublado - Episódio 199">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-199/download" role="button"
                    title="Bleach - Dublado - Episódio 199">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-200">
                  <h3>Episódio 200</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-200"
                    role="button" title="Bleach - Dublado - Episódio 200">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-200/download" role="button"
                    title="Bleach - Dublado - Episódio 200">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-201">
                  <h3>Episódio 201</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-201"
                    role="button" title="Bleach - Dublado - Episódio 201">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-201/download" role="button"
                    title="Bleach - Dublado - Episódio 201">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-202">
                  <h3>Episódio 202</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-202"
                    role="button" title="Bleach - Dublado - Episódio 202">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-202/download" role="button"
                    title="Bleach - Dublado - Episódio 202">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-203">
                  <h3>Episódio 203</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-203"
                    role="button" title="Bleach - Dublado - Episódio 203">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-203/download" role="button"
                    title="Bleach - Dublado - Episódio 203">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-204">
                  <h3>Episódio 204</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-204"
                    role="button" title="Bleach - Dublado - Episódio 204">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-204/download" role="button"
                    title="Bleach - Dublado - Episódio 204">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-205">
                  <h3>Episódio 205</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-205"
                    role="button" title="Bleach - Dublado - Episódio 205">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-205/download" role="button"
                    title="Bleach - Dublado - Episódio 205">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-206">
                  <h3>Episódio 206</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-206"
                    role="button" title="Bleach - Dublado - Episódio 206">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-206/download" role="button"
                    title="Bleach - Dublado - Episódio 206">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-207">
                  <h3>Episódio 207</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-207"
                    role="button" title="Bleach - Dublado - Episódio 207">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-207/download" role="button"
                    title="Bleach - Dublado - Episódio 207">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-208">
                  <h3>Episódio 208</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-208"
                    role="button" title="Bleach - Dublado - Episódio 208">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-208/download" role="button"
                    title="Bleach - Dublado - Episódio 208">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-209">
                  <h3>Episódio 209</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-209"
                    role="button" title="Bleach - Dublado - Episódio 209">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-209/download" role="button"
                    title="Bleach - Dublado - Episódio 209">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-210">
                  <h3>Episódio 210</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-210"
                    role="button" title="Bleach - Dublado - Episódio 210">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-210/download" role="button"
                    title="Bleach - Dublado - Episódio 210">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-211">
                  <h3>Episódio 211</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-211"
                    role="button" title="Bleach - Dublado - Episódio 211">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-211/download" role="button"
                    title="Bleach - Dublado - Episódio 211">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-212">
                  <h3>Episódio 212</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-212"
                    role="button" title="Bleach - Dublado - Episódio 212">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-212/download" role="button"
                    title="Bleach - Dublado - Episódio 212">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-213">
                  <h3>Episódio 213</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-213"
                    role="button" title="Bleach - Dublado - Episódio 213">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-213/download" role="button"
                    title="Bleach - Dublado - Episódio 213">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-214">
                  <h3>Episódio 214</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-214"
                    role="button" title="Bleach - Dublado - Episódio 214">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-214/download" role="button"
                    title="Bleach - Dublado - Episódio 214">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-215">
                  <h3>Episódio 215</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-215"
                    role="button" title="Bleach - Dublado - Episódio 215">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-215/download" role="button"
                    title="Bleach - Dublado - Episódio 215">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-216">
                  <h3>Episódio 216</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-216"
                    role="button" title="Bleach - Dublado - Episódio 216">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-216/download" role="button"
                    title="Bleach - Dublado - Episódio 216">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-217">
                  <h3>Episódio 217</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-217"
                    role="button" title="Bleach - Dublado - Episódio 217">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-217/download" role="button"
                    title="Bleach - Dublado - Episódio 217">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-218">
                  <h3>Episódio 218</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-218"
                    role="button" title="Bleach - Dublado - Episódio 218">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-218/download" role="button"
                    title="Bleach - Dublado - Episódio 218">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-219">
                  <h3>Episódio 219</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-219"
                    role="button" title="Bleach - Dublado - Episódio 219">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-219/download" role="button"
                    title="Bleach - Dublado - Episódio 219">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-220">
                  <h3>Episódio 220</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-220"
                    role="button" title="Bleach - Dublado - Episódio 220">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-220/download" role="button"
                    title="Bleach - Dublado - Episódio 220">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-221">
                  <h3>Episódio 221</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-221"
                    role="button" title="Bleach - Dublado - Episódio 221">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-221/download" role="button"
                    title="Bleach - Dublado - Episódio 221">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-222">
                  <h3>Episódio 222</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-222"
                    role="button" title="Bleach - Dublado - Episódio 222">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-222/download" role="button"
                    title="Bleach - Dublado - Episódio 222">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-223">
                  <h3>Episódio 223</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-223"
                    role="button" title="Bleach - Dublado - Episódio 223">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-223/download" role="button"
                    title="Bleach - Dublado - Episódio 223">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-224">
                  <h3>Episódio 224</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-224"
                    role="button" title="Bleach - Dublado - Episódio 224">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-224/download" role="button"
                    title="Bleach - Dublado - Episódio 224">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-225">
                  <h3>Episódio 225</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-225"
                    role="button" title="Bleach - Dublado - Episódio 225">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-225/download" role="button"
                    title="Bleach - Dublado - Episódio 225">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-226">
                  <h3>Episódio 226</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-226"
                    role="button" title="Bleach - Dublado - Episódio 226">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-226/download" role="button"
                    title="Bleach - Dublado - Episódio 226">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-227">
                  <h3>Episódio 227</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-227"
                    role="button" title="Bleach - Dublado - Episódio 227">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-227/download" role="button"
                    title="Bleach - Dublado - Episódio 227">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-228">
                  <h3>Episódio 228</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-228"
                    role="button" title="Bleach - Dublado - Episódio 228">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-228/download" role="button"
                    title="Bleach - Dublado - Episódio 228">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-229">
                  <h3>Episódio 229</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-229"
                    role="button" title="Bleach - Dublado - Episódio 229">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-229/download" role="button"
                    title="Bleach - Dublado - Episódio 229">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-230">
                  <h3>Episódio 230</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-230"
                    role="button" title="Bleach - Dublado - Episódio 230">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-230/download" role="button"
                    title="Bleach - Dublado - Episódio 230">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-231">
                  <h3>Episódio 231</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-231"
                    role="button" title="Bleach - Dublado - Episódio 231">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-231/download" role="button"
                    title="Bleach - Dublado - Episódio 231">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-232">
                  <h3>Episódio 232</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-232"
                    role="button" title="Bleach - Dublado - Episódio 232">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-232/download" role="button"
                    title="Bleach - Dublado - Episódio 232">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-233">
                  <h3>Episódio 233</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-233"
                    role="button" title="Bleach - Dublado - Episódio 233">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-233/download" role="button"
                    title="Bleach - Dublado - Episódio 233">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-234">
                  <h3>Episódio 234</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-234"
                    role="button" title="Bleach - Dublado - Episódio 234">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-234/download" role="button"
                    title="Bleach - Dublado - Episódio 234">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-235">
                  <h3>Episódio 235</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-235"
                    role="button" title="Bleach - Dublado - Episódio 235">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-235/download" role="button"
                    title="Bleach - Dublado - Episódio 235">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-236">
                  <h3>Episódio 236</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-236"
                    role="button" title="Bleach - Dublado - Episódio 236">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-236/download" role="button"
                    title="Bleach - Dublado - Episódio 236">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-237">
                  <h3>Episódio 237</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-237"
                    role="button" title="Bleach - Dublado - Episódio 237">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-237/download" role="button"
                    title="Bleach - Dublado - Episódio 237">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-238">
                  <h3>Episódio 238</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-238"
                    role="button" title="Bleach - Dublado - Episódio 238">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-238/download" role="button"
                    title="Bleach - Dublado - Episódio 238">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-239">
                  <h3>Episódio 239</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-239"
                    role="button" title="Bleach - Dublado - Episódio 239">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-239/download" role="button"
                    title="Bleach - Dublado - Episódio 239">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-240">
                  <h3>Episódio 240</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-240"
                    role="button" title="Bleach - Dublado - Episódio 240">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-240/download" role="button"
                    title="Bleach - Dublado - Episódio 240">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-241">
                  <h3>Episódio 241</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-241"
                    role="button" title="Bleach - Dublado - Episódio 241">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-241/download" role="button"
                    title="Bleach - Dublado - Episódio 241">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-242">
                  <h3>Episódio 242</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-242"
                    role="button" title="Bleach - Dublado - Episódio 242">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-242/download" role="button"
                    title="Bleach - Dublado - Episódio 242">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-243">
                  <h3>Episódio 243</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-243"
                    role="button" title="Bleach - Dublado - Episódio 243">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-243/download" role="button"
                    title="Bleach - Dublado - Episódio 243">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-244">
                  <h3>Episódio 244</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-244"
                    role="button" title="Bleach - Dublado - Episódio 244">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-244/download" role="button"
                    title="Bleach - Dublado - Episódio 244">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-245">
                  <h3>Episódio 245</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-245"
                    role="button" title="Bleach - Dublado - Episódio 245">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-245/download" role="button"
                    title="Bleach - Dublado - Episódio 245">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-246">
                  <h3>Episódio 246</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-246"
                    role="button" title="Bleach - Dublado - Episódio 246">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-246/download" role="button"
                    title="Bleach - Dublado - Episódio 246">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-247">
                  <h3>Episódio 247</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-247"
                    role="button" title="Bleach - Dublado - Episódio 247">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-247/download" role="button"
                    title="Bleach - Dublado - Episódio 247">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-248">
                  <h3>Episódio 248</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-248"
                    role="button" title="Bleach - Dublado - Episódio 248">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-248/download" role="button"
                    title="Bleach - Dublado - Episódio 248">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-249">
                  <h3>Episódio 249</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-249"
                    role="button" title="Bleach - Dublado - Episódio 249">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-249/download" role="button"
                    title="Bleach - Dublado - Episódio 249">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-250">
                  <h3>Episódio 250</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-250"
                    role="button" title="Bleach - Dublado - Episódio 250">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-250/download" role="button"
                    title="Bleach - Dublado - Episódio 250">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-251">
                  <h3>Episódio 251</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-251"
                    role="button" title="Bleach - Dublado - Episódio 251">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-251/download" role="button"
                    title="Bleach - Dublado - Episódio 251">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-252">
                  <h3>Episódio 252</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-252"
                    role="button" title="Bleach - Dublado - Episódio 252">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-252/download" role="button"
                    title="Bleach - Dublado - Episódio 252">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-253">
                  <h3>Episódio 253</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-253"
                    role="button" title="Bleach - Dublado - Episódio 253">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-253/download" role="button"
                    title="Bleach - Dublado - Episódio 253">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-254">
                  <h3>Episódio 254</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-254"
                    role="button" title="Bleach - Dublado - Episódio 254">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-254/download" role="button"
                    title="Bleach - Dublado - Episódio 254">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-255">
                  <h3>Episódio 255</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-255"
                    role="button" title="Bleach - Dublado - Episódio 255">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-255/download" role="button"
                    title="Bleach - Dublado - Episódio 255">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-256">
                  <h3>Episódio 256</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-256"
                    role="button" title="Bleach - Dublado - Episódio 256">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-256/download" role="button"
                    title="Bleach - Dublado - Episódio 256">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-257">
                  <h3>Episódio 257</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-257"
                    role="button" title="Bleach - Dublado - Episódio 257">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-257/download" role="button"
                    title="Bleach - Dublado - Episódio 257">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-258">
                  <h3>Episódio 258</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-258"
                    role="button" title="Bleach - Dublado - Episódio 258">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-258/download" role="button"
                    title="Bleach - Dublado - Episódio 258">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-259">
                  <h3>Episódio 259</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-259"
                    role="button" title="Bleach - Dublado - Episódio 259">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-259/download" role="button"
                    title="Bleach - Dublado - Episódio 259">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-260">
                  <h3>Episódio 260</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-260"
                    role="button" title="Bleach - Dublado - Episódio 260">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-260/download" role="button"
                    title="Bleach - Dublado - Episódio 260">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-261">
                  <h3>Episódio 261</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-261"
                    role="button" title="Bleach - Dublado - Episódio 261">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-261/download" role="button"
                    title="Bleach - Dublado - Episódio 261">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-262">
                  <h3>Episódio 262</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-262"
                    role="button" title="Bleach - Dublado - Episódio 262">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-262/download" role="button"
                    title="Bleach - Dublado - Episódio 262">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-263">
                  <h3>Episódio 263</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-263"
                    role="button" title="Bleach - Dublado - Episódio 263">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-263/download" role="button"
                    title="Bleach - Dublado - Episódio 263">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-264">
                  <h3>Episódio 264</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-264"
                    role="button" title="Bleach - Dublado - Episódio 264">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-264/download" role="button"
                    title="Bleach - Dublado - Episódio 264">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-265">
                  <h3>Episódio 265</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-265"
                    role="button" title="Bleach - Dublado - Episódio 265">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-265/download" role="button"
                    title="Bleach - Dublado - Episódio 265">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-266">
                  <h3>Episódio 266</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-266"
                    role="button" title="Bleach - Dublado - Episódio 266">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-266/download" role="button"
                    title="Bleach - Dublado - Episódio 266">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-267">
                  <h3>Episódio 267</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-267"
                    role="button" title="Bleach - Dublado - Episódio 267">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-267/download" role="button"
                    title="Bleach - Dublado - Episódio 267">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-268">
                  <h3>Episódio 268</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-268"
                    role="button" title="Bleach - Dublado - Episódio 268">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-268/download" role="button"
                    title="Bleach - Dublado - Episódio 268">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-269">
                  <h3>Episódio 269</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-269"
                    role="button" title="Bleach - Dublado - Episódio 269">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-269/download" role="button"
                    title="Bleach - Dublado - Episódio 269">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-270">
                  <h3>Episódio 270</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-270"
                    role="button" title="Bleach - Dublado - Episódio 270">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-270/download" role="button"
                    title="Bleach - Dublado - Episódio 270">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-271">
                  <h3>Episódio 271</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-271"
                    role="button" title="Bleach - Dublado - Episódio 271">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-271/download" role="button"
                    title="Bleach - Dublado - Episódio 271">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-272">
                  <h3>Episódio 272</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-272"
                    role="button" title="Bleach - Dublado - Episódio 272">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-272/download" role="button"
                    title="Bleach - Dublado - Episódio 272">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-273">
                  <h3>Episódio 273</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-273"
                    role="button" title="Bleach - Dublado - Episódio 273">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-273/download" role="button"
                    title="Bleach - Dublado - Episódio 273">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-274">
                  <h3>Episódio 274</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-274"
                    role="button" title="Bleach - Dublado - Episódio 274">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-274/download" role="button"
                    title="Bleach - Dublado - Episódio 274">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-275">
                  <h3>Episódio 275</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-275"
                    role="button" title="Bleach - Dublado - Episódio 275">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-275/download" role="button"
                    title="Bleach - Dublado - Episódio 275">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-276">
                  <h3>Episódio 276</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-276"
                    role="button" title="Bleach - Dublado - Episódio 276">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-276/download" role="button"
                    title="Bleach - Dublado - Episódio 276">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-277">
                  <h3>Episódio 277</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-277"
                    role="button" title="Bleach - Dublado - Episódio 277">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-277/download" role="button"
                    title="Bleach - Dublado - Episódio 277">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-278">
                  <h3>Episódio 278</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-278"
                    role="button" title="Bleach - Dublado - Episódio 278">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-278/download" role="button"
                    title="Bleach - Dublado - Episódio 278">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-279">
                  <h3>Episódio 279</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-279"
                    role="button" title="Bleach - Dublado - Episódio 279">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-279/download" role="button"
                    title="Bleach - Dublado - Episódio 279">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-280">
                  <h3>Episódio 280</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-280"
                    role="button" title="Bleach - Dublado - Episódio 280">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-280/download" role="button"
                    title="Bleach - Dublado - Episódio 280">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-281">
                  <h3>Episódio 281</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-281"
                    role="button" title="Bleach - Dublado - Episódio 281">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-281/download" role="button"
                    title="Bleach - Dublado - Episódio 281">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-282">
                  <h3>Episódio 282</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-282"
                    role="button" title="Bleach - Dublado - Episódio 282">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-282/download" role="button"
                    title="Bleach - Dublado - Episódio 282">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-283">
                  <h3>Episódio 283</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-283"
                    role="button" title="Bleach - Dublado - Episódio 283">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-283/download" role="button"
                    title="Bleach - Dublado - Episódio 283">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-284">
                  <h3>Episódio 284</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-284"
                    role="button" title="Bleach - Dublado - Episódio 284">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-284/download" role="button"
                    title="Bleach - Dublado - Episódio 284">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-285">
                  <h3>Episódio 285</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-285"
                    role="button" title="Bleach - Dublado - Episódio 285">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-285/download" role="button"
                    title="Bleach - Dublado - Episódio 285">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-286">
                  <h3>Episódio 286</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-286"
                    role="button" title="Bleach - Dublado - Episódio 286">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-286/download" role="button"
                    title="Bleach - Dublado - Episódio 286">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-287">
                  <h3>Episódio 287</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-287"
                    role="button" title="Bleach - Dublado - Episódio 287">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-287/download" role="button"
                    title="Bleach - Dublado - Episódio 287">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-288">
                  <h3>Episódio 288</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-288"
                    role="button" title="Bleach - Dublado - Episódio 288">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-288/download" role="button"
                    title="Bleach - Dublado - Episódio 288">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-289">
                  <h3>Episódio 289</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-289"
                    role="button" title="Bleach - Dublado - Episódio 289">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-289/download" role="button"
                    title="Bleach - Dublado - Episódio 289">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-290">
                  <h3>Episódio 290</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-290"
                    role="button" title="Bleach - Dublado - Episódio 290">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-290/download" role="button"
                    title="Bleach - Dublado - Episódio 290">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-291">
                  <h3>Episódio 291</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-291"
                    role="button" title="Bleach - Dublado - Episódio 291">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-291/download" role="button"
                    title="Bleach - Dublado - Episódio 291">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-292">
                  <h3>Episódio 292</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-292"
                    role="button" title="Bleach - Dublado - Episódio 292">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-292/download" role="button"
                    title="Bleach - Dublado - Episódio 292">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-293">
                  <h3>Episódio 293</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-293"
                    role="button" title="Bleach - Dublado - Episódio 293">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-293/download" role="button"
                    title="Bleach - Dublado - Episódio 293">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-294">
                  <h3>Episódio 294</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-294"
                    role="button" title="Bleach - Dublado - Episódio 294">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-294/download" role="button"
                    title="Bleach - Dublado - Episódio 294">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-295">
                  <h3>Episódio 295</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-295"
                    role="button" title="Bleach - Dublado - Episódio 295">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-295/download" role="button"
                    title="Bleach - Dublado - Episódio 295">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-296">
                  <h3>Episódio 296</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-296"
                    role="button" title="Bleach - Dublado - Episódio 296">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-296/download" role="button"
                    title="Bleach - Dublado - Episódio 296">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-297">
                  <h3>Episódio 297</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-297"
                    role="button" title="Bleach - Dublado - Episódio 297">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-297/download" role="button"
                    title="Bleach - Dublado - Episódio 297">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-298">
                  <h3>Episódio 298</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-298"
                    role="button" title="Bleach - Dublado - Episódio 298">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-298/download" role="button"
                    title="Bleach - Dublado - Episódio 298">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-299">
                  <h3>Episódio 299</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-299"
                    role="button" title="Bleach - Dublado - Episódio 299">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-299/download" role="button"
                    title="Bleach - Dublado - Episódio 299">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-300">
                  <h3>Episódio 300</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-300"
                    role="button" title="Bleach - Dublado - Episódio 300">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-300/download" role="button"
                    title="Bleach - Dublado - Episódio 300">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-301">
                  <h3>Episódio 301</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-301"
                    role="button" title="Bleach - Dublado - Episódio 301">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-301/download" role="button"
                    title="Bleach - Dublado - Episódio 301">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-302">
                  <h3>Episódio 302</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-302"
                    role="button" title="Bleach - Dublado - Episódio 302">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-302/download" role="button"
                    title="Bleach - Dublado - Episódio 302">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-303">
                  <h3>Episódio 303</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-303"
                    role="button" title="Bleach - Dublado - Episódio 303">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-303/download" role="button"
                    title="Bleach - Dublado - Episódio 303">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-304">
                  <h3>Episódio 304</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-304"
                    role="button" title="Bleach - Dublado - Episódio 304">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-304/download" role="button"
                    title="Bleach - Dublado - Episódio 304">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-305">
                  <h3>Episódio 305</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-305"
                    role="button" title="Bleach - Dublado - Episódio 305">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-305/download" role="button"
                    title="Bleach - Dublado - Episódio 305">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-306">
                  <h3>Episódio 306</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-306"
                    role="button" title="Bleach - Dublado - Episódio 306">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-306/download" role="button"
                    title="Bleach - Dublado - Episódio 306">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-307">
                  <h3>Episódio 307</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-307"
                    role="button" title="Bleach - Dublado - Episódio 307">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-307/download" role="button"
                    title="Bleach - Dublado - Episódio 307">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-308">
                  <h3>Episódio 308</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-308"
                    role="button" title="Bleach - Dublado - Episódio 308">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-308/download" role="button"
                    title="Bleach - Dublado - Episódio 308">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-309">
                  <h3>Episódio 309</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-309"
                    role="button" title="Bleach - Dublado - Episódio 309">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-309/download" role="button"
                    title="Bleach - Dublado - Episódio 309">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-310">
                  <h3>Episódio 310</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-310"
                    role="button" title="Bleach - Dublado - Episódio 310">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-310/download" role="button"
                    title="Bleach - Dublado - Episódio 310">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-311">
                  <h3>Episódio 311</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-311"
                    role="button" title="Bleach - Dublado - Episódio 311">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-311/download" role="button"
                    title="Bleach - Dublado - Episódio 311">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-312">
                  <h3>Episódio 312</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-312"
                    role="button" title="Bleach - Dublado - Episódio 312">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-312/download" role="button"
                    title="Bleach - Dublado - Episódio 312">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-313">
                  <h3>Episódio 313</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-313"
                    role="button" title="Bleach - Dublado - Episódio 313">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-313/download" role="button"
                    title="Bleach - Dublado - Episódio 313">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-314">
                  <h3>Episódio 314</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-314"
                    role="button" title="Bleach - Dublado - Episódio 314">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-314/download" role="button"
                    title="Bleach - Dublado - Episódio 314">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-315">
                  <h3>Episódio 315</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-315"
                    role="button" title="Bleach - Dublado - Episódio 315">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-315/download" role="button"
                    title="Bleach - Dublado - Episódio 315">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-316">
                  <h3>Episódio 316</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-316"
                    role="button" title="Bleach - Dublado - Episódio 316">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-316/download" role="button"
                    title="Bleach - Dublado - Episódio 316">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-317">
                  <h3>Episódio 317</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-317"
                    role="button" title="Bleach - Dublado - Episódio 317">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-317/download" role="button"
                    title="Bleach - Dublado - Episódio 317">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-318">
                  <h3>Episódio 318</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-318"
                    role="button" title="Bleach - Dublado - Episódio 318">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-318/download" role="button"
                    title="Bleach - Dublado - Episódio 318">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-319">
                  <h3>Episódio 319</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-319"
                    role="button" title="Bleach - Dublado - Episódio 319">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-319/download" role="button"
                    title="Bleach - Dublado - Episódio 319">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-320">
                  <h3>Episódio 320</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-320"
                    role="button" title="Bleach - Dublado - Episódio 320">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-320/download" role="button"
                    title="Bleach - Dublado - Episódio 320">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-321">
                  <h3>Episódio 321</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-321"
                    role="button" title="Bleach - Dublado - Episódio 321">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-321/download" role="button"
                    title="Bleach - Dublado - Episódio 321">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-322">
                  <h3>Episódio 322</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-322"
                    role="button" title="Bleach - Dublado - Episódio 322">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-322/download" role="button"
                    title="Bleach - Dublado - Episódio 322">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-323">
                  <h3>Episódio 323</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-323"
                    role="button" title="Bleach - Dublado - Episódio 323">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-323/download" role="button"
                    title="Bleach - Dublado - Episódio 323">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-324">
                  <h3>Episódio 324</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-324"
                    role="button" title="Bleach - Dublado - Episódio 324">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-324/download" role="button"
                    title="Bleach - Dublado - Episódio 324">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-325">
                  <h3>Episódio 325</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-325"
                    role="button" title="Bleach - Dublado - Episódio 325">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-325/download" role="button"
                    title="Bleach - Dublado - Episódio 325">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-326">
                  <h3>Episódio 326</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-326"
                    role="button" title="Bleach - Dublado - Episódio 326">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-326/download" role="button"
                    title="Bleach - Dublado - Episódio 326">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-327">
                  <h3>Episódio 327</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-327"
                    role="button" title="Bleach - Dublado - Episódio 327">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-327/download" role="button"
                    title="Bleach - Dublado - Episódio 327">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-328">
                  <h3>Episódio 328</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-328"
                    role="button" title="Bleach - Dublado - Episódio 328">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-328/download" role="button"
                    title="Bleach - Dublado - Episódio 328">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-329">
                  <h3>Episódio 329</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-329"
                    role="button" title="Bleach - Dublado - Episódio 329">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-329/download" role="button"
                    title="Bleach - Dublado - Episódio 329">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-330">
                  <h3>Episódio 330</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-330"
                    role="button" title="Bleach - Dublado - Episódio 330">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-330/download" role="button"
                    title="Bleach - Dublado - Episódio 330">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-331">
                  <h3>Episódio 331</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-331"
                    role="button" title="Bleach - Dublado - Episódio 331">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-331/download" role="button"
                    title="Bleach - Dublado - Episódio 331">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-332">
                  <h3>Episódio 332</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-332"
                    role="button" title="Bleach - Dublado - Episódio 332">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-332/download" role="button"
                    title="Bleach - Dublado - Episódio 332">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-333">
                  <h3>Episódio 333</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-333"
                    role="button" title="Bleach - Dublado - Episódio 333">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-333/download" role="button"
                    title="Bleach - Dublado - Episódio 333">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-334">
                  <h3>Episódio 334</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-334"
                    role="button" title="Bleach - Dublado - Episódio 334">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-334/download" role="button"
                    title="Bleach - Dublado - Episódio 334">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-335">
                  <h3>Episódio 335</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-335"
                    role="button" title="Bleach - Dublado - Episódio 335">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-335/download" role="button"
                    title="Bleach - Dublado - Episódio 335">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-336">
                  <h3>Episódio 336</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-336"
                    role="button" title="Bleach - Dublado - Episódio 336">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-336/download" role="button"
                    title="Bleach - Dublado - Episódio 336">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-337">
                  <h3>Episódio 337</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-337"
                    role="button" title="Bleach - Dublado - Episódio 337">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-337/download" role="button"
                    title="Bleach - Dublado - Episódio 337">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-338">
                  <h3>Episódio 338</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-338"
                    role="button" title="Bleach - Dublado - Episódio 338">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-338/download" role="button"
                    title="Bleach - Dublado - Episódio 338">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-339">
                  <h3>Episódio 339</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-339"
                    role="button" title="Bleach - Dublado - Episódio 339">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-339/download" role="button"
                    title="Bleach - Dublado - Episódio 339">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-340">
                  <h3>Episódio 340</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-340"
                    role="button" title="Bleach - Dublado - Episódio 340">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-340/download" role="button"
                    title="Bleach - Dublado - Episódio 340">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-341">
                  <h3>Episódio 341</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-341"
                    role="button" title="Bleach - Dublado - Episódio 341">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-341/download" role="button"
                    title="Bleach - Dublado - Episódio 341">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-342">
                  <h3>Episódio 342</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-342"
                    role="button" title="Bleach - Dublado - Episódio 342">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-342/download" role="button"
                    title="Bleach - Dublado - Episódio 342">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-343">
                  <h3>Episódio 343</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-343"
                    role="button" title="Bleach - Dublado - Episódio 343">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-343/download" role="button"
                    title="Bleach - Dublado - Episódio 343">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-344">
                  <h3>Episódio 344</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-344"
                    role="button" title="Bleach - Dublado - Episódio 344">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-344/download" role="button"
                    title="Bleach - Dublado - Episódio 344">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-345">
                  <h3>Episódio 345</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-345"
                    role="button" title="Bleach - Dublado - Episódio 345">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-345/download" role="button"
                    title="Bleach - Dublado - Episódio 345">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-346">
                  <h3>Episódio 346</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-346"
                    role="button" title="Bleach - Dublado - Episódio 346">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-346/download" role="button"
                    title="Bleach - Dublado - Episódio 346">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-347">
                  <h3>Episódio 347</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-347"
                    role="button" title="Bleach - Dublado - Episódio 347">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-347/download" role="button"
                    title="Bleach - Dublado - Episódio 347">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-348">
                  <h3>Episódio 348</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-348"
                    role="button" title="Bleach - Dublado - Episódio 348">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-348/download" role="button"
                    title="Bleach - Dublado - Episódio 348">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-349">
                  <h3>Episódio 349</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-349"
                    role="button" title="Bleach - Dublado - Episódio 349">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-349/download" role="button"
                    title="Bleach - Dublado - Episódio 349">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-350">
                  <h3>Episódio 350</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-350"
                    role="button" title="Bleach - Dublado - Episódio 350">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-350/download" role="button"
                    title="Bleach - Dublado - Episódio 350">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-351">
                  <h3>Episódio 351</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-351"
                    role="button" title="Bleach - Dublado - Episódio 351">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-351/download" role="button"
                    title="Bleach - Dublado - Episódio 351">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-352">
                  <h3>Episódio 352</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-352"
                    role="button" title="Bleach - Dublado - Episódio 352">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-352/download" role="button"
                    title="Bleach - Dublado - Episódio 352">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-353">
                  <h3>Episódio 353</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-353"
                    role="button" title="Bleach - Dublado - Episódio 353">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-353/download" role="button"
                    title="Bleach - Dublado - Episódio 353">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-354">
                  <h3>Episódio 354</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-354"
                    role="button" title="Bleach - Dublado - Episódio 354">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-354/download" role="button"
                    title="Bleach - Dublado - Episódio 354">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-355">
                  <h3>Episódio 355</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-355"
                    role="button" title="Bleach - Dublado - Episódio 355">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-355/download" role="button"
                    title="Bleach - Dublado - Episódio 355">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-356">
                  <h3>Episódio 356</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-356"
                    role="button" title="Bleach - Dublado - Episódio 356">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-356/download" role="button"
                    title="Bleach - Dublado - Episódio 356">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-357">
                  <h3>Episódio 357</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-357"
                    role="button" title="Bleach - Dublado - Episódio 357">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-357/download" role="button"
                    title="Bleach - Dublado - Episódio 357">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-358">
                  <h3>Episódio 358</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-358"
                    role="button" title="Bleach - Dublado - Episódio 358">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-358/download" role="button"
                    title="Bleach - Dublado - Episódio 358">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-359">
                  <h3>Episódio 359</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-359"
                    role="button" title="Bleach - Dublado - Episódio 359">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-359/download" role="button"
                    title="Bleach - Dublado - Episódio 359">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-360">
                  <h3>Episódio 360</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-360"
                    role="button" title="Bleach - Dublado - Episódio 360">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-360/download" role="button"
                    title="Bleach - Dublado - Episódio 360">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-361">
                  <h3>Episódio 361</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-361"
                    role="button" title="Bleach - Dublado - Episódio 361">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-361/download" role="button"
                    title="Bleach - Dublado - Episódio 361">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-362">
                  <h3>Episódio 362</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-362"
                    role="button" title="Bleach - Dublado - Episódio 362">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-362/download" role="button"
                    title="Bleach - Dublado - Episódio 362">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-363">
                  <h3>Episódio 363</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-363"
                    role="button" title="Bleach - Dublado - Episódio 363">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-363/download" role="button"
                    title="Bleach - Dublado - Episódio 363">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-364">
                  <h3>Episódio 364</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-364"
                    role="button" title="Bleach - Dublado - Episódio 364">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-364/download" role="button"
                    title="Bleach - Dublado - Episódio 364">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-365">
                  <h3>Episódio 365</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-365"
                    role="button" title="Bleach - Dublado - Episódio 365">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-365/download" role="button"
                    title="Bleach - Dublado - Episódio 365">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
              <li class="list-group-item list-group-item-action">
                <a href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-366">
                  <h3>Episódio 366</h3>
                </a>
                <div>
                  <button onclick="location.href='https://betteranime.net/login'" class="btn btn-warning"><i
                      class="far fa-eye-slash"></i>
                    <span class="ml-2">Visto</span>
                  </button>
                  <a class="btn btn-primary" href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-366"
                    role="button" title="Bleach - Dublado - Episódio 366">
                    <i class="fas fa-play"></i><span class="ml-2">Assistir</span>
                  </a>
                  <a class="btn btn-primary"
                    href="https://betteranime.net/anime/legendado/bleach-dublado/episodio-366/download" role="button"
                    title="Bleach - Dublado - Episódio 366">
                    <i class="fas fa-cloud-download-alt"></i><span class="ml-2">Download</span>
                  </a>
                </div>
              </li>
            </ul>
          </div>
        </ul>
      </div>

      <!-- Livewire Component wire-end:RZd14q3CHtmHqShI2M9r -->
      <div id="disqus_thread"><iframe id="dsq-app2386" name="dsq-app2386" allowtransparency="true" frameborder="0"
          scrolling="no" tabindex="0" title="Disqus" width="100%"
          src="https://disqus.com/embed/comments/?base=default&amp;f=betteranime&amp;t_i=route%2Fanime%2Flegendado%2Fbleach-dublado&amp;t_u=https%3A%2F%2Fbetteranime.net%2Fanime%2Flegendado%2Fbleach-dublado&amp;t_e=Bleach%20-%20Dublado-Legendado&amp;t_d=BetterAnime%20-%20Assistir%20Bleach%20-%20Dublado&amp;t_t=Bleach%20-%20Dublado-Legendado&amp;s_o=default#version=85f18815da9bc578a42b3f441810cbc7"
          style="width: 1px !important; min-width: 100% !important; border: none !important; overflow: hidden !important; height: 6502px !important;"
          horizontalscrolling="no" verticalscrolling="no"></iframe></div>

    </section>
  </div>

  <footer id="sticky-footer">
    <div class="hover"></div>
    <div class="footer-logo">
      <a href="https://betteranime.net">Better Anime</a>
      <span>© Copyright Better Anime 2023 - Todos os direitos reservados</span>
    </div>
    <div class="footer-nav">
      <nav>
        <h2 class="font-zero">Navegação - Sitemap</h2>
        <ul>
          <li><a href="https://betteranime.net">Home</a></li>
          <li><a href="https://betteranime.net/animes">Animes</a></li>
          <li><a href="https://betteranime.net/lancamentos-rss">RSS</a></li>
          <li><a href="https://betteranime.net/politica-privacidade">Política de Privacidade</a></li>
          <li><a href="https://betteranime.net/termos">Termos de Uso</a></li>
          <li><a href="https://betteranime.net/contatos">Contato</a></li>
        </ul>
      </nav>
    </div>

    <div class="mb-2" style="z-index: 1">
      <a href="https://play.google.com/store/apps/details?id=com.betteranimev3" target="_blank">
        <img height="60px" width="155" src="https://betteranime.net/img/social/google-play-badge.png" alt="Google Play">
      </a>
    </div>
    <div class="d-flex social-links">
      <a href="https://www.facebook.com/BetterAnimeOficial/" target="_blank">
        <img width="30" height="30" src="https://betteranime.net/img/social/002-facebook.png" alt="facebook">
      </a>
      <a href="https://www.instagram.com/betteranime_oficial/" target="_blank" class="mx-2">
        <img width="30" height="30" src="https://betteranime.net/img/social/001-instagram.png" alt="instagram">
      </a>
      <a href="https://twitter.com/BetteranimeO" target="_blank">
        <img width="30" height="30" src="https://betteranime.net/img/social/003-twitter.png" alt="twitter">
      </a>
    </div>
  </footer>

  <!-- NEEDED JS -->

  <!-- Scripts -->


  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
    integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous">
    </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>

  <script
    src="https://cdn.jsdelivr.net/gh/xcash/bootstrap-autocomplete@master/dist/latest/bootstrap-autocomplete.min.js"></script>


  <!-- END NEEDED JS -->


  <script type="text/javascript" src="https://betteranime.net/js/betterList.js?v0.2"></script>
  <script>
    var disqus_config = function () {
      this.page.url = "https://betteranime.net/anime/legendado/bleach-dublado";
      this.page.identifier = "route/anime/legendado/bleach-dublado";
      this.page.title = "Bleach - Dublado" + "-" + "Legendado";
    };

    (function () {  // DON'T EDIT BELOW THIS LINE
      var d = document, s = d.createElement('script');

      s.src = 'https://betteranime.disqus.com/embed.js';

      s.setAttribute('data-timestamp', +new Date());
      (d.head || d.body).appendChild(s);
    })();
  </script>
  <script>
    $(document).ready(function () {
      $(function () {
        $('[data-toggle="tooltip"]').tooltip()
      });
    })
  </script>

  <script src="https://betteranime.net/js/script.js"></script>
  <script src="/livewire/livewire.js?id=90730a3b0e7144480175" data-turbo-eval="false"
    data-turbolinks-eval="false"></script>
  <script data-turbo-eval="false"
    data-turbolinks-eval="false">window.livewire = new Livewire(); window.Livewire = window.livewire; window.livewire_app_url = ''; window.livewire_token = 'GJKNNHbRpGxMJlrktKUQ61aBii1GJRs2ql9pwGmt'; window.deferLoadingAlpine = function (callback) { window.addEventListener('livewire:load', function () { callback(); }); }; let started = false; window.addEventListener('alpine:initializing', function () { if (!started) { window.livewire.start(); started = true; } }); document.addEventListener("DOMContentLoaded", function () { if (!started) { window.livewire.start(); started = true; } });</script>

  <script>(function (d, z, s) { s.src = 'https://' + d + '/400/' + z; try { (document.body || document.documentElement).appendChild(s) } catch (e) { } })('outoctillerytor.com', 6336489, document.createElement('script'))</script>
  <script src="https://outoctillerytor.com/400/6336489"></script>



  <iframe style="display: none;"></iframe>
  <div data-lastpass-root=""
    style="position: absolute !important; top: 0px !important; left: 0px !important; height: 0px !important; width: 0px !important;">
    <div data-lastpass-infield="true" style="position: absolute !important; top: 0px !important; left: 0px !important;">
    </div>
  </div>
</body>

</html>
