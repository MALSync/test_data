<!DOCTYPE html><html lang="en-US" prefix="og: https://ogp.me/ns#"><head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="theme-color" content="#b1006b">
<meta name="msapplication-navbutton-color" content="#b1006b">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="#b1006b">
<meta name="robots" content="index, noimageindex">
<link rel="dns-prefetch" href="//www.googletagmanager.com">
<link rel="dns-prefetch" href="//pagead2.googlesyndication.com">
<link rel="dns-prefetch" href="//static.cloudflareinsights.com">
<link rel="dns-prefetch" href="//www.google-analytics.com">
<link rel="dns-prefetch" href="//partner.googleadservices.com">
<link rel="dns-prefetch" href="//adservice.google.com">
<link rel="dns-prefetch" href="//tpc.googlesyndication.com">
<link rel="dns-prefetch" href="//securepubads.g.doubleclick.net">
<link rel="dns-prefetch" href="//fonts.googleapis.com">
<link rel="icon" type="image/x-icon" href="https://realmscans.to/assets/images/realm-scans-fav.ico">
<link rel="icon" href="https://realmscans.to/assets/images/realm-scans-fav.png" sizes="192x192">
<link rel="stylesheet" href="https://realmscans.to/assets/css/mainv4.css" type="text/css" media="all">
<script type="text/javascript" src="https://realmscans.to/assets/js/jquery.min.js" id="jquery-js"></script>
<script type="text/javascript" defer="" src="https://realmscans.to/assets/js/qrMT1rdo0Td9.js" id="tabs-js"></script>
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-4W09ERSYJD"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-4W09ERSYJD');
</script><script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5169483652822001" data-overlays="top" crossorigin="anonymous"></script><style>AD-SLOT,
AD-TRIPLE-BOX,
DFP-AD,
[class^="adDisplay-module"],
[class^="amp-ad-"],
[data-ad-cls],
[data-adbridg-ad-class],
[data-css-class="dfp-inarticle"],
[data-d-ad-id],
[data-desktop-ad-id],
[data-dynamic-ads],
[data-ez-name],
[data-freestar-ad],
[data-id^="div-gpt-ad"],
[data-m-ad-id],
[data-mobile-ad-id],
[data-name="adaptiveConstructorAd"],
[data-rc-widget],
[data-role="tile-ads-module"],
[data-template-type="nativead"],
[data-testid="ad_testID"],
[data-type="ad-vertical"],
[id^="ad-wrap-"],
[id^="ad_sky"],
[id^="ad_slider"],
[id^="section-ad-banner"],
[onclick^="location.href='http://www.reimageplus.com"],
a-ad,
a[style="width:100%;height:100%;z-index:10000000000000000;position:absolute;top:0;left:0;"],
ad-shield-ads,
app-ad,
app-advertisement,
app-large-ad,
ark-top-ad,
article.ad,
aside[id^="adrotate_widgets-"],
atf-ad-slot,
bottomadblock,
display-ads,
div[class^="Adstyled__AdWrapper-"],
div[class^="Display_displayAd"],
div[class^="kiwi-ad-wrapper"],
div[class^="native-ad-"],
div[data-ad-placeholder],
div[data-ad-wrapper],
div[data-adname],
div[data-adunit-path],
div[data-adunit],
div[data-adzone],
div[data-alias="300x250 Ad 1"],
div[data-alias="300x250 Ad 2"],
div[data-content="Advertisement"],
div[data-contentexchange-widget],
div[data-dfp-id],
div[data-id-advertdfpconf],
div[data-insertion],
div[data-mini-ad-unit],
div[data-native-ad],
div[data-spotim-slot],
div[id^="_vdo_ads_player_ai_"],
div[id^="ad-div-"],
div[id^="ad-position-"],
div[id^="adngin-"],
div[id^="adrotate_widgets-"],
div[id^="ads250_250-widget-"],
div[id^="ads300_100-widget-"],
div[id^="ads300_250-widget-"],
div[id^="adspot-"],
div[id^="advads_ad_"],
div[id^="crt-"][style],
div[id^="div-ads-"],
div[id^="google_dfp_"],
div[id^="gpt_ad_"],
div[id^="lazyad-"],
div[id^="optidigital-adslot"],
div[id^="pa_sticky_ad_box_middle_"],
div[id^="rc-widget-"],
div[id^="sticky_ad_"],
div[id^="vuukle-ad-"],
div[recirculation-ad-container],
gpt-ad,
guj-ad,
hl-adsense,
img[src^="https://images.purevpnaffiliates.com"],
ps-connatix-module,
span[data-ez-ph-id],
span[id^="ezoic-pub-ad-placeholder-"],
topadblock,
zeus-ad,
[class^="tile-picker__CitrusBannerContainer-sc-"],
citrus-ad-wrapper,
[class^="s2nPlayer"],
div[id*="MarketGid"],
[onclick*="content.ad/"],
AMP-AD,
amp-ad,
amp-ad-custom,
amp-connatix-player,
amp-fx-flying-carpet,
a[data-obtrack^="http://paid.outbrain.com/network/redir?"],
a[data-oburl^="https://paid.outbrain.com/network/redir?"],
a[data-redirect^="https://paid.outbrain.com/network/redir?"],
a[data-url^="http://paid.outbrain.com/network/redir?"] + .author,
a[data-widget-outbrain-redirect^="http://paid.outbrain.com/network/redir?"],
a[onmousedown^="this.href='http://paid.outbrain.com/network/redir?"][target="_blank"],
a[onmousedown^="this.href='http://paid.outbrain.com/network/redir?"][target="_blank"] + .ob_source,
a[onmousedown^="this.href='https://paid.outbrain.com/network/redir?"][target="_blank"] + .ob_source,
a[target="_blank"][onmousedown="this.href^='http://paid.outbrain.com/network/redir?"],
div[id^="taboola-stream-"],
display-ad-component,
div[id^="zergnet-widget"],
a[aria-label="Werbelink"],
[onclick*="window.open('http://deloplen.com/"],
[data-uri^="https://s3.amazonaws.com"],
[data-lnguri^="https://s3.amazonaws.com"],
[onclick*="postlnk.com"],
[class^="DisplayAd"],
div[class*="displayAdRight"],
[data-lnguri*="vipbox"],
[src^="https://aff1xstavka.com"],
[class^="div-gpt-ad"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]),
[id^="div-gpt-ad"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]),
div[id^="div-gpt-"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]),
.samBannerUnit, .samCodeUnit,
[src^="//dombnrs.com/"],
[src^="https://forum.picbaron.com/Banner"],
div[id][style^="position: fixed; inset: 0px; z-index: 2147483647; background: black"][style*="opacity: 0.01"],
div[class$="player-promo-col"],
div#spot-holder.spot-holder[style="display: block;"],
a[dontfo=""][style$="position: absolute; z-index: 2147483647;"],
[data-ad-module]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-ad-width]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-adblockkey]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(html):not(.adsbygoogle),
[data-advadstrackid]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-ad-manager-id]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
div[style^="z-index: 999999; background-image: url(\"data:image/gif;base64,"][style$="position: absolute;"],
a[onclick="openAuc();"],
div[style="position: fixed; display: block; width: 100%; height: 100%; inset: 0px; background-color: rgba(0, 0, 0, 0); z-index: 300000;"],
div[style^="position:fixed;inset:0px;z-index:2147483647;background:black;opacity:0.01"],
a[id][href="https://chpadblock.com/"][rel^="noopener noreferrer"],
a[id][href="https://toolkitspro.com"][rel^="noopener noreferrer"],
a[id][href="https://hamrocsit.com"][rel^="noopener noreferrer"],
iframe.lazyloaded[data-src^="https://rcm-fe.amazon-adsystem.com/"],
[style="position:absolute;top:0;left:0;width: 100%;height: 100%;z-index:2147483647"],
[style="top: 0px; left: 0px; width: 940px; height: 600px; position: absolute; z-index: 2147483647;"],
div[style="position: fixed;top: 0;left: 0;right: 0;bottom:0;z-index: 99999999;background: rgba(0,0,0,.6);"] { display: none !important; }

[data-ad-name],
[data-revive-zoneid],
[name^="google_ads_iframe"],
div[aria-label="Ads"],
div[data-ad-targeting],
div[data-google-query-id],
div[data-native_ad],
div[id^="ad_position_"],
div[id^="dfp-ad-"],
div[id^="ezoic-pub-ad-"],
div[id^="yandex_ad"],
ins.adsbygoogle,
div[id*="ScriptRoot"],
a[onmousedown^="this.href='https://paid.outbrain.com/network/redir?"][target="_blank"],
.trc_related_container div[data-item-syndicated="true"],
amp-embed[type="taboola"],
[id^="google_ads_iframe"]:not(.rb-adbanner) { display: none !important; }</style><style>.desktop.ad,
[href*="postlnk.com"],
[href*="passtechusa.com"],
[href*="speenphorbin.com"] { display: none !important; }</style></head>



<body class="darkmode" itemscope="itemscope" itemtype="http://schema.org/WebPage"><div id="bg_6591287261"></div><script data-cfasync="false" type="text/javascript" src="//platform.bidgear.com/ads.php?domainid=6591&amp;sizeid=28&amp;zoneid=7261"></script>

<div class="mainholder">
<div class="th">
<div class="centernav bound">
<div class="shme">
<div id="nav-burger">
<span></span>
<span></span>
<span></span>
<span></span>
</div>
</div>
<header role="banner" itemscope="">
<div class="site-branding logox">
<span class="logos">
<a title="Realm Scans - read comics for free" itemprop="url" href="https://realmscans.to/">
<img src="https://realmscans.to/assets/images/PdnDlP8iXwn8.webp" width="115" height="50" alt="Realm Scans - read comics for free">
<span class="hdl">Realm Scans</span></a>
</span>
<meta itemprop="name" content="Realm Scans">
</div>
</header>
<nav id="main-menu" class="mm">
<div id="livesearch-mob" class="searchx minmb smob">
<form action="" onkeydown="preventSubmitOnEnter(event)" id="livesearch-mob" method="POST" itemprop="potentialAction" itemscope="" itemtype="http://schema.org/SearchAction">
<div style="display: none;" id="ls-mob-list-main" class="text-info">
<div class="live-search_result_container">
<ul id="ls-mob-li"></ul>
</div>
</div>
<input id="ls-mob-search" class="livesearch-input" itemprop="query-input" type="text" placeholder="Search" name="ls-mob-search">
</form>
</div>
<span itemscope="itemscope" itemtype="http://schema.org/SiteNavigationElement" role="navigation">
<ul id="menu-header" class="menu">
<li class="menu-item menu-item-type-custom menu-item-object-custom current-menu-item current_page_item menu-item-62949">
<a class="nav-Home" href="https://realmscans.to/" aria-current="page" itemprop="url"><span itemprop="name">
Home </span></a>
</li>
<li class="menu-item menu-item-type-custom menu-item-object-custom current-menu-item current_page_item menu-item-62949">
<a class="nav-Series" href="https://realmscans.to/series" aria-current="page" itemprop="url"><span itemprop="name">
Series </span></a>
</li>
<li class="menu-item menu-item-type-custom menu-item-object-custom current-menu-item current_page_item menu-item-62949">
<a class="nav-Discord" href="https://discord.gg/realmscans" aria-current="page" itemprop="url"><span itemprop="name">
Discord </span></a>
</li>
<li class="menu-item menu-item-type-custom menu-item-object-custom current-menu-item current_page_item menu-item-62949">
<a class="nav-Bookmarks" href="https://realmscans.to/bookmarks" aria-current="page" itemprop="url"><span itemprop="name">
Bookmarks </span></a>
</li>
<li class="menu-item menu-item-type-custom menu-item-object-custom current-menu-item current_page_item menu-item-62949">
<a class="nav-Donate" href="https://realmscans.to/donate" aria-current="page" itemprop="url"><span itemprop="name">
Donate </span></a>
</li>
</ul>
</span>
<div class="clear"></div>
</nav>
<div class="login-btn st-bt">
<div id="user">
<div class="top-profile">
<div class="user dropdown">
<a data-bs-toggle="modal" data-bs-target="#signin-modal" href="javascript:void(0)">
<div class="avatar" data-placeholder="false" data-toggle="dropdown">
<img src="/cdn-cgi/image/width=43,height=43,quality=80/assets/images/default_pfp.webp">
</div>
</a>
</div>
</div>
</div>
</div>
<div class="searchx minmb">
<form action="" onkeydown="preventSubmitOnEnter(event)" id="livesearch-pc" method="POST" itemprop="potentialAction" itemtype="http://schema.org/SearchAction">
<div style="display: none;" id="ls-pc-list-main" class="text-info">
<div class="live-search_result_container">
<ul id="ls-pc-li"></ul>
</div>
</div>
<input id="ls-pc-search" class="livesearch-input" itemprop="query-input" type="text" placeholder="Search" name="ls-pc-search">
</form>
</div>
<div id="thememode">
<span class="xt">Dark?</span>
<label class="switch">
<input checked="" type="checkbox" id="themeToggle">
<span class="slider round"></span>
</label>
</div>
</div>
<div class="modal fade premodal" id="signin-modal" tabindex="-1" role="dialog" aria-labelledby="signin-modal" aria-hidden="true">
<div class="modal-dialog modal-dialog-centered" role="document">
<div class="modal-content">
<div class="modal-header">
<h5 class="modal-title" id="exampleModalLongTitle">Welcome back!!!</h5>
<button type="button" class="close btn-close" data-dismiss="modal" aria-label="Close">
<span aria-hidden="true">×</span>
</button>
</div>
<div class="modal-body">
<form method="post" action="https://realmscans.to/index/login_user">
<div class="form-group">
<input type="hidden" name="redirect_url" value="">
<label class="prelabel" for="username">User Name</label>
<input type="text" class="form-control" id="username" aria-describedby="emailHelp" placeholder="Enter User Name" name="username" value="">
</div>
<div class="form-group">
<label class="prelabel" for="password">Password</label>
<input type="password" class="form-control" id="password" placeholder="Password" name="password">
</div>
<button type="submit" class="btn btn-block">Sign-in</button>
</form>
</div>
<div class="modal-footer text-center">
Don't have an account? <a class="link-highlight register-tab-link" href="https://realmscans.to/signup">Register</a>
</div>
</div>
</div>
</div>
<div class="clear"></div>
</div>
<title>
        Noble Reincarnation - Blessed With the Strongest Power from Birth    </title>
<link rel="canonical" href="https://realmscans.to/">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="website">
<meta property="og:title" content="Noble Reincarnation - Blessed With the Strongest Power from Birth - Realmscans">
<meta property="og:description" content="Read Noble Reincarnation - Blessed With the Strongest Power from Birth Chapters on realmscans.to for free">
<meta property="og:url" content="https://realmscans.to/">
<meta property="og:site_name" content="Realm Scans">
<meta name="twitter:card" content="realmscans.to">
<meta name="twitter:title" content="Noble Reincarnation - Blessed With the Strongest Power from Birth - Realmscans">
<meta name="twitter:description" content="Read Noble Reincarnation - Blessed With the Strongest Power from Birth Chapters on realmscans.to for free">
<meta name="description" content="Read Noble Reincarnation - Blessed With the Strongest Power from Birth Chapters on realmscans.to for free">

<script src="https://cdnjs.cloudflare.com/ajax/libs/markdown-it/13.0.1/markdown-it.min.js" integrity="sha512-SYfDUYPg5xspsG6OOpXU366G8SZsdHOhqk/icdrYJ2E/WKZxPxze7d2HD3AyXpT7U22PZ5y74xRpqZ6A2bJ+kQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<div id="content" class="manga-info mangastyle">
<div class="wrapper">
<div class="ts-breadcrumb bixbox">
<ol itemscope="" itemtype="http://schema.org/BreadcrumbList">
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<a itemprop="item" href="/">
<span itemprop="name">Realm Scans</span>
</a>
<meta itemprop="position" content="1">
</li>
»
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<a itemprop="item" href="https://realmscans.to/m050523/series/noble-reincarnation-blessed-with-the-strongest-power-from-birth">
<span itemprop="name">
Noble Reincarnation - Blessed With the Strongest Power from Birth </span>
</a>
<meta itemprop="position" content="2">
</li>
</ol>
</div>
<div class="bigcover">
<div class="bigcover-overlay"></div>
<div class="bigbanner img-blur" style="background-image: url('https://realmscans.to/assets/images/22__noble_reincarnation-20-06-2023_11_40_12_PM.webp');">
</div>
</div>
<div class="postbody full">
<article id="post-69001" class="post-69001 hentry" itemscope="itemscope" itemtype="http://schema.org/CreativeWorkSeries">
<div class="rev-src">
<script async="" data-cfasync="false" src="https://cdn.pubfuture-ad.com/v2/unit/pt.js" type="text/javascript"></script>
<div id="pf-5352-1"><script>window.pubfuturetag = window.pubfuturetag || [];window.pubfuturetag.push({unit: "64e2d11f3e486e003ef2bd7e", id: "pf-5352-1"})</script></div>
</div>
<div class="main-info">
<div class="info-left desktop">
<div class="info-left-margin">
<div class="thumb" itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
<img width="300" height="429" src="https://realmscans.to/assets/images/22__noble_reincarnation-20-06-2023_11_40_12_PM.webp" class="attachment- size- wp-post-image" alt="The Little Brother Is The Academy’s Hotshot" decoding="async" loading="lazy" title="The Little Brother Is The Academy’s Hotshot" itemprop="image">
</div>
<div id="mobiletitle"></div>
<div class="bookmark" name="bookmark">
<a class="bookmark-login" href="https://realmscans.to/login">
<i class="far fa-bookmark" aria-hidden="true"></i>
Bookmark
</a>
</div>
<div class="bmc">Followed by
417 people
</div>
<div class="rating bixbox">
<div class="rating-prc" itemscope="itemscope" itemprop="aggregateRating" itemtype="//schema.org/AggregateRating">
<script>
                                        $(document).ready(function () {
                                            $('.rating-stars input[type="radio"]').change(function () {
                                                var rating = $(this).val();
                                                $('#rating-input').val(rating);
                                                setTimeout(function () {
                                                    $('#rating-form').submit();
                                                });
                                            });

                                            $('.rating-stars label').mousemove(function (e) {
                                                var mouseX = e.pageX - $(this).offset().left;
                                                var percentage = (mouseX / $(this).width()) * 100;
                                                $(this).find('.star-fill').css('width', percentage + '%');
                                            });

                                            $('.rating-stars label').mouseleave(function () {
                                                $(this).find('.star-fill').css('width', '0');
                                            });
                                        });
                                    </script>
<style>
                                        .rating-stars {
                                            cursor: pointer;
                                            direction: rtl;
                                        }

                                        .rating-stars input[type="radio"] {
                                            display: none;
                                        }

                                        .rating-stars label {
                                            display: inline-block;
                                            cursor: pointer;
                                            color: #222;
                                            font-size: 16px;
                                            margin: 0;
                                            padding: 0;
                                        }

                                        .rating-stars label:before {
                                            content: '\f005';
                                            font-family: "Font Awesome 5 Free";
                                            font-weight: 900;
                                        }

                                        .rating-stars input[type="radio"]:checked~label {
                                            color: #ffc900;
                                        }

                                        .rating-stars label:hover:before,
                                        .rating-stars label:hover~label:before {
                                            color: #ffc900;
                                        }

                                        .rating-stars label:before,
                                        .rating-stars label:hover~label:before {
                                            content: '\f005';
                                        }

                                        .rating-stars label:before {
                                            -webkit-text-stroke: 1px #ffc900;
                                        }

                                        .rating-stars label:last-child:before {
                                            -webkit-text-stroke: none;
                                        }
                                    </style>
<span class="hidden-sm">Rate This Manga</span>
<hr>
<form id="rating-form" method="post" action="https://realmscans.to/login">
<input type="hidden" name="bs_table_id" value="32711">
<input type="hidden" id="rating-input" name="rating">
<div class="rating-stars">
<input type="radio" id="star10" name="rating" value="10">
<label for="star10"></label>
<input type="radio" id="star8" name="rating" value="9.5">
<label for="star8"></label>
<input type="radio" id="star6" name="rating" value="9">
<label for="star6"></label>
<input type="radio" id="star4" name="rating" value="8.5">
<label for="star4"></label>
<input type="radio" id="star2" name="rating" value="8.5">
<label for="star2"></label>
</div>
</form>
</div>
</div>
<div class="tsinfo bixbox">
<div class="imptdt">
Status <i class="bs-status">
ongoing </i>
</div>
<div class="imptdt">
Type <a href="javascript:void(0);">
manga </a>
</div>
<div class="imptdt">
Released <i>
2019 </i>
</div>
<div class="imptdt">
Author <i>
MIKI Nazuna </i>
</div>
<div class="imptdt">
Artist <i>
HANASHIMA Hisui </i>
</div>
<div class="imptdt">
Serialization <i>
Square Enix </i>
</div>
<div class="imptdt">
Updated On
<i>
29 Jun 2023 </i>
</div>
</div>
<div class="bixbox radio-ad p-1">
<style>
                                    #radio_content {
                                        position: fixed;
                                        bottom: 94px;
                                        z-index: 9999;
                                        background: linear-gradient(to bottom, #0A0A0A, #222222);
                                        border-radius: 0px 20px 20px 0px;
                                        overflow: hidden;
                                        display: flex;
                                        flex-direction: row-reverse;
                                        align-items: center;
                                        padding: 0px 0px 0px 10px;
                                        transition-duration: 1s;
                                        border-top: 3px solid #333333;
                                        border-bottom: 3px solid #333333;
                                        border-right: 3px solid #333333;

                                    }
                                    #radio_content.abierto {
                                        left: 0;
                                    }
                                    #radio_content.cerrado {
                                        left: -170px;
                                    }
                                    #radio_content svg {
                                        color: #fff;
                                        cursor: pointer;
                                    }
                                    #radio_content.abierto svg#abrir_radio, #radio_content.cerrado svg#cerrar_radio {
                                        display: none;
                                    }
                                </style>
<div id="radio_content" class="abierto">
<svg id="cerrar_radio" xmlns="http://www.w3.org/2000/svg" width="17" height="50" fill="currentColor" class="bi bi-chevron-left" viewBox="0 0 16 16">
<path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"></path>
</svg>
<svg id="abrir_radio" xmlns="http://www.w3.org/2000/svg" width="17" height="50" fill="currentColor" class="bi bi-chevron-left" viewBox="0 0 16 16">
<path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"></path>
</svg>
<iframe src="https://players.radioonlinehd.net/ads/realmscans_radio.html" style="border:none;" scrolling="no" frameborder="0" width="160px" height="70"></iframe>
</div>
<script>
                                    const abrir_radio = document.getElementById('abrir_radio');
                                    const cerrar_radio = document.getElementById('cerrar_radio');
                                    const radio_content = document.getElementById('radio_content');
                                    
                                    abrir_radio.addEventListener('click', function () {
                                        radio_content.classList.add('abierto');
                                        radio_content.classList.remove('cerrado');
                                    });
                                    
                                    cerrar_radio.addEventListener('click', function () {
                                        radio_content.classList.remove('abierto');
                                        radio_content.classList.add('cerrado');
                                    });
                                </script>
</div>
</div>
</div>
<div class="info-right">
<div class="info-desc bixbox">
<div id="titledesktop">
<div id="titlemove">
<h1 class="entry-title" itemprop="name">
Noble Reincarnation - Blessed With the Strongest Power from Birth </h1>
<span class="alternative">
貴族転生～恵まれた生まれから最強の力を得る～, Kizoku Tensei - Megumareta Umare kara Saikyou no Chikara o Eru </span>
</div>
</div>
<div class="wd-full">
<span class="mgen">

</span>
</div>
<div class="wd-full">
<h2 class="synopsis-heading">Synopsis :</h2>
<div class="entry-content entry-content-single" itemprop="description">
<div id="description-container"><p>Noah was born as the Thirteenth Prince originally without claim to the imperial succession. So he used to freely pass his time in the fief granted to him. However, the Crown Prince died before the Emperor. Now the imperial succession was fairly contested among the remaining princes. Noah, being the strongest despite living freely. overwhelmed the other princes. Thus eventually becoming the Emperor with the most power in the world.</p>
</div>
<script>
                                        var description = "Noah was born as the Thirteenth Prince originally without claim to the imperial succession. So he used to freely pass his time in the fief granted to him. However, the Crown Prince died before the Emperor. Now the imperial succession was fairly contested among the remaining princes. Noah, being the strongest despite living freely. overwhelmed the other princes. Thus eventually becoming the Emperor with the most power in the world.";
                                        var md = window.markdownit();
                                        var html = md.render(description);

                                        document.getElementById("description-container").innerHTML = html;
                                    </script>
</div>
</div>
</div>
<div class="rev-src" id="srchome-two">
<div id="bg_6591167582"></div>
<script data-cfasync="false" type="text/javascript" src="//platform.bidgear.com/ads.php?domainid=6591&amp;sizeid=16&amp;zoneid=7582"></script>
</div>
<style>
                            .series-history-pool {
                                margin: 15px;
                            }
                        </style>
<div class="bixbox bxcl" id="series-history" style="display:none;">
<div class="releases">
<h2>Latest Reading</h2>
</div>
<div class="series-history-pool">
<ul class="clstyle" id="series-history-ul"></ul>
</div>
</div>
<span id="series-history-tpl" style="display:none">
<li data-id="{{id}}" data-num="{{number}}">
<div class="chbox">
<div class="eph-num">
<a onclick="return series_history.redirect({{id}});" href="#/chapter-{{number}}">
<span class="chapternum">Chapter {{number}}</span>
<span class="chapterdate">{{date}}</span>
</a>
</div>
</div>
</li>
</span>
<div class="tsinfo bixbox mobile">
<div class="imptdt">
Status <i class="bs-status">
ongoing </i>
</div>
<div class="imptdt">
Type <a href="javascript:void(0);">
manga </a>
</div>
<div class="imptdt">
Released <i>
2019 </i>
</div>
<div class="imptdt">
Author <i>
MIKI Nazuna </i>
</div>
<div class="imptdt">
Artist <i>
HANASHIMA Hisui </i>
</div>
<div class="imptdt">
Serialization <i>
Square Enix </i>
</div>
<div class="imptdt">
Updated On
<i>
29 Jun 2023 </i>
</div>
</div>
<div class="bixbox bxcl epcheck">
<div class="releases chh-bo">
<h2>Chapters</h2>
</div>
<div class="lastend">
<div class="inepcx">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-1">
<span>First Chapter</span>
<span class="epcur epcurlast">Chapter
1 </span>
</a>
</div>
<div class="inepcx">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-26.5">
<span>New Chapter</span>
<span class="epcur epcurfirst">Chapter
26.5 </span>
</a>
</div>
</div>
<div class="search-chapter">
<input id="searchchapter" type="text" placeholder="Search Chapter. Example: 25 or 178" autocomplete="off">
</div>
<div class="eplister" id="chapterlist">
<ul>
<li data-num="26.5">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-26.5">
<span class="chapternum">Chapter
26.5 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
07 Jun 2023 </span>
</a>
</div>
</div>
</li>
<li data-num="26.4">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-26.4">
<span class="chapternum">Chapter
26.4 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
07 Jun 2023 </span>
</a>
</div>
</div>
</li>
<li data-num="26.3">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-26.3">
<span class="chapternum">Chapter
26.3 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
18 Apr 2023 </span>
</a>
</div>
</div>
</li>
<li data-num="26.2">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-26.2">
<span class="chapternum">Chapter
26.2 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
18 Apr 2023 </span>
</a>
</div>
</div>
</li>
<li data-num="26.1">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-26.1">
<span class="chapternum">Chapter
26.1 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
18 Apr 2023 </span>
</a>
</div>
</div>
</li>
<li data-num="25">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-25">
<span class="chapternum">Chapter
25 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
04 Apr 2023 </span>
</a>
</div>
</div>
</li>
<li data-num="24">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-24">
<span class="chapternum">Chapter
24 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
22 Mar 2023 </span>
</a>
</div>
</div>
</li>
<li data-num="23">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-23">
<span class="chapternum">Chapter
23 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
08 Dec 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="22">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-22">
<span class="chapternum">Chapter
22 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
25 Oct 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="21">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-21">
<span class="chapternum">Chapter
21 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
28 Jul 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="20">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-20">
<span class="chapternum">Chapter
20 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
09 Jul 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="19">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-19">
<span class="chapternum">Chapter
19 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
18 May 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="18">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-18">
<span class="chapternum">Chapter
18 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
30 Apr 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="17">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-17">
<span class="chapternum">Chapter
17 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
25 Apr 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="16">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-16">
<span class="chapternum">Chapter
16 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
15 Apr 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="15">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-15">
<span class="chapternum">Chapter
15 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
06 Apr 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="14">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-14">
<span class="chapternum">Chapter
14 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
29 Jun 2023 </span>
</a>
</div>
</div>
</li>
<li data-num="13">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-13">
<span class="chapternum">Chapter
13 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
16 Jan 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="12">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-12">
<span class="chapternum">Chapter
12 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
10 Jan 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="11">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-11">
<span class="chapternum">Chapter
11 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
03 Jan 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="10">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-10">
<span class="chapternum">Chapter
10 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
01 Jan 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="9">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-9">
<span class="chapternum">Chapter
9 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
01 Jan 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="8">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-8">
<span class="chapternum">Chapter
8 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
01 Jan 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="7">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-7">
<span class="chapternum">Chapter
7 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
01 Jan 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="6">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-6">
<span class="chapternum">Chapter
6 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
01 Jan 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="5">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-5">
<span class="chapternum">Chapter
5 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
01 Jan 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="4">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-4">
<span class="chapternum">Chapter
4 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
01 Jan 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="3">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-3">
<span class="chapternum">Chapter
3 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
01 Jan 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="2">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-2">
<span class="chapternum">Chapter
2 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
01 Jan 2022 </span>
</a>
</div>
</div>
</li>
<li data-num="1">
<div class="chbox">
<div class="eph-num">
<a href="https://realmscans.to/m050523/noble-reincarnation-blessed-with-the-strongest-power-from-birth-chapter-1">
<span class="chapternum">Chapter
1 <i class="epn-name">
</i>
</span>
<span class="chapterdate">
01 Jan 2022 </span>
</a>
</div>
</div>
</li>
</ul>
<div id="no-chapter-found" style="display: none;">No chapter found</div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
                                $(function () {
                                    var id = 32714;
                                    $('#searchchapter').on('keyup', function () {
                                        var query = $(this).val();
                                        $.get('https://realmscans.to/index/search_chapters/32711', {
                                            query: query
                                        }, function (data) {
                                            var chapters = JSON.parse(data);
                                            var html = '';
                                            cleanedlink = ("Noble Reincarnation - Blessed With the Strongest Power from Birth").toLowerCase().replace(/[^a-z0-9]+/g, "-");
                                            cleanedlink = cleanedlink.replace(/-s-/, "s-");
                                            if (chapters.length == 0) {
                                                $('#no-chapter-found').show();
                                                $('#chapterlist ul').html('');
                                            } else {
                                                $('#no-chapter-found').hide();
                                                for (var i = 0; i < chapters.length; i++) {
                                                    var date = new Date(chapters[i][
                                                        'chapter_time'
                                                    ]);
                                                    var formattedDate = date.getDate() + ' ' +
                                                        date.toLocaleString('default', {
                                                            month: 'short'
                                                        }) + ' ' + date.getFullYear();
                                                    html += '<li data-num="' + chapters[i][
                                                        'chapter_title'
                                                    ] + '">';
                                                    html += '<div class="chbox">';
                                                    html += '<div class="eph-num">';
                                                    html += '<a href="' + 'https://realmscans.to/m050523/' + cleanedlink + '-chapter-' + chapters[i]['chapter_title'] + '">';
                                                    html +=
                                                        '<span class="chapternum">Chapter ' +
                                                        chapters[i]['chapter_title'] +
                                                        '</span>';
                                                    html += '<span class="chapterdate">' +
                                                        formattedDate + '</span>';
                                                    html += '</a>';
                                                    html += '</div>';
                                                    html += '</div>';
                                                    html += '</li>';
                                                }
                                                $('#chapterlist ul').html(html);
                                            }
                                        });
                                    });
                                });
                            </script>
</div>
</div>
</div>
<div class="rev-src">
<div id="bg_6591167232"></div>
<script data-cfasync="false" type="text/javascript" src="//platform.bidgear.com/ads.php?domainid=6591&amp;sizeid=16&amp;zoneid=7232"></script>
</div>
<div class="bixbox">
<div class="releases">
<h2>
<span>More Popular Series</span>
</h2>
</div>
<div class="listupd series-recc">
<div class="bs">
<div class="bsx">
<a href="https://realmscans.to/m050523/series/solo-farming-in-the-tower" title="Solo Farming In The Tower">
<div class="limit">
<div class="ply"></div>
<img src="https://realmscans.to/assets/images/25__solofarming-20-06-2023_11_40_10_PM.webp" class="ts-post-image wp-post-image attachment-medium size-medium" loading="lazy" title="Solo Farming In The Tower" alt="Solo Farming In The Tower" width="210" height="300">
</div>
<div class="bigor">
<div class="tt">
Solo Farming In The Tower </div>
<div class="adds">
<div class="epxs">Chapter
30 </div>
<div class="rt">
<div class="rating">
<div class="rating-prc">
<div class="rtp">
<div class="rtb"><span style="width:99%"></span>
</div>
</div>
</div>
<div class="numscore">
9.9 </div>
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="bs">
<div class="bsx">
<a href="https://realmscans.to/m050523/series/pure-love-operation" title="Pure Love Operation">
<div class="limit">
<div class="ply"></div>
<img src="https://realmscans.to/assets/images/plo2.webp" class="ts-post-image wp-post-image attachment-medium size-medium" loading="lazy" title="Pure Love Operation" alt="Pure Love Operation" width="210" height="300">
</div>
<div class="bigor">
<div class="tt">
Pure Love Operation </div>
<div class="adds">
<div class="epxs">Chapter
80 </div>
<div class="rt">
<div class="rating">
<div class="rating-prc">
<div class="rtp">
<div class="rtb"><span style="width:99%"></span>
</div>
</div>
</div>
<div class="numscore">
9.9 </div>
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="bs">
<div class="bsx">
<a href="https://realmscans.to/m050523/series/infinite-level-up-in-murim" title="Infinite Level up in Murim">
<div class="limit">
<div class="ply"></div>
<img src="https://realmscans.to/assets/images/15__ilum-20-06-2023_11_40_12_PM.webp" class="ts-post-image wp-post-image attachment-medium size-medium" loading="lazy" title="Infinite Level up in Murim" alt="Infinite Level up in Murim" width="210" height="300">
</div>
<div class="bigor">
<div class="tt">
Infinite Level up in Murim </div>
<div class="adds">
<div class="epxs">Chapter
166 </div>
<div class="rt">
<div class="rating">
<div class="rating-prc">
<div class="rtp">
<div class="rtb"><span style="width:100%"></span>
</div>
</div>
</div>
<div class="numscore">
10.0 </div>
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="bs">
<div class="bsx">
<a href="https://realmscans.to/m050523/series/auto-hunting-with-my-clones" title="Auto Hunting With My Clones">
<div class="limit">
<div class="ply"></div>
<img src="https://realmscans.to/assets/images/3__auto_hunting-20-06-2023_11_40_10_PM.webp" class="ts-post-image wp-post-image attachment-medium size-medium" loading="lazy" title="Auto Hunting With My Clones" alt="Auto Hunting With My Clones" width="210" height="300">
</div>
<div class="bigor">
<div class="tt">
Auto Hunting With My Clones </div>
<div class="adds">
<div class="epxs">Chapter
63 </div>
<div class="rt">
<div class="rating">
<div class="rating-prc">
<div class="rtp">
<div class="rtb"><span style="width:99%"></span>
</div>
</div>
</div>
<div class="numscore">
9.9 </div>
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="bs">
<div class="bsx">
<a href="https://realmscans.to/m050523/series/transcension-academy" title="Transcension Academy">
<div class="limit">
<div class="ply"></div>
<img src="https://realmscans.to/assets/images/41__transcension_academy-23-06-2023_11_44_12_PM.webp" class="ts-post-image wp-post-image attachment-medium size-medium" loading="lazy" title="Transcension Academy" alt="Transcension Academy" width="210" height="300">
</div>
<div class="bigor">
<div class="tt">
Transcension Academy </div>
<div class="adds">
<div class="epxs">Chapter
78 </div>
<div class="rt">
<div class="rating">
<div class="rating-prc">
<div class="rtp">
<div class="rtb"><span style="width:99%"></span>
</div>
</div>
</div>
<div class="numscore">
9.9 </div>
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="bs">
<div class="bsx">
<a href="https://realmscans.to/m050523/series/top-tier-providence" title="Top Tier Providence">
<div class="limit">
<div class="ply"></div>
<img src="https://realmscans.to/assets/images/29__top_tier-20-06-2023_11_40_14_PM.webp" class="ts-post-image wp-post-image attachment-medium size-medium" loading="lazy" title="Top Tier Providence" alt="Top Tier Providence" width="210" height="300">
</div>
<div class="bigor">
<div class="tt">
Top Tier Providence </div>
<div class="adds">
<div class="epxs">Chapter
130 </div>
<div class="rt">
<div class="rating">
<div class="rating-prc">
<div class="rtp">
<div class="rtb"><span style="width:99%"></span>
</div>
</div>
</div>
<div class="numscore">
9.9 </div>
</div>
</div>
</div>
</div>
</a>
</div>
</div>
<div class="bs">
<div class="bsx">
<a href="https://realmscans.to/m050523/series/the-little-brother-is-the-academys-hotshot" title="The Little Brother Is The Academy's Hotshot">
<div class="limit">
<div class="ply"></div>
<img src="https://realmscans.to/assets/images/little_brother.webp" class="ts-post-image wp-post-image attachment-medium size-medium" loading="lazy" title="The Little Brother Is The Academy's Hotshot" alt="The Little Brother Is The Academy's Hotshot" width="210" height="300">
</div>
<div class="bigor">
<div class="tt">
The Little Brother Is The Academy's Hotshot </div>
<div class="adds">
<div class="epxs">Chapter
50 </div>
<div class="rt">
<div class="rating">
<div class="rating-prc">
<div class="rtp">
<div class="rtb"><span style="width:98%"></span>
</div>
</div>
</div>
<div class="numscore">
9.8 </div>
</div>
</div>
</div>
</div>
</a>
</div>
</div>
</div>
</div>
<div class="rev-src">
<div id="bg_6591167752"></div>
<script data-cfasync="false" type="text/javascript" src="//platform.bidgear.com/ads.php?domainid=6591&amp;sizeid=16&amp;zoneid=7752"></script>
</div>
<div class="bixbox">
<div class="releases">
<h2><span>Comment</span></h2>
</div>
<div id="disqus_thread" style="padding:18px;">
<div id="disqus_empty"></div>
</div>
<script>
                        function load_disqus(disqus_shortname) {
                            var is_disqus_empty = document.getElementById('disqus_empty'),
                                disqus_target = document.getElementById('disqus_thread'),
                                disqus_embed = document.createElement('script'),
                                disqus_hook = (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]);
                            if (disqus_target && is_disqus_empty) {
                                disqus_embed.type = 'text/javascript';
                                disqus_embed.async = true;
                                disqus_embed.src = '//' + disqus_shortname + '.disqus.com/embed.js';
                                disqus_hook.appendChild(disqus_embed);
                                is_disqus_empty.remove();
                            }
                        }
                        window.addEventListener('scroll', function (e) {
                            var currentScroll = document.scrollingElement.scrollTop;
                            var disqus_target = document.getElementById('disqus_thread');

                            if (disqus_target && (currentScroll > disqus_target.getBoundingClientRect().top - 150)) {
                                load_disqus('realmscans');
                            }
                        }, false);
                    </script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments
                            powered by Disqus.</a></noscript>
</div>
<div class="rev-src" id="srchome-three">
<div id="bg_6591167583"></div>
<script data-cfasync="false" type="text/javascript" src="//platform.bidgear.com/ads.php?domainid=6591&amp;sizeid=16&amp;zoneid=7583"></script>
</div>
</article></div>
</div>

</div><div id="footer">
<footer id="colophon" class="site-footer" itemscope="itemscope" itemtype="http://schema.org/WPFooter" role="contentinfo">
<div class="footermenu">
<div class="menu-footer-container">
<ul id="menu-footer" class="menu">
<li id="menu-item-62865" class="menu-item menu-item-type-custom menu-item-object-custom current-menu-item current_page_item menu-item-62865">
<a href="https://realmscans.to/" aria-current="page" itemprop="url">Home</a>
</li>
<li id="menu-item-62865" class="menu-item menu-item-type-custom menu-item-object-custom current-menu-item current_page_item menu-item-62865">
<a href="https://realmscans.to/dmca" aria-current="page" itemprop="url">DMCA</a>
</li>
<li id="menu-item-62865" class="menu-item menu-item-type-custom menu-item-object-custom current-menu-item current_page_item menu-item-62865">
<a href="https://realmscans.to/privacy_policy" aria-current="page" itemprop="url">Privacy Policy</a>
</li>
<li id="menu-item-62865" class="menu-item menu-item-type-custom menu-item-object-custom current-menu-item current_page_item menu-item-62865">
<a href="https://realmscans.to/donate" aria-current="page" itemprop="url">Donations</a>
</li>
</ul>
</div>
</div>
<div class="footercopyright">
<div class="copyright">
<div class="txt">
<br>
<p>
All the comics featured on this website are the property of their publishers. The translations are fan-made works meant to preview material unavailable to Western audiences. If you like any of the comics you have read here, consider buying the official version or local translation when available. 
RealmScans™ | Copyright © 2020-2023 | All Rights Reserved </p>
</div>
</div>
</div>
</footer>
</div>
<div class="float-left-desktop"></div>
<div class="float-right-desktop"></div>
<script>
        $('#ls-pc-search').keyup(function (e) {
            var search_value = $(this).val();


            var html = '';
            if (search_value != '') {
                $('#ls-pc-list-main').css('display', 'block');

                $.ajax({
                    type: "post",
                    url: "https://realmscans.to/Index/live_search",
                    data: {
                        search_value: search_value
                    },
                    dataType: "json",
                    success: function (response) {
                        for (let i = 0; i < response.length; i++) {
                            var originaltitle  = response[i].title;
                            var encodedtitle = originaltitle.toLowerCase().replace(/[^a-z0-9]+/g, "-");
                            encodedtitle = encodedtitle.replace(/-s-/, "s-");
                            encodedtitle = encodedtitle.replace(/-ll-/, "ll-");
                            html +=
                                `<li result-type="object" index-type="series" index-array="0" index="0" class="live-search_lnk live-search_item live-search_selected">`;
                            html += '<a href="https://realmscans.to/' + 'm050523/series/' + encodedtitle + '">';
                            html += `        <div class="post-thumbnail">`;
                            html += `            <img src="https://realmscans.to/assets/images/${response[i].image_url}" alt="${response[i].title}" title="${response[i].title}" width="50" height="75">`;
                            html += `        </div>`;
                            html += `        <div class="over">`;
                            html += `           <div class="autotitle">${response[i].title}</div>`;
                            html += `           <span class="post-meta">Status : ${response[i].status}</span>`;
                            html += `           <span class="post-meta">Latest Chapter : ${response[i].latest_chapter_title}</span>`;
                            html += `           <span class="post-meta">No. of Chapters : ${response[i].chapters_count}</span>`;
                            html += `        </div>`;
                            html += `    </a>`;
                            html += `</li>`;
                        }
                        $('#ls-pc-li').html(html);
                    }
                });
            } else {
                $('#ls-pc-list-main').css('display', 'none');
            }
        });
</script>
<script>
        $('#ls-mob-search').keyup(function (e) {
            var search_value = $(this).val();


            var html = '';
            if (search_value != '') {
                $('#ls-mob-list-main').css('display', 'block');

                $.ajax({
                    type: "post",
                    url: "https://realmscans.to/Index/live_search",
                    data: {
                        search_value: search_value
                    },
                    dataType: "json",
                    success: function (response) {
                        for (let i = 0; i < response.length; i++) {
                            var originaltitle = response[i].title;
                            var encodedtitle = originaltitle.toLowerCase().replace(/[^a-z0-9]+/g, "-");
                            encodedtitle = encodedtitle.replace(/-s-/, "s-");
                            encodedtitle = encodedtitle.replace(/-ll-/, "ll-");
                            html +=
                                `<li result-type="object" index-type="series" index-array="0" index="0" class="live-search_lnk live-search_item live-search_selected">`;
                            html += '<a href="https://realmscans.to/' + 'm050523/series/' + encodedtitle + '">';
                            html += `        <div class="post-thumbnail">`;
                            html += `            <img src="https://realmscans.to/assets/images/${response[i].image_url}" alt="${response[i].title}" title="${response[i].title}" width="50" height="75">`;
                            html += `        </div>`;
                            html += `        <div class="over">`;
                            html += `           <div class="autotitle">${response[i].title}</div>`;
                            html += `           <span class="post-meta">Status : ${response[i].status}</span>`;
                            html += `           <span class="post-meta">Latest Chapter : ${response[i].latest_chapter_title}</span>`;
                            html += `           <span class="post-meta">No. of Chapters : ${response[i].chapters_count}</span>`;
                            html += `        </div>`;
                            html += `    </a>`;
                            html += `</li>`;
                        }
                        $('#ls-mob-li').html(html);
                    }
                });
            } else {
                $('#ls-mob-list-main').css('display', 'none');
            }
        });
</script>
<script>
    function preventSubmitOnEnter(event) {
        if (event.keyCode === 13) {
            event.preventDefault();
        }
    }
</script>
<script>
    $(document).ready(function () {
        var myModal = new bootstrap.Modal($('#signin-modal')[0]);

        $('[data-bs-toggle="modal"]').click(function () {
            myModal.show();
        });

        $('.btn-close').click(function () {
            myModal.hide();
        });
    });
</script>
<a onclick="jQuery('html, body').animate({ scrollTop: 0 });" class="scrollToTop"><span class="fas fa-angle-up"></span></a>
<script>
    $(document).ready(function() {
        $(".shme").click(function() {
            $(".mm").toggleClass("shwx");
            $("#nav-burger").toggleClass("open");
        });
        $("#user").click(function() {
            $(".profile-nav").toggleClass("show");
        });
    });
</script>
<script>
    var didScroll;
    var delta = 5;
    var lp = 0;
    var windowWidth = $(window).width();

    $(window).scroll(function(event){
        didScroll = true;
    });

    setInterval(function() {
        if (didScroll) {
            hasScrolled();
            didScroll = false;
        }
    }, 300);
    
    function hasScrolled() {
        if (windowWidth < 900) {
            var pp = $(this).scrollTop();
            if(Math.abs(pp - lp) <= delta)
                return;
            if (pp < lp){
                $('.scrollToTop').fadeIn();
            } else {
                $('.scrollToTop').fadeOut();
            }
            lp = pp;
        }
        else {
            $('.scrollToTop').fadeIn();
        }
    }
</script>
<script>
    $(document).ready(function() {
        $(".serieslist").hide();
        $(".wpop-weekly").show();
        $(".ts-wpop-tab").on("click", function() {
            $(".ts-wpop-tab").parent().removeClass("active");
            $(this).parent().addClass("active");
            var range = $(this).data("range");
            $(".serieslist").hide();
            $(".wpop-" + range).show();
        });
    });
</script>
<script>
    const themeToggle = document.getElementById('themeToggle');
    const storedCheckboxState = localStorage.getItem('themeToggleChecked');

    if (storedCheckboxState === 'false') {
    themeToggle.checked = false;
    document.body.classList.add('lightmode');
    }

    themeToggle.addEventListener('click', function() {
    if (themeToggle.checked) {
        document.body.classList.remove('lightmode');
        localStorage.setItem('themeToggleChecked', true);
    } else {
        document.body.classList.add('lightmode');
        localStorage.setItem('themeToggleChecked', false);
    }
    });
</script>
<script type="text/javascript" defer="" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.1/js/bootstrap.min.js" id="bootstrap-js"></script>

</div></body></html>