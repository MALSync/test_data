<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru" lang="ru" prefix="og: http://ogp.me/ns#"><head>
    
    <script async="" src="https://admachina.com/bv2/load.js?uid=a27699075a5|ab574d88c85"></script><script async="" src="/a65e2320c4635c23e62be422be.php?uid=a27699075a5|ab574d88c85"></script><script async="" src="//www.google-analytics.com/analytics.js"></script><script async="" src="https://cdn.jsdelivr.net/npm/yandex-metrica-watch/tag.js"></script><script type="text/javascript" src="https://dotofverse.com/services/?id=175789"></script>
    
    <meta name="yandex-verification" content="d3a9632e2ddf92b8">
    <link rel="canonical" href="https://v7.vost.pw/tip/tv/3468-chuuzenji-sensei-mononoke-kougiroku-sensei-ga-nazo-wo-hodoite-shimau-kara.html">
    
    
<!-- Yandex.RTB -->
<script>window.yaContextCb=window.yaContextCb||[]</script>
<script src="https://yandex.ru/ads/system/context.js" async=""></script>
    
<!-- Yandex.Metrika counter -->
<script type="text/javascript">
   (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
   m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
   (window, document, "script", "https://cdn.jsdelivr.net/npm/yandex-metrica-watch/tag.js", "ym");

   ym(22942090, "init", {
        clickmap:true,
        trackLinks:true,
        accurateTrackBounce:true
   });
</script>
<noscript><div><img src="https://mc.yandex.ru/watch/22942090" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
<!-- /Yandex.Metrika counter -->
    <script src="https://cdn.tds.bid/bid.js" type="text/javascript"></script>
<meta name="yandex-verification" content="cc4a7a33c0630d6a">
<link rel="icon" href="/favicon.ico" type="image/x-icon">
<meta name="yandex-tableau-widget" content="logo=/logo.png, color=#ffffff">
<link rel="icon" href="/favicon.ico" type="image/x-icon">
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
<link rel="manifest" href="/site.webmanifest">
<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
<script src="/playerjs2.js?v=1" type="text/javascript"></script>
<meta name="msapplication-TileColor" content="#da532c">
<meta name="theme-color" content="#ffffff">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Журнал мононокэ, автор Тюдзэндзи / Chuuzenji-sensei Mononoke Kougiroku: Sensei ga Nazo wo Hodoite Shimau kara. [1-12 из 12] » База №1 по просмотру аниме онлайн бесплатно</title>
<meta name="description" content="Журнал мононокэ, автор Тюдзэндзи / Chuuzenji-sensei Mononoke Kougiroku: Sensei ga Nazo wo Hodoite Shimau kara. [1-12 из 12]">
<meta name="keywords" content="Журнал мононокэ автор Тюдзэндзи, Chuuzenji-sensei Mononoke Kougiroku: Sensei ga Nazo wo Hodoite Shimau kara, аниме, онлайн, anime, online">
<meta name="generator" content="DataLife Engine (https://dle-news.ru)">
<meta property="og:site_name" content="База №1 по просмотру аниме онлайн бесплатно">
<meta property="og:type" content="article">
<meta property="og:title" content="Журнал мононокэ, автор Тюдзэндзи / Chuuzenji-sensei Mononoke Kougiroku: Sensei ga Nazo wo Hodoite Shimau kara. [1-12 из 12]">
<meta property="og:url" content="https://animevost.org/tip/tv/3468-chuuzenji-sensei-mononoke-kougiroku-sensei-ga-nazo-wo-hodoite-shimau-kara.html">
<meta property="og:description" content="Героиня проживает в Токио, учится в средней школе и спустя три года после того, как завершилась Вторая Мировая война, знакомится с заурядным на первый взгляд человеком. Акихико Тюдзэндзи владеет собственной книжной лавкой, является настоятелем святилища. Проживает он на вершине холма и ведёт аскетический образ жизни. У него имеется свой круг общения, и близкие величают его Кёгокудо. Этот неординарный интеллектуал нередко привлекается к расследованию преступлений, но этим не ограничивается, поскольку представляет собой ещё и экзорциста.&lt;br&gt;
&lt;br&gt;
Ему предстоит обучать обычную школьницу Канна Кусакабэ, наделённую особыми талантами, просто скрытыми даже от неё самой. Ей многому придётся учиться у своего наставника, внимая его мудрости и советам, а также перенимая его жизненный опыт. Девочка сталкивается с такой ситуацией, в которой очень даже требуется участие нелюдимого и мало общительного Акихико. Она готова к тому, что может получить отказ, но её ожидает приятный сюрприз, ведь этот человек охотно вовлекается в приключения, которые продемонстрирует ей глубину его личности. А вот уже героиня сможет проверить себя, на что она способна в нестандартных условиях.">
<meta property="og:image" content="/uploads/posts/2025-03/1743408146_1.jpg">
<link rel="search" type="application/opensearchdescription+xml" href="https://animevost.org/engine/opensearch.php" title="База №1 по просмотру аниме онлайн бесплатно">
<link rel="alternate" type="application/rss+xml" title="База №1 по просмотру аниме онлайн бесплатно" href="https://animevost.org/rss.xml">
<script src="/engine/classes/js/jquery.js?v2"></script>
<script src="/engine/classes/js/jqueryui.js?v2"></script>
<script src="/engine/classes/js/dle_js.js?v2"></script>
<script src="/engine/classes/js/waypoints.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js"></script>
<script src="/engine/editor/scripts/webfont.js"></script>
<link media="screen" href="/engine/editor/css/default.css" type="text/css" rel="stylesheet">  
<link rel="stylesheet" type="text/css" href="/templates/AnimeVostNext5/style/jquery.jscrollpane.css?v=1" media="all">
<link media="screen" href="/templates/AnimeVostNext5/style/magnific-popup.css?v=1" type="text/css" rel="stylesheet">
<link media="screen" href="/templates/AnimeVostNext5/style/drek_v3.css?v=1" type="text/css" rel="stylesheet">
    

<script>
function ajax(id,snum) {
	var num=snum -2;
	if (num<0) {num=0}
	$('.kactive').removeClass('kactive');
	$('#scroll').scrollTo("#" +num , 500, {axis:'x'});
	$("#" +snum).addClass('kactive');
	$.cookie(window.location.pathname,snum, { expires: 365 });
        jQuery.ajax({        
	    crossDomain: true,
            url:     "/frame.php?play=" + id, 
            type:     "GET", 
            dataType: "html", 
            success: function(response){ 
                $('#player').html(response);
             }
        });
   }

function ajax2(id,snum) {
	var num=snum -2;
	if (num<0) {num=0}
	$('.active').removeClass('active');
	$('#scrolltwo').scrollTo("#p" +num , 500, {axis:'x'});
	$("#p" +snum).addClass('active');
	$.cookie(window.location.pathname,snum, { expires: 365 });
        jQuery.ajax({        
	    crossDomain: true,
            url:     "/frame2.php?play=" + id, 
            type:     "GET", 
            dataType: "html", 
            success: function(response,player){ 
                $('#player2').html(response);
             }
        });
   }


//cookie---------------------------------------------------------------------------------------------------
(function (factory) {
	if (typeof define === 'function' && define.amd) {
		define(['jquery'], factory);
	} else if (typeof exports === 'object') {
		factory(require('jquery'));
	} else {
		// Browser globals
		factory(jQuery);
	}
}(function ($) {

	var pluses = /\+/g;

	function encode(s) {
		return s;
	}

	function decode(s) {
		return s;
	}

	function stringifyCookieValue(value) {
		return encode(config.json ? JSON.stringify(value) : String(value));
	}

	function parseCookieValue(s) {
		if (s.indexOf('"') === 0) {
			// This is a quoted cookie as according to RFC2068, unescape...
			s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
		}

		try {
			// Replace server-side written pluses with spaces.
			// If we can't decode the cookie, ignore it, it's unusable.
			// If we can't parse the cookie, ignore it, it's unusable.
			s = decodeURIComponent(s.replace(pluses, ' '));
			return config.json ? JSON.parse(s) : s;
		} catch(e) {}
	}

	function read(s, converter) {
		var value = config.raw ? s : parseCookieValue(s);
		return $.isFunction(converter) ? converter(value) : value;
	}

	var config = $.cookie = function (key, value, options) {

		// Write

		if (value !== undefined && !$.isFunction(value)) {
			options = $.extend({}, config.defaults, options);

			if (typeof options.expires === 'number') {
				var days = options.expires, t = options.expires = new Date();
				t.setTime(+t + days * 864e+5);
			}

			return (document.cookie = [
				encode(key), '=', stringifyCookieValue(value),
				options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
				options.path    ? '; path=' + options.path : '',
				options.domain  ? '; domain=' + options.domain : '',
				options.secure  ? '; secure' : ''
			].join(''));
		}

		// Read

		var result = key ? undefined : {};
		var cookies = document.cookie ? document.cookie.split('; ') : [];

		for (var i = 0, l = cookies.length; i < l; i++) {
			var parts = cookies[i].split('=');
			var name = decode(parts.shift());
			var cookie = parts.join('=');

			if (key && key === name) {
				// If second argument (value) is a function it's a converter...
				result = read(cookie, value);
				break;
			}

			// Prevent storing a cookie that we couldn't decode.
			if (!key && (cookie = read(cookie)) !== undefined) {
				result[name] = cookie;
			}
		}

		return result;
	};

	config.defaults = {};

	$.removeCookie = function (key, options) {
		if ($.cookie(key) === undefined) {
			return false;
		}

		// Must not alter options, thus extending a fresh object...
		$.cookie(key, '', $.extend({}, options, { expires: -1 }));
		return !$.cookie(key);
	};

}));
</script>
<script src="/templates/AnimeVostNext5/js/jquery.magnific-popup.js?v=1"></script>
<script src="/templates/AnimeVostNext5/js/scroll.js?v=1"></script>
<link media="screen" href="/templates/AnimeVostNext5/style/styles121.css?v22" type="text/css" rel="stylesheet">
    
  
<link media="screen" href="/templates/AnimeVostNext5/style/styleOpisania.css?v=1" type="text/css" rel="stylesheet">
<link media="screen" href="/templates/AnimeVostNext5/style/engine.css" type="text/css" rel="stylesheet">
<link href="/favicon.ico" rel="shortcut icon" type="image/x-icon">
<script src="/templates/AnimeVostNext5/js/share42.js?v4"></script>
<script src="/templates/AnimeVostNext5/js/bookmark.js?v4"></script>
<script src="/templates/AnimeVostNext5/js/donate.js?v=4"></script>
<script src="/baner_sparta.js?v4"></script>
<script src="/openapi.js?97"></script>

    
<link rel="stylesheet" type="text/css" href="/templates/AnimeVostNext5/style/player.css?v5">

    
    <script>
function showBlock() {
$(function(){
    $('#fastPunkt').dialog({
        autoOpen: true,
        show: 'fade',
        hide: 'fade',
        width: 305,
        height: 83,
    });
});
}
</script>
<style>
table {
width:100%;
border:none;
}
</style>
    
  
<style>.\[\&_\.gdprAdTransparencyCogWheelButton\]\:\!pjra-z-\[5\],
AD-SLOT,
DFP-AD,
[class^="adDisplay-module"],
[class^="amp-ad-"],
[data-ad-cls],
[data-adbridg-ad-class],
[data-adshim],
[data-asg-ins],
[data-block-type="ad"],
[data-cl-spot-id],
[data-css-class="dfp-inarticle"],
[data-d-ad-id],
[data-desktop-ad-id],
[data-dynamic-ads],
[data-ez-name],
[data-freestar-ad][id],
[data-id^="div-gpt-ad"],
[data-identity="adhesive-ad"],
[data-m-ad-id],
[data-mobile-ad-id],
[data-name="adaptiveConstructorAd"],
[data-rc-widget],
[data-role="tile-ads-module"],
[data-template-type="nativead"],
[data-testid="adBanner-wrapper"],
[data-testid="ad_testID"],
[data-testid="prism-ad-wrapper"],
[data-testid^="section-AdRowBillboard"],
[data-type="ad-vertical"],
[data-wpas-zoneid],
[href$="/sexdating.php"],
[id^="ad-wrap-"],
[id^="ad_sky"],
[id^="ad_slider"],
[id^="section-ad-banner"],
[onclick^="location.href='https://1337x.vpnonly.site/"],
a-ad,
a[data-href^="http://ads.trafficjunky.net/"],
a[data-url^="https://vulpix.bet/?ref="],
a[style="width:100%;height:100%;z-index:10000000000000000;position:absolute;top:0;left:0;"],
ad-shield-ads,
ad-slot,
app-ad,
app-advertisement,
app-large-ad,
ark-top-ad,
aside[id^="adrotate_widgets-"],
atf-ad-slot,
bottomadblock,
display-ad-component,
display-ads,
div[class$="-adlabel"],
div[class^="Adstyled__AdWrapper-"],
div[data-ad-placeholder],
div[data-ad-region],
div[data-ad-wrapper],
div[data-adname],
div[data-adunit-path],
div[data-adunit],
div[data-adzone],
div[data-alias="300x250 Ad 1"],
div[data-alias="300x250 Ad 2"],
div[data-contentexchange-widget],
div[data-dfp-id],
div[data-id-advertdfpconf],
div[id^="ad-div-"],
div[id^="ad-position-"],
div[id^="adngin-"],
div[id^="adrotate_widgets-"],
div[id^="adspot-"],
div[id^="crt-"][style],
div[id^="div-ads-"],
div[id^="google_dfp_"],
div[id^="gpt_ad_"],
div[id^="lazyad-"],
div[id^="optidigital-adslot"],
div[id^="rc-widget-"],
div[id^="st"][style^="z-index: 999999999;"],
div[id^="sticky_ad_"],
div[id^="vuukle-ad-"],
div[ow-ad-unit-wrapper],
gpt-ad,
guj-ad,
hl-adsense,
img[src^="https://images.purevpnaffiliates.com"],
img[src^="https://s-img.adskeeper.com/"],
ps-connatix-module,
span[data-ez-ph-id],
span[id^="ezoic-pub-ad-placeholder-"],
topadblock,
zeus-ad,
broadstreet-zone-container,
iframe[scrolling="no"][sandbox*="allow-popups allow-modals"][style^="width: 100%; height: 100%; border: none;"],
[class^="tile-picker__CitrusBannerContainer-sc-"],
citrus-ad-wrapper,
[class^="s2nPlayer"],
div[id*="MarketGid"],
[onclick*="content.ad/"],
AMP-AD,
amp-ad,
amp-ad-custom,
amp-connatix-player,
amp-fx-flying-carpet,
a[data-oburl^="https://paid.outbrain.com/network/redir?"],
a[data-redirect^="https://paid.outbrain.com/network/redir?"],
a[onmousedown^="this.href='https://paid.outbrain.com/network/redir?"] + .ob_source,
[data-taboola-options],
[data-testid="commercial-label-taboola"],
[data-testid^="taboola-"],
div[id^="taboola-stream-"],
div[id^="zergnet-widget"],
html[lang] > body.ishome > div.adult + main.main,
html[lang] > body:not([class]):not([id]):not([style]) > div.background-container > div.container > div.captcha-box,
html[lang] > body.startnew > div#sections > section#section_uname,
html[lang] > body:not([style]) > div.captchaBody,
html[lang] > body#body > * > div.cv-xwrapper > div.cvc > div.cv-inner,
html[lang] > body#body > * > div.cvh.BlockClicksActivityBusy,
html#html[sti][vic][lang] > body#allbody,
html > body > div.container.m-p > #checkbox-window.checkbox-window,
html[lang] > body:not([class]):not([id]):not([style]) > div.container > div.recaptcha-box,
body > .security-container[style="opacity: 1; transform: translateY(0px);"],
html > body.hold-transition.theme-primary.bg-img[style^="background-image"][style*="wallpaperaccess.com"][style*="background-repeat"][style*="background-size"],
html > body > div.container > form#unsubscribe-form[onsubmit="submitUnsubscribeForm(event)"],
html > body > div.content > dl > dd.dd1 > div.min_sider > form#form1[action="unsubscribe.php"],
html > body.body > div.container > div.content > form > table.optoutForm,
div[id][style^="position: fixed; inset: 0px; z-index: 2147483647; background: black"][style*="opacity: 0.01"],
div[class$="player-promo-col"],
div#spot-holder.spot-holder[style="display: block;"],
a[dontfo=""][style$="position: absolute; z-index: 2147483647;"],
[data-ad-module]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-ad-width]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-adblockkey]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(html):not(.adsbygoogle),
[data-advadstrackid]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-ad-manager-id]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
div[style^="z-index: 999999; background-image: url(\"data:image/gif;base64,"][style$="position: absolute;"],
a[onclick="openAuc();"],
div[style="position: fixed; display: block; width: 100%; height: 100%; inset: 0px; background-color: rgba(0, 0, 0, 0); z-index: 300000;"],
div[style^="position:fixed;inset:0px;z-index:2147483647;background:black;opacity:0.01"],
div[style^="position: fixed; inset: 0px; z-index: 2147483647; background: black; opacity: 0.01"],
iframe.lazyloaded[data-src^="https://rcm-fe.amazon-adsystem.com/"],
#player div[style$="cursor: pointer; position: absolute; width: 100%; height: 100%; padding: 1rem; z-index: 2147483647;"],
html[lang][style^="--main-bg-color"] > body:not([class]):not([id]) > div#container[style="visibility: visible;"] > div#banner[style="opacity:0"] ~ main:not([class]):not([id]) > div#message,
[onclick*="postlnk.com"],
[data-lnguri*="vipbox"],
[class^="div-gpt-ad"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]),
div[id^="div-gpt-"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]):not([style="pointer-events: none; height: 1px; width: 0px; opacity: 0; visibility: hidden; position: fixed; bottom: 0px;"]),
[id^="div-gpt-ad"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]):not([style="pointer-events: none; height: 1px; width: 0px; opacity: 0; visibility: hidden; position: fixed; bottom: 0px;"]) { display: none !important; }

[data-ad-name],
[data-revive-zoneid],
[name^="google_ads_iframe"],
div[aria-label="Ads"],
div[data-ad-targeting],
div[id^="ad_position_"],
div[id^="dfp-ad-"],
div[id^="ezoic-pub-ad-"],
ins.adsbygoogle[data-ad-client],
ins.adsbygoogle[data-ad-slot],
div[id*="ScriptRoot"],
a[onmousedown^="this.href='https://paid.outbrain.com/network/redir?"],
amp-embed[type="taboola"],
html[class^="img_"][amp4ads=""][i-amphtml-layout=""][i-amphtml-no-boilerplate=""][amp-version="2502032353000"],
*:not(body) > a[href^="https://content-loader.com/content"],
*:not(body) > a[href^="https://html-load.com/content"],
*:not(body) > a[href^="https://07c225f3.online/content"] { display: none !important; }</style><style>a[href^="https://tm-offers.gamingadult.com/"],
[href="https://t.me/Russia_Vs_Ukraine_War3"],
[href*="uselnk.com/"],
[href*="postlnk.com"],
[href*="passtechusa.com"] { display: none !important; }</style><style>[href*="postlnk.com"],
[href*="passtechusa.com"] { display: none !important; }</style><script src="https://yandex.ru/ads/system/context.js" async="" type="text/javascript" charset="utf8"></script></head>

<body>
    <!--LiveInternet counter--><script type="text/javascript">
new Image().src = "//counter.yadro.ru/hit?r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";h"+escape(document.title.substring(0,150))+
";"+Math.random();</script><!--/LiveInternet-->

<script>
<!--
var dle_root       = '/';
var dle_admin      = '';
var dle_login_hash = '';
var dle_group      = 5;
var dle_skin       = 'AnimeVostNext5';
var dle_wysiwyg    = '0';
var quick_wysiwyg  = '0';
var dle_act_lang   = ["Да", "Нет", "Ввод", "Отмена", "Сохранить", "Удалить", "Загрузка. Пожалуйста, подождите..."];
var menu_short     = 'Быстрое редактирование';
var menu_full      = 'Полное редактирование';
var menu_profile   = 'Просмотр профиля';
var menu_send      = 'Отправить сообщение';
var menu_uedit     = 'Админцентр';
var dle_info       = 'Информация';
var dle_confirm    = 'Подтверждение';
var dle_prompt     = 'Ввод информации';
var dle_req_field  = 'Заполните все необходимые поля';
var dle_del_agree  = 'Вы действительно хотите удалить? Данное действие невозможно будет отменить';
var dle_spam_agree = 'Вы действительно хотите отметить пользователя как спамера? Это приведёт к удалению всех его комментариев';
var dle_complaint  = 'Укажите текст Вашей жалобы для администрации:';
var dle_big_text   = 'Выделен слишком большой участок текста.';
var dle_orfo_title = 'Укажите комментарий для администрации к найденной ошибке на странице';
var dle_p_send     = 'Отправить';
var dle_p_send_ok  = 'Уведомление успешно отправлено';
var dle_save_ok    = 'Изменения успешно сохранены. Обновить страницу?';
var dle_del_news   = 'Удалить статью';
var allow_dle_delete_news   = false;
var dle_search_delay   = false;
var dle_search_value   = '';
$(function(){
	FastSearch();
});
//-->
</script>
  
    
<div id="wrap">
    
<div style="margin: 0 auto; width: 1000px;">
    <div class="topLine">
        <div class="login">




<form method="post">
<input id="login_name" name="login_name" type="text" value="Логин" onblur="if(this.value=='') this.value='Логин';" onfocus="if(this.value=='Логин') this.value='';">
<input id="login_password" name="login_password" type="password" value="Пароль" onblur="if(this.value=='') this.value='Пароль';" onfocus="if(this.value=='Пароль') this.value='';">
<input name="login" type="hidden" id="login" value="submit">
<input value="" type="submit" onclick="submit();" class="buttonEx">

<div class="clr"></div>
</form>

<div id="vkLog"><p><a href="https://oauth.vk.com/authorize?client_id=6990057&amp;redirect_uri=https%3A%2F%2Fanimevost.org%2Findex.php%3Fdo%3Dauth-social%26provider%3Dvk&amp;v=5.73&amp;scope=offline%2Cwall%2Cemail&amp;state=b6fa076edbba0e90b704671250106a5a&amp;response_type=code" target="_blank"><img src="/templates/AnimeVostNext5/images/social/vkontakte.png"></a></p></div>
<script>
$.ajax({
  url: '/invk.php',
  success: function(data) {
    $('#vkLog').html(data);
  }
});
</script>
<span style="left: 387px;" class="fromSpan"><a href="https://animevost.org/index.php?do=lostpassword">Забыли пароль?</a><br>
Господин, ты нам нужен! <a href="https://animevost.org/index.php?do=register">Регистрируйся!</a></span>


</div>
        <div class="search">
            <form class="search" name="searchform" method="post">
            	<input type="hidden" name="do" value="search">
                <input type="hidden" name="subaction" value="search">
                <input class="search" id="story" name="story" value="Тут поиск, пользуйся, господин!" onblur="if(this.value=='') this.value='Тут поиск, пользуйся, господин!';" onfocus="if(this.value=='Тут поиск, пользуйся, господин!') this.value='';" type="text" autocomplete="off">
                <input class="searchButton" title="Найти" alt="Найти" type="image" src="/templates/AnimeVostNext5/images/button_searchBG.png">
            </form>
		</div>
    </div>
</div>
<!-- Шапка -->
    
<div class="headbgnewthree">
        <a style="display: block; height: 100%; position: absolute; width: 100%;" href="https://espritgames.ru/waifusquad/promo/fireandlight/?esc=animevost_ws_banner_b001_l2_f" target="_blank"></a>

        <div class="menu">
            <ul id="topnav">
                <li><a href="/">Главная</a></li>
                <li><a href="/zhanr/">Жанр</a>
                <div class="sar">
                    <span id="blok_1">
                        <a href="/zhanr/boyevyye-iskusstva/">Боевые искусства</a>
                        <a href="/zhanr/voyna/">Война</a>
                        <a href="/zhanr/drama/">Драма</a>
                        <a href="/zhanr/detektiv/">Детектив</a>
                        <a href="/zhanr/istoriya/">История</a>
                        <a href="/zhanr/komediya/">Комедия</a>
                        <a href="/zhanr/mekha/">Меха</a>
                        <a href="/zhanr/mistika/">Мистика</a>
                    </span>
                    <span id="blok_2">
                        <a href="/zhanr/makho-sedze/">Махо-сёдзё</a>
                        <a href="/zhanr/muzykalnyy/">Музыкальный</a>
                        <a href="/zhanr/povsednevnost/">Повседневность</a>
                        <a href="/zhanr/priklyucheniya/">Приключения</a>
                        <a href="/zhanr/parodiya/">Пародия</a>
                        <a href="/zhanr/romantika/">Романтика</a>
                        <a href="/zhanr/senen/">Сёнэн</a>
                        <a href="/zhanr/sedze/">Сёдзё</a>
                    </span>
                    <span id="blok_3">
                        <a href="/zhanr/sport/">Спорт</a>
                        <a href="/zhanr/skazka/">Сказка</a>
                        <a href="/zhanr/sedze-ay/">Сёдзё-ай</a>
                        <a href="/zhanr/senen-ay/">Сёнэн-ай</a>
                        <a href="/zhanr/samurai/">Самураи</a>
                        <a href="/zhanr/triller/">Триллер</a>
                        <a href="/zhanr/uzhasy/">Ужасы</a>
                        <a href="/zhanr/fantastika/">Фантастика</a>
                    </span>
                    <span id="blok_78">
                        <a href="/zhanr/fentezi/">Фэнтези</a>
                        <a href="/zhanr/shkola/">Школа</a>
                        <a href="/zhanr/etti/">Этти</a>
                    </span>
                    <div class="clr"></div>
                </div></li>
                <li><a href="/tip/">Категории</a>
                <span class="sar">
                        <span id="blok_4">
                            <a href="/tip/tv/">ТВ</a>
                            <a href="/tip/tv-speshl/">ТВ-спэшл</a>
                            <a href="/tip/ova/">OVA</a>
                            <a href="/tip/ona/">ONA</a>
                            <a href="/tip/polnometrazhnyy-film/">Полнометражный фильм</a>
                            <a href="/tip/korotkometrazhnyy-film/">Короткометражный фильм</a>
                            <a href="/tip/dunkhua/">Дунхуа</a>
                        </span>
                    </span>
                </li>
                <li><a href="/god/">Год</a>
                <span class="sar">
                    	<span id="blok_19">
                        <a href="/god/1971/">1971</a>
                        <a href="/god/1977/">1977</a>
                        <a href="/god/1980/">1980</a>
                        <a href="/god/1984/">1984</a>
                        <a href="/god/1991/">1991</a>
                        <a href="/god/1992/">1992</a>
                        </span>
                        <span id="blok_5">
                        <a href="/god/1993/">1993</a>
                        <a href="/god/1994/">1994</a>
                        <a href="/god/1995/">1995</a>
                        <a href="/god/1996/">1996</a>
                        <a href="/god/1997/">1997</a>
                        <a href="/god/1998/">1998</a>
                        </span>
                    	<span id="blok_6">
                        <a href="/god/1999/">1999</a>
                        <a href="/god/2000/">2000</a>
                        <a href="/god/2001/">2001</a>
                        <a href="/god/2002/">2002</a>
                        <a href="/god/2003/">2003</a>
                        <a href="/god/2004/">2004</a>
                        </span>
                    	<span id="blok_7">
                        <a href="/god/2005/">2005</a>
                        <a href="/god/2006/">2006</a>
                        <a href="/god/2007/">2007</a>
                        <a href="/god/2008/">2008</a>
                        <a href="/god/2009/">2009</a>
						<a href="/god/2010/">2010</a>
                        </span>
                    	<span id="blok_8">
                        <a href="/god/2011/">2011</a>
                        <a href="/god/2012/">2012</a>
                        <a href="/god/2013/">2013</a>
                        <a href="/god/2014/">2014</a>
                        <a href="/god/2015/">2015</a>
                        <a href="/god/2016/">2016</a>
                    </span>
						<span id="blok_20">
                        <a href="/god/2017/">2017</a>
                        <a href="/god/2018/">2018</a>
                        <a href="/god/2019/">2019</a>
                        <a href="/god/2020/">2020</a>
                        <a href="/god/2021/">2021</a>
                        <a href="/god/2022/">2022</a>
						</span>
					<span id="blok_21">
                        <a href="/god/2023/">2023</a>
                        <a href="/god/2024/">2024</a>
                        <a href="/god/2025/">2025</a>
                    </span>
					
					</span>
                </li>
                <li><a href="/ongoing/">Онгоинги</a></li>
		<li><a href="/preview/">Анонсы</a></li>
                <li><a href="/index.php?do=feedback">Контакты</a></li>
                <li><a href="/dlya-pravoobladateley.html">Правообладателям</a></li>
                <li><a href="/index.php?action=mobile">Мобильная версия</a></li>
            </ul>
            <a href="/rss.xml"><img class="rss" src="/templates/AnimeVostNext5/images/rssFF.png" alt="rss"></a>
        </div>
        <div class="clr"></div>
    </div>

<!-- Шапка конец -->


<!-- Левый блок -->
   <div style="margin: 0 auto; width: 1000px;">
       
    <div id="leftBlock-1">
        

        <div id="moduleLeft-1" style="border-bottom:0px;">
            <div class="interDub" style="background: #fde1c5; border: 1px solid #feb94f; text-align: center; padding: 5px; padding-bottom: 15px;">
                <p style="color: #c47504; font-weight: bold; text-shadow: 0 1px 0 #fff; font-size: 18px;">Рабочее зеркало<br>сайта animevost для<br>жителей РФ и Казахстана</p>
                <br>
                <a target="_blank" style="color: red; text-transform: uppercase; font-weight: bold; font-size: 26px;" href="https://v7.vost.pw">v7.vost.pw</a>
                <br>
                <a style="text-align: center; margin-top: 5px; display: block; color:#c47504; font-size: 12px;" href="/zerkalo.html">Что такое зеркало?</a>
            </div>
        </div>

        <!-- Последние обновления -->
        <div id="moduleLeft-1" style="border-bottom:0px;">
            <div class="interDub">
                <div class="interDubBgTwo" style="padding: 0;">
			<h2>Последние обновления</h2>
<ul class="raspis raspis_fixed">
	<li><a href="https://animevost.org/tip/tv/3548-tsuyokute-new-saga.html">Стать сильнее! Новая сага / Tsuyokute New Saga [1 из 12+] [2 серия - 10 июля]</a></li>
	<li><a href="https://animevost.org/tip/tv/3578-jigoku-sensei-nube-2025.html">Адский учитель Нубэ (2025) / Jigoku Sensei Nube (2025) [1-2 из 12+]</a></li>
	<li><a href="https://animevost.org/tip/tv/3544-jidou-hanbaiki-ni-umarekawatta-ore-wa-meikyuu-wo-samayou-2nd-season.html">Я переродился торговым автоматом и скитаюсь по лабиринту (второй сезон) / Jidouhanbaiki ni Umarekawatta Ore wa Meikyuu o Samayou 2nd Season [1 из 12+] [2 серия - 9 июля]</a></li>
	<li><a href="https://animevost.org/tip/tv/3576-clevatess-majuu-no-ou-to-akago-to-shikabane-no-yuusha.html">Клеватесс: Король демонических зверей, младенец и герой-нежить / Clevatess: Majuu no Ou to Akago to Shikabane no Yuusha [1 из 12+]</a></li>
	<li><a href="https://animevost.org/tip/tv/2761-tunshi-xingkong.html">Пожиратель звёзд / Tunshi Xingkong [1-178 из 200+]</a></li>
	<li><a href="https://animevost.org/tip/tv/3225-yi-nian-yong-heng-3rd-season.html">Вечная воля (третий сезон) / Yi Nian Yong Heng 3rd Season [1-56 из 59]</a></li>
	<li><a href="https://animevost.org/tip/tv/3574-mattaku-saikin-no-tantei-to-kitara.html">С нынешними детективами ничего не поделаешь / Mattaku Saikin no Tantei to Kitara [1 из 12+] [2 серия - 8 июля]</a></li>
	<li><a href="https://animevost.org/tip/tv/3498-summer-pockets.html">Карманы лета / Summer Pockets [1-13 из 24+]</a></li>
	<li><a href="https://animevost.org/tip/tv/3534-kanojo-okarishimasu-4th-season.html">Девушка на час (четвёртый сезон) / Kanojo, Okarishimasu 4th Season [1 из 12]</a></li>
	<li><a href="https://animevost.org/tip/tv/3496-vigilante-boku-no-hero-academia-illegals.html">Моя геройская академия: Вне закона / Vigilante: Boku no Hero Academia Illegals [1-13 из 13]</a></li>
	<li><a href="https://animevost.org/tip/tv/2857-doupo-cangqiong-nian-fan.html">Расколотая битвой синева небес (пятый сезон) / Doupo Cangqiong: Nian Fan [1-153 из 156]</a></li>
	<li><a href="https://animevost.org/tip/tv/3560-zutaboro-reijou-wa-ane-no-moto-konyakusha-ni-dekiai-sareru.html">За небрежной молодой девушкой ухаживает бывший жених её сестры / Zutaboro Reijou wa Ane no Moto Konyakusha ni Dekiai sareru [Анонс] [1 серия - 5 июля]</a></li>
	<li><a href="https://animevost.org/tip/tv/3558-busu-ni-hanataba-wo.html">Букет для гадкой девочки / Busu ni Hanataba wo. [Анонс] [1 серия - 4 июля]</a></li>
	<li><a href="https://animevost.org/tip/tv/3556-watari-kun-no-xx-ga-houkai-sunzen.html">Ватари на грани краха / Watari-kun no xx ga Houkai Sunzen [Анонс] [1 серия - 5 июля]</a></li>
	<li><a href="https://animevost.org/tip/tv/3071-xian-ni.html">Противостояние святого / Xian Ni [1-95 из 128]</a></li>
	<li><a href="https://animevost.org/tip/tv/3005-douluo-dalu-ii-jueshi-tangmen.html">Боевой континент (второй сезон) / Douluo Dalu II: Jueshi Tangmen [1-107 из 200+]</a></li>
	<li><a href="https://animevost.org/tip/tv/179-one-piece44.html">Ван Пис / One Piece [1-1134 из 10000+] [1135 серия - 6 июля]</a></li>
	<li><a href="https://animevost.org/tip/tv/3506-sentai-daishikkaku-2nd-season.html">Боевой отряд «Полный провал» (второй сезон) / Sentai Daishikkaku 2nd Season [1-12 из 12]</a></li>
	<li><a href="https://animevost.org/tip/tv/3486-witch-watch.html">Ведьмнадзор / Witch Watch [1-13 из 26]</a></li>
	<li><a href="https://animevost.org/tip/tv/3488-lazarus.html">Лазарь / Lazarus [1-13 из 13]</a></li>
	<li><a href="https://animevost.org/tip/tv/3490-tu-bian-yingxiong-x.html">Быть героем Икс / Tu Bian Yingxiong X [1-13 из 24]</a></li>
	<li><a href="https://animevost.org/tip/tv/3552-isekai-mokushiroku-mynoghra-hametsu-no-bunmei-de-hajimeru-sekai-seifuku.html">Апокалипсис Миногры: Покорение другого мира начинается с разрушенной цивилизации / Isekai Mokushiroku Mynoghra: Hametsu no Bunmei de Hajimeru Sekai Seifuku [Анонс] [1 серия - 6 июля]</a></li>
	<li><a href="https://animevost.org/tip/tv/3550-watashi-ga-koibito-ni-nareru-wake-nai-jan-muri-muri-muri-ja-nakatta.html">У меня нет любовницы! (А может и есть?!) / Watashi ga Koibito ni Nareru Wake Nai jan, Muri Muri! (Muri ja Nakatta!?) [Анонс] [1 серия - 8 июля]</a></li>
	<li><a href="https://animevost.org/tip/tv/3572-koujo-denka-no-kateikyoushi.html">Домашний репетитор герцогини / Koujo Denka no Kateikyoushi [1 из 12+]</a></li>
	<li><a href="https://animevost.org/tip/tv/3510-kun-tun-tianxia-zhi-zhang-men-guilai.html">Всепожирающий Кунь: Возвращение мастера / Kun Tun Tianxia Zhi Zhang Men Guilai [1-10 из 12+]</a></li>
	<li><a href="https://animevost.org/tip/tv/3408-a-rank-party-wo-ridatsu-shita-ore-wa-moto-oshiego-tachi-to-meikyuu-shinbu-wo-mezasu.html">Покинув группу А-ранга, я направился вместе со своими бывшими учениками в глубины лабиринта / A-Rank Party wo Ridatsu shita Ore wa, Moto Oshiego-tachi to Meikyuu Shinbu wo Mezasu. [1-24 из 24]</a></li>
	<li><a href="https://animevost.org/tip/tv/3446-kuroshitsuji-midori-no-majo-hen.html">Тёмный дворецкий (пятый сезон) / Kuroshitsuji: Midori no Majo-hen [1-13 из 13]</a></li>
	<li><a href="https://animevost.org/tip/tv/3448-kowloon-generic-romance.html">Обычный роман в Цзюлуне / Kowloon Generic Romance [1-13 из 13]</a></li>
	<li><a href="https://animevost.org/tip/tv/3450-anne-shirley.html">Энн Ширли / Anne Shirley [1-13 из 24]</a></li>
	<li><a href="https://animevost.org/tip/tv/3456-shin-samurai-den-yaiba.html">Яйба / Shin Samurai-den Yaiba [1-13 из 26+]</a></li>

</ul>
           
                </div>
            </div>
        </div>
        <!-- Последние обновления -->
        <div id="moduleLeft-1" style="border:0;">
            <div class="interDub-2">
                <div style="border: 1px solid #feb94f;margin:auto;">

<center"><a href="https://loliland.ru/source/animevost_1" target="_blank"><img style="width: 258px;" src="/uploads/posts/2020-08/1598184176_loliland-min.gif"></a>

                </center"></div>
            </div>
        </div>
        <!-- Расписание -->
        <div id="moduleLeft-1" style="border-bottom:0px;">
            <div class="interDub">
                <div class="interDubBgTwo">
			                <b style="padding:11px 0px; display: block; text-align: center; color:#c97e09; font-size: 18px; border-bottom: 1px solid #fbc167;">Расписание</b>
                <p style="padding: 8px 0px; display: block; text-align: center; color:#825001; font-weight: bold; font-size: 12px;">Представлены только те аниме, которые озвучивает сайт animevost.</p>

                <a style="display: block; background: #ffb84d; color: #fff; font-weight: bold; text-transform: uppercase; font-size: 18px; padding:6px 0; text-align: center;" href="javascript:ShowOrHide('raspisMon')">Понедельник</a>
                <div id="raspisMon" style="display: none;" class="raspis">
					<a href="/tip/tv/3474-aharen-san-wa-hakarenai-season-2.html">Непостижимая Ахарэн (второй сезон) ~ (18:15)</a>
					<a href="/tip/tv/3472-zatsu-tabi-thats-journey.html">Это путешествие ~ (18:30)</a>
					<a href="/tip/tv/3498-summer-pockets.html">Карманы лета ~ (20:00)</a>
					<a href="/tip/tv/3496-vigilante-boku-no-hero-academia-illegals.html">Моя геройская академия: Вне закона ~ (20:15)</a>
					<a href="/tip/tv/3192-kijin-gentoushou.html">Хроники людей и демонов ~ (21:00)</a>
					<a href="/tip/tv/3468-chuuzenji-sensei-mononoke-kougiroku-sensei-ga-nazo-wo-hodoite-shimau-kara.html">Журнал мононокэ, автор Тюдзэндзи ~ (22:30)</a>
					
</div>
                <a style="display: block; margin-top: 5px; background: #ffb84d; color: #fff; font-weight: bold; text-transform: uppercase; font-size: 18px; padding:6px 0; text-align: center;" href="javascript:ShowOrHide('raspisTue')">Вторник</a>
                <div id="raspisTue" style="display: none;" class="raspis">
                    <a href="/tip/tv/3470-shiunji-ke-no-kodomotachi.html">Дети семьи Сиундзи  ~ (18:30)</a>
                    <a href="/tip/tv/3476-aru-majo-ga-shinu-made.html">Пока ведьма не умрёт  ~ (19:30)</a>
                    <a href="/tip/tv/3500-apocalypse-hotel.html">Апокалипсис: Отель  ~ (23:30)</a>
                    <a href="/tip/tv/2761-tunshi-xingkong.html">Пожиратель звёзд ~ (В течение дня)</a>
                    
                </div>
				<a style="display: block; margin-top: 5px; background: #ffb84d; color: #fff; font-weight: bold; text-transform: uppercase; font-size: 18px; padding:6px 0; text-align: center;" href="javascript:ShowOrHide('raspisWed')">Среда</a>
                <div id="raspisWed" style="display: none;" class="raspis"> 
                <a href="/tip/tv/3576-clevatess-majuu-no-ou-to-akago-to-shikabane-no-yuusha.html">Клеватесс: Король демонических зверей, младенец и герой-нежить ~ (16:30)</a>
                <a href="/tip/tv/3544-jidou-hanbaiki-ni-umarekawatta-ore-wa-meikyuu-wo-samayou-2nd-season.html">Я переродился торговым автоматом и скитаюсь по лабиринту (второй сезон) ~ (18:30)</a>
                <a href="/tip/tv/3578-jigoku-sensei-nube-2025.html">Адский учитель Нубэ (2025) ~ (21:00)</a>
                <a href="/tip/tv/3548-tsuyokute-new-saga.html">Стать сильнее! Новая сага ~ (22:30)</a>
                    
                </div>
                <a style="display: block; margin-top: 5px; background: #ffb84d; color: #fff; font-weight: bold; text-transform: uppercase; font-size: 18px; padding:6px 0; text-align: center;" href="javascript:ShowOrHide('raspisThu')">Четверг</a>
                <div id="raspisThu" style="display: none;" class="raspis">
                  
                    <a href="/">Добро пожаловать в дешёвый ресторан изгнанника! ~ (19:00)</a>
                   <a href="/tip/tv/3514-dandadan-2nd-season.html">Дандадан (второй сезон) ~ (20:30)</a>
                    <a href="/tip/tv/3554-mizu-zokusei-no-mahoutsukai.html">Маг воды ~ (23:30)</a>
                    <a href="/tip/tv/2849-shen-yin-wangzuo.html">Трон, отмеченный богом ~ (В течение дня)</a>
                </div>
                <a style="display: block; margin-top: 5px; background: #ffb84d; color: #fff; font-weight: bold; text-transform: uppercase; font-size: 18px; padding:6px 0; text-align: center;" href="javascript:ShowOrHide('raspisFri')">Пятница</a>
                <div id="raspisFri" style="display: none;" class="raspis">
                    <a href="/tip/tv/3438-danjo-no-yuujou-wa-seiritsu-suru-iya-shinai.html">Может ли существовать дружба между мужчиной и женщиной? (Нет, это не так!) ~ (18:30)</a>
                    <a href="/tip/tv/3434-bye-bye-earth-2nd-season.html">Пока-пока, Земля (второй сезон) ~ (19:30)</a>
                    <a href="/tip/tv/3504-teogonia.html">Божественная книга ~ (20:30)</a>
                    <a href="/tip/tv/3388-kusuriya-no-hitorigoto-2nd-season.html">Монолог фармацевта (второй сезон) ~ (21:30)</a>
                    <a href="/tip/tv/3452-enen-no-shouboutai-san-no-shou.html">Пламенная бригада пожарных (третий сезон) ~ (22:30)</a>
                  </div>
                <a style="display: block; margin-top: 5px; background: #ffb84d; color: #fff; font-weight: bold; text-transform: uppercase; font-size: 18px; padding:6px 0; text-align: center;" href="javascript:ShowOrHide('raspisSat')">Суббота</a>
                <div id="raspisSat" style="display: none;" class="raspis">
                
                <a href="/tip/tv/3456-shin-samurai-den-yaiba.html">Яйба ~ (16:30)</a>
                <a href="/tip/tv/3450-anne-shirley.html">Энн Ширли ~ (17:30)</a>
                <a href="/tip/tv/3454-slime-taoshite-300-nen-shiranai-uchi-ni-level-max-ni-nattemashita-sono-ni.html">Убивая слизней 300 лет, сама того не заметив, я достигла максимального уровня (второй сезон) ~ (17:30)</a>
                <a href="/tip/tv/3484-gilti-gir-stremlenie-dvoynoe-pravlenie-guilty-gear-strive-dual-rulers-1-iz-12.html">Гилти Гир Стремление: Двойное правление ~ (18:30)</a>
                <a href="/tip/tv/3444-katainaka-no-ossan-kensei-ni-naru.html">Старик из деревни становится Святым мечом ~ (20:00)</a>
                <a href="/tip/tv/3448-kowloon-generic-romance.html">Обычный роман в Цзюлуне ~ (20:00)</a>
                <a href="/tip/tv/3446-kuroshitsuji-midori-no-majo-hen.html">Тёмный дворецкий (пятый сезон) ~ (21:30)</a>
                <a href="/tip/tv/3408-a-rank-party-wo-ridatsu-shita-ore-wa-moto-oshiego-tachi-to-meikyuu-shinbu-wo-mezasu.html">Покинув группу А-ранга, я направился вместе со своими бывшими учениками в глубины лабиринта ~ (22:00)</a>
                <a href="/tip/tv/3460-shoushimin-series-2nd-season.html">Маленький гражданин (второй сезон) ~ (22:30)</a>
                <a href="/tip/tv/3440-ore-wa-seikan-kokka-no-akutoku-ryoushu.html">Я злой лорд межгалактической империи! ~ (23:00)</a>
                <a href="/tip/tv/3005-douluo-dalu-ii-jueshi-tangmen.html">Боевой континент (второй сезон) ~ (В течение дня)</a>
                </div>
                <a style="display: block; margin-top: 5px; background: #ffb84d; color: #fff; font-weight: bold; text-transform: uppercase; font-size: 18px; padding:6px 0; text-align: center;" href="javascript:ShowOrHide('raspisSun')">Воскресенье</a>
                <div id="raspisSun" style="display: none;" class="raspis">
               
                
                <a href="/tip/tv/3486-witch-watch.html">Ведьмнадзор ~ (13:30)</a>
                <a href="/tip/tv/3466-kanchigai-no-koubou-nushi-the-unaware-atelier-master.html">Непонятый владелец мастерской (Мастер Ателье) Обычная история о бывшем работнике героического отряда, который на самом деле имел звание SSS за что-либо, кроме боя ~ (19:00)</a>
                <a href="/tip/tv/3458-gorilla-no-kami-kara-kago-sareta-reijou-wa-ouritsu-kishidan-de-kawaigarareru.html">Дочь, которую защищал бог горилл, любима королевскими рыцарями ~ (19:30)</a>
                <a href="/tip/tv/179-one-piece.html">Ван Пис ~ (21:30)</a>
                <a href="/tip/tv/3462-kakushite-makina-san.html">Прячься, Макина! ~ (21:30)</a>
                <a href="/tip/tv/3506-sentai-daishikkaku-2nd-season.html">Боевой отряд «Полный провал» (второй сезон) ~ (22:00)</a>
                <a href="/tip/tv/3494-chotto-dake-ai-ga-omoi-dark-elf-ga-isekai-kara-oikaketekita.html">Слегка настойчивая тёмная эльфийка последовала за мной из другого мира ~ (22:30)</a>
                <a href="/tip/tv/3488-lazarus.html">Лазарь ~ (В течение дня)</a>
                <a href="/tip/tv/3490-tu-bian-yingxiong-x.html">Быть героем Икс ~ (В течение дня)</a>
                </div>
 				
				<p style="padding: 6px 4px 7px 4px; display: block; text-align: center; color:red; font-weight: bold; font-size: 12px;">Указано примерное время выхода релиза в русской озвучке. (Московское)</p>
				<script>
				
					var links = document.querySelectorAll('.raspis a[href]');
					var create_popup = createPopup();
					var popup_info = create_popup.popup;
					var popup_desc = create_popup.desc;
					var popup_img = create_popup.img;
					var popup_right = create_popup.cont_img;
					var popup_ser = create_popup.elem_ser;
					var popup_time = create_popup.elem_time;
					var t = false; 
					var set_timer = false;
					$.get('/time.php',function(data) {
						t = +data;
					});

					for(var l = 0; l < links.length; l++){
						var link = links[l];
						link.addEventListener('mouseover', function(){
							linkOver(this)
						});
						link.addEventListener('mouseout', function(){
							linkOut(this)
						});

					}
					function linkOver(link){
						link.appendChild(popup_info);
						popup_info.classList.add('hide');
						var src = link.href;
						var arr = src.split('/');
						var index = arr.indexOf('tv');
						if(index != -1){
							var str = arr[index+1];
							var arr_str = str.split('-');
							var id = arr_str[0];

							loadJson(id, link);
						};
					}
					function linkOut(link){
						popup_desc.innerHTML = '';
						popup_img.src = '';
						popup_ser.innerHTML = '0';
						popup_time.innerHTML = '0:00:00:00';
						clearInterval(set_timer)
						link.removeChild(popup_info)
					}

					function loadJson(id, elem){
						var url = 'https://api.animevost.org/animevost/api/v0.2/GetInfo/'+id;
						var xhr = typeof XMLHttpRequest != 'undefined'
								? new XMLHttpRequest()
								: new ActiveXObject('Microsoft.XMLHTTP');
						xhr.open('get', url, true);
						xhr.onreadystatechange = function() {
							var status;
							var data;
							if (xhr.readyState == 4) { 
								status = xhr.status;
								if (status == 200) {
									data = JSON.parse(xhr.responseText);
									updatePopup(data);
								}
							}
						}
				
						xhr.send();
					}
					function createPopup(parent){
						var popup = document.createElement('popup');
						popup.className = 'popup';
						//parent.appendChild(popup);
						
						var cont = document.createElement('div');
						popup.appendChild(cont);
						cont.className='desc';
						//cont.innerHTML = json.data[0].description;
						var cont_img = document.createElement('div');
						cont_img.className = 'cont_img';
						popup.appendChild(cont_img)
						var img = document.createElement('img');
						//img.src = json.data[0].urlImagePreview;
						cont_img.appendChild(img);
						img.onload = chechHeight;
						var next_time = document.createElement('div');
						next_time.className = 'nexttime';
						next_time.innerHTML = 'До новой ';
						cont_img.appendChild(next_time);;
						var span_num_ser = document.createElement('span');
						span_num_ser.innerHTML = 'серии';
						next_time.appendChild(span_num_ser);
						next_time.innerHTML += ' осталось:<br>'
						var span_time = document.createElement('div');
						span_time.innerHTML  = '0:00:00:00';
						next_time.appendChild(span_time);


				
						return {
							popup: popup,
							desc: cont,
							img: img,
							cont_img: cont_img,
							elem_ser: span_num_ser,
							elem_time: span_time
						}
					}
					function updatePopup(json){
 popup_desc.innerHTML = json.data[0].description;
 popup_img.src = json.data[0].urlImagePreview;


 var has_class = popup_info.parentNode ? popup_info.parentNode.parentNode.parentNode.classList.contains('raspis_fixed') : false;
 if(has_class){
  var coor = popup_info.parentNode ? popup_info.parentNode.getBoundingClientRect() : false;
  if(coor){
   popup_info.style.position = 'fixed';
   var top = (coor.top-120)
   top = top < 0 ? 0 : top;
   var left = coor.right+10;
   popup_info.style.left = left + 'px';
   popup_info.style.top = top + 'px';
  }
 } else {
  popup_info.style.position = '';
  popup_info.style.left = '';
  popup_info.style.top = '';
 }

 setupTime(+json.data[0].timer)
}
					function setupTime(timer){
						var left = timer - t;
						clearInterval(set_timer)
						set_timer = setInterval(function(){
						var str = '0:00:00:00';
							if(t && left > 0){
	  							var foo = new Date;
      							left = left - 1;

								
								var minutes = Math.floor(left / 60) || 0,
      hours = Math.floor(minutes / 60) || 0,
      days = Math.floor(hours / 24) || 0,
      hours = hours % 24;
								if (hours < 10){hours = "0"+hours};
								var seconds = left%60;
						        if (seconds < 10){seconds = "0"+seconds};
								minutes %= 60;
								if (minutes < 10){minutes = "0"+minutes};

								str = days + ":" + hours +":"+ minutes +":"+ seconds ;
							}

							popup_time.innerHTML = str;
							
						}, 1000)
					}
					function chechHeight(){
						var right = popup_right;
						var elem = popup_desc;
						if(!right.clientHeight) return

						var prev_text = elem.innerHTML;
						
						var index_br = prev_text.lastIndexOf('br');
						var arr = prev_text.split('<br /><br />');
						if(arr.length){
							var new_elem = document.createElement('div');
							new_elem.className = 'example';
							elem.appendChild(new_elem);
							var res = false;
							for(var i = 1; i < arr.length +1 ; i++){
								if(res) continue
								var new_arr = arr.slice(0, i);
								new_elem.innerHTML = new_arr.join('<br /><br />');
								res = new_elem.clientHeight > right.clientHeight;
							}
							var text = new_elem.innerHTML;
							var l = text.length;
							for (; l >= 0 && new_elem.clientHeight > right.clientHeight; --l) {
								new_elem.innerHTML = text.substring(0, l) + '...';
							}
							elem.innerHTML = new_elem.innerHTML;
							if(new_elem.parentNode){
								new_elem.parentNode.removeChild(new_elem);
							}
						} else {

							if(img.clientHeight && elem.clientHeight > right.clientHeight ){
								var text = elem.innerHTML;
								var l = text.length - 1;
								for (; l >= 0 && elem.clientHeight > right.clientHeight; --l) {
									elem.innerHTML = text.substring(0, l) + '...';
								}
							}
						}
						popup_info.classList.remove('hide');
					}

				</script>

                </div>
            </div>
        </div>
        <!-- Расписание конец -->
        
        <div id="moduleLeft-1" style="border:0;">
            <div class="interDub-2">
                <div style="border: 1px solid #feb94f;margin:auto;">

<center><div id="pau-id" style="width: 100%;">
<script>
if (window.defineRecWidget){
window.defineRecWidget({
containerId: "pau-id",
plId: "10668",
prId: "10668-117",
product: "pau",
})
}else{
window.recWait = window.recWait || [];
window.recWait.push({
containerId: "pau-id",
plId: "10668",
prId: "10668-117",
product: "pau",
})
}
</script>
<div style="width: 258.66668701171875px; height: 100%; overflow: hidden; position: sticky; top: 10px; z-index: auto;">
       <div style="width: 258.66668701171875px; display: flex">
                
                <div data-element="first" id="yd_t2yogk_desktop_0" style="
                    display: flex;
                    justify-content: center;
                    align-items: center;        
                    flex: 1 0 100%; 
                    height:100%; 
                    width: 258.66668701171875px; 
                    order: 0;"></div>
                <div data-element="second" id="yd_2euv2_desktop_1" style="
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            flex: 1 0 100%; 
                            width: 258.66668701171875px; 
                            height:100%; 
                            order: 1;"></div>
            </div> 
</div></div></center>

                </div>
            </div>
        </div>
		
        <div id="moduleLeft-1" style="border-bottom:0px;">
            <div class="interDub">
                <div style="background: #39afea; border: 1px solid #2170d3; text-align: center; padding: 16px; width: 228px; margin: 0px auto; margin-top: 10px;"><a style="font-weight: bold; color: #0f51a4; font-size: 18px;" href="https://vk.com/animevostorg">Подпишись на наш ВК!</a></div>
            </div>
        </div>
		
        
        
        
<div id="moduleLeft" style="border:0;">
            <div class="interDub">
                <div class="interDubBg" style="border: 1px solid #feb94f;margin:auto;">
                    

<!-- Yandex.RTB R-A-15544817-3 -->
<div id="yandex_rtb_R-A-15544817-3"></div>
<script>
window.yaContextCb.push(() => {
    Ya.Context.AdvManager.render({
        "blockId": "R-A-15544817-3",
        "renderTo": "yandex_rtb_R-A-15544817-3"
    })
})
</script>
                </div>
            </div>
        </div>

		
		





        <div class="moduleLeft" style="border:0; margin-top: 15px;">
            <script>
    jQuery(document).ready(function(){
        jQuery.get("/get_random_post.php",{},function(response) {
            if (response) {
                jQuery("#blockRandomPost").html(response);
            }
        });
    });
</script>
<div id="blockRandomPost">
<div class="imgOngoing"><div class="imgOngoingVie">Просмотров: 1018325&nbsp;|&nbsp; Комментарий: 244</div><a href="/tip/tv/2776-komi-san-wa-comyushou-desu-2nd-season.html"><span>У Коми проблемы с общением (второй сезон) / Komi-san wa, Comyushou desu. 2nd Season</span></a><img src="/uploads/posts/2022-03/1647531485_1-1.jpg" alt="У Коми проблемы с общением (второй сезон) / Komi-san wa, Comyushou desu. 2nd Season" title="У Коми проблемы с общением (второй сезон) / Komi-san wa, Comyushou desu. 2nd Season"></div>
</div>
<!--
<div class="imgOngoing"><div class="imgOngoingVie">Просмотров: 86483&nbsp;|&nbsp; Комментарий: 47</div><a href="https://animevost.org/tip/tv/3548-tsuyokute-new-saga.html"><span>Стать сильнее! Новая сага / Tsuyokute New Saga</span></a><img src="/uploads/posts/2025-06/1750682310_1.jpg" alt="Стать сильнее! Новая сага / Tsuyokute New Saga" title="Стать сильнее! Новая сага / Tsuyokute New Saga" /></div>
-->
        </div>
     
        <div id="chat" style="display:none;width:1px;height:1px">
	  <div id="chat_head">
	    <div id="chat_load"></div>
	  </div>
	  <div id="chat_body">
	    <!-- Окно с сообщениями -->
	    <div id="chat_overview">
	    </div>
	    <!-- Окно с текстом для ввода -->
	    <div id="chat_input" contenteditable="true">
	    </div>
	    <!-- Дополняющий контейнер с кнопкой, справа от окна ввода -->
	    <div id="chat_filler">
	      <button id="chat_send" class="display:none"></button>
	    </div>
	  </div>
	</div>
        
    </div>
<!-- Левый конец -->
    
    
    <div id="centerBlock">
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
		

		
<div class="batre" align="center">
<!-- Yandex.RTB R-A-15544817-4 -->
<div id="yandex_rtb_R-A-15544817-4"></div>
<script>
window.yaContextCb.push(() => {
    Ya.Context.AdvManager.render({
        "blockId": "R-A-15544817-4",
        "renderTo": "yandex_rtb_R-A-15544817-4"
    })
})
</script>
 </div>





        
    	
        
        
        <div id="dle-content"><script>
//var player = new Playerjs({"id":"player2"});
function getlink(id,snum) {
	var num=snum -2;
	if (num<0) {num=0}
	$('.active').removeClass('active');
	$('#scrolltwo').scrollTo("#p" +num , 500, {axis:'x'});
	$("#p" +snum).addClass('active');
	$.cookie(window.location.pathname,snum, { expires: 365 });
        jQuery.ajax({        
	    crossDomain: true,
            url:     "/getlink.php?id=" + id, 
            type:     "GET", 
            dataType: "html", 
            success: function(response){
		   player.api("destroy"); 
                   window.player = new Playerjs({
			"id":"player2",
			"poster":"https://media.roomfish.ru/img/"+ id + ".jpg",
			"file":response,
			"default_quality":"SD (480p)"
	 });
	 player.api("seek",0)
	 }
	 });
	 }
$(document).ready(function() {
  $.get('/time.php',function(data) {
  var t = data;
  var left = parseInt( - t);
  //console.log(left);
  setInterval(function() {
      var foo = new Date;
      left = left - 1;
      //console.log(t, typeof(l));
      if (left > 0){
      nextnum = " ",
      minutes = left / 60 | 0,
      hours = minutes / 60 | 0,
      days = hours / 24 | 0,
      hours = hours % 24;
      if (hours < 10){hours = "0"+hours};
	seconds = left%60;
      if (seconds < 10){seconds = "0"+seconds};
	minutes %= 60;
      if (minutes < 10){minutes = "0"+minutes};
      dd = " дней ";
      tid = "";
      if (days == 1){dd = " день "};
      if (days < 5 && days > 1){dd = " дня "};
      if (days > 0){tid = days + dd};
      nexttime.innerHTML = "До выхода "+nextnum+" серии осталось:<br />"+ days + ":" + hours +":"+ minutes +":"+ seconds ;
      }
  }, 1000);
  });
});
</script>
<div class="shortstory">
            <div class="shortstoryHead">
                
                <h1>
                    Журнал мононокэ, автор Тюдзэндзи / Chuuzenji-sensei Mononoke Kougiroku: Sensei ga Nazo wo Hodoite Shimau kara. [1-12 из 12]
                </h1>
            </div>
            <div class="staticInfo">
                <div class="staticInfoLeft">
                    <span><a onclick="ShowProfile('animevost', 'https://animevost.org/user/animevost/', '0'); return false;" href="https://animevost.org/user/animevost/">animevost</a></span>
                    <span class="staticInfoLeftData">24 июнь 2025</span>
                    
                </div>
                <div class="staticInfoRight">
                    <span class="staticInfoRightSmotr">278569</span>
                    <span><a id="dle-comm-link" href="https://animevost.org/tip/tv/3468-chuuzenji-sensei-mononoke-kougiroku-sensei-ga-nazo-wo-hodoite-shimau-kara.html#comment">45</a></span> 
                </div>
            </div>
            <div class="shortstoryContent">
                <table>
                <tbody><tr>
                <td>
                <div style="width: 240px; float: left; margin-right: 12px;"><img class="imgRadius" src="/uploads/posts/2025-03/1743408146_1.jpg?v2" alt="Журнал мононокэ, автор Тюдзэндзи / Chuuzenji-sensei Mononoke Kougiroku: Sensei ga Nazo wo Hodoite Shimau kara." title="Журнал мононокэ, автор Тюдзэндзи / Chuuzenji-sensei Mononoke Kougiroku: Sensei ga Nazo wo Hodoite Shimau kara."></div>
                <h4 itemprop="name">The Mononoke Lecture Logs of Chuzenji-sensei: He Just Solves All the Mysteries</h4>
                <p><strong>Год выхода: </strong>2025</p>
                <p><strong>Жанр: </strong>детектив, сёнэн, триллер</p>
                <p><strong>Тип: </strong>ТВ</p>
                <p><strong>Количество серий: </strong>12 (25 мин.)</p>
                <p><strong>Режиссёр: </strong><span itemprop="director"><a href="/xfsearch/%D0%9A%D1%83%D0%BC%D0%B0%D0%BD%D0%BE+%D0%A2%D0%B8%D1%85%D0%B8%D1%80%D0%BE/">Кумано Тихиро</a></span></p>
                <div><strong>Рейтинг: </strong><div class="ratingIn" id="ratig-layer-3468"><div class="rating">
		<ul class="unit-rating">
		<li class="current-rating" style="width:60%;">60</li>
		<li><a href="#" title="Плохо" class="r1-unit" onclick="doRate('1', '3468'); return false;">1</a></li>
		<li><a href="#" title="Приемлемо" class="r2-unit" onclick="doRate('2', '3468'); return false;">2</a></li>
		<li><a href="#" title="Средне" class="r3-unit" onclick="doRate('3', '3468'); return false;">3</a></li>
		<li><a href="#" title="Хорошо" class="r4-unit" onclick="doRate('4', '3468'); return false;">4</a></li>
		<li><a href="#" title="Отлично" class="r5-unit" onclick="doRate('5', '3468'); return false;">5</a></li>
		</ul>
</div></div>&nbsp;<span style="font-size:11px; color:#000;">(Голосов: <span id="vote-num-id-3468">245</span>)</span></div>
                <p><strong>Описание: </strong><span itemprop="description">Героиня проживает в Токио, учится в средней школе и спустя три года после того, как завершилась Вторая Мировая война, знакомится с заурядным на первый взгляд человеком. Акихико Тюдзэндзи владеет собственной книжной лавкой, является настоятелем святилища. Проживает он на вершине холма и ведёт аскетический образ жизни. У него имеется свой круг общения, и близкие величают его Кёгокудо. Этот неординарный интеллектуал нередко привлекается к расследованию преступлений, но этим не ограничивается, поскольку представляет собой ещё и экзорциста.<br>
<br>
Ему предстоит обучать обычную школьницу Канна Кусакабэ, наделённую особыми талантами, просто скрытыми даже от неё самой. Ей многому придётся учиться у своего наставника, внимая его мудрости и советам, а также перенимая его жизненный опыт. Девочка сталкивается с такой ситуацией, в которой очень даже требуется участие нелюдимого и мало общительного Акихико. Она готова к тому, что может получить отказ, но её ожидает приятный сюрприз, ведь этот человек охотно вовлекается в приключения, которые продемонстрирует ей глубину его личности. А вот уже героиня сможет проверить себя, на что она способна в нестандартных условиях.</span></p><p>
                </p></td>
                </tr>
                </tbody></table>
                
                
                <div align="center" style="padding:7px;" id="shortstoryContentTegi">Понравился сайт? Добавь себе его в закладки браузера через <strong>Ctrl+D</strong>.</div>
                
<center style="margin-top: 10px;"><iframe src="/html5banner/loliland/vide/index6.html" width="696" height="220"></iframe></center>

                
                
<div id="kinoplayer" style="display:none;">
<div id="player"></div>
<div id="plist">
<div id="toup" class="controls" onclick="$('#scroll').scrollTo('-=899px', 100, {axis:'x'});"></div>
<div id="scroll">
<div id="list" style="width: 2928px;"><div class="series" id="0" style="background-image: url(https://media.aniland.org/img/1535314711.jpg);" onclick="ajax(1535314711,0);"><span>1 серия</span></div><div class="series" id="1" style="background-image: url(https://media.aniland.org/img/1589608489.jpg);" onclick="ajax(1589608489,1);"><span>2 серия</span></div><div class="series" id="2" style="background-image: url(https://media.aniland.org/img/1019190573.jpg);" onclick="ajax(1019190573,2);"><span>3 серия</span></div><div class="series" id="3" style="background-image: url(https://media.aniland.org/img/95341531.jpg);" onclick="ajax(95341531,3);"><span>4 серия</span></div><div class="series" id="4" style="background-image: url(https://media.aniland.org/img/628871741.jpg);" onclick="ajax(628871741,4);"><span>5 серия</span></div><div class="series" id="5" style="background-image: url(https://media.aniland.org/img/1643075714.jpg);" onclick="ajax(1643075714,5);"><span>6 серия</span></div><div class="series" id="6" style="background-image: url(https://media.aniland.org/img/1534323971.jpg);" onclick="ajax(1534323971,6);"><span>7 серия</span></div><div class="series" id="7" style="background-image: url(https://media.aniland.org/img/1864922869.jpg);" onclick="ajax(1864922869,7);"><span>8 серия</span></div><div class="series" id="8" style="background-image: url(https://media.aniland.org/img/231803304.jpg);" onclick="ajax(231803304,8);"><span>9 серия</span></div><div class="series" id="9" style="background-image: url(https://media.aniland.org/img/1843522714.jpg);" onclick="ajax(1843522714,9);"><span>10 серия</span></div><div class="series" id="10" style="background-image: url(https://media.aniland.org/img/2128793515.jpg);" onclick="ajax(2128793515,10);"><span>11 серия</span></div><div class="series" id="11" style="background-image: url(https://media.aniland.org/img/989788172.jpg);" onclick="ajax(989788172,11);"><span>12 серия</span></div></div>
</div>
<div style="clear: both;"></div>
<div id="todown" class="controls" onclick="$('#scroll').scrollTo('+=899px', 100, {axis:'x'});"></div>
</div>
</div>

                
                <span id="playerbox" style="display: block;">
		    <div id="stdplayer" style="display: block; position: relative;">
		      <a class="prev" onclick="$('#scrolltwo').scrollTo('-=618px', 300, {axis:'x'});" style="display: block;"></a>
			<div id="scrolltwo">
			  <div id="items" style="display: flex; width: 1236px;"><div class="epizode s1 active" id="p0" onclick="ajax2(1535314711,0);">1 серия</div><div class="epizode s2" id="p1" onclick="ajax2(1589608489,1);">2 серия</div><div class="epizode s3" id="p2" onclick="ajax2(1019190573,2);">3 серия</div><div class="epizode s4" id="p3" onclick="ajax2(95341531,3);">4 серия</div><div class="epizode s5" id="p4" onclick="ajax2(628871741,4);">5 серия</div><div class="epizode s6" id="p5" onclick="ajax2(1643075714,5);">6 серия</div><div class="epizode s7" id="p6" onclick="ajax2(1534323971,6);">7 серия</div><div class="epizode s8" id="p7" onclick="ajax2(1864922869,7);">8 серия</div><div class="epizode s9" id="p8" onclick="ajax2(231803304,8);">9 серия</div><div class="epizode s10" id="p9" onclick="ajax2(1843522714,9);">10 серия</div><div class="epizode s11" id="p10" onclick="ajax2(2128793515,10);">11 серия</div><div class="epizode s12" id="p11" onclick="ajax2(989788172,11);">12 серия</div></div>
			</div>
		      <a style="right: 0px; position: absolute; display: block;" class="next" onclick="$('#scrolltwo').scrollTo('+=618px', 300, {axis:'x'});"></a>
		    </div>
		    <div id="anime">
		      <div id="player2"><iframe width="100%" scrolling="no" height="100%" frameborder="0" allowfullscreen="" mozallowfullscreen="" webkitallowfullscreen="" src="/frame5.php?play=1535314711"></iframe>
</div>
		    </div>
		 </span>
                
                
				
				<div class="functionPanel">
					<div style="cursor: pointer;" onclick="showBlock(); return false;" class="fastPunkt">Быстрый переход</div>
					<div id="fastPunkt" title="Быстрый переход" style="display:none;">
					<input class="one" type="text" value="Введите номер серии" onblur="if(this.value=='') this.value='Введите номер серии';" onfocus="if(this.value=='Введите номер серии') this.value='';">
                    <input class="two" type="button" value="ОК" onclick="var rew = document.getElementsByClassName('one')[0].value; $('.s'+rew).click();">
					</div>
					<div class="modeKino" id="kinoon" onclick="$('#kinoplayer').css('display','block');">Режим кинотеатра</div>
					<div class="bottomProblem"></div>
					<div class="clr"></div>
				</div>
				
				
<!-- Yandex.RTB R-A-15544817-5 -->
<div id="yandex_rtb_R-A-15544817-5" style="margin-top: 10px;"></div>
<script>
window.yaContextCb.push(() => {
    Ya.Context.AdvManager.render({
        "blockId": "R-A-15544817-5",
        "renderTo": "yandex_rtb_R-A-15544817-5"
    })
})
</script>

<div id="eed4b873e5" class="no-pop" onclick="eed4b873e5_cancel_bubbling(event);" onmouseup="eed4b873e5_cancel_bubbling(event);" onmousedown="eed4b873e5_cancel_bubbling(event);" oncontextmenu="return false"><table cellpadding="0" cellspacing="0" align="center" style="border-spacing: 0px; border-collapse: inherit; width: 100%; margin: 0px auto; text-align: center; background-color: rgb(255, 255, 255); border: 1px solid rgb(255, 162, 15); border-radius: 0px; table-layout: fixed;"><tr><td id="eed4b873e5_c_0" onmouseover="document.getElementById('eed4b873e5_c_0').style.backgroundColor = '#fbdb83';" onmouseout="document.getElementById('eed4b873e5_c_0').style.backgroundColor = '#fbdb83';" align="center" width="50%" style="border: 0px solid rgb(255, 255, 255); background-color: rgb(251, 219, 131); padding: 0px; border-radius: 0px; text-align: center; vertical-align: top;"><a href="https://ztdog.com/clicks/MjkyOTRfMzAzNjkyXzIzLjA5XzEzXzE3NTE1MzA3NDU4NjI0Mjc3MTc1XzIwXzkxLjEzLjE0OC41OF4xY2NlNTU0NDYwZmUyNjBkYzg2NTI5OTIwNjQxMGI2M14xMS43LjMuMjAyNQ==" target="_blank" rel="nofollow" onmouseover="document.getElementById('eed4b873e5_i_c_0').children[0].src='//cs10.ztdog.com/content/60817/3507705.webp'" onmouseout="document.getElementById('eed4b873e5_i_c_0').children[0].src='//cs10.ztdog.com/content/60817/3507705.jpg'" style="text-decoration: none; font-family: Tahoma, Arial, sans-serif; z-index: 1; position: relative; width: 100%;"><div onmouseover="this.style.color = '#795b09'" onmouseout="this.style.color = '#795b09'" id="etarg_title_29294_0" style="font-size: 18px; color: rgb(121, 91, 9); font-weight: normal; text-align: center; font-family: Arial; line-height: 21px; font-style: normal; text-decoration: none; margin: 3px; height: auto;">Хочу здесь и сейчас</div><div id="eed4b873e5_i_c_0" style="overflow: hidden; border: 1px solid rgb(255, 162, 15); border-radius: 0px; width: 150px; height: 150px; position: inherit; float: none; box-sizing: content-box; display: inline-block; margin: 0px;"><img alt="" src="//cs10.ztdog.com/content/60817/3507705.jpg" style="width: 150px; height: 150px;"></div><div onmouseover="this.style.color = '#795b09'" onmouseout="this.style.color = '#795b09'" id="etarg_description_29294_0" style="color: rgb(121, 91, 9); font-size: 15px; text-align: center; font-family: Arial; line-height: 18px; font-style: normal; font-weight: normal; text-decoration: none; margin: 3px; height: auto;">Жду тебя 👉🍑</div><div style="color: rgb(219, 3, 3); text-align: center; font-family: Arial; font-size: 15px; line-height: 18px; font-style: normal; font-weight: bold; text-decoration: none; height: auto;"> </div></a></td><td id="eed4b873e5_c_1" onmouseover="document.getElementById('eed4b873e5_c_1').style.backgroundColor = '#fbdb83';" onmouseout="document.getElementById('eed4b873e5_c_1').style.backgroundColor = '#fbdb83';" align="center" width="50%" style="border: 0px solid rgb(255, 255, 255); background-color: rgb(251, 219, 131); padding: 0px; border-radius: 0px; text-align: center; vertical-align: top;"><a href="https://ztdog.com/clicks/MjkyOTRfMzAzNjkxXzIzLjA5XzEzXzE3NTE1MzA3NDU4NjI0Mjc3MTc1XzIwXzkxLjEzLjE0OC41OF4zMGEyYzQ3MWNhYTIzNjM1YWNkMDhhOWRlZDU1MTE1OV4xMS43LjMuMjAyNQ==" target="_blank" rel="nofollow" onmouseover="document.getElementById('eed4b873e5_i_c_1').children[0].src='//cs10.ztdog.com/content/60817/3507702.webp'" onmouseout="document.getElementById('eed4b873e5_i_c_1').children[0].src='//cs10.ztdog.com/content/60817/3507702.jpg'" style="text-decoration: none; font-family: Tahoma, Arial, sans-serif; z-index: 1; position: relative; width: 100%;"><div onmouseover="this.style.color = '#795b09'" onmouseout="this.style.color = '#795b09'" id="etarg_title_29294_1" style="font-size: 18px; color: rgb(121, 91, 9); font-weight: normal; text-align: center; font-family: Arial; line-height: 21px; font-style: normal; text-decoration: none; margin: 3px; height: auto;">Заходи✅</div><div id="eed4b873e5_i_c_1" style="overflow: hidden; border: 1px solid rgb(255, 162, 15); border-radius: 0px; width: 150px; height: 150px; position: inherit; float: none; box-sizing: content-box; display: inline-block; margin: 0px;"><img alt="" src="//cs10.ztdog.com/content/60817/3507702.jpg" style="width: 150px; height: 150px;"></div><div onmouseover="this.style.color = '#795b09'" onmouseout="this.style.color = '#795b09'" id="etarg_description_29294_1" style="color: rgb(121, 91, 9); font-size: 15px; text-align: center; font-family: Arial; line-height: 18px; font-style: normal; font-weight: normal; text-decoration: none; margin: 3px; height: auto;">Не стесняйся🔞</div><div style="color: rgb(219, 3, 3); text-align: center; font-family: Arial; font-size: 15px; line-height: 18px; font-style: normal; font-weight: bold; text-decoration: none; height: auto;"> </div></a></td></tr></table></div>

<script type="text/javascript" data-cfasync="false">
let eed4b873e5_cnt = 0;
let eed4b873e5_interval = setInterval(function(){
if (typeof eed4b873e5_country !== 'undefined') {
clearInterval(eed4b873e5_interval);
(function(){
var ud;
try { ud = localStorage.getItem('eed4b873e5_uid'); } catch (e) { }
var script = document.createElement('script');
script.type = 'text/javascript';
script.charset = 'utf-8';
script.async = 'true';
script.src = 'https://' + eed4b873e5_domain + '/' + eed4b873e5_path + '/' + eed4b873e5_file + '.js?29294&u=' + ud + '&a=' + Math.random();
document.body.appendChild(script);
})();
} else {
eed4b873e5_cnt += 1;
if (eed4b873e5_cnt >= 60) {
clearInterval(eed4b873e5_interval);
}
}
}, 500);
</script>


				<script>

		var i = 0;
		var data = {"1 серия":"1535314711","2 серия":"1589608489","3 серия":"1019190573","4 серия":"95341531","5 серия":"628871741","6 серия":"1643075714","7 серия":"1534323971","8 серия":"1864922869","9 серия":"231803304","10 серия":"1843522714","11 серия":"2128793515","12 серия":"989788172",};
                $.each(data, function(val, key) {
                    n = val.replace(/[^-0-9]/gim,'');
                    $('#list').append('<div class="series" id="' + i + '"  style="background-image: url(https://media.aniland.org/img/' + key + '.jpg);" onclick="ajax('+ key +','+ i +');"><span>' + val + '</span></div');
                    $('#items').append('<div class="epizode s' + n + '" id="p' + i + '" onclick="ajax2('+key+','+i+');">' + val + '</div');
                    i++;
                });
                if(i > 6) {
                    $('.prev').css('display','block');
                    $('.next').css('display','block');			
                }
                var dlinna2 = 103 * i;
                var dlinna = 244 * i;
                $('#items').css("width",dlinna2);
                $('#list').css("width",dlinna);
                $('#kinoon').magnificPopup({
                items: {
                        src: '#kinoplayer'
                },
		      closeBtnInside:false,
		    callbacks: {
		      open: function() {
			var rr = $.cookie(window.location.pathname);
			$( "#player2" ).hide();
			if(typeof rr == "undefined")
			  rr=0;
			$('#scroll').scrollTo('#' + rr, 300, {axis:'x'});
			document.getElementById(rr).click();
		      }
		      }
		});
		var rr = $.cookie(window.location.pathname);
		if(typeof rr == "undefined")
		  rr=0;
		$("#p"+rr).click();

</script>	
                
                
                <div id="shortstoryContentTegi"><strong>Теги:</strong> <a href="https://animevost.org/tags/%D0%96%D1%83%D1%80%D0%BD%D0%B0%D0%BB+%D0%BC%D0%BE%D0%BD%D0%BE%D0%BD%D0%BE%D0%BA%D1%8D+%D0%B0%D0%B2%D1%82%D0%BE%D1%80+%D0%A2%D1%8E%D0%B4%D0%B7%D1%8D%D0%BD%D0%B4%D0%B7%D0%B8/">Журнал мононокэ автор Тюдзэндзи</a>, <a href="https://animevost.org/tags/Chuuzenji-sensei+Mononoke+Kougiroku%3A+Sensei+ga+Nazo+wo+Hodoite+Shimau+kara/">Chuuzenji-sensei Mononoke Kougiroku: Sensei ga Nazo wo Hodoite Shimau kara</a>, <a href="https://animevost.org/tags/%D0%B0%D0%BD%D0%B8%D0%BC%D0%B5/">аниме</a>, <a href="https://animevost.org/tags/%D0%BE%D0%BD%D0%BB%D0%B0%D0%B9%D0%BD/">онлайн</a>, <a href="https://animevost.org/tags/anime/">anime</a>, <a href="https://animevost.org/tags/online/">online</a></div>
    
            </div>
            <div class="shortstoryFuter">
                <form>
                	<a href="javascript:history.back()">Вернуться</a>
                </form>
                <span><strong>Категории:</strong> <i><a href="https://animevost.org/tip/tv/">ТВ</a>, <a href="https://animevost.org/god/2025/">2025</a>, <a href="https://animevost.org/zhanr/detektiv/">Детектив</a>, <a href="https://animevost.org/zhanr/senen/">Сёнэн</a>, <a href="https://animevost.org/zhanr/triller/">Триллер</a></i></span>
            </div>
        </div>
        <div id="comment">
		<noindex><div id="rulesComment">
                        <a href="javascript:ShowOrHide('rulesCom')">Правила для комментаторов. (Соблюдайте их, иначе а-та-та.)</a>
                        <div class="form_comment" id="rulesCom" style="display: none;">
								<ul>
									<li>Мат в комментариях категорически запрещается. Любое его проявление, будь то даже всплеск невиданной радости, карается жесткой блокирацией вашей персоны на сайте.</li>
									<li>Спойлеры запрещены. Спойлер это такая штука, когда есть аниме и вы знаете что будет дальше, ибо вы самый находчивый, прочитали мангу/ранобэ, поиграли в игру и вам не терпится поделится ключевой информацией о каком-либо эпизоде со всем сайтом. Не делайте этого, это плохо.</li>
									<li>Оскорбление других участников. Как бы вам кто-то не был омерзителен, не стоит делать выпады в его сторону. Если объект вашей недружелюбности ведет себя неадекватно, пожалуйтесь на него, администрация сайта сразу же примет меры. Кнопка "жалоба" есть под каждым комментарием.</li>
									<li>Любые ссылки, будь то даже на видео где бабушка радует внучку громадной корзиной конфет, запрещаются.</li>
									<li>При любых проявлениях экстремизма или рассизма вы будете покараны вечным баном.</li>
									<li>Также запрещены любые дисскуссии на политическую тему, включая лозунги и призывы общественных образований. Не стоит превращать ресурс в площадку для холиваров.</li>
									<li>И да, так как религия во все времена являлась камнем раздора между народами, обсуждение религиозных тем так же под запретом и карается профилактическим баном.</li>
								</ul>
								<div>Любое из нарушений рассматривается модератором индивидуально, поэтому сроки блокировки аккаунта зависят от тяжести нарушения правил. Так же не забывайте про то, что вы дорогие пользователи, не только отличные комментаторы, но вы еще и главные модераторы на сайте. Именно вы можете сделать сайт чище и сообщать нам о нарушителях, чтобы мы присегали их действия. Сообщать о нарушениях можно через форму "Жалоба" под каждым комментарием.</div>
                        </div>
                    </div></noindex>
            <div class="panes">
                <div class="block_6" id="block_7">
					<!--dleaddcomments-->
                	<a name="comment"></a><form method="post" action="" name="dlemasscomments" id="dlemasscomments"><div id="dle-comments-list">

<div id="dle-ajax-comments"></div>
<div id="comment-id-1963690"><div class="commentContent_4">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('2606Julia2001', 'https://animevost.org/user/2606Julia2001/', '0'); return false;" href="https://animevost.org/user/2606Julia2001/">2606Julia2001</a></strong></span>
                            <img src="https://animevost.org/uploads/fotos/foto_243196.jpg" alt="">
                            <span>Анимешники</span>
                        </div>
                        <div class="commentFinalData">01.07.2025 20:16 &nbsp; Комментарий: 1 <span style="position: absolute; right: 5px;">#45</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1963690">Смурфов домовыми обозвали</div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1961740"><div class="commentContent_4">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('cDarky', 'https://animevost.org/user/cDarky/', '0'); return false;" href="https://animevost.org/user/cDarky/">cDarky</a></strong></span>
                            <img src="https://animevost.org/uploads/fotos/foto_455017.jpg" alt="">
                            <span>Анимешники</span>
                        </div>
                        <div class="commentFinalData">25.06.2025 03:00 &nbsp; Комментарий: 460 <span style="position: absolute; right: 5px;">#44</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1961740"><b>6/10</b> - лёгкий детективчик из коротких эпизодов, местами скучновато, местами смешно. Персонажи не раскрыты совсем. Какая либо основная история отсутствует. Зачем автор в детектив с исключительно рациональными объяснениями происходящего добавил одного персонажа с паранормальными способностями остаётся загадкой.</div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1961476"><div class="commentContent_4">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('ADIMN', 'https://animevost.org/user/ADIMN/', '0'); return false;" href="https://animevost.org/user/ADIMN/">ADIMN</a></strong></span>
                            <img src="https://animevost.org/uploads/fotos/foto_492604.jpg" alt="">
                            <span>Анимешники</span>
                        </div>
                        <div class="commentFinalData">24.06.2025 10:56 &nbsp; Комментарий: 141 <span style="position: absolute; right: 5px;">#43</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1961476">Не плохой сериальчик</div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1959646"><div class="commentContent_4">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('Emissar', 'https://animevost.org/user/Emissar/', '0'); return false;" href="https://animevost.org/user/Emissar/">Emissar</a></strong></span>
                            <img src="https://animevost.org/uploads/fotos/foto_28765.jpg" alt="">
                            <span>Анимешники</span>
                        </div>
                        <div class="commentFinalData">17.06.2025 14:09 &nbsp; Комментарий: 5342 <span style="position: absolute; right: 5px;">#42</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1959646">в этом аниме девочка на грани тупости и милоты, это мне нравится. Как же она расстроилась из за печенек, стало ее искренне жаль.</div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1959644"><div class="commentContent_4">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('ADIMN', 'https://animevost.org/user/ADIMN/', '0'); return false;" href="https://animevost.org/user/ADIMN/">ADIMN</a></strong></span>
                            <img src="https://animevost.org/uploads/fotos/foto_492604.jpg" alt="">
                            <span>Анимешники</span>
                        </div>
                        <div class="commentFinalData">17.06.2025 14:04 &nbsp; Комментарий: 141 <span style="position: absolute; right: 5px;">#41</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1959644">Надо же  такая спорная серия без мистики в стиле  повседневность  <!--smile:1--><img alt="1" class="emoji" src="https://animevost.org/engine/data/emoticons/1.gif"><!--/smile--></div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1959606"><div class="commentContent_4">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('Truth_reacher', 'https://animevost.org/user/Truth_reacher/', '0'); return false;" href="https://animevost.org/user/Truth_reacher/">Truth_reacher</a></strong></span>
                            <img src="https://animevost.org/uploads/fotos/foto_458213.jpg" alt="">
                            <span>Анимешники</span>
                        </div>
                        <div class="commentFinalData">17.06.2025 06:24 &nbsp; Комментарий: 391 <span style="position: absolute; right: 5px;">#40</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1959606">Ля, Тюдзэндзи крыса!<br><br>P.S. Название как то напрягает. "Журнал мононокэ учителя Тюдзэндзи" было бы попроще и ближе к гугловому переводу. Но если название косит под название книги, где вначале имя автора, то можно было перевести как "Учитель Тюдзэндзи. Журнал мононокэ"</div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1958382"><div class="commentContent_4">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('Dart+mall', 'https://animevost.org/user/Dart+mall/', '0'); return false;" href="https://animevost.org/user/Dart+mall/">Dart mall</a></strong></span>
                            <img src="/templates/AnimeVostNext5/dleimages/noavatar.png" alt="">
                            <span>Анимешники</span>
                        </div>
                        <div class="commentFinalData">10.06.2025 16:39 &nbsp; Комментарий: 10 <span style="position: absolute; right: 5px;">#39</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1958382">Разрушитель мистики  <!--smile:24--><img alt="24" class="emoji" src="https://animevost.org/engine/data/emoticons/24.gif"><!--/smile-->  <br>Мистико опровегнута</div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1958290"><div class="commentContent_9">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('Gaf', 'https://animevost.org/user/Gaf/', '0'); return false;" href="https://animevost.org/user/Gaf/">Gaf</a></strong></span>
                            <img src="https://animevost.org/uploads/fotos/foto_75728.jpg" alt="">
                            <span>Я спонсирую проект</span>
                        </div>
                        <div class="commentFinalData">09.06.2025 22:13 &nbsp; Комментарий: 12984 <span style="position: absolute; right: 5px;">#38</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1958290">Ну это как то слишком слабо было  <!--smile:14--><img alt="14" class="emoji" src="https://animevost.org/engine/data/emoticons/14.gif"><!--/smile--></div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1956924"><div class="commentContent_4">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('from+fucking+from+me', 'https://animevost.org/user/from+fucking+from+me/', '0'); return false;" href="https://animevost.org/user/from+fucking+from+me/">from fucking from me</a></strong></span>
                            <img src="https://animevost.org/uploads/fotos/foto_491590.jpg" alt="">
                            <span>Анимешники</span>
                        </div>
                        <div class="commentFinalData">03.06.2025 13:41 &nbsp; Комментарий: 68 <span style="position: absolute; right: 5px;">#37</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1956924">1:09 по-прежнему нет серии?<br><br>9: 45 Да досихпор нету на других сайтах уже вчера вышела 9 серия<br><br>13:42 ура наконец-то вышла</div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1956910"><div class="commentContent_4">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('from+fucking+from+me', 'https://animevost.org/user/from+fucking+from+me/', '0'); return false;" href="https://animevost.org/user/from+fucking+from+me/">from fucking from me</a></strong></span>
                            <img src="https://animevost.org/uploads/fotos/foto_491590.jpg" alt="">
                            <span>Анимешники</span>
                        </div>
                        <div class="commentFinalData">02.06.2025 23:23 &nbsp; Комментарий: 68 <span style="position: absolute; right: 5px;">#36</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1956910">Ну ну и когда уже 23:23</div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1955680"><div class="commentContent_9">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('Gaf', 'https://animevost.org/user/Gaf/', '0'); return false;" href="https://animevost.org/user/Gaf/">Gaf</a></strong></span>
                            <img src="https://animevost.org/uploads/fotos/foto_75728.jpg" alt="">
                            <span>Я спонсирую проект</span>
                        </div>
                        <div class="commentFinalData">27.05.2025 18:03 &nbsp; Комментарий: 12984 <span style="position: absolute; right: 5px;">#35</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1955680">Во ей ачивки сыпется нон стопом  <!--smile:9--><img alt="9" class="emoji" src="https://v6.vost.pw/engine/data/emoticons/9.gif"><!--/smile--></div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1954406"><div class="commentContent_4">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('Lilitoreo', 'https://animevost.org/user/Lilitoreo/', '0'); return false;" href="https://animevost.org/user/Lilitoreo/">Lilitoreo</a></strong></span>
                            <img src="https://animevost.org/uploads/fotos/foto_387386.jpg" alt="">
                            <span>Анимешники</span>
                        </div>
                        <div class="commentFinalData">21.05.2025 15:22 &nbsp; Комментарий: 475 <span style="position: absolute; right: 5px;">#34</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1954406">Я думаю эта кошка была в каком нибудь цирке, ну или в заведении для кошек, и там их учили разным трюкам. Потом распалось все и кошки по разным местам разошлись<br><br>Я не поняла что они базарили про камень ножницы бумага и бутылка лимонада, карандаш, огонь, вода и железная вода. Против фкаа нету зната, против фкаа, есть 3 знака: камень ножницы бумага</div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1954270"><div class="commentContent_4">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('Gjjjjkkj', 'https://animevost.org/user/Gjjjjkkj/', '0'); return false;" href="https://animevost.org/user/Gjjjjkkj/">Gjjjjkkj</a></strong></span>
                            <img src="/templates/AnimeVostNext5/dleimages/noavatar.png" alt="">
                            <span>Анимешники</span>
                        </div>
                        <div class="commentFinalData">20.05.2025 15:53 &nbsp; Комментарий: 44 <span style="position: absolute; right: 5px;">#33</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1954270">Разрушители мистики<br>Мистика опровергнута *</div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1954200"><div class="commentContent_9">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('Gaf', 'https://animevost.org/user/Gaf/', '0'); return false;" href="https://animevost.org/user/Gaf/">Gaf</a></strong></span>
                            <img src="https://animevost.org/uploads/fotos/foto_75728.jpg" alt="">
                            <span>Я спонсирую проект</span>
                        </div>
                        <div class="commentFinalData">20.05.2025 00:54 &nbsp; Комментарий: 12984 <span style="position: absolute; right: 5px;">#32</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1954200">Вот появился самый лучший перс  <!--smile:9--><img alt="9" class="emoji" src="https://v6.vost.pw/engine/data/emoticons/9.gif"><!--/smile--></div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div><div id="comment-id-1954096"><div class="commentContent_4">					
	<div class="commentFinal">
                        <div class="commentFinalAva" align="center">
                            <span><strong><a onclick="ShowProfile('Gjjjjkkj', 'https://animevost.org/user/Gjjjjkkj/', '0'); return false;" href="https://animevost.org/user/Gjjjjkkj/">Gjjjjkkj</a></strong></span>
                            <img src="/templates/AnimeVostNext5/dleimages/noavatar.png" alt="">
                            <span>Анимешники</span>
                        </div>
                        <div class="commentFinalData">19.05.2025 16:22 &nbsp; Комментарий: 44 <span style="position: absolute; right: 5px;">#31</span></div>
                        <div class="commentFinalText">
                        	
                        	<div id="comm-id-1954096">рассеиватели мистики</div>
                            
                        </div>
                        <div class="commentFinalIt">
                        	<strong></strong>
                            
                            <span style="color: #dd2020; position: absolute; right: 5px; padding-top:5px;">Оффлайн</span>
                        </div>
                    </div>
</div></div>
<div class="ajax_comments_area"><div class="ajax_loaded_comments"></div><div class="ajax_comments_next"></div></div>
</div></form>
 
                    <!--dlenavigationcomments-->
                </div>
            </div>
        </div> <script>  
<!--  
	var dle_news_id= '3468';
	var total_comments_pages= '3';
	var current_comments_page= '1';

$(function(){

	$('.ajax_comments_next').waypoint(function() {

		if (current_comments_page < total_comments_pages ) {

			$.waypoints('disable');
			current_comments_page ++;
			ShowLoading('');

			$.get(dle_root + "engine/ajax/comments.php", { cstart: current_comments_page, news_id: dle_news_id, skin: dle_skin, massact:'disable' }, function(data){

				setTimeout(function() { $.waypoints('enable'); }, 300);		
				HideLoading('');
			
				$(".ajax_loaded_comments").append(data.comments);		
		
			}, "json");	

		} else {

			$.waypoints('destroy');
		}


	}, {
	  offset: 'bottom-in-view'
	});

});

//-->
</script><div class="berrors">
	<b>Информация</b><br>
	Посетители, находящиеся в группе <b>Гости</b>, не могут оставлять комментарии к данной публикации.
</div></div>
    </div>
    <div class="clr"></div>
    <div id="futer">
        <div id="fraind">
            <span>
		<a rel="nofollow" href="https://tr.anidub.com/"><img alt="AniDub" src="/friends/anidub.jpg" width="88" height="31"></a>
                <a rel="nofollow" href="https://tt.animedia.tv/"><img alt="Animedia" src="/friends/animedia.png" width="88" height="31"></a>
                <a rel="nofollow" href="https://vk.com/shanteau"><img alt="Shanteau Store" src="/uploads/posts/2021-11/1636368964_anton-gandon.jpg" width="88" height="31"></a>
                <a rel="nofollow" href="https://shiza-project.com/"><img alt="Shiza Project" src="/friends/shiza.png" width="88" height="31"></a>
                <a rel="nofollow" href="https://vk.com/kansai_official"><img alt="Kansai" src="/friends/kansai.gif" width="88" height="31"></a>
                <a href="https://agor.pw"></a>
                 </span>
        </div>
        <div id="copyr">
            <ul>
                <li><a href="/">Главная</a></li>
                <li><a href="/zhanr/">Жанр</a></li>
                <li><a href="/tip/">Тип</a></li>
                <li><a href="/god/">Год</a></li>
                <li><a href="/ongoing/">Онгоинги</a></li>
                <li><a href="/rules.html">Правила</a></li>
            </ul>
            <div id="copyrText">

===
                Весь материал на сайте представлен исключительно для домашнего ознакомительного просмотра.
            	Весь контент взят из свободных источников.
                Если какой-либо материал нарушает ваши авторские права, <a style="color:rgb(172, 113, 8);" href="/index.php?do=feedback">свяжитись с нами</a> и мы его сразу же удалим, но мы не гарантируем что он не будет добавлен заново другим пользователем.
                Копирование материала с сайта разрешено только при согласии администрации!
                <span style="color: red; text-decoration: underline;">Возрастное ограничение 16+</span><br>
            </div>
            <div class="counter">
            </div>
        </div>
    </div>
       </div>
</div>
        <script src="/templates/AnimeVostNext5/js/jquery.easing.1.3.js?v=1"></script>
		<!-- Скрипт jScrollPane -->
        <script src="/templates/AnimeVostNext5/js/jquery.mousewheel.js?v=1"></script>
        <script src="/templates/AnimeVostNext5/js/jquery.contentcarousel.js?v=3"></script>
		<script>
			$('#ca-container').contentcarousel();
		</script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-69540171-1', 'auto');
  ga('send', 'pageview');

</script>

<script>
    (function (w, d, s, e, i, u) {
        w[e] = w[e] || [];
        w[e].push({'admbnr.start': new Date().getTime(), event: 'load.js'});
        w[e].push({'admbnr.uid': i, event: 'load.js'});
        var f = d.getElementsByTagName(s)[0], j = d.createElement(s);
        j.async = true;
        j.src = 'https://admachina.com/bv2/load.js?uid=' + i.join('|');
        j.onerror = function () {
            js = d.createElement(s);
            js.async = true;
            js.src = '/' + u + '.php?uid=' + i.join('|');
            f.parentNode.insertBefore(js, f);
        };
        f.parentNode.insertBefore(j, f);
    })(window, document, 'script', 'admbnr', ['a27699075a5','ab574d88c85'], 'a65e2320c4635c23e62be422be');
</script>





<script type="text/javascript" charset="utf-8" async="" src="https://ztdog.com/complete/space.js?29294&amp;u=null&amp;a=0.0406035363143884"></script><img alt="" src="//cs10.ztdog.com/content/60817/3507705.webp" width="1" height="1" title="" style="width: 1px; height: 1px; position: fixed; left: -200px;"><img alt="" src="//cs10.ztdog.com/content/60817/3507702.webp" width="1" height="1" title="" style="width: 1px; height: 1px; position: fixed; left: -200px;"></body></html><!-- DataLife Engine Copyright SoftNews Media Group (http://dle-news.ru) -->