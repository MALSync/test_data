<html lang="tr" data-bs-theme="dark" dir="ltr">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <title>Dr. Stone 2. Sezon 5. Bölüm İzle - Anizium</title>

  <meta name="description"
    content="Anizium ile dünyada ilk ve tek 4K Türkçe dublaj platformunda anime keyfini yaşa. En yeni animeleri İngilizce altyazı ve dublaj seçenekleriyle 1080p ve 4K kalitesinde HD izle.">
  <meta name="keywords"
    content="anizium, anime 4k, 4k anime izle, anime izle, türkçe dublaj anime, ingilizce dublaj anime, anime film izle">

  <link rel="shortcut icon" type="image/x-icon" href="/assets/images/favicon.png">

  <link rel="stylesheet" href="/assets/css/core/libs.min.css">
  <link rel="stylesheet" href="/assets/vendor/font-awesome/css/all.min.css">
  <link rel="stylesheet" href="/assets/vendor/iconly/css/style.css">
  <link rel="stylesheet" href="/assets/vendor/animate.min.css">
  <link rel="stylesheet" href="/assets/vendor/swiperSlider/swiper.min.css">
  <link rel="stylesheet" href="/assets/css/streamit.min848f.css?v=5.2.1">
  <link rel="stylesheet" href="/assets/css/custom.min848f.css?v=5.2.1">
  <link rel="stylesheet" href="/assets/css/rtl.min848f.css?v=5.2.1">

  <link rel="stylesheet" href="/assets/vendor/sweetalert2/sweetalert2.min.css">
  <link rel="stylesheet" href="/assets/css/streamit.min.css?v=5.2.1">
  <link rel="stylesheet" href="/assets/css/custom.min.css?v=5.2.1">

  <link rel="preconnect" href="https://fonts.googleapis.com/">
  <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="">
  <link
    href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,500;0,700;0,900;1,300&amp;display=swap"
    rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">

  <meta name="google-site-verification" content="qHH_cSDuY7nP3eTJ4MRZfNn2_ktw33L9LaiSiNAdT_U">

  <style>
    [data-hover="true"]:hover {
      transform: scale(1.1);
      transition: transform 0.3s ease;
    }

    .like-btn,
    .dislike-btn {
      font-size: 0.85rem;
      padding: 4px 10px;
      transition: all 0.3s ease;
    }

    .like-btn i,
    .dislike-btn i {
      font-size: 0.9rem;
    }

    .like-btn.active,
    .dislike-btn.active {
      animation: heartBeat 0.6s;
    }

    .dislike-btn {
      color: #dc3545 !important;
      border-color: #dc3545 !important;
    }

    .btn-outline-danger:hover {
      background-color: #dc354561;
    }

    .btn-danger.active,
    .btn-outline-danger.active {
      background-color: #dc354561;
      border-color: #dc3545;
    }
  </style>
  <script src="https://anizium.co/klausBundle.js?v=21-20-31-08-2025" async=""></script>
  <style class="fslightbox-styles">
    .fslightbox-absoluted {
      position: absolute;
      top: 0;
      left: 0
    }

    .fslightbox-fade-in {
      animation: fslightbox-fade-in .3s cubic-bezier(0, 0, .7, 1)
    }

    .fslightbox-fade-out {
      animation: fslightbox-fade-out .3s ease
    }

    .fslightbox-fade-in-strong {
      animation: fslightbox-fade-in-strong .3s cubic-bezier(0, 0, .7, 1)
    }

    .fslightbox-fade-out-strong {
      animation: fslightbox-fade-out-strong .3s ease
    }

    @keyframes fslightbox-fade-in {
      from {
        opacity: .65
      }

      to {
        opacity: 1
      }
    }

    @keyframes fslightbox-fade-out {
      from {
        opacity: .35
      }

      to {
        opacity: 0
      }
    }

    @keyframes fslightbox-fade-in-strong {
      from {
        opacity: .3
      }

      to {
        opacity: 1
      }
    }

    @keyframes fslightbox-fade-out-strong {
      from {
        opacity: 1
      }

      to {
        opacity: 0
      }
    }

    .fslightbox-cursor-grabbing {
      cursor: grabbing
    }

    .fslightbox-full-dimension {
      width: 100%;
      height: 100%
    }

    .fslightbox-open {
      overflow: hidden;
      height: 100%
    }

    .fslightbox-flex-centered {
      display: flex;
      justify-content: center;
      align-items: center
    }

    .fslightbox-opacity-0 {
      opacity: 0 !important
    }

    .fslightbox-opacity-1 {
      opacity: 1 !important
    }

    .fslightbox-scrollbarfix {
      padding-right: 17px
    }

    .fslightbox-transform-transition {
      transition: transform .3s
    }

    .fslightbox-container {
      font-family: Arial, sans-serif;
      position: fixed;
      top: 0;
      left: 0;
      background: linear-gradient(rgba(30, 30, 30, .9), #000 1810%);
      touch-action: pinch-zoom;
      z-index: 1000000000;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
      -webkit-tap-highlight-color: transparent
    }

    .fslightbox-container * {
      box-sizing: border-box
    }

    .fslightbox-svg-path {
      transition: fill .15s ease;
      fill: #ddd
    }

    .fslightbox-nav {
      height: 45px;
      width: 100%;
      position: absolute;
      top: 0;
      left: 0
    }

    .fslightbox-slide-number-container {
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      height: 100%;
      font-size: 15px;
      color: #d7d7d7;
      z-index: 0;
      max-width: 55px;
      text-align: left
    }

    .fslightbox-slide-number-container .fslightbox-flex-centered {
      height: 100%
    }

    .fslightbox-slash {
      display: block;
      margin: 0 5px;
      width: 1px;
      height: 12px;
      transform: rotate(15deg);
      background: #fff
    }

    .fslightbox-toolbar {
      position: absolute;
      z-index: 3;
      right: 0;
      top: 0;
      height: 100%;
      display: flex;
      background: rgba(35, 35, 35, .65)
    }

    .fslightbox-toolbar-button {
      height: 100%;
      width: 45px;
      cursor: pointer
    }

    .fslightbox-toolbar-button:hover .fslightbox-svg-path {
      fill: #fff
    }

    .fslightbox-slide-btn-container {
      display: flex;
      align-items: center;
      padding: 12px 12px 12px 6px;
      position: absolute;
      top: 50%;
      cursor: pointer;
      z-index: 3;
      transform: translateY(-50%)
    }

    @media (min-width:476px) {
      .fslightbox-slide-btn-container {
        padding: 22px 22px 22px 6px
      }
    }

    @media (min-width:768px) {
      .fslightbox-slide-btn-container {
        padding: 30px 30px 30px 6px
      }
    }

    .fslightbox-slide-btn-container:hover .fslightbox-svg-path {
      fill: #f1f1f1
    }

    .fslightbox-slide-btn {
      padding: 9px;
      font-size: 26px;
      background: rgba(35, 35, 35, .65)
    }

    @media (min-width:768px) {
      .fslightbox-slide-btn {
        padding: 10px
      }
    }

    @media (min-width:1600px) {
      .fslightbox-slide-btn {
        padding: 11px
      }
    }

    .fslightbox-slide-btn-container-previous {
      left: 0
    }

    @media (max-width:475.99px) {
      .fslightbox-slide-btn-container-previous {
        padding-left: 3px
      }
    }

    .fslightbox-slide-btn-container-next {
      right: 0;
      padding-left: 12px;
      padding-right: 3px
    }

    @media (min-width:476px) {
      .fslightbox-slide-btn-container-next {
        padding-left: 22px
      }
    }

    @media (min-width:768px) {
      .fslightbox-slide-btn-container-next {
        padding-left: 30px
      }
    }

    @media (min-width:476px) {
      .fslightbox-slide-btn-container-next {
        padding-right: 6px
      }
    }

    .fslightbox-down-event-detector {
      position: absolute;
      z-index: 1
    }

    .fslightbox-slide-swiping-hoverer {
      z-index: 4
    }

    .fslightbox-invalid-file-wrapper {
      font-size: 22px;
      color: #eaebeb;
      margin: auto
    }

    .fslightbox-video {
      object-fit: cover
    }

    .fslightbox-youtube-iframe {
      border: 0
    }

    .fslightbox-loader {
      display: block;
      margin: auto;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 67px;
      height: 67px
    }

    .fslightbox-loader div {
      box-sizing: border-box;
      display: block;
      position: absolute;
      width: 54px;
      height: 54px;
      margin: 6px;
      border: 5px solid;
      border-color: #999 transparent transparent transparent;
      border-radius: 50%;
      animation: fslightbox-loader 1.2s cubic-bezier(.5, 0, .5, 1) infinite
    }

    .fslightbox-loader div:nth-child(1) {
      animation-delay: -.45s
    }

    .fslightbox-loader div:nth-child(2) {
      animation-delay: -.3s
    }

    .fslightbox-loader div:nth-child(3) {
      animation-delay: -.15s
    }

    @keyframes fslightbox-loader {
      0% {
        transform: rotate(0)
      }

      100% {
        transform: rotate(360deg)
      }
    }

    .fslightbox-source {
      position: relative;
      z-index: 2;
      opacity: 0
    }
  </style>
</head>

<body style="--header-height: 74px;">
  <span class="screen-darken"></span>

  <div class="loader simple-loader" style="display: none;">
    <div class="loader-body">
      <img src="/assets/images/loader.gif" alt="loader" class="img-fluid" width="300">
    </div>
  </div>

  <div id="header" style="display: inherit;">
    <header class="header-center-home header-default header-sticky">
      <nav class="nav navbar navbar-expand-xl navbar-light iq-navbar header-hover-menu py-xl-0">
        <div class="container-fluid navbar-inner">
          <div class="d-flex align-items-center justify-content-between w-100 landing-header">
            <div class="d-flex gap-3 gap-xl-0 align-items-center">
              <div>
                <button type="button" data-bs-toggle="offcanvas" data-bs-target="#navbar_main"
                  aria-controls="navbar_main"
                  class="d-xl-none btn btn-primary rounded-pill p-1 pt-0 toggle-rounded-btn">
                  <svg width="20px" class="icon-20" viewBox="0 0 24 24">
                    <path fill="currentColor"
                      d="M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z"></path>
                  </svg>
                </button>
              </div>

              <div class="logo-default">
                <a class="navbar-brand text-primary" href="/" router="true">
                  <img class="img-fluid logo" src="/assets/images/logo.png" loading="lazy">
                </a>

                <a href="https://instagram.com/aniziumtv" target="_blank" class="ms-3">
                  <img
                    src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/58/Instagram-Icon.png/960px-Instagram-Icon.png"
                    alt="Instagram" width="25" height="25">
                </a>

                <a href="https://discord.gg/anizium" target="_blank" class="ms-2">
                  <img src="https://cdn-icons-png.flaticon.com/512/5968/5968756.png" alt="Discord" width="25"
                    height="25">
                </a>

                <a href="https://youtube.com/@tranizium" target="_blank" class="ms-2">
                  <img src="https://upload.wikimedia.org/wikipedia/commons/e/ef/Youtube_logo.png" alt="Discord"
                    width="25" height="25">
                </a>
              </div>
            </div>

            <nav id="navbar_main"
              class="offcanvas mobile-offcanvas nav navbar navbar-expand-xl hover-nav horizontal-nav mega-menu-content py-xl-0">
              <div class="container-fluid p-lg-0">
                <div class="offcanvas-header px-0">
                  <div class="navbar-brand ms-3 d-flex align-items-center">
                    <div class="logo-default d-flex align-items-center">
                      <a class="navbar-brand text-primary" href="/" router="true">
                        <img class="img-fluid logo" src="/assets/images/logo.png">
                      </a>
                    </div>
                  </div>

                  <button type="button" class="btn-close float-end px-3" data-bs-dismiss="offcanvas"
                    aria-label="Close"></button>
                </div>

                <ul class="navbar-nav iq-nav-menu  list-unstyled" id="header-menu">
                  <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="collapse" href="/" router="true" role="button"
                      aria-expanded="false">
                      <span class="item-name" style="font-family: 'Lato', Arial, sans-serif;">Ana Sayfa</span>
                    </a>
                  </li>

                  <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="collapse" href="/animes" router="true" role="button"
                      aria-expanded="false">
                      <span class="item-name" style="font-family: 'Lato', Arial, sans-serif;">Animeler</span>
                    </a>
                  </li>

                  <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="collapse" href="/premium" router="true" role="button"
                      aria-expanded="false">
                      <span class="item-name" style="font-family: 'Lato', Arial, sans-serif;">Premium</span>
                    </a>
                  </li>

                  <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="collapse" href="/calendar" router="true" role="button"
                      aria-expanded="false">
                      <span class="item-name" style="font-family: 'Lato', Arial, sans-serif;">Takvim</span>
                    </a>
                  </li>

                  <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="collapse" href="/anime-request" router="true" role="button"
                      aria-expanded="false">
                      <span class="item-name" style="font-family: 'Lato', Arial, sans-serif;">Anime İstek</span>
                    </a>
                  </li>

                  <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="collapse" href="/app" router="true" role="button"
                      aria-expanded="false">
                      <span class="item-name" style="font-family: 'Lato', Arial, sans-serif;">Uygulamalar</span>
                    </a>
                  </li>
                </ul>
              </div>
            </nav>

            <div class="right-panel">
              <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-btn">
                  <span class="navbar-toggler-icon"></span>
                </span>
              </button>

              <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav align-items-center ms-auto mb-2 mb-xl-0">
                  <li class="nav-item dropdown iq-responsive-menu" id="notification_button" style="">
                    <button id="notificationModal" type="button" class="nav-link p-0" aria-expanded="false">
                      <div class="btn-icon btn-sm rounded-pill btn-action position-relative">
                        <svg class="icon-20" width="20" height="20" viewBox="0 0 24 24" fill="none"
                          xmlns="http://www.w3.org/2000/svg" stroke="currentColor" stroke-width="1.5"
                          stroke-linecap="round" stroke-linejoin="round">
                          <path d="M15 17H9a3 3 0 0 1-3-3v-3a6 6 0 0 1 12 0v3a3 3 0 0 1-3 3z"></path>
                          <path d="M12 22a2 2 0 0 0 2-2H10a2 2 0 0 0 2 2z"></path>
                        </svg>

                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger"
                          id="notification_not_read_size" style="">1</span>
                      </div>
                    </button>
                  </li>

                  <li class="nav-item dropdown iq-responsive-menu">
                    <div class="search-box">
                      <a href="#" class="nav-link p-0" id="search-drop" data-bs-toggle="dropdown">
                        <div class="btn-icon btn-sm rounded-pill btn-action">
                          <span class="btn-inner">
                            <svg class="icon-20" width="20" viewBox="0 0 24 24" fill="none"
                              xmlns="http://www.w3.org/2000/svg">
                              <circle cx="11.7669" cy="11.7666" r="8.98856" stroke="currentColor" stroke-width="1.5"
                                stroke-linecap="round" stroke-linejoin="round"></circle>
                              <path d="M18.0186 18.4851L21.5426 22" stroke="currentColor" stroke-width="1.5"
                                stroke-linecap="round" stroke-linejoin="round"></path>
                            </svg>
                          </span>
                        </div>
                      </a>

                      <ul class="dropdown-menu p-0 dropdown-search m-0 iq-search-bar" style="width: 20rem;">
                        <li class="p-0">
                          <form id="searchForm" action="/search" method="GET">
                            <div class="form-group input-group mb-0">
                              <input type="text" name="value" class="form-control border-0" placeholder="Ara..."
                                minlength="2" maxlength="20" required="">

                              <button type="submit" class="search-submit" aria-label="Search">
                                <svg class="icon-15" width="15" viewBox="0 0 24 24" fill="none"
                                  xmlns="http://www.w3.org/2000/svg">
                                  <circle cx="11.7669" cy="11.7666" r="8.98856" stroke="currentColor" stroke-width="1.5"
                                    stroke-linecap="round" stroke-linejoin="round"></circle>
                                  <path d="M18.0186 18.4851L21.5426 22" stroke="currentColor" stroke-width="1.5"
                                    stroke-linecap="round" stroke-linejoin="round"></path>
                                </svg>
                              </button>
                            </div>
                          </form>
                        </li>
                      </ul>
                    </div>
                  </li>

                  <li class="nav-item dropdown" id="itemdropdown1">
                    <a class="nav-link d-flex align-items-center" href="#" id="navbarDropdown" role="button"
                      data-bs-toggle="dropdown" aria-expanded="false">
                      <div class="btn-icon rounded-pill user-icons">
                        <span class="btn-inner" id="header_user_img_box"><img
                            src="https://anizium.co/assets/images/user/default.png" class="img-fluid" loading="lazy"
                            style="border-radius: 0.25rem;"></span>
                      </div>
                    </a>

                    <ul class="dropdown-menu dropdown-menu-end dropdown-user border-0 p-0 m-0"
                      aria-labelledby="navbarDropdown" id="header_user">
                      <li class="user-info d-flex align-items-center gap-3 mb-3">
                        <a href="/account" router="true">
                          <img src="https://anizium.co/assets/images/user/default.png" class="img-fluid" loading="lazy"
                            style="border-radius: 0.25rem;">
                          <span class="font-size-14 fw-500 text-capitalize text-white"
                            style="margin-left: 10px;">akkusativ</span>
                        </a>
                      </li>

                      <li>
                        <a href="/watched-list" router="true" class="iq-sub-card d-flex align-items-center gap-3">
                          <svg width="16" height="16" viewBox="-0.5 0 7 7" version="1.1"
                            xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                            <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                              <g id="Dribbble-Light-Preview" transform="translate(-347.000000, -3766.000000)"
                                fill="#fff">
                                <g id="icons" transform="translate(56.000000, 160.000000)">
                                  <path
                                    d="M296.494737,3608.57322 L292.500752,3606.14219 C291.83208,3605.73542 291,3606.25002 291,3607.06891 L291,3611.93095 C291,3612.7509 291.83208,3613.26444 292.500752,3612.85767 L296.494737,3610.42771 C297.168421,3610.01774 297.168421,3608.98319 296.494737,3608.57322"
                                    id="play-[#1003]"></path>
                                </g>
                              </g>
                            </g>
                          </svg>
                          <h6 class="mb-0 font-size-14 fw-normal">İzlediklerim</h6>
                        </a>
                      </li>

                      <li>
                        <a href="/favorite-list" router="true" class="iq-sub-card d-flex align-items-center gap-3">
                          <svg width="16" height="16" viewBox="0 0 16 16" fill="none"
                            xmlns="http://www.w3.org/2000/svg">
                            <path
                              d="M1.24264 8.24264L8 15L14.7574 8.24264C15.553 7.44699 16 6.36786 16 5.24264V5.05234C16 2.8143 14.1857 1 11.9477 1C10.7166 1 9.55233 1.55959 8.78331 2.52086L8 3.5L7.21669 2.52086C6.44767 1.55959 5.28338 1 4.05234 1C1.8143 1 0 2.8143 0 5.05234V5.24264C0 6.36786 0.44699 7.44699 1.24264 8.24264Z">
                            </path>
                          </svg>
                          <h6 class="mb-0 font-size-14 fw-normal">Favorilerim</h6>
                        </a>
                      </li>

                      <li>
                        <a href="/watch-list" router="true" class="iq-sub-card d-flex align-items-center gap-3">
                          <svg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path d="m0 0h24v24h-24z" fill="#fff" opacity="0" transform="matrix(-1 0 0 -1 24 24)">
                            </path>
                            <path
                              d="m19 11h-6v-6a1 1 0 0 0 -2 0v6h-6a1 1 0 0 0 0 2h6v6a1 1 0 0 0 2 0v-6h6a1 1 0 0 0 0-2z"
                              fill="currentColor"></path>
                          </svg>
                          <h6 class="mb-0 font-size-14 fw-normal">İzleme Listem</h6>
                        </a>
                      </li>

                      <li>
                        <a href="/profiles" router="true" class="iq-sub-card d-flex align-items-center gap-3">
                          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 22"
                            fill="none">
                            <path fill-rule="evenodd" clip-rule="evenodd"
                              d="M7.84455 20.6621C4.15273 20.6621 1 20.0876 1 17.7868C1 15.486 4.13273 13.3621 7.84455 13.3621C11.5364 13.3621 14.6891 15.4654 14.6891 17.7662C14.6891 20.066 11.5564 20.6621 7.84455 20.6621Z"
                              stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
                            </path>
                            <path fill-rule="evenodd" clip-rule="evenodd"
                              d="M7.83725 10.1738C10.26 10.1738 12.2236 8.21015 12.2236 5.78742C12.2236 3.36469 10.26 1.40015 7.83725 1.40015C5.41452 1.40015 3.44998 3.36469 3.44998 5.78742C3.4418 8.20196 5.3918 10.1656 7.80634 10.1738C7.81725 10.1738 7.82725 10.1738 7.83725 10.1738Z"
                              stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
                            </path>
                          </svg>
                          <h6 class="mb-0 font-size-14 fw-normal">Profil Değiştir</h6>
                        </a>
                      </li>

                      <li>
                        <a href="/account" router="true" class="iq-sub-card d-flex align-items-center gap-3">
                          <svg fill="#fff" width="16" height="16" version="1.1" id="Capa_1"
                            xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px"
                            y="0px" viewBox="0 0 478.703 478.703" style="enable-background:new 0 0 478.703 478.703;"
                            xml:space="preserve">
                            <path
                              d="M454.2,189.101l-33.6-5.7c-3.5-11.3-8-22.2-13.5-32.6l19.8-27.7c8.4-11.8,7.1-27.9-3.2-38.1l-29.8-29.8 c-5.6-5.6-13-8.7-20.9-8.7c-6.2,0-12.1,1.9-17.1,5.5l-27.8,19.8c-10.8-5.7-22.1-10.4-33.8-13.9l-5.6-33.2c-2.4-14.3-14.7-24.7-29.2-24.7h-42.1c-14.5,0-26.8,10.4-29.2,24.7l-5.8,34c-11.2,3.5-22.1,8.1-32.5,13.7l-27.5-19.8c-5-3.6-11-5.5-17.2-5.5c-7.9,0-15.4,3.1-20.9,8.7l-29.9,29.8c-10.2,10.2-11.6,26.3-3.2,38.1l20,28.1 c-5.5,10.5-9.9,21.4-13.3,32.7l-33.2,5.6c-14.3,2.4-24.7,14.7-24.7,29.2v42.1c0,14.5,10.4,26.8,24.7,29.2l34,5.8  c3.5,11.2,8.1,22.1,13.7,32.5l-19.7,27.4c-8.4,11.8-7.1,27.9,3.2,38.1l29.8,29.8c5.6,5.6,13,8.7,20.9,8.7c6.2,0,12.1-1.9,17.1-5.5   l28.1-20c10.1,5.3,20.7,9.6,31.6,13l5.6,33.6c2.4,14.3,14.7,24.7,29.2,24.7h42.2c14.5,0,26.8-10.4,29.2-24.7l5.7-33.6 c11.3-3.5,22.2-8,32.6-13.5l27.7,19.8c5,3.6,11,5.5,17.2,5.5l0,0c7.9,0,15.3-3.1,20.9-8.7l29.8-29.8c10.2-10.2,11.6-26.3,3.2-38.1  l-19.8-27.8c5.5-10.5,10.1-21.4,13.5-32.6l33.6-5.6c14.3-2.4,24.7-14.7,24.7-29.2v-42.1  C478.9,203.801,468.5,191.501,454.2,189.101z M451.9,260.401c0,1.3-0.9,2.4-2.2,2.6l-42,7c-5.3,0.9-9.5,4.8-10.8,9.9c-3.8,14.7-9.6,28.8-17.4,41.9c-2.7,4.6-2.5,10.3,0.6,14.7l24.7,34.8c0.7,1,0.6,2.5-0.3,3.4l-29.8,29.8c-0.7,0.7-1.4,0.8-1.9,0.8 c-0.6,0-1.1-0.2-1.5-0.5l-34.7-24.7c-4.3-3.1-10.1-3.3-14.7-0.6c-13.1,7.8-27.2,13.6-41.9,17.4c-5.2,1.3-9.1,5.6-9.9,10.8l-7.1,42 c-0.2,1.3-1.3,2.2-2.6,2.2h-42.1c-1.3,0-2.4-0.9-2.6-2.2l-7-42c-0.9-5.3-4.8-9.5-9.9-10.8c-14.3-3.7-28.1-9.4-41-16.8c-2.1-1.2-4.5-1.8-6.8-1.8c-2.7,0-5.5,0.8-7.8,2.5l-35,24.9c-0.5,0.3-1,0.5-1.5,0.5c-0.4,0-1.2-0.1-1.9-0.8l-29.8-29.8  c-0.9-0.9-1-2.3-0.3-3.4l24.6-34.5c3.1-4.4,3.3-10.2,0.6-14.8c-7.8-13-13.8-27.1-17.6-41.8c-1.4-5.1-5.6-9-10.8-9.9l-42.3-7.2 c-1.3-0.2-2.2-1.3-2.2-2.6v-42.1c0-1.3,0.9-2.4,2.2-2.6l41.7-7c5.3-0.9,9.6-4.8,10.9-10c3.7-14.7,9.4-28.9,17.1-42 c2.7-4.6,2.4-10.3-0.7-14.6l-24.9-35c-0.7-1-0.6-2.5,0.3-3.4l29.8-29.8c0.7-0.7,1.4-0.8,1.9-0.8c0.6,0,1.1,0.2,1.5,0.5l34.5,24.6 c4.4,3.1,10.2,3.3,14.8,0.6c13-7.8,27.1-13.8,41.8-17.6c5.1-1.4,9-5.6,9.9-10.8l7.2-42.3c0.2-1.3,1.3-2.2,2.6-2.2h42.1 c1.3,0,2.4,0.9,2.6,2.2l7,41.7c0.9,5.3,4.8,9.6,10,10.9c15.1,3.8,29.5,9.7,42.9,17.6c4.6,2.7,10.3,2.5,14.7-0.6l34.5-24.8c0.5-0.3,1-0.5,1.5-0.5c0.4,0,1.2,0.1,1.9,0.8l29.8,29.8c0.9,0.9,1,2.3,0.3,3.4l-24.7,34.7c-3.1,4.3-3.3,10.1-0.6,14.7c7.8,13.1,13.6,27.2,17.4,41.9c1.3,5.2,5.6,9.1,10.8,9.9l42,7.1c1.3,0.2,2.2,1.3,2.2,2.6v42.1H451.9z">
                            </path>
                            <path
                              d="M239.4,136.001c-57,0-103.3,46.3-103.3,103.3s46.3,103.3,103.3,103.3s103.3-46.3,103.3-103.3S296.4,136.001,239.4,136.001z M239.4,315.601c-42.1,0-76.3-34.2-76.3-76.3s34.2-76.3,76.3-76.3s76.3,34.2,76.3,76.3S281.5,315.601,239.4,315.601z">
                            </path>
                          </svg>
                          <h6 class="mb-0 font-size-14 fw-normal">Hesap</h6>
                        </a>
                      </li>

                      <li>
                        <a href="/account?selected=ticket" router="true"
                          class="iq-sub-card d-flex align-items-center gap-3">
                          <svg fill="white" width="16" height="16" viewBox="0 0 32 32"
                            xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid">
                            <path
                              d="M16.000,32.000 C7.178,32.000 -0.000,24.822 -0.000,16.000 C-0.000,7.178 7.178,-0.000 16.000,-0.000 C24.822,-0.000 32.000,7.178 32.000,16.000 C32.000,24.822 24.822,32.000 16.000,32.000 ZM29.410,20.000 L22.917,20.000 C22.216,21.209 21.209,22.216 20.000,22.917 L20.000,29.410 C24.507,28.064 28.064,24.507 29.410,20.000 ZM16.000,10.000 C12.691,10.000 10.000,12.691 10.000,16.000 C10.000,19.309 12.691,22.000 16.000,22.000 C19.309,22.000 22.000,19.309 22.000,16.000 C22.000,12.691 19.309,10.000 16.000,10.000 ZM16.000,30.000 C16.681,30.000 17.345,29.935 18.000,29.840 L18.000,23.737 C17.359,23.902 16.692,24.000 16.000,24.000 C15.308,24.000 14.641,23.902 14.000,23.737 L14.000,29.840 C14.655,29.935 15.319,30.000 16.000,30.000 ZM12.000,29.410 L12.000,22.917 C10.791,22.216 9.784,21.209 9.083,20.000 L2.590,20.000 C3.936,24.507 7.493,28.064 12.000,29.410 ZM2.000,16.000 C2.000,16.681 2.065,17.345 2.160,18.000 L8.263,18.000 C8.097,17.359 8.000,16.692 8.000,16.000 C8.000,15.308 8.097,14.641 8.263,14.000 L2.160,14.000 C2.065,14.655 2.000,15.319 2.000,16.000 ZM2.590,12.000 L9.083,12.000 C9.784,10.791 10.791,9.784 12.000,9.082 L12.000,2.590 C7.493,3.936 3.936,7.493 2.590,12.000 ZM16.000,2.000 C15.319,2.000 14.655,2.065 14.000,2.160 L14.000,8.263 C14.641,8.097 15.308,8.000 16.000,8.000 C16.692,8.000 17.359,8.097 18.000,8.263 L18.000,2.160 C17.345,2.065 16.681,2.000 16.000,2.000 ZM20.000,2.590 L20.000,9.082 C21.209,9.784 22.216,10.791 22.918,12.000 L29.410,12.000 C28.064,7.493 24.507,3.936 20.000,2.590 ZM23.737,14.000 C23.903,14.641 24.000,15.308 24.000,16.000 C24.000,16.692 23.903,17.359 23.737,18.000 L29.840,18.000 C29.935,17.345 30.000,16.681 30.000,16.000 C30.000,15.319 29.935,14.655 29.840,14.000 L23.737,14.000 Z">
                            </path>
                          </svg>
                          <h6 class="mb-0 font-size-14 fw-normal">Destek Taleplerim</h6>
                        </a>
                      </li>

                      <li>
                        <a href="/exit" router="true"
                          class="iq-sub-card iq-logout-2 mt-1 d-flex justify-content-center gap-2">
                          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"
                            fill="none">
                            <path
                              d="M1.82209 15.9999C1.46654 15.9999 1.16283 15.874 0.910981 15.6221C0.659129 15.3703 0.533203 15.0666 0.533203 14.711V1.73322C0.533203 1.37767 0.659129 1.07397 0.910981 0.822114C1.16283 0.570262 1.46654 0.444336 1.82209 0.444336H7.95543V1.44434H1.82209C1.74802 1.44434 1.68135 1.47397 1.62209 1.53322C1.56283 1.59248 1.5332 1.65915 1.5332 1.73322V14.711C1.5332 14.7851 1.56283 14.8517 1.62209 14.911C1.68135 14.9703 1.74802 14.9999 1.82209 14.9999H7.95543V15.9999H1.82209ZM12.0888 11.5999L11.3554 10.8888L13.5332 8.73322H5.68876V7.711H13.511L11.3332 5.55545L12.0665 4.82211L15.4665 8.24434L12.0888 11.5999Z"
                              fill="currentColor"></path>
                          </svg>
                          <h6 class="mb-0 font-size-14 fw-normal">Çıkış yap</h6>
                        </a>
                      </li>
                    </ul>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </nav>
    </header>
  </div>

  <div id="content">
    <div class="iq-main-slider site-video">
      <div class="container-fluid">
        <div class="iq-content_restriction">
          <div class="iq-restriction_box" id="video_box" style="background-color: inherit;">
            <span class="subscribe-text">
              Bu içeriği görüntülemek için premium olmanız gerekir.
            </span>

            <div class="iq-button">

              <a href="/premium" router="true" class="btn text-uppercase position-relative"><span
                  class="button-text">Satın Al</span></a>
            </div>
          </div>

          <div class="col-12">
            <div class="row">
              <div class="col-lg-3 col-sm-6 col-12">
                <div id="source_list"></div>
              </div>

              <div class="col-lg-6 col-sm-6 col-12">
                <p style="text-align: center; margin-top: 30px;" id="info_box">
                  <span id="ova_filler_info"
                    style="display: none; background-color: #a03c6f;color: #ddd;font-size: 20px;padding: 6px 6px;border-radius: 12px;user-select: none;">Bu
                    bölüm ana hikayeden bağımsızdır</span>
                  <span id="adult_info"
                    style="display: none; background-color: #a05c3c;color: #ddd;font-size: 20px;padding: 6px 6px;border-radius: 12px;user-select: none;">Yetişkin
                    içerik</span>
                </p>
              </div>

              <div class="col-lg-3 col-sm-6 col-12">
                <div id="previous_next" style="display: flex; margin-top: 30px;">
                  <div id="prev_div" class="iq-button" style="margin-bottom: 20px; margin-right: 20px;">
                    <a id="prev_link" router="true" class="btn text-uppercase position-relative"
                      href="/watch/392217205?season=2&amp;episode=4">
                      <span class="button-text">Önceki Bölüm</span>
                    </a>
                  </div>

                  <div id="next_div" class="iq-button" style="margin-bottom: 20px;">
                    <a id="next_link" router="true" class="btn text-uppercase position-relative"
                      href="/watch/392217205?season=2&amp;episode=6">
                      <span class="button-text">Sonraki Bölüm</span>
                    </a>
                  </div>
                </div>

                <div class="row">
                  <div class="col-6" id="watched_box" style="">
                    <div class="mt-3">
                      <input id="animeWatched" class="form-check-input" type="checkbox">

                      <label id="animeWatchedText" class="form-check-label" for="animeWatched"
                        style="margin-left: 5px;">
                        İzledim olarak işaretle
                      </label>
                    </div>
                  </div>

                  <div class="col-6">
                    <button id="animeReport" class="badge"
                      style="background-color: #6c757d; margin-right: 15px; border: none; font: inherit; color: inherit; cursor: pointer; margin-bottom: 20px;">
                      Hata Bildir
                    </button>
                  </div>
                </div>

                <div id="mobile_episode_list" style="display: none; margin-top: 20px;"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="details-part">
      <div class="container-fluid">
        <div class="row">
          <div class="col-lg-12">
            <div class="trending-info mt-4 pt-0 pb-4">
              <div class="row">
                <div class="col-md-9 col-12 mb-auto">
                  <div class="col-12">
                    <div class="row">
                      <div class="col-2">
                        <div class="iq-top-ten-block">
                          <a href="/anime/392217205" router="true" class="overly-images">
                            <div class="image-box">
                              <img src="https://x.anizium.co/assets/anime-poster/392217205_1199.webp"
                                style="width: 300px;" class="img-fluid object-cover d-block border-0">
                            </div>
                          </a>
                        </div>
                      </div>

                      <div class="col-10">
                        <div class="d-block d-lg-flex align-items-center">
                          <h2
                            class="trending-text fw-bold texture-text text-uppercase my-0 fadeInLeft animated d-inline-block"
                            data-animation-in="fadeInLeft" data-delay-in="0.6"
                            style="opacity: 1; animation-delay: 0.6s">
                            Dr. Stone S2 B5
                          </h2>
                        </div>

                        <p class="my-3">
                          Otomobile son rötuşlar yapılır ve bilim malzemelerini Tsukasa imparatorluğuna yakın müstahkem
                          bir kayalığa taşımak için kullanılır. Otomobil oradan bir tanka dönüştürülür, ancak kurtarma
                          grubunun haberi olmadan imparatorluk tarafından herhangi bir araç saldırısına karşı koymak
                          için hazırlıklar yapılmıştır.
                        </p>
                      </div>
                    </div>
                  </div>

                  <div class="col-lg-12 col-md-7 mt-5 mt-md-0" id="similar_box">
                    <div class="pb-md-5">
                      <h5 class="main-title text-capitalize mb-4" style="margin-top: 80px;">⚡ Benzer Animeler</h5>
                      <span class="text-capitalize mb-4" id="similar_box_loading"
                        style="display: none;">Yükleniyor...</span>

                      <div class="card-style-grid mb-5">
                        <div class="row row-cols-xl-5 row-cols-sm-2 row-cols-1" id="similar_list">

                          <div class="col-6 mb-4">
                            <div class="iq-top-ten-block">
                              <div class="block-image position-relative">
                                <a href="/anime/825879585" router="true" class="overly-images">
                                  <div class="image-box">
                                    <img lazy="true"
                                      src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAJCAQAAACRI2S5AAAAEElEQVR42mNkIAAYRxWAAQAG9gAKqv6+AwAAAABJRU5ErkJggg=="
                                      data-src="https://x.anizium.co/assets/anime-poster/the-promised-neverland.webp"
                                      class="img-fluid object-cover w-100 d-block border-0" style="height: 335px;">
                                  </div>
                                </a>

                                <img lazy="true"
                                  src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAJCAQAAACRI2S5AAAAEElEQVR42mNkIAAYRxWAAQAG9gAKqv6+AwAAAABJRU5ErkJggg=="
                                  data-src="/assets/images/quality/4k.png"
                                  style="position: absolute; top: 8px; right: 20px; height: 25px; z-index: 10;">
                              </div>
                            </div>
                          </div>
                          <div class="col-6 mb-4">
                            <div class="iq-top-ten-block">
                              <div class="block-image position-relative">
                                <a href="/anime/418314292" router="true" class="overly-images">
                                  <div class="image-box">
                                    <img lazy="true"
                                      src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAJCAQAAACRI2S5AAAAEElEQVR42mNkIAAYRxWAAQAG9gAKqv6+AwAAAABJRU5ErkJggg=="
                                      data-src="https://x.anizium.co/assets/anime-poster/hunter-x-hunter-2674.webp"
                                      class="img-fluid object-cover w-100 d-block border-0" style="height: 335px;">
                                  </div>
                                </a>

                                <img lazy="true"
                                  src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAJCAQAAACRI2S5AAAAEElEQVR42mNkIAAYRxWAAQAG9gAKqv6+AwAAAABJRU5ErkJggg=="
                                  data-src="/assets/images/quality/4k.png"
                                  style="position: absolute; top: 8px; right: 20px; height: 25px; z-index: 10;">
                              </div>
                            </div>
                          </div>
                          <div class="col-6 mb-4">
                            <div class="iq-top-ten-block">
                              <div class="block-image position-relative">
                                <a href="/anime/791674752" router="true" class="overly-images">
                                  <div class="image-box">
                                    <img lazy="true"
                                      src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAJCAQAAACRI2S5AAAAEElEQVR42mNkIAAYRxWAAQAG9gAKqv6+AwAAAABJRU5ErkJggg=="
                                      data-src="https://x.anizium.co/assets/anime-poster/791674752_1927.webp"
                                      class="img-fluid object-cover w-100 d-block border-0" style="height: 335px;">
                                  </div>
                                </a>

                                <img lazy="true"
                                  src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAJCAQAAACRI2S5AAAAEElEQVR42mNkIAAYRxWAAQAG9gAKqv6+AwAAAABJRU5ErkJggg=="
                                  data-src="/assets/images/quality/4k.png"
                                  style="position: absolute; top: 8px; right: 20px; height: 25px; z-index: 10;">
                              </div>
                            </div>
                          </div>
                          <div class="col-6 mb-4">
                            <div class="iq-top-ten-block">
                              <div class="block-image position-relative">
                                <a href="/anime/341481593" router="true" class="overly-images">
                                  <div class="image-box">
                                    <img lazy="true"
                                      src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAJCAQAAACRI2S5AAAAEElEQVR42mNkIAAYRxWAAQAG9gAKqv6+AwAAAABJRU5ErkJggg=="
                                      data-src="https://x.anizium.co/assets/anime-poster/fullmetal-alchemist-brotherhood.webp"
                                      class="img-fluid object-cover w-100 d-block border-0" style="height: 335px;">
                                  </div>
                                </a>

                                <img lazy="true"
                                  src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAJCAQAAACRI2S5AAAAEElEQVR42mNkIAAYRxWAAQAG9gAKqv6+AwAAAABJRU5ErkJggg=="
                                  data-src="/assets/images/quality/4k.png"
                                  style="position: absolute; top: 8px; right: 20px; height: 25px; z-index: 10;">
                              </div>
                            </div>
                          </div>
                          <div class="col-6 mb-4">
                            <div class="iq-top-ten-block">
                              <div class="block-image position-relative">
                                <a href="/anime/745549414" router="true" class="overly-images">
                                  <div class="image-box">
                                    <img lazy="true"
                                      src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAJCAQAAACRI2S5AAAAEElEQVR42mNkIAAYRxWAAQAG9gAKqv6+AwAAAABJRU5ErkJggg=="
                                      data-src="https://x.anizium.co/assets/anime-poster/745549414_1659.webp"
                                      class="img-fluid object-cover w-100 d-block border-0" style="height: 335px;">
                                  </div>
                                </a>

                                <img lazy="true"
                                  src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAJCAQAAACRI2S5AAAAEElEQVR42mNkIAAYRxWAAQAG9gAKqv6+AwAAAABJRU5ErkJggg=="
                                  data-src="/assets/images/quality/4k.png"
                                  style="position: absolute; top: 8px; right: 20px; height: 25px; z-index: 10;">
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="trailor-video col-md-3 col-12 mt-lg-0 mt-4 mb-md-0 mb-1 text-lg-right">
                  <style>
                    div#episode_list div:hover {
                      background-color: #333;
                      color: #fff;
                    }

                    #episode_list {
                      scrollbar-width: thin;
                      scrollbar-color: #333 transparent;
                    }
                  </style>

                  <div id="episodes_list_box"
                    style="margin-bottom: 20px; background-color: rgb(34, 34, 34); color: rgb(204, 204, 204); font-family: Arial, sans-serif; font-size: 14px; border-radius: 4px; padding: 10px;">
                    <div style="display: flex; gap: 0; align-items: center; margin-bottom: 10px;">
                      <select id="watchSeasonList"
                        style="width: 50%; padding: 8px; background-color: #333; color: #eee; border: none; border-radius: 4px 0 0 4px; appearance: none; cursor: pointer;">
                        <option value="1">Sezon 1</option>
                        <option value="2" selected="">Sezon 2</option>
                        <option value="3">Sezon 3</option>
                        <option value="4">Sezon 4</option>
                      </select>

                      <button id="animeWatchedSeason" data-transaction="add"
                        style="width: 50%; padding: 8px 12px; background-color: #444; color: #fff; border: none; border-radius: 0 4px 4px 0; cursor: pointer;">
                        İzledim olarak işaretle
                      </button>
                    </div>

                    <div id="episode_list">

                      <div id="episode_table" data-season="1"
                        style="display: none; margin-top: 15px; max-height: 450px; overflow-y: auto; background-color: #1c1c1c; border-radius: 4px; padding: 10px;">

                        <a href="/watch/392217205?season=1&amp;episode=1" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_1_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          1 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=2" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_2_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          2 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=3" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_3_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          3 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=4" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_4_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          4 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=5" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_5_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          5 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=6" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_6_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          6 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=7" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_7_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          7 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=8" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_8_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          8 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=9" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_9_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          9 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=10" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_10_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          10 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=11" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_11_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          11 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=12" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_12_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          12 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=13" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_13_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          13 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=14" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_14_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          14 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=15" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_15_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          15 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=16" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_16_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          16 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=17" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_17_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          17 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=18" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_18_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          18 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=19" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_19_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          19 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=20" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_20_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          20 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=21" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_21_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          21 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=22" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_22_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          22 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=23" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_23_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          23 Bölüm




                        </a>
                        <a href="/watch/392217205?season=1&amp;episode=24" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_1_episode_24_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          24 Bölüm




                        </a>
                      </div>
                      <div id="episode_table" data-season="2"
                        style=" margin-top: 15px; max-height: 450px; overflow-y: auto; background-color: #1c1c1c; border-radius: 4px; padding: 10px;">

                        <a href="/watch/392217205?season=2&amp;episode=1" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_2_episode_1_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          1 Bölüm




                        </a>
                        <a href="/watch/392217205?season=2&amp;episode=2" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_2_episode_2_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          2 Bölüm




                        </a>
                        <a href="/watch/392217205?season=2&amp;episode=3" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_2_episode_3_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          3 Bölüm




                        </a>
                        <a href="/watch/392217205?season=2&amp;episode=4" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_2_episode_4_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          4 Bölüm




                        </a>
                        <a episode-target="true" href="/watch/392217205?season=2&amp;episode=5" router="true"
                          style="background-color: #333; padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_2_episode_5_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          5 Bölüm




                        </a>
                        <a href="/watch/392217205?season=2&amp;episode=6" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_2_episode_6_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          6 Bölüm




                        </a>
                        <a href="/watch/392217205?season=2&amp;episode=7" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_2_episode_7_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          7 Bölüm




                        </a>
                        <a href="/watch/392217205?season=2&amp;episode=8" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_2_episode_8_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          8 Bölüm




                        </a>
                        <a href="/watch/392217205?season=2&amp;episode=9" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_2_episode_9_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          9 Bölüm




                        </a>
                        <a href="/watch/392217205?season=2&amp;episode=10" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_2_episode_10_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          10 Bölüm




                        </a>
                        <a href="/watch/392217205?season=2&amp;episode=11" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_2_episode_11_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          11 Bölüm




                        </a>
                        <a href="/watch/392217205?season=2&amp;episode=12" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_2_episode_12_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          12 Bölüm



                          <span
                            style="background-color: #3c7da0; color: #ddd; font-size: 11px; font-weight: 600; padding: 2px 6px; border-radius: 12px; margin-left: 8px; user-select: none;">OVA</span>
                        </a>
                      </div>
                      <div id="episode_table" data-season="3"
                        style="display: none; margin-top: 15px; max-height: 450px; overflow-y: auto; background-color: #1c1c1c; border-radius: 4px; padding: 10px;">

                        <a href="/watch/392217205?season=3&amp;episode=1" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_1_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          1 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=2" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_2_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          2 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=3" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_3_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          3 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=4" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_4_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          4 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=5" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_5_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          5 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=6" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_6_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          6 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=7" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_7_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          7 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=8" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_8_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          8 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=9" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_9_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          9 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=10" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_10_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          10 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=11" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_11_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          11 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=12" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_12_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          12 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=13" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_13_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          13 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=14" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_14_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          14 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=15" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_15_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          15 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=16" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_16_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          16 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=17" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_17_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          17 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=18" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_18_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          18 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=19" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_19_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          19 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=20" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_20_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          20 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=21" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_21_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          21 Bölüm




                        </a>
                        <a href="/watch/392217205?season=3&amp;episode=22" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_3_episode_22_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          22 Bölüm




                        </a>
                      </div>
                      <div id="episode_table" data-season="4"
                        style="display: none; margin-top: 15px; max-height: 450px; overflow-y: auto; background-color: #1c1c1c; border-radius: 4px; padding: 10px;">

                        <a href="/watch/392217205?season=4&amp;episode=1" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_1_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          1 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=2" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_2_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          2 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=3" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_3_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          3 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=4" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_4_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          4 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=5" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_5_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          5 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=6" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_6_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          6 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=7" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_7_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          7 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=8" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_8_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          8 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=9" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_9_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          9 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=10" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_10_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          10 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=11" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_11_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          11 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=12" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_12_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          12 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=13" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_13_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          13 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=14" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_14_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          14 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=15" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_15_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          15 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=16" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_16_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          16 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=17" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_17_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          17 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=18" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_18_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          18 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=19" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_19_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          19 Bölüm




                        </a>
                        <a href="/watch/392217205?season=4&amp;episode=20" router="true"
                          style=" padding: 8px 12px; margin-bottom: 8px; cursor: pointer; border-radius: 4px; color: #ccc; transition: background-color 0.3s; display: block; text-decoration: none;">
                          <span id="season_4_episode_20_watched"
                            style="display: none; color: #4CAF50; margin-right: 8px;">✔️</span>

                          20 Bölüm




                        </a>
                      </div>
                    </div>
                  </div>

                  <a href="/anime/392217205" router="true"
                    class="video-open playbtn block-images position-relative playbtn_thumbnail">
                    <img class="attachment-medium-large size-medium-large wp-post-image" loading="lazy"
                      src="https://x.anizium.co/assets/anime-details-banner/392217205_1718.webp">

                    <span class="content btn btn-transparant iq-button">
                      <i class="fa fa-play me-2 text-white"></i>
                      <span>Detay sayfası</span>
                    </span>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div id="comment">
      <div class="show-episode section-padding">
        <div class="container-fluid">
          <div class="show-movie-section">
            <div class="streamit-reviews">
              <div id="comments" class="comments-area validate-form">
                <p class="masvideos-noreviews mt-3" id="comment_text" style="display: none;">Yükleniyor...</p>
              </div>

              <div style="text-align: center;" id="sort_box">
                <button id="commentSort" data-type="newest" data-hover="true"
                  class="fw-normal text-decoration-none ms-2"
                  style="color: rgb(255, 255, 255); border: none; width: auto; background-color: rgba(191, 56, 199, 0.55); padding: 6px 12px; border-radius: 6px; transition: 0.3s; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px; font-weight: 500; display: inline-block; margin-right: 10px; margin-bottom: 20px;">
                  En Yeni
                </button>

                <button id="commentSort" data-type="oldest" data-hover="true"
                  class="fw-normal text-decoration-none ms-2"
                  style="color: #fff; border: none; width: auto; background-color: #ffffff40; padding: 6px 12px; border-radius: 6px; transition: 0.3s; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px; font-weight: 500; display: inline-block; margin-right: 10px; margin-bottom: 20px;">
                  En Eski
                </button>

                <button id="commentSort" data-type="mostLiked" data-hover="true"
                  class="fw-normal text-decoration-none ms-2"
                  style="color: #fff; border: none; width: auto; background-color: #ffffff40; padding: 6px 12px; border-radius: 6px; transition: 0.3s; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px; font-weight: 500; display: inline-block; margin-right: 10px; margin-bottom: 20px;">
                  En Çok Beğenilen
                </button>
              </div>

              <div class="container my-4" id="comment_list"></div>

              <div class="text-center" id="moreCommentBox" style="display: none;">
                <div class="iq-button">
                  <button id="commentMore" data-page="1" type="button" class="btn text-uppercase position-relative">Daha
                    Fazla</button>
                </div>
              </div>

              <div class="container my-4 review_form" id="comment_div" style="">
                <div class="comment-respond">
                  <form class="comment-form">
                    <p class="mb-4" id="comment_login" style="display: none;">
                      Yorum yapabilmek için giriş yapmalısınız.
                    </p>

                    <button class="mb-4" id="comment_reply_box"
                      style="display: none;margin-bottom: 15px;background-color: #3a3a3a;color: white;padding: 10px;border-radius: 10px;">
                      Başka bir kullanıcının yorumunu yanıtlıyorsunuz. İptal etmek için tıklayın.
                    </button>

                    <div class="row" id="new_comment_box" style="">
                      <div class="col-md-12">
                        <div class="form-group">
                          <label class="mb-2">
                            Yorumunuz
                            <span class="required">*</span>
                          </label>

                          <textarea id="message" class="form-control" cols="5" rows="8" required="true" minlength="3"
                            maxlength="1000" style="background-color: #1a1a1a;"></textarea>
                        </div>
                      </div>

                      <div class="col-md-12">
                        <div class="mt-3">
                          <input id="spoiler" class="form-check-input" type="checkbox">
                          <label class="form-check-label" for="spoiler" style="margin-left: 5px;">
                            Yorumum spoiler içeriyor
                          </label>
                        </div>
                      </div>

                      <div class="col-md-12">
                        <div class="form-submit mt-4">
                          <div class="iq-button">
                            <button id="commentNew" type="button" class="btn text-uppercase position-relative">
                              <span class="button-text">Gönder</span>
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div id="footer" style="display: inherit;">
    <footer class="footer footer-default">
      <div class="container-fluid">
        <div class="footer-top">
          <div class="row">
            <div class="col-xl-3 col-lg-6 mb-5 mb-lg-0">
              <div class="footer-logo">
                <div class="logo-default">
                  <a class="navbar-brand text-primary" href="index.html">
                    <img class="img-fluid logo" src="/assets/images/logo.png" loading="lazy">
                  </a>
                </div>
              </div>

              <p class="text-uppercase letter-spacing-1 font-size-14 mb-1">4K &amp; TÜRKÇE DUBLAJ</p>
            </div>

            <div class="col-xl-2 col-lg-6 mb-5 mb-lg-0">
              <h4 class="footer-link-title">Sosyal Medya</h4>

              <ul class="list-unstyled footer-menu">
                <li class="mb-3">
                  <a href="https://discord.gg/anizium" target="_blank" class="ms-3">Discord</a>
                </li>

                <li class="mb-3">
                  <a href="https://instagram.com/aniziumtv" target="_blank" class="ms-3">Instagram</a>
                </li>

                <li class="mb-3">
                  <a href="https://youtube.com/@tranizium" target="_blank" class="ms-3">YouTube</a>
                </li>

                <li class="mb-3">
                  <a href="https://tiktok.com/@anizium" target="_blank" class="ms-3">Tiktok</a>
                </li>
              </ul>
            </div>

            <div class="col-xl-2 col-lg-6 mb-5 mb-lg-0">
              <h4 class="footer-link-title">Hızlı Bağlantılar</h4>
              <ul class="list-unstyled footer-menu">
                <li class="mb-3">
                  <a href="/premium" router="true" class="ms-3">Premium</a>
                </li>

                <li class="mb-3">
                  <a href="/animes" router="true" class="ms-3">Animeler</a>
                </li>
              </ul>
            </div>

            <div class="col-xl-5 col-lg-6 mb-5 mb-lg-0">
              <p>
                Dünyanın ilk ve tek 4K Anime izleme platformu Anizium olarak, sevdiğiniz anime serilerini 4K kalite ve
                Türkçe dublajla zenginleştirerek sizlere sunuyoruz.
                <br><br>
                Amacımız, anime dünyasının büyüsünü en yüksek görüntü kalitesi ve en iyi seslendirme deneyimi ile
                birleştirmek.
                <br><br>
              </p>
              <p class="light-text">📮 <b>aniziumdestek@gmail.com</b> üzerinden bizlerle iletişime geçebilirsiniz.</p>
              <p></p>
            </div>
          </div>
        </div>

        <div class="footer-bottom border-top">
          <div class="row align-items-center">
            <div class="col-md-6">
              <ul class="menu list-inline p-0 d-flex flex-wrap align-items-center">
                <li class="menu-item">
                  <a href="/privacy-policy" router="true">Gizlilik Politikası</a>
                </li>

                <li class="menu-item">
                  <a href="/comment-policy" router="true">Yorum Politikası</a>
                </li>

                <li class="menu-item">
                  <a href="/tos" router="true">Şartlar ve Koşullar</a>
                </li>
              </ul>

              <p class="font-size-14">© Anizium Tüm hakları saklıdır.</p>
            </div>

            <div class="col-md-3"></div>

            <!--<div class="col-md-3">
                    <h6 class="font-size-14 pb-1">Uygulamamızı İndirin</h6>

                    <div class="d-flex align-items-center">
                        <a class="app-image" href="https://play.google.com/store/apps/details?id=com.apps.anizium&hl=tr" target="_blank">
                            <img lazy="true" data-src="/assets/images/footer/google-play.webp" loading="lazy">
                        </a>
                    </div>
                </div>-->
          </div>
        </div>
      </div>
    </footer>
  </div>

  <script src="/assets/vendor/sweetalert2/sweetalert2.min.js" async=""></script>
  <script src="/assets/js/plugins/sweet-alert.js" defer=""></script>
  <script src="/assets/js/plugins/fslightbox.js" defer=""></script>
  <script src="/assets/js/core/libs.min.js"></script>
  <script src="/assets/vendor/swiperSlider/swiper.min.js"></script>
  <script src="/assets/vendor/lodash/lodash.min.js"></script>
  <script src="/assets/js/core/external.min.js"></script>
  <script src="/assets/js/plugins/countdown.js"></script>
  <script src="/assets/js/utility.js"></script>
  <script src="/assets/js/setting.js"></script>
  <script src="/assets/js/setting-init.js" defer=""></script>
  <script src="/assets/js/streamit.js" defer=""></script>
  <script src="/assets/js/swiper.js" defer=""></script>
  <script src="/assets/js/jquery-3.5.1.min.js"></script>

  <script>
    apiHost = ["https://api.anizium.co"];
    adminHost = "https://x.anizium.co";

    _klaus = {};
    _cache_links = {};

    const newScript = document.createElement("script");

    const now = new Date();
    const pad = (n) => n.toString().padStart(2, "0");
    const formatted = `${pad(now.getHours())}-${pad(now.getMinutes())}-${pad(now.getDate())}-${pad(now.getMonth() + 1)}-${now.getFullYear()}`;

    newScript.src = `${window.location.origin}/klausBundle.js?v=${window.location.host.includes("metin2") ? new Date().getTime() : formatted}`;
    newScript.async = true;

    document.head.appendChild(newScript);
  </script>

  <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-HB4ZCY9JJC"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-HB4ZCY9JJC');
  </script>
  <script defer=""
    src="https://static.cloudflareinsights.com/beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015"
    integrity="sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ=="
    data-cf-beacon="{&quot;version&quot;:&quot;2024.11.0&quot;,&quot;token&quot;:&quot;366515f3439649e8ba41df941b8a83be&quot;,&quot;server_timing&quot;:{&quot;name&quot;:{&quot;cfCacheStatus&quot;:true,&quot;cfEdge&quot;:true,&quot;cfExtPri&quot;:true,&quot;cfL4&quot;:true,&quot;cfOrigin&quot;:true,&quot;cfSpeedBrain&quot;:true},&quot;location_startswith&quot;:null}}"
    crossorigin="anonymous"></script>


</body>

</html>
