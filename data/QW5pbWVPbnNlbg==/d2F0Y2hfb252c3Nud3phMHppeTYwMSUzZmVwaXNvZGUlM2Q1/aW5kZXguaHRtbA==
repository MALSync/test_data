<html lang="en">

<head prefix="og: https://ogp.me/ns#">

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="color-scheme" content="dark">
  <meta name="theme-color" content="#141414">
  <meta name="description" content="Watch Demon Slayer Episode 5 on AnimeOnsen">
  <meta property="og:site_name" content="AnimeOnsen">
  <meta property="og:title" content="Demon Slayer Episode 5">
  <meta property="og:description" content="Watch Demon Slayer Episode 5 on AnimeOnsen">
  <meta property="og:url" content="https://www.animeonsen.xyz/watch/OnVssnwZa0zIY601?episode=5">
  <meta property="og:image" content="https://api.animeonsen.xyz/v4/image/105x150/OnVssnwZa0zIY601">
  <meta property="og:image:secure_url" content="https://api.animeonsen.xyz/v4/image/105x150/OnVssnwZa0zIY601">
  <meta property="og:image:type" content="image/jpeg">
  <meta property="og:image:width" content="105">
  <meta property="og:image:height" content="150">
  <meta property="og:image:alt" content="Demon Slayer">
  <meta property="og:type" content="video.other">
  <meta name="twitter:card" content="summary">
  <meta name="twitter:title" content="Demon Slayer Episode 5">
  <meta name="twitter:description" content="Watch Demon Slayer Episode 5 on AnimeOnsen">
  <meta name="twitter:image" content="https://api.animeonsen.xyz/v4/image/105x150/OnVssnwZa0zIY601">
  <meta name="twitter:image:alt" content="Image of Demon Slayer Episode 5">
  <link rel="icon" href="https://www.animeonsen.xyz/favicon.ico" type="image/x-icon">
  <link rel="apple-touch-icon" href="https://www.animeonsen.xyz/favicon/192x192.png" sizes="192x192">
  <link rel="apple-touch-icon" href="https://www.animeonsen.xyz/favicon/180x180.png" sizes="180x180">
  <link rel="apple-touch-icon" href="https://www.animeonsen.xyz/favicon/167x167.png" sizes="167x167">
  <link rel="apple-touch-icon" href="https://www.animeonsen.xyz/favicon/152x152.png" sizes="152x152">
  <link rel="apple-touch-icon" href="https://www.animeonsen.xyz/favicon/120x120.png" sizes="120x120">
  <link rel="canonical" href="https://www.animeonsen.xyz/watch/OnVssnwZa0zIY601?episode=5">
  <link rel="manifest" href="/manifest.json">
  <link rel="search" href="https://www.animeonsen.xyz/opensearch.xml" type="application/opensearchdescription+xml"
    title="AnimeOnsen">
  <link rel="dns-prefetch" href="https://www.animeonsen.xyz">
  <link rel="dns-prefetch" href="https://api.animeonsen.xyz">
  <link rel="dns-prefetch" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://api.animeonsen.xyz" crossorigin="use-credentials">
  <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin="anonymous">

  <link rel="stylesheet" href="https://www.animeonsen.xyz/assets/styles/_hidden.css" type="text/css">

  <script src="https://www.animeonsen.xyz/assets/script/service-worker.init.js?v=2.3.5" nonce="" type="text/javascript"
    data-label="service-worker" async="" fetchpriority="high"></script>
  <script src="https://www.animeonsen.xyz/assets/script/watch.js?v=2.3.5" nonce="" type="text/javascript" defer=""
    fetchpriority="high"></script>

  <script src="https://www.googletagmanager.com/gtag/js?id=G-2KTJHSCZMX" nonce="" type="text/javascript"
    async=""></script>
  <script nonce="" async="false">
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());
    gtag('config', 'G-2KTJHSCZMX');
  </script>
  <title>Demon Slayer Episode 5 - AnimeOnsen</title>
  <style>
    @import url(https://fonts.googleapis.com/css2?family=Roboto:wght@100;400;700&display=swap);
  </style>
  <style>
    body,
    html {
      min-height: 100vh
    }

    body {
      backgrou
nd-color: var(--c-Background);
      color: var(--c-Text);
      margin: 0;
      font-family: "Roboto", sans-serif;
      font-weight: 400;
      visibility: visible
    }

    body::-webkit-scrollbar {
      background-color: rgba(0, 0, 0, 0);
      width: .4em;
      height: .4em
    }

    body::-webkit-scrollbar-thumb {
      background-color: var(--c-Submit-0)
    }

    body::-webkit-scrollbar-thumb:hover {
      background-color: var(--c-Submit-1)
    }

    a {
      color: unset;
      text-decoration: none
    }

    * {
      box-sizing: border-box
    }

    *::selection {
      background-color: var(--c-Select-1);
      color: var(--c-Text-1)
    }

    @keyframes skeleton-loader {
      0% {
        background-color: var(--c-Skeleton-0)
      }

      50% {
        background-color: var(--c-Skeleton-1)
      }

      100% {
        background-color: var(--c-Skeleton-0)
      }
    }

    :root {
      --c-Background: #141414;
      --c-Background-1: #1f1f1f;
      --c-Skeleton-0: #343434;
      --c-Skeleton-1: #3d3d3d;
      --c-Select-0: #2a2a2a;
      --c-Select-1: #393939;
      --c-Text: #f2f3f8;
      --c-Text-1: #98989b;
      --c-Submit-0: #3d3d3d;
      --c-Submit-Text-0: #cbcbcd;
      --c-Submit-1: #525252;
      --c-Submit-Text-1: #f2f3f8;
      --c-Remove-0: #4d1919;
      --c-Remove-Text-0: #d1b3b3;
      --c-Remove-1: #5c1e1e;
      --c-Remove-Text-1: #e0cccc;
      --c-Success: #4d936c;
      --c-Success-Text: #112018;
      --c-Success-1: #5fab81;
      --c-Success-1-Text: #234332;
      --c-Fail: #ef2e3e;
      --c-Fail-Text: #1e0b0c;
      --c-Fail-1: #f25461;
      --c-Fail-1-Text: #3c1618
    }

    header {
      position: sticky;
      top: 0;
      z-index: 1;
      filter: drop-shadow(0 20px 13px rgba(0, 0, 0, 0.03)) drop-shadow(0 8px 5px rgba(0, 0, 0, 0.08))
    }

    header nav {
      display: grid;
      background-color: var(--c-Background-1);
      padding: .6em;
      grid-template-columns: max-content 1fr;
      justify-items: center;
      gap: 1.3em;
      overflow: hidden
    }

    header nav div.nav-title {
      display: grid;
      width: 100%;
      align-items: center
    }

    header nav div.nav-title a {
      padding: .3em
    }

    header nav div.nav-title a h1 {
      display: grid;
      margin: .4em;
      font-size: 1.2em;
      text-align: center
    }

    header nav div.nav-title a h1 svg {
      width: auto;
      height: 1em
    }

    header nav div.nav-links {
      display: grid;
      width: 100%;
      grid-template-columns: repeat(2, auto) 1fr auto;
      align-items: center;
      gap: 0 .3em
    }

    @media only screen and (max-width: 768px) {
      header nav div.nav-links {
        grid-template-columns: repeat(3, auto) 1fr
      }
    }

    header nav div.nav-links div.nav-item {
      display: grid;
      height: 100%;
      grid-template-rows: 1fr;
      justify-content: center
    }

    header nav div.nav-links div.nav-item:nth-child(3) {
      grid-template-columns: 1fr
    }

    header nav div.nav-links div.nav-item:nth-child(3) a.link {
      display: none
    }

    header nav div.nav-links div.nav-item:nth-child(4) {
      justify-content: end
    }

    @media only screen and (max-width: 768px) {
      header nav div.nav-links div.nav-item:nth-child(3) a.link {
        display: unset
      }

      header nav div.nav-links div.nav-item:nth-child(3) div.search-box {
        display: none
      }
    }

    header nav div.nav-links div.nav-item div.search-box div.input {
      display: grid;
      height: 100%;
      grid-template-rows: 1fr
    }

    header nav div.nav-links div.nav-item div.search-box div.input form {
      display: grid;
      grid-template-columns: 1fr auto;
      grid-template-rows: inherit
    }

    header nav div.nav-links div.nav-item div.search-box div.input form input[name=q] {
      background-color: var(--c-Select-0);
      min-width: 8em;
      width: 100%;
      padding: 0 1em;
      font-size: 1em;
      border: none;
      outline: none;
      transition: .1s ease-in-out
    }

    header nav div.nav-links div.nav-item div.search-box div.input form input[name=q]:focus {
      background-color: var(--c-Select-1)
    }

    header nav div.nav-links div.nav-item div.search-box div.input form button {
      display: grid;
      background-color: var(--c-Select-0);
      color: var(--c-Text-1);
      padding: 0 .4em;
      font-size: 2em;
      justify-content: center;
      align-items: center;
      border: none;
      outline: none;
      transition: .1s ease-in-out
    }

    header nav div.nav-links div.nav-item div.search-box div.input form button:hover {
      color: var(--c-Text);
      cursor: pointer
    }

    header nav div.nav-links div.nav-item div.search-box div.input form button svg {
      width: 1em;
      height: 1em
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions {
      position: absolute;
      width: 100%;
      margin-top: .3em;
      pointer-events: none;
      opacity: 0;
      transition: opacity .1s ease-in-out
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions.active {
      opacity: 1;
      pointer-events: unset
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list {
      display: grid;
      background-color: var(--c-Select-0);
      max-height: 19.35em;
      margin: 0;
      padding: 0;
      list-style: none;
      overflow: auto
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list::-webkit-scrollbar {
      background-color: rgba(0, 0, 0, 0);
      width: .4em
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list::-webkit-scrollbar-thumb {
      background-color: var(--c-Submit-0)
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list::-webkit-scrollbar-thumb:hover {
      background-color: var(--c-Submit-1)
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list li.ais-Hits-item div.content {
      display: grid;
      grid-template-columns: auto 1fr;
      background-color: var(--c-Select-0);
      color: var(--c-Text-1);
      padding: .6em;
      gap: .3em;
      transition: .1s ease-in-out
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list li.ais-Hits-item div.content:hover {
      background-color: var(--c-Select-1);
      color: var(--c-Text);
      cursor: pointer
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list li.ais-Hits-item div.content:hover div.content-image img {
      opacity: .8
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list li.ais-Hits-item div.content div.content-image {
      width: 70px;
      height: 100px;
      overflow: hidden
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list li.ais-Hits-item div.content div.content-image img {
      display: block;
      width: inherit;
      height: inherit;
      transition: .1s ease-in-out;
      object-fit: cover
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list li.ais-Hits-item div.content div.content-title {
      padding: .3em
    }

    header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list li.ais-Hits-item div.content div.content-title span {
      display: block;
      display: -webkit-box;
      text-align: left;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      word-break: break-word;
      overflow: hidden
    }

    @media only screen and (max-width: 500px) {
      header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list li.ais-Hits-item div.content {
        grid-template-columns: 1fr
      }

      header nav div.nav-links div.nav-item div.search-box div.suggestions div.ais-Hits ol.ais-Hits-list li.ais-Hits-item div.content div.content-image {
        display: none
      }
    }

    header nav div.nav-links div.nav-item a.link {
      display: block;
      width: 100%
    }

    header nav div.nav-links div.nav-item a.link.active div,
    header nav div.nav-links div.nav-item a.link div:hover {
      background-color: var(--c-Select-0);
      color: var(--c-Text);
      cursor: pointer
    }

    header nav div.nav-links div.nav-item a.link div {
      display: flex;
      width: 100%;
      height: 100%;
      color: var(--c-Text-1);
      margin: 0;
      padding: .8em;
      justify-content: center;
      align-items: center;
      transition: .1s ease-in-out
    }

    header nav div.nav-links div.nav-item a.link div span {
      display: inline;
      text-transform: uppercase
    }

    header nav div.nav-links div.nav-item a.link div svg {
      width: 1em;
      height: 1em;
      font-size: 2em
    }

    header nav div.nav-links div.nav-item a.link div svg.alt {
      display: none
    }

    @media only screen and (max-width: 480px) {
      header nav div.nav-links div.nav-item a.link div span {
        display: none
      }

      header nav div.nav-links div.nav-item a.link div svg.alt {
        display: unset
      }
    }

    @media only screen and (max-width: 600px) {
      header nav {
        grid-template-columns: unset;
        grid-template-rows: max-content 1fr;
        gap: .3em
      }

      header nav div.nav-title {
        justify-content: center
      }

      header nav div.nav-links {
        grid-template-columns: repeat(4, auto)
      }

      header nav div.nav-links div.nav-item {
        grid-template-rows: unset;
        grid-template-columns: 1fr
      }

      header nav div.nav-links div.nav-item:nth-child(4) {
        justify-content: center
      }
    }

    main {
      display: flex;
      width: 100vw;
      height: 100vh;
      justify-content: center
    }

    main div.container {
      position: relative;
      width: 100%;
      height: 100%
    }

    main div.container div.media-container {
      width: 100%;
      height: 100%;
      overflow: hidden
    }

    main div.container div.media-container div.ao-player {
      width: 100%;
      height: 100%
    }

    @media only screen and (max-width: 768px) {
      main div.media-container div.ao-player {
        font-size: .8em
      }
    }
  </style>
  <style>
    body div.toast-container {
      display: flex;
      position: fixed;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      padding: 1em;
      grid-template-columns: max-content;
      grid-template-rows: max-content;
      align-items: flex-end;
      pointer-events: none;
      transition: .1s ease-in-out;
      z-index: 999
    }

    body div.toast-container.hide {
      opacity: 0
    }

    body div.toast-container.alert {
      background-color: rgba(0, 0, 0, .5);
      justify-content: center;
      align-items: center;
      pointer-events: all
    }

    body div.toast-container div.toast {
      display: grid;
      background-color: var(--c-Select-0);
      padding: .8em;
      grid-template-columns: 1fr auto;
      gap: .6em;
      align-items: center;
      pointer-events: visible;
      filter: drop-shadow(0 10px 8px rgba(0, 0, 0, 0.04)) drop-shadow(0 4px 3px rgba(0, 0, 0, 0.1))
    }

    body div.toast-container div.toast:hover {
      cursor: pointer
    }

    body div.toast-container div.toast div.toast-icon {
      font-size: 1.6em;
      width: 1em;
      height: 1em
    }

    body div.toast-container.alert div.toast {
      grid-template-columns: 1fr;
      grid-template-rows: repeat(2, minmax(0, 1fr))
    }

    body div.toast-container.alert div.toast:hover {
      cursor: unset
    }

    body div.toast-container.alert div.toast>div {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: .6em
    }

    body div.toast-container.alert div.toast>span {
      padding: 0 .6em
    }

    body div.toast-container.alert div.toast>div button {
      display: grid;
      background-color: var(--background);
      color: var(--text);
      padding: .6em 0;
      width: 100%;
      height: 3.6em;
      justify-content: center;
      align-items: center;
      border: none;
      --background: var(--c-Skeleton-0);
      --background-hover: var(--c-Skeleton-1);
      --text: var(--c-Text);
      --text-hover: var(--c-Text)
    }

    body div.toast-container.alert div.toast>div button:hover {
      cursor: pointer;
      transition: .1s ease-in-out;
      --background: var(--background-hover);
      --text: var(--text-hover)
    }
  </style>
  <style>
    .ao-player div.ao-player-playback {
      display: grid;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      justify-content: center;
      align-items: center;
      pointer-events: none
    }

    .ao-player div.ao-player-playback button {
      background: none;
      padding: 0;
      font-size: 6em;
      border: none;
      outline: none;
      pointer-events: visible;
      transition: opacity .1s ease-in-out
    }

    .ao-player div.ao-player-playback button,
    .ao-player div.ao-player-playback button svg {
      display: block
    }

    .ao-player div.ao-player-playback button:hover {
      cursor: pointer
    }

    .ao-player div.ao-player-playback button svg,
    .ao-player div.ao-player-playback button i {
      color: inherit;
      width: 1em;
      height: 1em
    }

    .ao-player div.ao-player-playback button i.loading {
      display: grid;
      position: relative;
      justify-items: center;
      align-items: center
    }

    .ao-player div.ao-player-playback button i.loading::after {
      content: "";
      display: block;
      position: absolute;
      width: .5em;
      height: .5em;
      border-top: var(--thickness) solid currentColor;
      border-right: var(--thickness) solid rgba(0, 0, 0, 0);
      border-bottom: var(--thickness) solid currentColor;
      border-left: var(--thickness) solid rgba(0, 0, 0, 0);
      border-radius: 100%;
      animation: loading 1.6s ease-in-out infinite;
      --thickness: 0.08em
    }

    @keyframes loading {
      0% {
        transform: rotate(0deg)
      }

      25% {
        transform: rotate(90deg)
      }

      50% {
        transform: rotate(180deg)
      }

      75% {
        transform: rotate(270deg)
      }

      100% {
        transform: rotate(360deg)
      }
    }

    .ao-player div.ao-player-seekbar-container {
      display: flex;
      height: .6em;
      justify-content: center;
      align-items: center
    }

    .ao-player div.ao-player-seekbar-container div.ao-player-seekbar {
      position: relative;
      background-color: rgba(255, 255, 255, .25);
      width: 100%;
      height: .3em;
      pointer-events: visible;
      transition: .1s ease-in-out
    }

    .ao-player div.ao-player-seekbar-container div.ao-player-seekbar:hover {
      height: .6em;
      cursor: pointer
    }

    .ao-player div.ao-player-seekbar-container div.ao-player-seekbar:hover div.ao-player-seekbar-current::after {
      top: -0.7em;
      right: -1em;
      width: 2em;
      height: 2em;
      cursor: grab
    }

    .ao-player div.ao-player-seekbar-container div.ao-player-seekbar:active div.ao-player-seekbar-current::after {
      cursor: grabbing
    }

    .ao-player div.ao-player-seekbar-container div.ao-player-seekbar div.ao-player-seekbar-current {
      position: absolute;
      background-color: currentColor;
      left: 0;
      width: 0;
      height: inherit
    }

    .ao-player div.ao-player-seekbar-container div.ao-player-seekbar div.ao-player-seekbar-current::after {
      content: "";
      position: absolute;
      background-color: inherit;
      top: -0.35em;
      right: -0.5em;
      width: 1em;
      height: 1em;
      border-radius: 100%;
      transition: .1s ease-in-out
    }

    .ao-player div.ao-player-seekbar-container div.ao-player-seekbar div.ao-player-seekbar-buffered {
      position: absolute;
      background-color: rgba(255, 255, 255, .25);
      left: 0;
      height: inherit
    }

    div.controls-mini-l div.ao-player-time-container {
      font-size: 1.3em;
      user-select: none
    }

    div.controls-mini-l div.ao-player-time-container div.ao-player-time {
      color: var(--c-Text-1)
    }

    div.controls-mini-l div.ao-player-time-container div.ao-player-time span.ao-player-time-current,
    div.controls-mini-l div.ao-player-time-container div.ao-player-time span.ao-player-time-duration {
      color: var(--c-Text)
    }

    .ao-player div.ao-player-seek,
    .ao-player div.ao-player-rewind {
      display: flex;
      justify-content: right
    }

    .ao-player div.ao-player-seek button,
    .ao-player div.ao-player-rewind button {
      background: none;
      padding: 0;
      font-size: 3em;
      border: none;
      pointer-events: visible;
      outline: none
    }

    .ao-player div.ao-player-seek button:hover,
    .ao-player div.ao-player-rewind button:hover {
      cursor: pointer
    }

    .ao-player div.ao-player-seek button svg,
    .ao-player div.ao-player-rewind button svg {
      display: block;
      color: inherit;
      width: 1em;
      height: 1em
    }

    @media only screen and (max-width: 600px) {
      .ao-player div.ao-player-seek {
        display: none
      }
    }

    @media only screen and (max-width: 460px) {
      .ao-player div.ao-player-rewind {
        display: none
      }
    }

    .ao-player div.ao-player-bookmark {
      display: flex;
      justify-content: right
    }

    .ao-player div.ao-player-bookmark button {
      background: none;
      padding: 0;
      font-size: 3em;
      border: none;
      pointer-events: visible;
      outline: none
    }

    .ao-player div.ao-player-bookmark button,
    .ao-player div.ao-player-bookmark button svg {
      display: block
    }

    .ao-player div.ao-player-bookmark button:hover {
      cursor: pointer
    }

    .ao-player div.ao-player-bookmark button svg {
      color: inherit;
      width: 1em;
      height: 1em
    }

    @media only screen and (max-width: 520px) {
      .ao-player div.ao-player-bookmark {
        display: none
      }
    }

    .ao-player div.ao-player-volume-container {
      display: grid;
      grid-template-columns: repeat(2, auto);
      gap: 1.6em;
      justify-content: right;
      align-items: center;
      pointer-events: visible
    }

    .ao-player div.ao-player-volume-container:hover div.ao-player-volume {
      opacity: 1;
      pointer-events: initial
    }

    .ao-player div.ao-player-volume-container button {
      background: none;
      padding: 0;
      font-size: 2.4em;
      border: none;
      outline: none;
      pointer-events: visible
    }

    .ao-player div.ao-player-volume-container button,
    .ao-player div.ao-player-volume-container button svg {
      display: block
    }

    .ao-player div.ao-player-volume-container button:hover {
      cursor: pointer
    }

    .ao-player div.ao-player-volume-container button svg {
      color: inherit;
      width: 1em;
      height: 1em
    }

    .ao-player div.ao-player-volume-container div.ao-player-volume {
      position: relative;
      background-color: rgba(255, 255, 255, .25);
      width: 6em;
      height: .3em;
      pointer-events: visible;
      transition: .1s ease-in-out;
      opacity: 0;
      pointer-events: none
    }

    .ao-player div.ao-player-volume-container div.ao-player-volume:hover {
      height: .6em;
      cursor: pointer
    }

    .ao-player div.ao-player-volume-container div.ao-player-volume:hover div.ao-player-volume-current::after {
      top: -0.7em;
      right: -1em;
      width: 2em;
      height: 2em;
      cursor: grab
    }

    .ao-player div.ao-player-volume-container div.ao-player-volume:active div.ao-player-volume-current::after {
      cursor: grabbing
    }

    .ao-player div.ao-player-volume-container div.ao-player-volume div.ao-player-volume-current {
      position: absolute;
      background-color: currentColor;
      left: 0;
      width: 0;
      height: inherit
    }

    .ao-player div.ao-player-volume-container div.ao-player-volume div.ao-player-volume-current::after {
      content: "";
      position: absolute;
      background-color: currentColor;
      top: -0.35em;
      right: -0.5em;
      width: 1em;
      height: 1em;
      border-radius: 100%;
      transition: .1s ease-in-out
    }

    .ao-player div.ao-player-subtitles-container {
      display: grid;
      position: relative;
      justify-content: right;
      align-items: center;
      pointer-events: visible;
      z-index: 1
    }

    .ao-player div.ao-player-subtitles-container:hover div.ao-player-volume {
      opacity: 1;
      pointer-events: initial
    }

    .ao-player div.ao-player-subtitles-container div.ao-player-subtitles-select {
      position: absolute;
      background-color: var(--c-Select-0);
      top: -6em;
      right: 0;
      padding: 1em;
      width: auto;
      transition: opacity .1s ease-in-out
    }

    .ao-player div.ao-player-subtitles-container div.ao-player-subtitles-select::before {
      content: "Subtitles";
      display: block;
      margin: 0 0 .2em 0
    }

    .ao-player div.ao-player-subtitles-container div.ao-player-subtitles-select.hidden {
      opacity: 0;
      cursor: none;
      pointer-events: none
    }

    .ao-player div.ao-player-subtitles-container div.ao-player-subtitles-select select {
      display: block;
      background: none;
      color: var(--c-Text-1);
      padding: .3em 0;
      font-size: 1.2em;
      border: none;
      outline: none
    }

    .ao-player div.ao-player-subtitles-container div.ao-player-subtitles-select select:focus-visible {
      background-color: var(--c-Select-0);
      transition: background-color .1s ease-in-out
    }

    .ao-player div.ao-player-subtitles-container div.ao-player-subtitles-select select:hover {
      cursor: pointer
    }

    .ao-player div.ao-player-subtitles-container div.ao-player-subtitles-select select option {
      background: var(--c-Select-0);
      color: var(--c-Text);
      text-align: left
    }

    .ao-player div.ao-player-subtitles-container button {
      background: none;
      padding: 0;
      font-size: 2.6em;
      border: none;
      outline: none;
      pointer-events: visible
    }

    .ao-player div.ao-player-subtitles-container button,
    .ao-player div.ao-player-subtitles-container button svg {
      display: block
    }

    .ao-player div.ao-player-subtitles-container button:hover {
      cursor: pointer
    }

    .ao-player div.ao-player-subtitles-container button svg {
      color: inherit;
      width: 1em;
      height: 1em
    }

    .ao-player div.ao-player-subtitles-exit {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 1;
      pointer-events: all
    }

    .ao-player div.ao-player-subtitles-exit.hidden {
      display: none
    }

    .ao-player div.ao-player-fullscreen {
      display: flex;
      justify-content: right
    }

    .ao-player div.ao-player-fullscreen button {
      background: none;
      padding: 0;
      font-size: 3em;
      border: none;
      pointer-events: visible;
      outline: none
    }

    .ao-player div.ao-player-fullscreen button:hover {
      cursor: pointer
    }

    .ao-player div.ao-player-fullscreen button svg {
      color: inherit;
      width: 1em;
      height: 1em
    }

    .ao-player div.ao-player-fullscreen button,
    .ao-player div.ao-player-fullscreen button svg {
      display: block
    }

    .ao-player div.ao-player-metadata {
      display: grid;
      position: absolute;
      top: 0;
      right: 0;
      left: 0;
      margin: 2em;
      grid-template-columns: auto minmax(0, 1fr) max-content;
      gap: 1.6em;
      justify-content: left;
      user-select: none;
      pointer-events: none
    }

    .ao-player div.ao-player-metadata.hidden.paused div.ao-player-metadata-action {
      opacity: 0;
      cursor: none;
      pointer-events: none
    }

    .ao-player div.ao-player-metadata.hidden div.ao-player-metadata-navigation,
    .ao-player div.ao-player-metadata.hidden div.ao-player-metadata-text {
      opacity: 0;
      cursor: none;
      pointer-events: none
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-navigation {
      display: grid;
      justify-content: center;
      align-items: center;
      transition: opacity .1s ease-in-out
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-navigation button {
      background: none;
      padding: 0;
      font-size: 3em;
      border: none;
      outline: none;
      pointer-events: visible
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-navigation button,
    .ao-player div.ao-player-metadata div.ao-player-metadata-navigation button svg {
      display: block
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-navigation button:hover {
      cursor: pointer
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-navigation button svg {
      color: inherit;
      width: 1em;
      height: 1em
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-text {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: max-content max-content;
      gap: .3em;
      pointer-events: visible;
      transition: opacity .1s ease-in-out
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-text span.ao-player-metadata-title {
      display: block;
      display: -webkit-box;
      color: var(--c-Text);
      font-size: 1.6em;
      height: 1.2em;
      -webkit-line-clamp: 1;
      -webkit-box-orient: vertical;
      word-break: break-all;
      overflow: hidden
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-text select.ao-player-metadata-episode {
      display: block;
      background: none;
      color: var(--c-Text);
      width: 100%;
      padding: 0;
      font-size: 1em;
      border: none;
      outline: none;
      appearance: none;
      transition: color .1s ease-in-out;
      text-overflow: ellipsis
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-text select.ao-player-metadata-episode:hover {
      cursor: pointer
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-text select.ao-player-metadata-episode option {
      background: var(--c-Select-0);
      color: var(--c-Text);
      text-align: left
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-action {
      display: grid;
      justify-content: right;
      align-items: center;
      transition: opacity .1s ease-in-out
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-action button.ao-player-metadata-action-button {
      display: grid;
      background-color: var(--c-Select-0);
      color: var(--c-Text-1);
      padding: 1em;
      width: 100%;
      justify-content: center;
      align-items: center;
      border: none;
      pointer-events: visible;
      transition: .1s ease-in-out;
      filter: drop-shadow(0 10px 8px rgba(0, 0, 0, 0.04)) drop-shadow(0 4px 3px rgba(0, 0, 0, 0.1))
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-action button.ao-player-metadata-action-button:hover {
      background-color: var(--c-Select-1);
      color: var(--c-Text);
      cursor: pointer
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-action button.ao-player-metadata-action-button.hidden {
      opacity: 0;
      cursor: none;
      pointer-events: none
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-action button.ao-player-metadata-action-button[hidden] {
      display: none
    }

    .ao-player div.ao-player-metadata div.ao-player-metadata-action button.ao-player-metadata-action-button span {
      font-size: 1.6em;
      font-weight: 700;
      text-transform: uppercase;
      transition: font-size .1s ease-in-out
    }

    @media only screen and (max-width: 768px) {
      .ao-player div.ao-player-metadata div.ao-player-metadata-action button.ao-player-metadata-action-button span {
        font-size: 1.3em
      }
    }

    div.ao-player {
      display: inline-block;
      position: relative;
      background-color: #000;
      color: var(--c-Text)
    }

    div.ao-player:root {
      --c-Background: #141414;
      --c-Background-1: #1f1f1f;
      --c-Skeleton-0: #343434;
      --c-Skeleton-1: #3d3d3d;
      --c-Select-0: #2a2a2a;
      --c-Select-1: #393939;
      --c-Text: #f2f3f8;
      --c-Text-1: #98989b
    }

    div.ao-player div.ao-player-media,
    div.ao-player div.ao-player-media video {
      width: 100%;
      height: 100%;
      outline: none;
      pointer-events: none
    }

    div.ao-player div.ao-player-media div.libassjs-canvas-parent {
      transition: opacity .1s ease-in-out
    }

    div.ao-player div.ao-player-media div.libassjs-canvas-parent.hidden {
      opacity: 0
    }

    div.ao-player div.ao-player-controls {
      position: absolute;
      background-color: rgba(0, 0, 0, .45);
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      pointer-events: none;
      transition: opacity .1s ease-in-out, background-color .1s ease-in-out
    }

    div.ao-player div.ao-player-controls.hidden {
      background-color: rgba(0, 0, 0, 0);
      cursor: none
    }

    div.ao-player div.ao-player-controls.hidden div.ao-player-playback button:not([loading]),
    div.ao-player div.ao-player-controls.hidden div.ao-player-controls-mini-container {
      opacity: 0
    }

    div.ao-player div.ao-player-block {
      display: none;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      pointer-events: none
    }

    div.ao-player div.ao-player-block.block {
      display: block;
      cursor: none;
      pointer-events: all
    }

    div.ao-player div.ao-player-controls-mini-container {
      display: grid;
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      margin: 2em;
      grid-template-rows: repeat(2, auto);
      gap: 1em;
      pointer-events: all;
      transition: opacity .1s ease-in-out
    }

    div.ao-player div.ao-player-controls-mini-container div.ao-player-controls-mini {
      display: grid;
      grid-template-columns: repeat(2, minmax(0, 1fr));
      align-items: center
    }

    div.ao-player div.ao-player-controls-mini-container div.ao-player-controls-mini div.controls-mini-l,
    div.ao-player div.ao-player-controls-mini-container div.ao-player-controls-mini div.controls-mini-r {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(0, auto));
      gap: 1.6em;
      align-items: center
    }

    div.ao-player div.ao-player-controls-mini-container div.ao-player-controls-mini div.controls-mini-l {
      justify-content: left
    }

    div.ao-player div.ao-player-controls-mini-container div.ao-player-controls-mini div.controls-mini-r {
      justify-content: right
    }
  </style>
</head>

<body>
  <main>
    <div class="container">
      <div class="media-container">
        <div class="ao-player">
          <div class="ao-player-media"><video autoplay="" disablepictureinpicture="" preload="auto"
              src="blob:https://www.animeonsen.xyz/5c2b0d5a-9249-48d4-9b84-4c5dc765abf0"></video>
            <div class="libassjs-canvas-parent" style="position: relative;"><canvas class="libassjs-canvas"
                style="display: block; position: absolute; width: 1658px; height: 932px; top: -983.7px; left: 0px; pointer-events: none;"
                width="2072" height="1165"></canvas></div>
          </div>
          <div class="ao-player-controls">
            <div class="ao-player-playback"><button title="Play"><svg viewBox="0 0 24 24" fill="currentColor">
                  <path d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M8 5v14l11-7z"></path>
                </svg></button>
              <div class="ao-player-subtitles-exit hidden"></div>
            </div>
            <div class="ao-player-controls-mini-container">
              <div class="ao-player-seekbar-container">
                <div class="ao-player-seekbar" draggable="true">
                  <div class="ao-player-seekbar-buffered"></div>
                  <div class="ao-player-seekbar-current"></div>
                </div>
              </div>
              <div class="ao-player-controls-mini">
                <div class="controls-mini-l">
                  <div class="ao-player-time-container">
                    <div class="ao-player-time"><span class="ao-player-time-current">0:00</span> / <span
                        class="ao-player-time-duration">23:40</span></div>
                  </div>
                  <div class="ao-player-rewind"><button title="Rewind 5 seconds"><svg viewBox="0 0 24 24"
                        fill="currentColor">
                        <path d="M0 0h24v24H0z" fill="none"></path>
                        <path d="M11 18V6l-8.5 6 8.5 6zm.5-6l8.5 6V6l-8.5 6z"></path>
                      </svg></button></div>
                  <div class="ao-player-seek"><button title="Seek 5 seconds"><svg viewBox="0 0 24 24"
                        fill="currentColor">
                        <path d="M0 0h24v24H0z" fill="none"></path>
                        <path d="M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z"></path>
                      </svg></button></div>
                  <div class="ao-player-bookmark"><button data-set="false" title="Bookmark this episode"><svg
                        viewBox="0 0 24 24" fill="currentColor">
                        <path d="M0 0h24v24H0z" fill="none"></path>
                        <path
                          d="M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z">
                        </path>
                      </svg></button></div>
                </div>
                <div class="controls-mini-r">
                  <div class="ao-player-volume-container">
                    <div class="ao-player-volume" draggable="true">
                      <div class="ao-player-volume-current" style="width: 100%;"></div>
                    </div><button title="Click to mute"><svg viewBox="0 0 24 24" fill="currentColor">
                        <path d="M0 0h24v24H0z" fill="none"></path>
                        <path
                          d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z">
                        </path>
                      </svg></button>
                  </div>
                  <div class="ao-player-subtitles-container"><button title="Toggle subtitles"><svg viewBox="0 0 24 24"
                        fill="currentColor">
                        <path d="M0 0h24v24H0z" fill="none"></path>
                        <path
                          d="M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 7H9.5v-.5h-2v3h2V13H11v1c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1zm7 0h-1.5v-.5h-2v3h2V13H18v1c0 .55-.45 1-1 1h-3c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1z">
                        </path>
                      </svg></button>
                    <div class="ao-player-subtitles-select hidden"><select>
                        <option value="none">None</option>
                        <option value="en-US" selected="">English</option>
                      </select></div>
                  </div>
                  <div class="ao-player-fullscreen"><button title="Full screen"><svg viewBox="0 0 24 24"
                        fill="currentColor">
                        <path d="M0 0h24v24H0z" fill="none"></path>
                        <path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"></path>
                      </svg></button></div>
                </div>
              </div>
            </div>
          </div>
          <div class="ao-player-block"></div>
          <div class="ao-player-metadata">
            <div class="ao-player-metadata-navigation"><button title="Details"><svg viewBox="0 0 24 24"
                  fill="currentColor">
                  <path d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path>
                </svg></button></div>
            <div class="ao-player-metadata-text"><span class="ao-player-metadata-title">Demon Slayer</span><select
                class="ao-player-metadata-episode">
                <option value="episode-1">Episode 1: Cruelty</option>
                <option value="episode-2">Episode 2: Trainer Sakonji Urokodaki</option>
                <option value="episode-3">Episode 3: Sabito And Makomo</option>
                <option value="episode-4">Episode 4: Final Selection</option>
                <option value="episode-5" selected="">Episode 5: My Own Steel</option>
                <option value="episode-6">Episode 6: Swordsman Accompanying A Demon.mp4</option>
                <option value="episode-7">Episode 7: Muzan Kibutsuji</option>
                <option value="episode-8">Episode 8: The Smell Of Enchanting Blood</option>
                <option value="episode-9">Episode 9: Temari Demon And Arrow Demon</option>
                <option value="episode-10">Episode 10: Together Forever</option>
                <option value="episode-11">Episode 11: Tsuzumi Mansion</option>
                <option value="episode-12">Episode 12: The Boar Bares Its Fangs, Zenitsu Sleeps</option>
                <option value="episode-13">Episode 13: Something More Important Than Life</option>
                <option value="episode-14">Episode 14: The House With The Wisteria Family Crest</option>
                <option value="episode-15">Episode 15: Mount Natagumo</option>
                <option value="episode-16">Episode 16: Letting Someone Else Go First</option>
                <option value="episode-17">Episode 17: You Must Master A Single Thing</option>
                <option value="episode-18">Episode 18: A Forged Bond</option>
                <option value="episode-19">Episode 19: Hinokami</option>
                <option value="episode-20">Episode 20: Pretend Family</option>
                <option value="episode-21">Episode 21: Against Corps Rules</option>
                <option value="episode-22">Episode 22: Master Of The Mansion</option>
                <option value="episode-23">Episode 23: Hashira Meeting</option>
                <option value="episode-24">Episode 24: Rehabilitation Training</option>
                <option value="episode-25">Episode 25: Tsuguko, Kanao Tsuyuri</option>
                <option value="episode-26">Episode 26: New Mission</option>
              </select></div>
            <div class="ao-player-metadata-action"><button class="ao-player-metadata-action-button hidden"
                aria-label="Skip Button" hidden=""><span></span></button></div>
          </div>
        </div>
      </div>
    </div>

    <meta name="ao-api-origin" content="https://api.animeonsen.xyz">
    <meta name="ao-content-id" content="OnVssnwZa0zIY601">
    <meta name="ao-content-mal-url" content="https://myanimelist.net/anime/38000">
    <meta name="ao-content-episode" content="5">
    <meta name="ao-content-episode-total" content="26">

    <script src="/assets/script/vendor/dash.js/dist/dash.mediaplayer.min.js?v=4.5.0" nonce=""
      type="text/javascript"></script>
    <script src="/assets/script/vendor/subtitles-octopus/dist/js/subtitles-octopus.js?v=4.0.0" nonce=""
      type="text/javascript"></script>
  </main>
  <script
    nonce="">(function () { var js = "window['__CF$cv$params']={r:'810c2fde3990161a',t:'MTY5NjQwOTUyOC41NTIwMDA='};_cpo=document.createElement('script');_cpo.nonce='51eY/rdh9RJmpgVeLocZoP+pRXff1LUYaDpe7FbVkbk=',_cpo.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js',document.getElementsByTagName('head')[0].appendChild(_cpo);"; var _0xh = document.createElement('iframe'); _0xh.height = 1; _0xh.width = 1; _0xh.style.position = 'absolute'; _0xh.style.top = 0; _0xh.style.left = 0; _0xh.style.border = 'none'; _0xh.style.visibility = 'hidden'; document.body.appendChild(_0xh); function handler() { var _0xi = _0xh.contentDocument || _0xh.contentWindow.document; if (_0xi) { var _0xj = _0xi.createElement('script'); _0xj.nonce = '51eY/rdh9RJmpgVeLocZoP+pRXff1LUYaDpe7FbVkbk='; _0xj.innerHTML = js; _0xi.getElementsByTagName('head')[0].appendChild(_0xj); } } if (document.readyState !== 'loading') { handler(); } else if (window.addEventListener) { document.addEventListener('DOMContentLoaded', handler); } else { var prev = document.onreadystatechange || function () { }; document.onreadystatechange = function (e) { prev(e); if (document.readyState !== 'loading') { document.onreadystatechange = prev; handler(); } }; } })();</script>
  <iframe height="1" width="1"
    style="position: absolute; top: 0px; left: 0px; border: none; visibility: hidden;"></iframe>
</body>

</html>