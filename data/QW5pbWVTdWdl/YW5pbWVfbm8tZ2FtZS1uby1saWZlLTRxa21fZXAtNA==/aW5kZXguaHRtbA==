<html data-aid="a9b4f551ebed">

<head>
  <script async=""
    src="https://count-server.sharethis.com/v2.0/get_counts?cb=window.__sharethis__.cb&amp;url=https%3A%2F%2Fanimesuge.to%2Fanime%2Fno-game-no-life-4qkm"></script>
  <script async=""
    src="https://whos.amung.us/pingjs/?k=a9b4f551ebed&amp;c=s&amp;x=https%3A%2F%2Fanimesuge.to%2Fanime%2Fno-game-no-life-4qkm%2Fep-4&amp;v=29&amp;r=7950&amp;t=https://animesuge.to/anime/no-game-no-life-4qkm/ep-4"></script>
  <meta http-equiv="origin-trial"
    content="Az520Inasey3TAyqLyojQa8MnmCALSEU29yQFW8dePZ7xQTvSt73pHazLFTK5f7SyLUJSo2uKLesEtEa9aUYcgMAAACPeyJvcmlnaW4iOiJodHRwczovL2dvb2dsZS5jb206NDQzIiwiZmVhdHVyZSI6IkRpc2FibGVUaGlyZFBhcnR5U3RvcmFnZVBhcnRpdGlvbmluZyIsImV4cGlyeSI6MTcyNTQwNzk5OSwiaXNTdWJkb21haW4iOnRydWUsImlzVGhpcmRQYXJ0eSI6dHJ1ZX0=">
  <meta charset="utf-8">
  <title>AnimeSuge - No Game, No Life Watch Anime Online</title>
  <meta name="description"
    content="Watch No Game, No Life online in HD and download all episodes of No Game, No Life here!">
  <meta name="keywords"
    content="stream No Game, No Life anime online, watch No Game, No Life, anime No Game, No Life watch online, online streaming No Game, No Life">
  <meta charset="utf-8">
  <meta name="robots" content="index, follow">
  <meta name="revisit-after" content="1 days">
  <base href="https://animesuge.to/">
  <meta property="og:type" content="website">
  <meta property="og:title" content="AnimeSuge - No Game, No Life Watch Anime Online">
  <meta property="og:description"
    content="Watch No Game, No Life online in HD and download all episodes of No Game, No Life here!">
  <meta property="og:image" content="https://s2.bunnycdn.ru/assets/sites/animesuge/images/preview.jpg">
  <meta property="og:image:width" content="650">
  <meta property="og:image:height" content="350">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
  <link rel="canonical" href="https://animesuge.to/anime/no-game-no-life-4qkm">
  <link rel="shortcut icon" href="https://s2.bunnycdn.ru/assets/sites/animesuge/icons/favicon.png" type="image/x-icon">
  <link rel="manifest" href="/manifest.json?v3">
  <script async="" src="https://buttons-config.sharethis.com/js/64b8a8a371afd40013e96ae0.js"></script>
  <script type="text/javascript" async=""
    src="https://www.gstatic.com/recaptcha/releases/lLirU0na9roYU3wDDisGJEVT/recaptcha__de.js" crossorigin="anonymous"
    integrity="sha384-GdV15gXliOPfpfOpqFhqY9dS3FCI2YwTGtVcyzj5ab0yiuc+vZVJm97rcCa1WL2G"></script>
  <script
    type="application/ld+json"> { "@context": "https://schema.org", "@type": "WebSite", "url": "https://animesuge.to/", "potentialAction": { "@type": "SearchAction", "target": "https://animesuge.to/filter?keyword={keyword}", "query-input": "required name=keyword"}}</script>
  <link
    href="https://fonts.googleapis.com/css2?family=Pathway+Extreme:wght@100;200;300;400;500;600;700;800;900&amp;display=swap"
    rel="stylesheet">
  <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/Swiper/5.4.4/css/swiper.min.css">
  <link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/line-awesome/1.3.0/line-awesome/css/line-awesome.min.css">
  <link rel="stylesheet" type="text/css"
    href="https://cdnjs.cloudflare.com/ajax/libs/tooltipster/4.0.0/css/tooltipster.bundle.min.css">
  <link rel="stylesheet" href="https://s2.bunnycdn.ru/assets/t8/s1/min/all.css?651cab00651c1d28">
  <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-EMMQD7K482"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-EMMQD7K482');
  </script>
  <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-4PK3LY6S2W"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-4PK3LY6S2W');
  </script>
  <style type="text/css">
    #st-1 {
      font-family: "Helvetica Neue", Verdana, Helvetica, Arial, sans-serif;
      ;
      direction: ltr;
      display: block;
      opacity: 1;
      text-align: left;
      z-index: 94034;
    }

    #st-1.st-animated {
      -moz-transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
      -ms-transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
      -o-transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
      -webkit-transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
      transition: o 0.2s ease-in, p 0.2s ease-in, a 0.2s ease-in, c 0.2s ease-in, i 0.2s ease-in, t 0.2s ease-in, y 0.2s ease-in;
    }

    #st-1.st-hidden {
      opacity: 0;
    }

    #st-1.st-preview {
      display: none !important;
      opacity: 0 !important;
    }

    #st-1.st-hide {
      display: none;
    }

    #st-1 .st-btn {
      -moz-box-sizing: border-box;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      -moz-transition: opacity 0.2s ease-in, top 0.2s ease-in;
      -ms-transition: opacity 0.2s ease-in, top 0.2s ease-in;
      -o-transition: opacity 0.2s ease-in, top 0.2s ease-in;
      -webkit-transition: opacity 0.2s ease-in, top 0.2s ease-in;
      transition: opacity 0.2s ease-in, top 0.2s ease-in;
      -moz-border-radius: 4px;
      -webkit-border-radius: 4px;
      border-radius: 4px;
      border: none;
      cursor: pointer;
      display: inline-block;
      font-size: 12px;
      height: 32px;
      line-height: 32px;
      margin-right: 8px;
      padding: 0 10px;
      position: relative;
      text-align: center;
      top: 0;
      vertical-align: top;
      white-space: nowrap;
    }

    #st-1 .st-btn:last-child {
      margin-right: 0;
    }

    #st-1 .st-btn>svg {
      height: 16px;
      width: 16px;
      position: relative;
      top: 8px;
      vertical-align: top;
    }

    #st-1 .st-btn>img {
      display: inline-block;
      height: 16px;
      width: 16px;
      position: relative;
      top: 8px;
      vertical-align: top;
    }

    #st-1 .st-btn>span {
      -moz-transition: all 0.2s ease-in;
      -ms-transition: all 0.2s ease-in;
      -o-transition: all 0.2s ease-in;
      -webkit-transition: all 0.2s ease-in;
      transition: all 0.2s ease-in;
      color: #fff;
      display: inline-block;
      font-weight: 500;
      letter-spacing: 0.5px;
      min-width: 60px;
      opacity: 1;
      padding: 0 6px;
      position: relative;
      vertical-align: top;
    }

    #st-1.st-has-labels .st-btn {
      min-width: 120px;
    }

    #st-1.st-has-labels .st-btn.st-remove-label {
      min-width: 50px;
    }

    #st-1.st-has-labels .st-btn.st-remove-label>span {
      display: none;
    }

    #st-1.st-has-labels .st-btn.st-hide-label>span {
      display: none;
    }

    #st-1 .st-total {
      color: #555;
      display: inline-block;
      font-weight: 500;
      line-height: 12px;
      margin-right: 0;
      max-width: 80px;
      padding: 4px 8px;
      text-align: center;
    }

    #st-1 .st-total.st-hidden {
      display: none;
    }

    #st-1 .st-total>span {
      font-size: 16px;
      line-height: 17px;
      display: block;
      padding: 0;
    }

    #st-1 .st-total>span.st-shares {
      font-size: 9px;
      line-height: 9px;
    }

    #st-1.st-justified {
      display: flex;
      text-align: center;
    }

    #st-1.st-justified .st-btn {
      -moz-flex: 1;
      -ms-flex: 1;
      -webkit-flex: 1;
      flex: 1;
    }

    #st-1 .st-btn:hover {
      opacity: .8;
      top: -4px;
    }

    #st-1 .st-btn[data-network='facebook'] {
      background-color: #4267B2
    }

    #st-1 .st-btn[data-network='facebook'] img {
      filter:
    }

    #st-1 .st-btn[data-network='facebook']>span {
      color: #fff
    }

    #st-1 .st-btn[data-network='twitter'] {
      background-color: #000000
    }

    #st-1 .st-btn[data-network='twitter'] img {
      filter:
    }

    #st-1 .st-btn[data-network='twitter']>span {
      color: #fff
    }

    #st-1 .st-btn[data-network='messenger'] {
      background-color: #448AFF
    }

    #st-1 .st-btn[data-network='messenger'] img {
      filter:
    }

    #st-1 .st-btn[data-network='messenger']>span {
      color: #fff
    }


    #st-1 .st-btn[data-network='reddit'] {
      background-color: #ff4500
    }

    #st-1 .st-btn[data-network='reddit'] img {
      filter:
    }

    #st-1 .st-btn[data-network='reddit']>span {
      color: #fff
    }

    #st-1 .st-btn[data-network='whatsapp'] {
      background-color: #25d366
    }

    #st-1 .st-btn[data-network='whatsapp'] img {
      filter:
    }

    #st-1 .st-btn[data-network='whatsapp']>span {
      color: #fff
    }

    #st-1 .st-btn[data-network='telegram'] {
      background-color: #0088cc
    }

    #st-1 .st-btn[data-network='telegram'] img {
      filter:
    }

    #st-1 .st-btn[data-network='telegram']>span {
      color: #fff
    }

    #st-1 .st-btn[data-network='snapchat']>span {
      color: #333
    }

    ;
    }
  </style>
  <script src="//animesuge.disqus.com/embed.js" data-timestamp="1696411363982"></script>
</head>

<body>
  <div class="wrapper">
    <header>
      <div class="container">
        <div class="unix-head-wrap"> <button id="menu-toggler"
            class="d-flex align-items-center mr-2 p-0 d-none d-lg-flex d-xl-none"> <i class="las la-bars"></i> </button>
          <div class="logo"> <a href="home"><img src="https://s2.bunnycdn.ru/assets/sites/animesuge/logo.png"
                alt="AnimeSuge"></a> </div>
          <div id="unix-head-menu">
            <ul>
              <li class="have-sub"><a href="javascript:;" title="Genres">Genres</a>
                <ul class="c3">
                  <li><a href="/genre/action" title="Action Anime">Action</a></li>
                  <li><a href="/genre/adventure" title="Adventure Anime">Adventure</a></li>
                  <li><a href="/genre/avant-garde" title="Avant Garde Anime">Avant Garde</a></li>
                  <li><a href="/genre/boys-love" title="Boys Love Anime">Boys Love</a></li>
                  <li><a href="/genre/comedy" title="Comedy Anime">Comedy</a></li>
                  <li><a href="/genre/demons" title="Demons Anime">Demons</a></li>
                  <li><a href="/genre/drama" title="Drama Anime">Drama</a></li>
                  <li><a href="/genre/ecchi" title="Ecchi Anime">Ecchi</a></li>
                  <li><a href="/genre/fantasy" title="Fantasy Anime">Fantasy</a></li>
                  <li><a href="/genre/girls-love" title="Girls Love Anime">Girls Love</a></li>
                  <li><a href="/genre/gourmet" title="Gourmet Anime">Gourmet</a></li>
                  <li><a href="/genre/harem" title="Harem Anime">Harem</a></li>
                  <li><a href="/genre/horror" title="Horror Anime">Horror</a></li>
                  <li><a href="/genre/isekai" title="Isekai Anime">Isekai</a></li>
                  <li><a href="/genre/iyashikei" title="Iyashikei Anime">Iyashikei</a></li>
                  <li><a href="/genre/josei" title="Josei Anime">Josei</a></li>
                  <li><a href="/genre/kids" title="Kids Anime">Kids</a></li>
                  <li><a href="/genre/magic" title="Magic Anime">Magic</a></li>
                  <li><a href="/genre/mahou-shoujo" title="Mahou Shoujo Anime">Mahou Shoujo</a></li>
                  <li><a href="/genre/martial-arts" title="Martial Arts Anime">Martial Arts</a></li>
                  <li><a href="/genre/mecha" title="Mecha Anime">Mecha</a></li>
                  <li><a href="/genre/military" title="Military Anime">Military</a></li>
                  <li><a href="/genre/music" title="Music Anime">Music</a></li>
                  <li><a href="/genre/mystery" title="Mystery Anime">Mystery</a></li>
                  <li><a href="/genre/parody" title="Parody Anime">Parody</a></li>
                  <li><a href="/genre/psychological" title="Psychological Anime">Psychological</a></li>
                  <li><a href="/genre/reverse-harem" title="Reverse Harem Anime">Reverse Harem</a></li>
                  <li><a href="/genre/romance" title="Romance Anime">Romance</a></li>
                  <li><a href="/genre/school" title="School Anime">School</a></li>
                  <li><a href="/genre/sci-fi" title="Sci-Fi Anime">Sci-Fi</a></li>
                  <li><a href="/genre/seinen" title="Seinen Anime">Seinen</a></li>
                  <li><a href="/genre/shoujo" title="Shoujo Anime">Shoujo</a></li>
                  <li><a href="/genre/shounen" title="Shounen Anime">Shounen</a></li>
                  <li><a href="/genre/slice-of-life" title="Slice of Life Anime">Slice of Life</a></li>
                  <li><a href="/genre/space" title="Space Anime">Space</a></li>
                  <li><a href="/genre/sports" title="Sports Anime">Sports</a></li>
                  <li><a href="/genre/super-power" title="Super Power Anime">Super Power</a></li>
                  <li><a href="/genre/supernatural" title="Supernatural Anime">Supernatural</a></li>
                  <li><a href="/genre/suspense" title="Suspense Anime">Suspense</a></li>
                  <li><a href="/genre/thriller" title="Thriller Anime">Thriller</a></li>
                  <li><a href="/genre/vampire" title="Vampire Anime">Vampire</a></li>
                </ul>
              </li>
              <li class="have-sub"><a href="javascript:;" title="Types">Types</a>
                <ul>
                  <li><a href="/movie">Movies</a></li>
                  <li><a href="/tv">TV Series</a></li>
                  <li><a href="/ova">OVAs</a></li>
                  <li><a href="/ona">ONAs</a></li>
                  <li><a href="/special">Specials</a></li>
                </ul>
              </li>
              <li><a href="/updated" title="Updated">Updated</a></li>
              <li><a href="/added" title="Added">Added</a></li>
              <li><a href="/ongoing" title="Ongoing">Ongoing</a></li>
              <li><a href="/upcoming" title="Upcoming">Upcoming</a></li>
              <li><a href="javascript:;" title="Schedule" class="toggle-schedule">Schedule</a></li>
              <li><a href="/random" title="Random">Random</a></li>
            </ul>
          </div>
          <div id="language-switch" class="en"> <span class="en">EN</span> <span class="jp">JP</span> </div>
          <div class="unix-site-search search-wrap"> <button class="btn unix-head-btn show-search"><i
                class="las la-search"></i></button>
            <div class="inner">
              <form autocomplete="off" action="filter"> <i class="las la-search"></i> <input type="text"
                  placeholder="Search" name="keyword"> <a class="filter-btn btn btn-sm btn-secondary"
                  href="filter">Filter</a> </form>
              <div class="suggestion"></div>
            </div>
          </div>
          <div id="user-box"><a class="unix-head-btn guest btn" data-toggle="modal" data-target="#sign"><i
                class="lar la-user-circle"></i> Sign In</a></div>
        </div>
      </div>
    </header>
    <main class="">
      <div class="container watch-wrap" itemprop="mainEntity" itemscope="" itemtype="https://schema.org/Movie"
        data-id="1118" data-url="https://animesuge.to/anime/no-game-no-life-4qkm" data-ep-name="4" data-ep-type="">
        <div class="wrap-main border-top border-secondary pt-5">
          <aside class="primary-content">
            <section id="media-box">
              <div class="media-wrap playable">
                <div class="media-bg "
                  style="background-image: url('https://static.bunnycdn.ru/i/cache/images/2018/04/06800c05ac16e71fcf75780aa8a2bd16.jpg-w1024')">
                </div>
                <div class="media-inner">
                  <div id="player"><iframe
                      src="https://vidplay.site/e/6EJVG1OKOJ9M?t=4xnZD%2FEnBVYMzw%3D%3D&amp;autostart=true"
                      allow="autoplay; fullscreen" allowfullscreen="yes" frameborder="no" scrolling="no"
                      style="width: 100%; height: 100%; overflow: hidden;"></iframe></div>
                </div>
              </div>
              <div id="media-controls">
                <div class="media-controls-wrap">
                  <div class="media-control auto-play" data-name="auto_play" data-persist="true" data-default="0"
                    data-off="<i class=&quot;las la-stop&quot;></i> Auto Play"
                    data-on="<i class=&quot;las la-check-square&quot;></i> Auto Play"><i
                      class="las la-check-square"></i> Auto Play</div>
                  <div class="media-control auto-next" data-name="auto_next" data-persist="true" data-default="0"
                    data-off="<i class=&quot;las la-stop&quot;></i> Auto Next"
                    data-on="<i class=&quot;las la-check-square&quot;></i> Auto Next"><i
                      class="las la-check-square"></i> Auto Next</div>
                  <div class="media-control auto-skip" data-name="auto_skip_intro" data-persist="true" data-default="0"
                    data-off="<i class=&quot;las la-stop&quot;></i> Auto Skip"
                    data-on="<i class=&quot;las la-check-square&quot;></i> Auto Skip"><i class="las la-stop"></i> Auto
                    Skip</div>
                  <div class="skiptime dropdown" style="" data-toggle="tooltip" data-placement="top" title=""
                    data-original-title="Please help us by contributing time to skip the intro, outro. HOW TO: Click to an input field, then seek the video to the correct position, the time will automatic filled to the field, then submit the form. HOW IT WORKS: The system will automatic skip the video from [BEGIN] to [END].">
                    <div class="media-control" data-toggle="dropdown" data-placeholder="false"> <i
                        class="las la-stopwatch"></i> Set skip time </div>
                    <ul class="dropdown-menu noclose">
                      <li>
                        <div class="input">
                          <div class="intro block">
                            <div class="line"><i></i></div>
                            <div class="group begin"> <label>Intro begin</label> <input type="text" name="intro_begin"
                                class="form-control form-control-sm" placeholder="00:00:00" autocomplete="off"> </div>
                            <div class="group end"> <label>Intro end</label> <input type="text" name="intro_end"
                                class="form-control form-control-sm" placeholder="00:00:00" autocomplete="off"> </div>
                          </div>
                          <div class="outro block">
                            <div class="line"><i></i></div>
                            <div class="group begin"> <label>Outro begin</label> <input type="text" name="outro_begin"
                                class="form-control form-control-sm" placeholder="00:00:00" autocomplete="off"> </div>
                            <div class="group end"> <label>Outro end</label> <input type="text" name="outro_end"
                                class="form-control form-control-sm" placeholder="00:00:00" autocomplete="off"> </div>
                          </div>
                          <div class="submit"> <button
                              class="btn btn-sm mt-2 btn-secondary2 border-text-major rounded-0 w-100"
                              type="button">Contribute</button> </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div class="light media-control"><i class="lar la-lightbulb"></i> <span>Light</span></div>
                  <div class="dropdown limit-w favourite" data-id="1118" data-fetch="true">
                    <div class="media-control" data-toggle="dropdown" data-placeholder="false"
                      data-add="<i class=&quot;las la-bookmark&quot;></i> <span>Add Bookmark</span>"
                      data-edit="<i class=&quot;las la-edit&quot;></i> <span>Edit Bookmark</span>"><i
                        class="las la-bookmark"></i> <span>Add Bookmark</span></div>
                    <div class="dropdown-menu dropdown-menu-right folders"></div>
                  </div>
                </div>
              </div>
              <div id="media-servers">
                <div class="server-notice">
                  <div>You are watching <b>Episode 4</b></div> <span>(If current server doesn't work please try other
                    servers beside.)</span>
                </div>
                <div class="server-wrapper">
                  <div class="server-type type" data-type="sub">
                    <div class="name"> <span data-toggle="tooltip" title=""
                        data-original-title="Hard sub that includes signs &amp; songs/kara, sub effects"><svg>
                          <use xlink:href="#icon-sub"></use>
                        </svg> Sub:</span> </div>
                    <div class="server-list">
                      <div class="server active" data-ep-id="HjmeC8o=" data-cmid="4qkm" data-sv-id="41"
                        data-link-id="HzWbCcIjkg==">
                        <div><span>Vidplay</span></div>
                      </div>
                      <div class="server" data-ep-id="HjmeC8o=" data-cmid="4qkm" data-sv-id="28"
                        data-link-id="HzWbCcIjlw==">
                        <div><span>MyCloud</span></div>
                      </div>
                      <div class="server" data-ep-id="HjmeC8o=" data-cmid="4qkm" data-sv-id="44"
                        data-link-id="HzWbCcIglg==">
                        <div><span>Filemoon</span></div>
                      </div>
                      <div class="server" data-ep-id="HjmeC8o=" data-cmid="4qkm" data-sv-id="35"
                        data-link-id="HjuXCckglA==">
                        <div><span>Mp4upload</span></div>
                      </div>
                    </div>
                  </div>
                  <div class="server-type type" data-type="dub">
                    <div class="name"> <span><svg>
                          <use xlink:href="#icon-dub"></use>
                        </svg> Dub:</span> </div>
                    <div class="server-list">
                      <div class="server" data-ep-id="GjqXCc8=" data-cmid="y2p0" data-sv-id="41"
                        data-link-id="Hz2fA8MgkA==">
                        <div><span>Vidplay</span></div>
                      </div>
                      <div class="server" data-ep-id="GjqXCc8=" data-cmid="y2p0" data-sv-id="28"
                        data-link-id="Hz2fA8Mgkw==">
                        <div><span>MyCloud</span></div>
                      </div>
                      <div class="server" data-ep-id="GjqXCc8=" data-cmid="y2p0" data-sv-id="44"
                        data-link-id="Hz2fA8MulQ==">
                        <div><span>Filemoon</span></div>
                      </div>
                      <div class="server" data-ep-id="GjqXCc8=" data-cmid="y2p0" data-sv-id="35"
                        data-link-id="Hz2fA8Munw==">
                        <div><span>Mp4upload</span></div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div id="media-episode">
                <div class="head">
                  <div class="d-flex head-left">
                    <div class="dropdown limit-h"> <button class="btn dropdown-toggle range-view" data-toggle="dropdown"
                        data-placeholder="false" href="#">001-012</button>
                      <div class="dropdown-menu range-options"> <a class="dropdown-item item active" href="javascript:;"
                          data-value="001-012">001-012</a> </div>
                    </div>
                  </div>
                  <div class="d-flex">
                    <form class="ep-search"> <i class="bi bi-search"></i> <input class="form-control" type="text"
                        placeholder="Find number"> </form>
                    <div class="lang-select">
                      <div data-value="sub" data-toggle="tooltip" title="" data-original-title="Show sub episodes"
                        class="active"> <svg>
                          <use xlink:href="#icon-sub"></use>
                        </svg> </div>
                      <div data-value="dub" data-toggle="tooltip" title="" data-original-title="Show dub episodes"
                        class="active"> <svg>
                          <use xlink:href="#icon-dub"></use>
                        </svg> </div>
                    </div>
                  </div>
                </div>
                <div class="range-wrap">
                  <div class="range" data-range="001-012" style="">
                    <div> <a href="https://animesuge.to/anime/no-game-no-life-4qkm/ep-1"
                        title="- Release: 2014/04/09 12:30 GMT - Sub: 2020/04/17 00:28 GMT - Dub: 2019/12/30 10:22 GMT"
                        data-num="1" data-slug="1" data-sub="1" data-dub="1" data-ids="HjmeCsM=,GjqXCco=" class=""
                        enabled="1">1</a> </div>
                    <div> <a href="https://animesuge.to/anime/no-game-no-life-4qkm/ep-2"
                        title="- Release: 2014/04/16 12:30 GMT - Sub: 2020/04/17 00:28 GMT - Dub: 2019/12/30 10:22 GMT"
                        data-num="2" data-slug="2" data-sub="1" data-dub="1" data-ids="HjmeCsI=,GjqXCck=" class=""
                        enabled="1">2</a> </div>
                    <div> <a href="https://animesuge.to/anime/no-game-no-life-4qkm/ep-3"
                        title="- Release: 2014/04/23 12:30 GMT - Sub: 2020/04/17 00:28 GMT - Dub: 2019/12/30 10:22 GMT"
                        data-num="3" data-slug="3" data-sub="1" data-dub="1" data-ids="HjmeC8s=,GjqXCcg=" class=""
                        enabled="1">3</a> </div>
                    <div> <a href="https://animesuge.to/anime/no-game-no-life-4qkm/ep-4"
                        title="- Release: 2014/04/30 12:30 GMT - Sub: 2020/04/17 00:28 GMT - Dub: 2019/12/30 10:22 GMT"
                        data-num="4" data-slug="4" data-sub="1" data-dub="1" data-ids="HjmeC8o=,GjqXCc8=" class="active"
                        enabled="1">4</a> </div>
                    <div> <a href="https://animesuge.to/anime/no-game-no-life-4qkm/ep-5"
                        title="- Release: 2014/05/07 12:30 GMT - Sub: 2020/04/17 00:29 GMT - Dub: 2019/12/30 10:23 GMT"
                        data-num="5" data-slug="5" data-sub="1" data-dub="1" data-ids="HjmeC8k=,GjqXCc4=" class=""
                        enabled="1">5</a> </div>
                    <div> <a href="https://animesuge.to/anime/no-game-no-life-4qkm/ep-6"
                        title="- Release: 2014/05/14 12:30 GMT - Sub: 2020/04/17 00:29 GMT - Dub: 2019/12/30 10:23 GMT"
                        data-num="6" data-slug="6" data-sub="1" data-dub="1" data-ids="HjmeC8g=,GjqXCc0=" class=""
                        enabled="1">6</a> </div>
                    <div> <a href="https://animesuge.to/anime/no-game-no-life-4qkm/ep-7"
                        title="- Release: 2014/05/21 12:30 GMT - Sub: 2020/04/17 00:29 GMT - Dub: 2019/12/30 10:23 GMT"
                        data-num="7" data-slug="7" data-sub="1" data-dub="1" data-ids="HjmeC88=,GjqXCcw=" class=""
                        enabled="1">7</a> </div>
                    <div> <a href="https://animesuge.to/anime/no-game-no-life-4qkm/ep-8"
                        title="- Release: 2014/05/28 12:30 GMT - Sub: 2020/04/17 00:29 GMT - Dub: 2019/12/30 10:23 GMT"
                        data-num="8" data-slug="8" data-sub="1" data-dub="1" data-ids="HjmeC84=,GjqXCcM=" class=""
                        enabled="1">8</a> </div>
                    <div> <a href="https://animesuge.to/anime/no-game-no-life-4qkm/ep-9"
                        title="- Release: 2014/06/04 12:30 GMT - Sub: 2020/04/17 00:29 GMT - Dub: 2019/12/30 10:23 GMT"
                        data-num="9" data-slug="9" data-sub="1" data-dub="1" data-ids="HjmeC80=,GjqXCcI=" class=""
                        enabled="1">9</a> </div>
                    <div> <a href="https://animesuge.to/anime/no-game-no-life-4qkm/ep-10"
                        title="- Release: 2014/06/11 12:30 GMT - Sub: 2020/04/17 00:30 GMT - Dub: 2019/12/30 10:23 GMT"
                        data-num="10" data-slug="10" data-sub="1" data-dub="1" data-ids="HjmeC8w=,GjqXDss=" class=""
                        enabled="1">10</a> </div>
                    <div> <a href="https://animesuge.to/anime/no-game-no-life-4qkm/ep-11"
                        title="- Release: 2014/06/18 12:30 GMT - Sub: 2020/04/17 00:30 GMT - Dub: 2019/12/30 10:24 GMT"
                        data-num="11" data-slug="11" data-sub="1" data-dub="1" data-ids="HjmeC8M=,GjqXDso=" class=""
                        enabled="1">11</a> </div>
                    <div> <a href="https://animesuge.to/anime/no-game-no-life-4qkm/ep-12"
                        title="- Release: 2014/06/25 12:30 GMT - Sub: 2020/04/17 00:30 GMT - Dub: 2019/12/30 10:24 GMT"
                        data-num="12" data-slug="12" data-sub="1" data-dub="1" data-ids="HjmeC8I=,GjqXDsk=" class=""
                        enabled="1">12</a> </div>
                  </div>
                </div>
              </div>
            </section>
            <div class="sharethis-inline-share-buttons mb-3 st-left st-has-labels st-hidden st-inline-share-buttons"
              data-url="https://animesuge.to/anime/no-game-no-life-4qkm" id="st-1">
              <div class="st-total st-hidden">
                <span class="st-label"></span>
                <span class="st-shares">
                  Shares
                </span>
              </div>
              <div class="st-btn st-first" data-network="facebook">
                <img alt="facebook sharing button" src="https://platform-cdn.sharethis.com/img/facebook.svg">
                <span class="st-label"></span>
              </div>
              <div class="st-btn" data-network="twitter">
                <img alt="twitter sharing button" src="https://platform-cdn.sharethis.com/img/twitter.svg">
                <span class="st-label"></span>
              </div>
              <div class="st-btn" data-network="messenger">
                <img alt="messenger sharing button" src="https://platform-cdn.sharethis.com/img/messenger.svg">
                <span class="st-label"></span>
              </div>
              <div class="st-btn" data-network="reddit">
                <img alt="reddit sharing button" src="https://platform-cdn.sharethis.com/img/reddit.svg">
                <span class="st-label"></span>
              </div>
              <div class="st-btn" data-network="whatsapp">
                <img alt="whatsapp sharing button" src="https://platform-cdn.sharethis.com/img/whatsapp.svg">
                <span class="st-label"></span>
              </div>
              <div class="st-btn st-last" data-network="telegram">
                <img alt="telegram sharing button" src="https://platform-cdn.sharethis.com/img/telegram.svg">
                <span class="st-label"></span>
              </div>
            </div>
            <div id="media-info">
              <div class="poster">
                <div class="wrap"> <span> <img itemprop="image"
                      src="https://static.bunnycdn.ru/i/cache/images/2018/04/99970e15a464554863c74fe517092bcd.jpg"
                      alt="No Game, No Life"> </span> </div>
              </div>
              <div class="data">
                <div class="maindata">
                  <h1 itemprop="name" class="title" data-jp="No Game No Life">No Game, No Life</h1>
                  <div class="status"> <span class="type mini-status">TV</span> <span class="rating mini-status">PG
                      13</span> <span class="quality mini-status">HD</span>
                    <div class="dub-sub-total"> <span class="sub"><svg>
                          <use xlink:href="#icon-sub"></use>
                        </svg> 12</span> <span class="dub"><svg>
                          <use xlink:href="#icon-dub"></use>
                        </svg> 12</span> <span class="total">12</span> </div>
                  </div>
                  <div class="description cts-wrapper">
                    <div class="short cts-block" data-name="short">
                      <div>Sora and Shiro were ingenious siblings who found the real world to be a mundane game, seeking
                        solace in their own virtual reality fueled by video games. However, their lives undergo a
                        dramatic upheaval when they are summoned by a purported "God" to a...</div> <button
                        class="btn btn-sm btn-secondary2 my-2 border-secondary rounded-0 cts-switcher"
                        data-target="full">more+</button>
                    </div>
                    <div class="full cts-block" data-name="full" style="display: none;">
                      <div>Sora and Shiro were ingenious siblings who found the real world to be a mundane game, seeking
                        solace in their own virtual reality fueled by video games. However, their lives undergo a
                        dramatic upheaval when they are summoned by a purported "God" to a new domain. In this realm,
                        their skills will be put to the test as they immerse themselves in a series of games that may
                        determine the destiny of humanity. Armed with their exceptional intellect, they brace themselves
                        for the toughest challenges they have ever encountered.</div> <button
                        class="btn btn-sm btn-secondary2 my-2 border-secondary rounded-0 cts-switcher"
                        data-target="short">less-</button>
                    </div>
                  </div>
                </div>
                <div class="meta">
                  <div>
                    <div>Type:</div> <span><a href="tv">TV</a></span>
                  </div>
                  <div>
                    <div>Country:</div> <span> <a href="/country/japan">Japan</a> </span>
                  </div>
                  <div>
                    <div>Premiered:</div> <span> <a href="filter?season=spring&amp;year=2014">Spring 2014</a> </span>
                  </div>
                  <div>
                    <div>Date aired:</div> <span> <span itemprop="dateCreated">Apr 09, 2014</span> to Jun 25, 2014
                    </span>
                  </div>
                  <div>
                    <div>Status:</div> <span>Completed</span>
                  </div>
                  <div>
                    <div>MAL:</div> <span>8.08 <span class="text-muted">by 1,499,042 reviews</span> </span>
                  </div>
                  <div>
                    <div>Duration:</div> <span>23 min</span>
                  </div>
                  <div>
                    <div>Episodes:</div> <span>12</span>
                  </div>
                  <div>
                    <div>Studios:</div> <span> <a itemprop="director" itemscope="" itemtype="https://schema.org/Person"
                        href="/studio/madhouse"><span itemprop="name">Madhouse</span></a> </span>
                  </div>
                  <div>
                    <div>Genre:</div> <span> <a href="/genre/adventure">Adventure</a>, <a
                        href="/genre/comedy">Comedy</a>, <a href="/genre/ecchi">Ecchi</a>, <a
                        href="/genre/fantasy">Fantasy</a>, <a href="/genre/parody">Parody</a>, <a
                        href="/genre/super-power">Super Power</a>, <a href="/genre/isekai">Isekai</a>, <a
                        href="/genre/magic">Magic</a> </span>
                  </div>
                  <div>
                    <div>Producers:</div> <span> <a itemprop="director" itemscope=""
                        itemtype="https://schema.org/Person" href="/producer/movic"><span
                          itemprop="name">Movic</span></a>, <a itemprop="director" itemscope=""
                        itemtype="https://schema.org/Person" href="/producer/frontier-works"><span
                          itemprop="name">Frontier Works</span></a>, <a itemprop="director" itemscope=""
                        itemtype="https://schema.org/Person" href="/producer/at-x"><span
                          itemprop="name">AT-X</span></a>, <a itemprop="director" itemscope=""
                        itemtype="https://schema.org/Person" href="/producer/media-factory"><span itemprop="name">Media
                          Factory</span></a> </span>
                  </div>
                </div>
              </div>
              <div class="rating-box" itemprop="aggregateRating" itemscope=""
                itemtype="https://schema.org/AggregateRating" data-id="1118" data-score="9.08">
                <div class="stars"> <span class="active"><i class="full"></i></span> <span class="active"><i
                      class="full"></i></span> <span class="active"><i class="full"></i></span> <span class="active"><i
                      class="full"></i></span> <span class="active"><i class="full"></i></span> </div>
                <div class="scores live-label"> <i class="las la-star"></i> <b itemprop="ratingValue">9.08</b>/<b
                    itemprop="bestRating">10</b> <span class="small text-muted">(<span itemprop="reviewCount"
                      style="display:none">6337</span>6,337 voted)</span> </div>
              </div>
            </div>
            <section class="adx">
              <script async="" data-cfasync="false" src="https://platform.bidgear.com/pubbidgear-ad.js"
                type="text/javascript"></script>
              <script>(function () {
                  if (window.innerWidth >= 630) {
                    document.write('<div class="d-flex justify-content-around"> \
    <div><div id="bg_6161126884_pre"></div><div id="bg_6161126884"></div></div>\
    <div><div id="bg_616126885_pre"></div><div id="bg_616126885"></div></div>\
    </div>');

                    (function () {
                      var urlCB = new Date().getTime();
                      var sc = window.document.createElement("script");
                      sc.async = true; sc.defer = true;
                      sc.src = "//platform.bidgear.com/async.php?domainid=6161&sizeid=12&zoneid=6884&k=" + urlCB;
                      var pr = window.document.getElementById("bg_6161126884_pre");
                      pr.appendChild(sc);
                    })();

                    (function () {
                      var urlCB = new Date().getTime();
                      var sc = window.document.createElement("script");
                      sc.async = true; sc.defer = true;
                      sc.src = "//platform.bidgear.com/async.php?domainid=6161&sizeid=2&zoneid=6885&k=" + urlCB;
                      var pr = window.document.getElementById("bg_616126885_pre");
                      pr.appendChild(sc);
                    })();
                  } else {
                    document.write('\
    <div class="d-flex justify-content-center">\
    <div><div id="bg_6161126884_pre"></div><div id="bg_6161126884"></div></div>\
    </div>\
    ');
                    (function () {
                      var urlCB = new Date().getTime();
                      var sc = window.document.createElement("script");
                      sc.async = true; sc.defer = true;
                      sc.src = "//platform.bidgear.com/async.php?domainid=6161&sizeid=12&zoneid=6884&k=" + urlCB;
                      var pr = window.document.getElementById("bg_6161126884_pre");
                      pr.appendChild(sc);
                    })();
                  }
                }());</script>
              <div class="d-flex justify-content-around">
                <div>
                  <div id="bg_6161126884_pre">
                    <script async="" defer=""
                      src="//platform.bidgear.com/async.php?domainid=6161&amp;sizeid=12&amp;zoneid=6884&amp;k=1696411362840"></script>
                  </div>
                  <div id="bg_6161126884"></div>
                </div>
                <div>
                  <div id="bg_616126885_pre">
                    <script async="" defer=""
                      src="//platform.bidgear.com/async.php?domainid=6161&amp;sizeid=2&amp;zoneid=6885&amp;k=1696411362840"></script>
                  </div>
                  <div id="bg_616126885"></div>
                </div>
              </div>
              <div class="remove"></div>
            </section>
            <section id="comment" data-src="//animesuge.disqus.com/embed.js" data-id="4qkm"
              data-link="https://animesuge.to/anime/no-game-no-life-4qkm" data-load="true">
              <div class="top-section">
                <div class="heading">
                  <h2 class="section-name">Comments</h2>
                </div>
                <div class="tabs" data-tabs="">
                  <div class="tab" data-name="anime">Anime</div>
                  <div class="tab active" data-name="episode"><span> Episode <span class="current-episode-name">4</span>
                      <span class="current-episode-type">sub</span> </span></div>
                </div>
              </div>
              <div id="disqus_thread"><iframe id="dsq-app7560" name="dsq-app7560" allowtransparency="true"
                  frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%"
                  src="https://disqus.com/embed/comments/?base=default&amp;f=animesuge&amp;t_i=4qkm_4&amp;t_u=https%3A%2F%2Fanimesuge.to%2Fanime%2Fno-game-no-life-4qkm%2Fep-4%3Ftype%3Dsub&amp;t_d=AnimeSuge%20-%20No%20Game%2C%20No%20Life%20Watch%20Anime%20Online&amp;t_t=AnimeSuge%20-%20No%20Game%2C%20No%20Life%20Watch%20Anime%20Online&amp;s_o=default#version=4699de2a86f3c790aa59c8d1312129e4"
                  style="width: 1px !important; min-width: 100% !important; border: none !important; overflow: hidden !important; height: 450px !important;"
                  horizontalscrolling="no" verticalscrolling="no"></iframe></div>
            </section>
          </aside>
          <aside class="side-panel">
            <section class="adx">
              <div class="d-flex justify-content-center">
                <div id="bg_616126685"></div>
                <script data-cfasync="false" type="text/javascript"
                  src="//platform.bidgear.com/ads.php?domainid=6161&amp;sizeid=2&amp;zoneid=6685"></script>
              </div>
              <div class="remove"></div>
            </section>
            <section class="no-res related">
              <div class="top-section">
                <div class="heading">
                  <h2 class="section-name">Related Anime</h2>
                </div>
                <div class="dropdown"> <button class="btn rounded-0 border-secondary btn-secondary2"
                    data-toggle="dropdown" data-placeholder="false">More <i class="las la-angle-down"></i></button>
                  <div class="dropdown-menu dropdown-menu-right" data-tabs=""> <a class="dropdown-item tab active"
                      data-name="All" href="javascript:;"><span>All</span></a> </div>
                </div>
              </div>
              <div class="tab-content anime mini-card mt-4" data-name="All" style="display:block"> <a class="item"
                  href="/anime/no-game-no-life-zero-7zm8">
                  <div class="poster">
                    <div><img
                        src="https://static.bunnycdn.ru/i/cache/images/2018/04/485a8d1f047672f8b777f1f0b2e87e11.jpg-w100">
                    </div>
                  </div>
                  <div class="detail">
                    <div class="small text-muted">Prequel</div>
                    <p class="name" data-jp="No Game No Life Zero">No Game, No Life Zero</p>
                    <div class="meta"> <span class="type dot">MOVIE</span> </div>
                  </div>
                </a> <a class="item" href="/anime/no-game-no-life-specials-ln63">
                  <div class="poster">
                    <div><img
                        src="https://static.bunnycdn.ru/i/cache/images/2018/04/62f4dfc11f0326ec8fb1601258da62ca.jpg-w100">
                    </div>
                  </div>
                  <div class="detail">
                    <div class="small text-muted">Side Story</div>
                    <p class="name" data-jp="No Game No Life Specials">No Game No Life Specials</p>
                    <div class="meta"> <span class="type dot">SPECIAL</span> <span class="dot">6 Eps</span> </div>
                  </div>
                </a> </div>
            </section>
            <section class="adx">
              <div class="d-flex justify-content-center">
                <div id="bg_616126686_pre">
                  <script async="" defer=""
                    src="//platform.bidgear.com/async.php?domainid=6161&amp;sizeid=2&amp;zoneid=6686&amp;k=1696411362841"></script>
                </div>
                <div id="bg_616126686"></div>
                <script>(function () {
                    var urlCB = new Date().getTime();
                    var sc = window.document.createElement("script");
                    sc.async = true; sc.defer = true;
                    sc.src = "//platform.bidgear.com/async.php?domainid=6161&sizeid=2&zoneid=6686&k=" + urlCB;
                    var pr = window.document.getElementById("bg_616126686_pre");
                    pr.appendChild(sc);
                  })()</script>
              </div>
              <div class="remove"></div>
            </section>
            <section>
              <div class="top-section">
                <div class="heading">
                  <h2 class="section-name">Recommended</h2>
                </div>
              </div>
              <div class="anime mini-card mt-4"> <a class="item"
                  href="/anime/konosuba-gods-blessing-on-this-wonderful-world-l33">
                  <div class="poster tooltipstered" data-tip="50?/cache220ffa">
                    <div><img
                        src="https://static.bunnycdn.ru/i/cache/images/2018/04/5789738b4f15967d6877f1efc58a68fe.jpg-w100"
                        alt="KONOSUBA -God's blessing on this wonderful world!"></div>
                  </div>
                  <div class="detail">
                    <p class="name" data-jp="Kono Subarashii Sekai ni Shukufuku wo!">KONOSUBA -God's blessing on this
                      wonderful world!</p>
                    <div class="meta"> <span class="type">TV</span><span class="dub-sub-total"> <span class="sub"><svg>
                            <use xlink:href="#icon-sub"></use>
                          </svg> 10</span> <span class="dub"><svg>
                            <use xlink:href="#icon-dub"></use>
                          </svg> 10</span> <span class="total">10</span> </span> </div>
                  </div>
                </a> <a class="item" href="/anime/sword-art-online-5y9">
                  <div class="poster tooltipstered" data-tip="219?/cache232e2d">
                    <div><img
                        src="https://static.bunnycdn.ru/i/cache/images/2018/04/8496fcc79062a38febfeec4940487bea.jpg-w100"
                        alt="Sword Art Online"></div>
                  </div>
                  <div class="detail">
                    <p class="name" data-jp="Sword Art Online">Sword Art Online</p>
                    <div class="meta"> <span class="type">TV</span><span class="dub-sub-total"> <span class="sub"><svg>
                            <use xlink:href="#icon-sub"></use>
                          </svg> 25</span> <span class="dub"><svg>
                            <use xlink:href="#icon-dub"></use>
                          </svg> 25</span> <span class="total">25</span> </span> </div>
                  </div>
                </a> <a class="item" href="/anime/kakegurui-79vj">
                  <div class="poster tooltipstered" data-tip="7369?/cache16fb2a">
                    <div><img
                        src="https://static.bunnycdn.ru/i/cache/images/2018/04/efa74fea726df1087706ae7a561ff8e5.jpg-w100"
                        alt="Kakegurui"></div>
                  </div>
                  <div class="detail">
                    <p class="name" data-jp="Kakegurui">Kakegurui</p>
                    <div class="meta"> <span class="type">TV</span><span class="dub-sub-total"> <span class="sub"><svg>
                            <use xlink:href="#icon-sub"></use>
                          </svg> 12</span> <span class="dub"><svg>
                            <use xlink:href="#icon-dub"></use>
                          </svg> 12</span> <span class="total">12</span> </span> </div>
                  </div>
                </a> <a class="item" href="/anime/log-horizon-1xq">
                  <div class="poster tooltipstered" data-tip="363?/cache48338b">
                    <div><img
                        src="https://static.bunnycdn.ru/i/cache/images/2018/04/03f4febb6f15bc0a239ca7f7984ab9ad.jpg-w100"
                        alt="Log Horizon"></div>
                  </div>
                  <div class="detail">
                    <p class="name" data-jp="Log Horizon">Log Horizon</p>
                    <div class="meta"> <span class="type">TV</span><span class="dub-sub-total"> <span class="sub"><svg>
                            <use xlink:href="#icon-sub"></use>
                          </svg> 25</span> <span class="dub"><svg>
                            <use xlink:href="#icon-dub"></use>
                          </svg> 25</span> <span class="total">25</span> </span> </div>
                  </div>
                </a> <a class="item" href="/anime/fantascience-world-gulliver-boy-m8p8">
                  <div class="poster tooltipstered" data-tip="6803?/cache2b03b0">
                    <div><img
                        src="https://static.bunnycdn.ru/i/cache/images/2018/04/311cbcbf710ab359b0a4a7d00a1791a0.jpg-w100"
                        alt="Fantascience World Gulliver Boy"></div>
                  </div>
                  <div class="detail">
                    <p class="name" data-jp="Kuusou Kagaku Sekai Gulliver Boy">Fantascience World Gulliver Boy</p>
                    <div class="meta"> <span class="type">TV</span><span class="dub-sub-total"> <span class="sub"><svg>
                            <use xlink:href="#icon-sub"></use>
                          </svg> 11</span> <span class="total">50</span> </span> </div>
                  </div>
                </a> <a class="item" href="/anime/overlord-o35">
                  <div class="poster tooltipstered" data-tip="205?/cacheb9f5c8">
                    <div><img
                        src="https://static.bunnycdn.ru/i/cache/images/2018/04/eb9e6b6cf43ecbe7431003553ab99195.jpg-w100"
                        alt="Overlord"></div>
                  </div>
                  <div class="detail">
                    <p class="name" data-jp="Overlord">Overlord</p>
                    <div class="meta"> <span class="type">TV</span><span class="dub-sub-total"> <span class="sub"><svg>
                            <use xlink:href="#icon-sub"></use>
                          </svg> 13</span> <span class="dub"><svg>
                            <use xlink:href="#icon-dub"></use>
                          </svg> 13</span> <span class="total">13</span> </span> </div>
                  </div>
                </a> <a class="item" href="/anime/death-note-z02">
                  <div class="poster tooltipstered" data-tip="561?/cache7ab02c">
                    <div><img
                        src="https://static.bunnycdn.ru/i/cache/images/2018/04/a55c09c47ea411f18bd35d1f3f0ec35e.jpg-w100"
                        alt="Death Note"></div>
                  </div>
                  <div class="detail">
                    <p class="name" data-jp="DEATH NOTE">Death Note</p>
                    <div class="meta"> <span class="type">TV</span><span class="dub-sub-total"> <span class="sub"><svg>
                            <use xlink:href="#icon-sub"></use>
                          </svg> 37</span> <span class="dub"><svg>
                            <use xlink:href="#icon-dub"></use>
                          </svg> 37</span> <span class="total">37</span> </span> </div>
                  </div>
                </a> <a class="item" href="/anime/death-parade-6lj9">
                  <div class="poster tooltipstered" data-tip="744?/cache9831aa">
                    <div><img
                        src="https://static.bunnycdn.ru/i/cache/images/2018/04/ac77f938d4f19a7e54db1427b3841fb2.jpg-w100"
                        alt="Death Parade"></div>
                  </div>
                  <div class="detail">
                    <p class="name" data-jp="Death Parade">Death Parade</p>
                    <div class="meta"> <span class="type">TV</span><span class="dub-sub-total"> <span class="sub"><svg>
                            <use xlink:href="#icon-sub"></use>
                          </svg> 12</span> <span class="dub"><svg>
                            <use xlink:href="#icon-dub"></use>
                          </svg> 12</span> <span class="total">12</span> </span> </div>
                  </div>
                </a> <a class="item" href="/anime/one-outs-59pv">
                  <div class="poster tooltipstered" data-tip="2167?/cacheeb414a">
                    <div><img
                        src="https://static.bunnycdn.ru/i/cache/images/2018/04/0b71ce551e312b524228e0608bea4a9e.jpg-w100"
                        alt="One Outs"></div>
                  </div>
                  <div class="detail">
                    <p class="name" data-jp="One Outs">One Outs</p>
                    <div class="meta"> <span class="type">TV</span><span class="dub-sub-total"> <span class="sub"><svg>
                            <use xlink:href="#icon-sub"></use>
                          </svg> 25</span> <span class="total">25</span> </span> </div>
                  </div>
                </a> <a class="item" href="/anime/code-geass-lelouch-of-the-rebellion-2x52">
                  <div class="poster tooltipstered" data-tip="3840?/cache7c9ee7">
                    <div><img
                        src="https://static.bunnycdn.ru/i/cache/images/2018/04/cf6d2b34972aa35c68d019c3b759d6b2.jpg-w100"
                        alt="Code Geass: Lelouch of the Rebellion"></div>
                  </div>
                  <div class="detail">
                    <p class="name" data-jp="Code Geass: Hangyaku no Lelouch">Code Geass: Lelouch of the Rebellion</p>
                    <div class="meta"> <span class="type">TV</span><span class="dub-sub-total"> <span class="sub"><svg>
                            <use xlink:href="#icon-sub"></use>
                          </svg> 25</span> <span class="dub"><svg>
                            <use xlink:href="#icon-dub"></use>
                          </svg> 25</span> <span class="total">25</span> </span> </div>
                  </div>
                </a> </div>
            </section>
          </aside>
        </div>
      </div>
    </main>
    <div class="container">
      <footer>
        <div class="go-to-top d-flex justify-content-center border-secondary border-bottom pb-3 mb-4"> <button
            id="go-top"><i class="las la-angle-up"></i> Back to top</button> </div>
        <div class="top-links"> <a href="az-list">A-Z List</a> <a href="added">Recently Added</a> <a
            href="upcoming">Upcoming</a> <a href="most-watched">Most Watched</a> <a href="#" data-toggle="modal"
            data-target="#request">Request</a> <a href="faq">FAQ</a> <a href="contact">Contact</a> </div>
        <div class="bottom-info row">
          <div class="col-lg-5"> <span class="footer-logo"><img
                src="https://s2.bunnycdn.ru/assets/sites/animesuge/logo.png" alt="AnimeSuge"></span> <span
              class="small text-muted">Copyright © animesuge.to. All Rights Reserved</span> </div>
          <div class="col-lg-7">
            <div class="small text-muted">Made with <i class="las la-heart text-primary"></i> for anime users!</div>
            <div class="small text-muted">Disclaimer: This site does not store any files on its server. All contents are
              provided by non-affiliated third parties.</div>
          </div>
        </div>
      </footer>
    </div>
  </div>
  <aside id="schedule-section">
    <div class="schedule-top">
      <div class="close"><i class="las la-times"></i></div>
      <div class="present"><time>11:22:48</time> <span>GMT+2</span></div>
      <p>Release time is estimated</p> <button id="schedule-btn"
        class="btn btn-primary rounded-0 toggle-schedule"><span>Schedule</span><i
          class="las la-calendar-week"></i></button>
    </div>
    <div class="schedule-mid"></div>
  </aside>
  <div class="modal fade" id="sign">
    <div class="modal-dialog limit-w modal-dialog-centered cts-wrapper">
      <div class="modal-content bg cts-block" data-name="signin">
        <div class="modal-close" data-dismiss="modal"><i class="las la-times"></i></div>
        <h4 class="text-major">Welcome back!</h4>
        <p class="text-muted">The best site for watching anime online, completely free!</p>
        <form class="ajax-login" action="ajax/user/login" method="post" data-broadcast="user:updated">
          <div class="form-group mt-3"> <input type="text" class="form-control form-control-lg" name="username"
              placeholder="Username or email" required=""> </div>
          <div class="form-group mb-3"> <input type="password" class="form-control form-control-lg" name="password"
              placeholder="Password" required=""> </div>
          <div class="form-group d-flex justify-content-center mb-3"> <span class="captcha" data-theme="dark"></span>
          </div>
          <div class="text-center small"> <a class="cts-switcher" href="#" data-target="forgot">Forgot Your
              Password?</a> </div> <button
            class="btn-secondary2 text-uppercase btn-lg my-3 rounded-0 border btn w-100">Login</button>
          <div class="text-center"> Don't have an account? <a href="#" class="cts-switcher"
              data-target="signup">Register Now</a> </div>
        </form>
      </div>
      <div class="modal-content bg cts-block" data-name="signup" style="display:none">
        <div class="modal-close" data-dismiss="modal"><i class="las la-times"></i></div>
        <h4 class="text-major">Create an account</h4>
        <p class="text-muted">Create an account to enjoy more features</p>
        <form class="ajax-register" action="ajax/user/register" method="post" data-broadcast="user:updated">
          <div class="form-group mt-3"> <input type="email" class="form-control form-control-lg" placeholder="Email"
              name="email"> </div>
          <div class="form-group"> <input type="text" class="form-control form-control-lg" placeholder="Username"
              name="username"> </div>
          <div class="form-group mb-3"> <input type="password" class="form-control form-control-lg"
              placeholder="Password" name="password"> </div>
          <div class="form-group mb-3"> <input type="password" class="form-control form-control-lg"
              placeholder="Password confirmation" name="password_confirmation"> </div>
          <div class="form-group d-flex justify-content-center mb-3"> <span class="captcha" data-theme="dark"></span>
          </div> <button class="btn-secondary2 text-uppercase btn-lg my-3 rounded-0 border btn w-100">Sign Up</button>
          <div class="text-center"> Already have an account? <a href="#" class="cts-switcher" data-target="signin">Sign
              In</a> </div>
        </form>
      </div>
      <div class="modal-content bg cts-block" data-name="forgot" style="display:none">
        <div class="modal-close" data-dismiss="modal"><i class="las la-times"></i></div>
        <h4 class="text-major">Forgot your password</h4>
        <p class="text-muted">We will send an email if your account exists</p>
        <form class="ajax" action="ajax/user/forgot-password" method="post">
          <div class="form-group mt-3"> <input type="text" class="form-control form-control-lg"
              placeholder="Email or Username" name="account"> </div>
          <div class="form-group d-flex justify-content-center mb-3"> <span class="captcha" data-theme="dark"></span>
          </div><button class="btn-secondary2 text-uppercase btn-lg my-3 rounded-0 border btn w-100">Reset</button>
          <div class="text-center"> Back to <a href="#" class="cts-switcher" data-target="signin">Sign In</a> </div>
        </form>
      </div>
    </div>
  </div>
  <div class="modal fade" id="request">
    <div class="modal-dialog limit-w modal-dialog-centered">
      <div class="modal-content bg">
        <div class="modal-close" data-dismiss="modal"><i class="las la-times"></i></div>
        <h5 class="text-major text-center">Send a Request 🤟</h5>
        <p class="text-muted text-center">If you can't find your favourite anime in our library, please submit a
          request. We will try to make it available as soon as possible.</p>
        <form class="ajax" action="ajax/anime/request" method="post">
          <div class="form-group"> <input type="text" class="form-control form-control-lg" name="title"
              placeholder="Anime name" required=""> </div>
          <div class="form-group"> <input type="text" class="form-control form-control-lg" name="ref_url"
              placeholder="Link to MAL/ anidb/ anilist or any if possible"> </div>
          <div class="form-group"> <textarea type="text" class="form-control form-control-lg" name="detail"
              placeholder="More details about it if possible" rows="3"></textarea> </div>
          <div class="form-group mb-3 d-flex justify-content-center"> <span class="captcha" data-theme="dark"></span>
          </div> <button class="btn-secondary2 text-uppercase btn-lg my-3 rounded-0 border btn w-100">Send
            Request</button>
        </form>
      </div>
    </div>
  </div>
  <script>var recaptchaSiteKey = '6Lf3t9AZAAAAABXVY4vuHLoMSxidK0fOSGwtsaTs';</script>
  <script type="text/javascript" src="https://www.google.com/recaptcha/api.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
  <script type="text/javascript"
    src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.6.15/browser-polyfill.min.js"></script>
  <script type="text/javascript"
    src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.1/js/bootstrap.bundle.min.js"></script>
  <script type="text/javascript"
    src="https://cdnjs.cloudflare.com/ajax/libs/tooltipster/4.0.0/js/tooltipster.bundle.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Swiper/5.4.4/js/swiper.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.1.1/lazysizes.min.js"></script>
  <script type="text/javascript" src="https://s2.bunnycdn.ru/assets/t8/min/all.js?651cab00651c1d28"></script>
  <div
    style="width: 100%; height: 100%; position: fixed; left: 0px; top: 0px; z-index: 43046721; background: rgb(0, 0, 0); opacity: 0.95; display: none;">
  </div><svg class="d-none">
    <symbol id="icon-sub" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
      <path
        d="M98.1,16.9c0-1,0-2-0.2-2.9c-1.6-9.1-8.8-13.7-18-13.7c-13.9,0-19.9,0-33.8,0c-13.7,0-11.7,0-25.4,0 c-1.2,0-2.5,0-3.6,0.2C8,2,1.9,7.7,1.9,17c0,15.9,0,31.7,0,47.6c0,1,0,2.1,0.2,3.1c1.6,9.2,8.9,13.6,18.3,13.6c6.9,0,12.2,0,16.9,0 L47,98c1.3,2.3,4.7,2.3,6.1,0l9.7-16.7c4.6,0,10,0,16.8,0c1.2,0,2.4,0,3.5-0.2c9-1.6,15.1-7.3,15.1-16.4 C98.2,48.7,98.1,32.8,98.1,16.9z M12.6,51c-0.8-3.3-0.8-16.1-0.3-18.9c1.2-8.1,8.1-14.5,16.3-15.2c7.7-0.7,14,2,18.3,8.6 c2.6,3.9,0.2,8.8-4.4,9.3c-2.5,0.3-4.3-0.8-5.7-2.8c-2-2.8-5.3-3.8-8.5-2.7c-2.8,0.9-4.4,3.1-4.4,6c0,3.6,0,7.1,0,10.7 c0,3.3,1.5,5.6,4.5,6.5c3.1,1,6.4,0,8.2-2.5c1-1.4,2.1-2.5,3.8-2.9c2.4-0.6,4.9,0.3,6.4,2.2c1.5,2,1.6,4.6,0.3,6.7 c-2.8,4.4-6.7,7.1-11.7,8.3C25.3,66.7,14.8,60.7,12.6,51z M87.1,56c-2.8,4.4-6.7,7.1-11.7,8.3c-9.8,2.4-20.2-3.4-22.6-12.9 c-0.9-3.4-0.7-7.1-0.9-9.6c0.2-4.1,0-7.3,0.6-10.3c1.5-8.3,9-14.5,17.7-14.7c7-0.2,12.7,2.5,16.7,8.3c2.1,3,1.5,6.7-1.3,8.6 c-2.8,2-6.3,1.2-8.5-1.7c-2.3-3.1-6.2-4.1-9.5-2.4c-2.2,1.1-3.5,3-3.5,5.5c0,3.6,0,7.1,0,10.7c0,3.4,1.4,5.6,4.4,6.6 c3.1,1.1,6.4,0.1,8.3-2.5c1-1.4,2.1-2.5,3.8-2.9c2.4-0.6,4.9,0.3,6.4,2.2C88.3,51.2,88.4,53.9,87.1,56z">
      </path>
    </symbol>
    <symbol id="icon-dub" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
      <path
        d="M86.7,33.5c0-4.1-1.8-5.9-6-6c-0.9,0-6.8-0.1-14.5-0.1V16.3C66.3,7.3,59,0,50,0l0,0c-9,0-16.3,7.3-16.3,16.3 v11.2c-7.8,0-13.7,0-14.7,0.1c-4,0.1-5.8,2-5.8,6c0,7.2,0,7.1,0.1,14.3c0.1,9.7,3.9,16.9,10.5,23.9c5.1,5.5,11.6,8.9,19,10.5 c1.6,0.3,2.3,1,2.2,2.7c-0.1,2.5-0.1,0.7,0,3.2c0.1,1.7-0.6,2.4-2.3,2.4c-3.4-0.1-6.8-0.1-10.3,0c-3.4,0-5.5,1.9-5.5,4.8 c0,2.9,2.1,4.8,5.5,4.8c5.8,0,11.7,0,17.5,0c5.9,0,11.9,0,17.8,0c3.3,0,5.3-1.8,5.3-4.7c0-2.8-2.1-4.8-5.2-4.8 c-3.5-0.1-7-0.1-10.5,0c-1.7,0-2.4-0.5-2.4-2.3c0.1-2.3,0.2-0.3,0-2.7c-0.2-2.1,0.6-2.9,2.7-3.3c16.6-4,28.2-16.6,29-33 C86.9,41.5,86.7,41.1,86.7,33.5z M76.5,52.2C74.9,60,70.6,65,63.8,69.3c-17.2,11-39.7-0.6-40.9-20.9c-0.3-5.5-0.1-3.8-0.1-9.3 c0-1.5,0.5-2.1,2.1-2.1c1.6,0,4.8,0,8.8,0v10.8c0,9,7.3,16.3,16.3,16.3l0,0c9,0,16.3-7.3,16.3-16.3V36.9c2.9,0,4.9,0,5.3,0 c6.6,0.1,5.5-0.3,5.4,5.2C77,47.9,77.6,46.5,76.5,52.2z">
      </path>
    </symbol>
  </svg>
  <script type="text/javascript"
    src="https://platform-api.sharethis.com/js/sharethis.js#property=64b8a8a371afd40013e96ae0&amp;product=sop"
    async="async"></script>
  <script type="text/javascript" src="//coldvain.com/a5/31/d2/a531d2493b40586f47dd3023a98af61f.js"></script>
  <script
    src="https://whos.amung.us/pingjs/?k=a9b4f551ebed&amp;c=s&amp;x=https%3A%2F%2Fanimesuge.to%2Fanime%2Fno-game-no-life-4qkm%2Fep-4&amp;v=29&amp;r=7950&amp;t=https://animesuge.to/anime/no-game-no-life-4qkm/ep-4"></script>
  <iframe style="display: none;"></iframe>
  <div data-lastpass-root=""
    style="position: absolute !important; top: 0px !important; left: 0px !important; height: 0px !important; width: 0px !important;">
    <div data-lastpass-infield="true" style="position: absolute !important; top: 0px !important; left: 0px !important;">
    </div>
  </div>
</body>

</html>