<!DOCTYPE html><html lang="ru-RU"><head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Solo Leveling Chapter 120</title>
    <meta name="description" content="Read manga Solo Leveling - 120  ">

    <link rel="apple-touch-icon" href="https://mangajar.pro/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="57x57" href="https://mangajar.pro/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="72x72" href="https://mangajar.pro/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="https://mangajar.pro/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="https://mangajar.pro/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="https://mangajar.pro/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="https://mangajar.pro/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="https://mangajar.pro/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="https://mangajar.pro/apple-touch-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="32x32" href="https://mangajar.pro/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="https://mangajar.pro/favicon-16x16.png">
    <link rel="shortcut icon" href="https://mangajar.pro/favicon.ico" type="image/x-icon">
    <link rel="manifest" href="https://mangajar.pro/site.webmanifest">
    <link rel="mask-icon" href="https://mangajar.pro/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="msapplication-TileColor" content="#00aba9">
    <meta name="theme-color" content="#ffffff">
    <meta name="csrf-token" content="2jEelJwteDK2TgjdSI9SghfBal7aA99T0SSzBh8T">

    
    <link rel="preconnect" href="https://static.mangajar.pro">
    
    

        

    
            <style>
            .mb-1{margin-bottom:.25rem!important}#chapterHorizontalNavbar{min-height:56px}@media (max-width:767px){.ad-size-600px{max-height:600px}#chapterHorizontalNavbar{min-height:93px}}:root{--blue:#2c3e50;--indigo:#6610f2;--purple:#6f42c1;--pink:#e83e8c;--red:#e74c3c;--orange:#fd7e14;--yellow:#f39c12;--green:#18bc9c;--teal:#20c997;--cyan:#3498db;--white:#fff;--gray:#95a5a6;--gray-dark:#343a40;--primary:#2c3e50;--secondary:#95a5a6;--success:#18bc9c;--info:#3498db;--warning:#f39c12;--danger:#e74c3c;--light:#ecf0f1;--dark:#7b8a8b;--breakpoint-xs:0;--breakpoint-sm:576px;--breakpoint-md:768px;--breakpoint-lg:992px;--breakpoint-xl:1200px}*,:after,:before{box-sizing:border-box}html{line-height:1.15;-webkit-text-size-adjust:100%}header,nav{display:block}body{margin:0;font-size:.9375rem;font-weight:400;line-height:1.5;color:#212529;text-align:left;background-color:#fff}h1,h2,h5{margin-top:0;margin-bottom:.5rem}p{margin-top:0}p{margin-bottom:1rem}ul{margin-top:0;margin-bottom:1rem}a{color:#18bc9c;text-decoration:none;background-color:transparent}img{border-style:none}img{vertical-align:middle}button{border-radius:0}button,input{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button{text-transform:none}[type=button],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}h1,h2,h5{margin-bottom:.5rem;font-weight:500;line-height:1.2}h1{font-size:3rem}h2{font-size:2.5rem}h5{font-size:1.171875rem}.img-fluid{max-width:100%;height:auto}.container-fluid{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}.row{display:flex;flex-wrap:wrap;margin-right:-15px;margin-left:-15px}.col-12{position:relative;width:100%;padding-right:15px;padding-left:15px}.col-12{flex:0 0 100%;max-width:100%}.form-control{display:block;width:100%;height:calc(1.5em + .75rem + 2px);padding:.375rem .75rem;font-size:.9375rem;font-weight:400;line-height:1.5;color:#7b8a8b;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:.25rem}.form-control::-ms-expand{background-color:transparent;border:0}.form-control::-webkit-input-placeholder{color:#95a5a6;opacity:1}.form-control::-ms-input-placeholder{color:#95a5a6;opacity:1}.form-control:-ms-input-placeholder{color:#95a5a6;opacity:1}.form-inline{display:flex;flex-flow:row wrap;align-items:center}@media (min-width:576px){.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}}.btn{display:inline-block;font-weight:400;color:#212529;text-align:center;vertical-align:middle;background-color:transparent;border:1px solid transparent;padding:.375rem .75rem;font-size:.9375rem;line-height:1.5;border-radius:.25rem}.btn-primary{color:#fff;background-color:#2c3e50;border-color:#2c3e50}.btn-secondary{color:#fff;background-color:#95a5a6;border-color:#95a5a6}.btn-lg{padding:.5rem 1rem;font-size:1.171875rem;line-height:1.5;border-radius:.3rem}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.input-group{position:relative;display:flex;flex-wrap:wrap;align-items:stretch;width:100%}.input-group-append,.input-group-prepend{display:flex}.input-group-append .btn{position:relative;z-index:2}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:flex;align-items:center;padding:.375rem .75rem;margin-bottom:0;font-size:.9375rem;font-weight:400;line-height:1.5;color:#7b8a8b;text-align:center;white-space:nowrap;background-color:#ecf0f1;border:1px solid #ced4da;border-radius:.25rem}.input-group>.input-group-append:not(:last-child)>.btn,.input-group>.input-group-append:not(:last-child)>.input-group-text,.input-group>.input-group-prepend>.input-group-text{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn,.input-group>.input-group-append>.input-group-text{border-top-left-radius:0;border-bottom-left-radius:0}.nav-link{display:block;padding:.5rem 2rem}.navbar{position:relative;padding:1rem}.navbar{display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:.32421875rem;padding-bottom:.32421875rem;margin-right:1rem;font-size:1.171875rem;line-height:inherit;white-space:nowrap}.navbar-nav{display:flex;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-collapse{flex-basis:100%;flex-grow:1;align-items:center}.navbar-toggler{padding:.25rem .75rem;font-size:1.171875rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:.25rem}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:"";background:50% no-repeat;background-size:100% 100%}@media (min-width:992px){.navbar-expand-lg{flex-flow:row nowrap;justify-content:flex-start}.navbar-expand-lg .navbar-nav{flex-direction:row}.navbar-expand-lg .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-lg .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}.navbar-dark .navbar-brand,.navbar-dark .navbar-nav .nav-link{color:#fff}.navbar-dark .navbar-toggler{color:#fff;border-color:hsla(0,0%,100%,.1)}.navbar-dark .navbar-toggler-icon{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='%23fff' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E")}.card{position:relative;display:flex;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,.125);border-radius:.25rem}.card-body{flex:1 1 auto;padding:1.25rem}.modal{position:fixed;top:0;left:0;z-index:1050;display:none;width:100%;height:100%;overflow:hidden;outline:0}.modal-dialog{position:relative;width:auto;margin:.5rem}.modal.fade .modal-dialog{-webkit-transform:translateY(-50px);transform:translateY(-50px)}.modal-dialog-centered{display:flex;align-items:center;min-height:calc(100% - 1rem)}.modal-dialog-centered:before{display:block;height:calc(100vh - 1rem);content:""}.modal-content{position:relative;display:flex;flex-direction:column;width:100%;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;outline:0}.modal-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-header{display:flex;align-items:flex-start;justify-content:space-between;padding:1rem;border-bottom:1px solid #dee2e6;border-top-left-radius:.3rem;border-top-right-radius:.3rem}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;flex:1 1 auto;padding:1rem}.modal-footer{display:flex;align-items:center;justify-content:flex-end;padding:1rem;border-top:1px solid #dee2e6;border-bottom-right-radius:.3rem;border-bottom-left-radius:.3rem}.modal-footer>:not(:first-child){margin-left:.25rem}.modal-footer>:not(:last-child){margin-right:.25rem}@media (min-width:576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-centered{min-height:calc(100% - 3.5rem)}.modal-dialog-centered:before{height:calc(100vh - 3.5rem)}}.carousel{position:relative}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner:after{display:block;clear:both;content:""}.carousel-item{position:relative;display:none;float:left;width:100%;margin-right:-100%;-webkit-backface-visibility:hidden;backface-visibility:hidden}.carousel-item.active{display:block}.carousel-control-next,.carousel-control-prev{position:absolute;top:0;bottom:0;z-index:1;display:flex;align-items:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:.5}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-next-icon,.carousel-control-prev-icon{display:inline-block;width:20px;height:20px;background:50%/100% 100% no-repeat}.carousel-control-prev-icon{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2.5-2.5L5.25 0z'/%3E%3C/svg%3E")}.carousel-control-next-icon{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L2.75 8l4-4-4-4z'/%3E%3C/svg%3E")}.bg-primary{background-color:#2c3e50!important}.clearfix:after{display:block;clear:both;content:""}.d-flex{display:flex!important}.justify-content-center{justify-content:center!important}.position-relative{position:relative!important}.fixed-top{top:0}.fixed-top{position:fixed;right:0;left:0;z-index:1030}.sr-only{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}.w-100{width:100%!important}.mt-1{margin-top:.25rem!important}.mt-2,.my-2{margin-top:.5rem!important}.mr-2{margin-right:.5rem!important}.mb-2,.my-2{margin-bottom:.5rem!important}.mt-4{margin-top:1.5rem!important}.mb-5{margin-bottom:3rem!important}.px-2{padding-right:.5rem!important}.px-2{padding-left:.5rem!important}.px-3{padding-right:1rem!important}.px-3{padding-left:1rem!important}.mr-auto,.mx-auto{margin-right:auto!important}.mx-auto{margin-left:auto!important}@media (min-width:576px){.my-sm-0{margin-top:0!important}.my-sm-0{margin-bottom:0!important}.mr-sm-2{margin-right:.5rem!important}}@media (min-width:992px){.my-lg-0{margin-top:0!important}.my-lg-0{margin-bottom:0!important}}.text-center{text-align:center!important}.text-success{color:#18bc9c!important}.text-warning{color:#f39c12!important}.btn-secondary{color:#fff}html{height:100%}body{min-height:100%;display:flex;flex-direction:column;padding-top:5rem;background-color:hsla(204,8%,90%,1);color:#333;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol"}.navbar-brand img{max-width:30px}.navbar{padding:.5rem 1rem}.page-load-status{display:none;padding-top:20px;text-align:center;color:#777}.navbar{opacity:1}.navbar-icon .nav-link span.fa,.navbar-icon .nav-link span.far{font-size:1.5em;padding-top:.3rem;margin-right:.1rem}img.lazy-preload{background-image:url(/images/preloader.svg);background-repeat:no-repeat;background-position:50% 50%}a{color:#166785}.ad-container{margin:0 auto 16px;padding:0!important;text-align:center;width:100%}.ad-title{padding:7px;font-size:14px}.ad-content{margin:0 auto 20px}@media (max-width:576px){.ad-size-280px{max-height:280px}.ad-size-600px{max-height:600px}}@media (max-width:767px){.ad-size-280px{max-height:280px}.ad-size-600px{max-height:600px}}.menu-link{font-size:1.2rem}.chapter-container{padding-right:0!important;padding-left:0!important}.col-12{padding-right:7px;padding-left:7px}.row{margin-right:0;margin-left:0}.carousel-control-next,.carousel-control-prev{width:30%}.card-body{padding:.6rem}.reading-mode .input-group-text{font-size:1.1rem}.fa,.far,.fas{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-block;font-style:normal;font-variant:normal;text-rendering:auto;line-height:1}.fa-book-open:before{content:"\F518"}.fa-moon:before{content:"\F186"}.fa-scroll:before{content:"\F70E"}.fa-sign-in-alt:before{content:"\F2F6"}.fa-user:before{content:"\F007"}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.far{font-weight:400}.fa,.far,.fas{font-family:Font Awesome\ 5 Free}.fa,.fas{font-weight:900}            .dropdown{position:relative}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:.5rem 0;margin:.125rem 0 0;font-size:.9375rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.align-items-center{align-items:center!important;}.flex-column{flex-direction:column!important;}.d-flex{display:flex!important;}
.slick-slide{float:left;}.slick-slider{position:relative;display:block;}.slick-list{overflow:hidden;}.slick-next,.slick-prev{color:transparent;border:none;background:0 0;}.slick-dots li button{font-size:0;border:0;outline:0;background:0 0;}.slick-dots{position:absolute;width:100%;list-style:none;}
.modal{position: fixed;display: none;}.fade:not(.show){opacity: 0;}
                    </style>
    
    

    <script>
        window.googletag = window.googletag || {cmd: []};
        googletag.cmd.push(function() {
            googletag.pubads().setTargeting('adult', "0");
            googletag.pubads().setTargeting('disabled_providers', JSON.parse('[]'));
        });
    </script>

                    <link rel="preload" href="https://static.mangajar.pro/pages/3/212376/aWGAvdHf2h8LsuoozdRI9ozbYmDSn4IrW4kQr6FS.jpg" as="image">
                
<!-- -->
    
    

<style>AD-SLOT,
AD-TRIPLE-BOX,
DFP-AD,
[class^="adDisplay-module"],
[class^="amp-ad-"],
[data-ad-cls],
[data-adbridg-ad-class],
[data-css-class="dfp-inarticle"],
[data-d-ad-id],
[data-desktop-ad-id],
[data-dynamic-ads],
[data-ez-name],
[data-freestar-ad],
[data-id^="div-gpt-ad"],
[data-m-ad-id],
[data-mobile-ad-id],
[data-name="adaptiveConstructorAd"],
[data-rc-widget],
[data-role="tile-ads-module"],
[data-template-type="nativead"],
[data-testid="ad_testID"],
[data-type="ad-vertical"],
[id^="ad-wrap-"],
[id^="ad_sky"],
[id^="ad_slider"],
[id^="section-ad-banner"],
[onclick^="location.href='http://www.reimageplus.com"],
a-ad,
a[style="width:100%;height:100%;z-index:10000000000000000;position:absolute;top:0;left:0;"],
ad-shield-ads,
app-ad,
app-advertisement,
app-large-ad,
ark-top-ad,
article.ad,
aside[id^="adrotate_widgets-"],
atf-ad-slot,
bottomadblock,
display-ads,
div[class^="Adstyled__AdWrapper-"],
div[class^="Display_displayAd"],
div[class^="kiwi-ad-wrapper"],
div[class^="native-ad-"],
div[data-ad-placeholder],
div[data-ad-wrapper],
div[data-adname],
div[data-adunit-path],
div[data-adunit],
div[data-adzone],
div[data-alias="300x250 Ad 1"],
div[data-alias="300x250 Ad 2"],
div[data-content="Advertisement"],
div[data-contentexchange-widget],
div[data-dfp-id],
div[data-id-advertdfpconf],
div[data-insertion],
div[data-mini-ad-unit],
div[data-native-ad],
div[data-spotim-slot],
div[id^="_vdo_ads_player_ai_"],
div[id^="ad-div-"],
div[id^="ad-position-"],
div[id^="adngin-"],
div[id^="adrotate_widgets-"],
div[id^="ads250_250-widget-"],
div[id^="ads300_100-widget-"],
div[id^="ads300_250-widget-"],
div[id^="adspot-"],
div[id^="advads_ad_"],
div[id^="crt-"][style],
div[id^="div-ads-"],
div[id^="google_dfp_"],
div[id^="gpt_ad_"],
div[id^="lazyad-"],
div[id^="optidigital-adslot"],
div[id^="pa_sticky_ad_box_middle_"],
div[id^="rc-widget-"],
div[id^="sticky_ad_"],
div[id^="vuukle-ad-"],
div[recirculation-ad-container],
gpt-ad,
guj-ad,
hl-adsense,
img[src^="https://images.purevpnaffiliates.com"],
ps-connatix-module,
span[data-ez-ph-id],
span[id^="ezoic-pub-ad-placeholder-"],
topadblock,
zeus-ad,
[class^="tile-picker__CitrusBannerContainer-sc-"],
citrus-ad-wrapper,
[class^="s2nPlayer"],
div[id*="MarketGid"],
[onclick*="content.ad/"],
AMP-AD,
amp-ad,
amp-ad-custom,
amp-connatix-player,
amp-fx-flying-carpet,
a[data-obtrack^="http://paid.outbrain.com/network/redir?"],
a[data-oburl^="https://paid.outbrain.com/network/redir?"],
a[data-redirect^="https://paid.outbrain.com/network/redir?"],
a[data-url^="http://paid.outbrain.com/network/redir?"] + .author,
a[data-widget-outbrain-redirect^="http://paid.outbrain.com/network/redir?"],
a[onmousedown^="this.href='http://paid.outbrain.com/network/redir?"][target="_blank"],
a[onmousedown^="this.href='http://paid.outbrain.com/network/redir?"][target="_blank"] + .ob_source,
a[onmousedown^="this.href='https://paid.outbrain.com/network/redir?"][target="_blank"] + .ob_source,
a[target="_blank"][onmousedown="this.href^='http://paid.outbrain.com/network/redir?"],
div[id^="taboola-stream-"],
display-ad-component,
div[id^="zergnet-widget"],
a[aria-label="Werbelink"],
[onclick*="window.open('http://deloplen.com/"],
[data-uri^="https://s3.amazonaws.com"],
[data-lnguri^="https://s3.amazonaws.com"],
[onclick*="postlnk.com"],
[class^="DisplayAd"],
div[class*="displayAdRight"],
[data-lnguri*="vipbox"],
[src^="https://aff1xstavka.com"],
[class^="div-gpt-ad"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]),
[id^="div-gpt-ad"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]),
div[id^="div-gpt-"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]),
.samBannerUnit, .samCodeUnit,
[src^="//dombnrs.com/"],
[src^="https://forum.picbaron.com/Banner"],
div[id][style^="position: fixed; inset: 0px; z-index: 2147483647; background: black"][style*="opacity: 0.01"],
div[class$="player-promo-col"],
div#spot-holder.spot-holder[style="display: block;"],
a[dontfo=""][style$="position: absolute; z-index: 2147483647;"],
[data-ad-module]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-ad-width]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-adblockkey]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(html):not(.adsbygoogle),
[data-advadstrackid]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-ad-manager-id]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
div[style^="z-index: 999999; background-image: url(\"data:image/gif;base64,"][style$="position: absolute;"],
a[onclick="openAuc();"],
div[style="position: fixed; display: block; width: 100%; height: 100%; inset: 0px; background-color: rgba(0, 0, 0, 0); z-index: 300000;"],
div[style^="position:fixed;inset:0px;z-index:2147483647;background:black;opacity:0.01"],
a[id][href="https://chpadblock.com/"][rel^="noopener noreferrer"],
a[id][href="https://toolkitspro.com"][rel^="noopener noreferrer"],
a[id][href="https://hamrocsit.com"][rel^="noopener noreferrer"],
iframe.lazyloaded[data-src^="https://rcm-fe.amazon-adsystem.com/"],
[style="position:absolute;top:0;left:0;width: 100%;height: 100%;z-index:2147483647"],
[style="top: 0px; left: 0px; width: 940px; height: 600px; position: absolute; z-index: 2147483647;"],
div[style="position: fixed;top: 0;left: 0;right: 0;bottom:0;z-index: 99999999;background: rgba(0,0,0,.6);"] { display: none !important; }

[data-ad-name],
[data-revive-zoneid],
[name^="google_ads_iframe"],
div[aria-label="Ads"],
div[data-ad-targeting],
div[data-google-query-id],
div[data-native_ad],
div[id^="ad_position_"],
div[id^="dfp-ad-"],
div[id^="ezoic-pub-ad-"],
div[id^="yandex_ad"],
ins.adsbygoogle,
div[id*="ScriptRoot"],
a[onmousedown^="this.href='https://paid.outbrain.com/network/redir?"][target="_blank"],
.trc_related_container div[data-item-syndicated="true"],
amp-embed[type="taboola"],
[id^="google_ads_iframe"]:not(.rb-adbanner) { display: none !important; }</style><style>.ad-title,
.ad-content:not(:empty),
a[href^="http://com-1.pro/"],
[href*="postlnk.com"],
[href*="passtechusa.com"],
[href*="speenphorbin.com"] { display: none !important; }</style></head>
<body>

<header>

    <nav class="navbar navbar-expand-lg navbar-dark bg-primary fixed-top" id="navbar">

        <a class="navbar-brand" href="/" title="MangaJar.pro Find your manga">
            <img src="/images/logo_mini.png" width="30" height="35" alt="MangaJar" title="MangaJar">
            MangaJar
            
        </a>
        <div class="d-flex">
                        <div class="navbar-icon mx-2 align-self-center" style="width:30px;">
                <span class="nav-link theme-switch text-warning ml-1 px-0" style="cursor:pointer;" title="Change theme">
                    <span class=" far fa-moon  "></span>
                </span>
            </div>

            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarColor01" aria-controls="navbarColor01" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>

        <div class="collapse navbar-collapse" id="navbarColor01">
            <ul class="navbar-nav  navbar-left mr-auto">
                
                <li class="nav-item ">
                    <a class="nav-link menu-link" href="/manga">Top manga</a>
                </li>
                <li class="nav-item ">
                    <a class="nav-link menu-link" href="/genre">Genres</a>
                </li>
                                    <li class="nav-item ">
                        <a class="nav-link menu-link" href="/recommendations">Recommendations</a>
                    </li>
                                                    <li class="nav-item ">
                        <a class="nav-link menu-link" href="/top">Top 100</a>
                    </li>
                            </ul>


            <ul class="navbar-nav navbar-right navbar-icon mr-2">
                                    
                                                    <li class="nav-item"><a class="nav-link" href="https://mangajar.pro/register?redirectTo=http%3A%2F%2Fmangajar.pro%2Fmanga%2Fsolo-leveling-abs3TTS%2Fchapter%2F120"><span class="fa fa-user"></span> Sign-up</a></li>
                    <li class="nav-item"><a class="nav-link" href="https://mangajar.pro/login?redirectTo=http%3A%2F%2Fmangajar.pro%2Fmanga%2Fsolo-leveling-abs3TTS%2Fchapter%2F120"><span class="fa fa-sign-in-alt"></span> Sign-in</a></li>
                            </ul>
            <form class="form-inline my-2 my-lg-0 position-relative" action="/search" method="get" autocomplete="off" novalidate="novalidate">
                <input id="search_box" name="q" class="form-control mr-sm-2" type="text" placeholder="Search" title="* Enter keyword" autocomplete="off"><ul id="result_box" tabindex="0" class="d-none"></ul>
                <button class="btn btn-secondary my-2 my-sm-0" type="submit">Find</button>
            </form>
        </div>

    </nav>
</header>




    
    <div class="container-fluid chapter-container">
        

            <div class="text-center">
                <h1 class="mb-2">
                    <a href="/manga/solo-leveling-abs3TTS" style="color: #EC5E26;">Solo Leveling</a>
                    <br>
                    120
                                    </h1>
            </div>

            <div class="row w-100 mt-4 mb-2">
                <div class="col-12">
                    <div class="reading-mode input-group mx-auto justify-content-center">
                        <div class="input-group-prepend">
                            <div class="input-group-text bg-primary px-2">Reading mode</div>
                        </div>
                        <div class="input-group-append">
                            <button class="readingMode input-group-text bg-primary btn btn-primary px-3  text-success " data-mode="v" title="Vertical">
                                <i class="fas fa-scroll" style="width: 22px"></i>
                            </button>
                        </div>
                        <div class="input-group-append">
                            <button class="readingMode input-group-text bg-primary btn btn-primary px-3 " data-mode="h" title="Horizontal">
                                <i class="fas fa-book-open" style="width: 22px"></i>
                            </button>
                        </div>
                        <div class="input-group-append">
                            <button class="readingMode input-group-text bg-primary btn btn-primary px-3  text-success " data-mode="a">
                                Auto
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="ad-container"><div class="ad-title">Advertisements</div><div class="ad-content  ad-size-280px" style="width:100%;min-height:280px;"><div id="bg_451427635_pre"><script async="" defer="" src="//platform.bidgear.com/async.php?domainid=4514&amp;sizeid=2&amp;zoneid=7635&amp;k=1696352656601"></script></div>
<div id="bg_451427635"></div>
<script>(function (){
var urlCB = new Date().getTime();
var sc = window.document.createElement("script");
sc.async = true;sc.defer = true;
sc.src = "//platform.bidgear.com/async.php?domainid=4514&sizeid=2&zoneid=7635&k="+urlCB;
var pr = window.document.getElementById("bg_451427635_pre");
pr.appendChild(sc);})()</script></div></div>

                            <div class="mt-1 d-flex flex-column align-items-center chapter-images">
                                                                        <img src="https://static.mangajar.pro/pages/3/212376/aWGAvdHf2h8LsuoozdRI9ozbYmDSn4IrW4kQr6FS.jpg" class="img-fluid page-image" width="1831" height="1139" data-page="4393613" data-number="1" id="page-1" alt="Manga Solo Leveling - Chapter 120 Page 1" title="Manga Solo Leveling - Chapter 120 Page 1">
                                                                                                                        <img src="https://static.mangajar.pro/pages/3/212376/CHAR4dWa8OG3TFjBjofX5IA6EPcx277yE0L49Ol3.jpg" data-small-src="https://static.mangajar.pro/pages/3/212376/CHAR4dWa8OG3TFjBjofX5IA6EPcx277yE0L49Ol3.jpg" class="img-fluid page-image lazy-preload" width="720" height="11282" data-page="4393614" data-number="2" id="page-2" alt="Manga Solo Leveling - Chapter 120 Page 2" title="Manga Solo Leveling - Chapter 120 Page 2">
                                                                                                                        <img src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA3MjAgMTE3NjQnPjwvc3ZnPg==" data-src="https://static.mangajar.pro/pages/3/212376/YqUbVpS2SWcS44WRo8CDnELDAjK3hmyy1zoE4SQL.jpg" data-small-src="https://static.mangajar.pro/pages/3/212376/YqUbVpS2SWcS44WRo8CDnELDAjK3hmyy1zoE4SQL.jpg" class="img-fluid page-image lazy lazy-preload" data-loader="smallImageLoader" width="720" height="11764" data-page="4393615" data-number="3" id="page-3" alt="Manga Solo Leveling - Chapter 120 Page 3" title="Manga Solo Leveling - Chapter 120 Page 3">
                                                                            <div class="ad-container"><div class="ad-title">Advertisements</div><div class="ad-content  ad-size-280px" style="width:100%;min-height:280px;max-width: 720px;"><div id="bg_4514166046_pre"><script async="" defer="" src="//platform.bidgear.com/async.php?domainid=4514&amp;sizeid=16&amp;zoneid=6046&amp;k=1696352656603"></script><script async="" defer="" src="//platform.bidgear.com/async.php?domainid=4514&amp;sizeid=16&amp;zoneid=6046&amp;k=1696352656605"></script><script async="" defer="" src="//platform.bidgear.com/async.php?domainid=4514&amp;sizeid=16&amp;zoneid=6046&amp;k=1696352656606"></script><script async="" defer="" src="//platform.bidgear.com/async.php?domainid=4514&amp;sizeid=16&amp;zoneid=6046&amp;k=1696352656606"></script><script async="" defer="" src="//platform.bidgear.com/async.php?domainid=4514&amp;sizeid=16&amp;zoneid=6046&amp;k=1696352656607"></script><script async="" defer="" src="//platform.bidgear.com/async.php?domainid=4514&amp;sizeid=16&amp;zoneid=6046&amp;k=1696352656608"></script></div>
<div id="bg_4514166046"></div>
<script>(function (){
var urlCB = new Date().getTime();
var sc = window.document.createElement("script");
sc.async = true;sc.defer = true;
sc.src = "//platform.bidgear.com/async.php?domainid=4514&sizeid=16&zoneid=6046&k="+urlCB;
var pr = window.document.getElementById("bg_4514166046_pre");
pr.appendChild(sc);})()</script></div></div>
                                                                                                <img src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA3MjAgMTAzODInPjwvc3ZnPg==" data-src="https://static.mangajar.pro/pages/3/212376/glPSRMWtePBFz0XbDvsqMzgWOGIzW4E3EN8RkNvo.jpg" data-small-src="https://static.mangajar.pro/pages/3/212376/glPSRMWtePBFz0XbDvsqMzgWOGIzW4E3EN8RkNvo.jpg" class="img-fluid page-image lazy lazy-preload" data-loader="smallImageLoader" width="720" height="10382" data-page="4393616" data-number="4" id="page-4" alt="Manga Solo Leveling - Chapter 120 Page 4" title="Manga Solo Leveling - Chapter 120 Page 4">
                                                                                                                        <img src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA3MjAgMTIxODInPjwvc3ZnPg==" data-src="https://static.mangajar.pro/pages/3/212376/tfpLz64lzsSoV3WEroQ5f1oXCDmSpkthtVmySrfH.jpg" data-small-src="https://static.mangajar.pro/pages/3/212376/tfpLz64lzsSoV3WEroQ5f1oXCDmSpkthtVmySrfH.jpg" class="img-fluid page-image lazy lazy-preload" data-loader="smallImageLoader" width="720" height="12182" data-page="4393617" data-number="5" id="page-5" alt="Manga Solo Leveling - Chapter 120 Page 5" title="Manga Solo Leveling - Chapter 120 Page 5">
                                                                            <div class="ad-container"><div class="ad-title">Advertisements</div><div class="ad-content  ad-size-280px" style="width:100%;min-height:280px;max-width: 720px;"><div id="bg_4514166046_pre"></div>
<div id="bg_4514166046"></div>
<script>(function (){
var urlCB = new Date().getTime();
var sc = window.document.createElement("script");
sc.async = true;sc.defer = true;
sc.src = "//platform.bidgear.com/async.php?domainid=4514&sizeid=16&zoneid=6046&k="+urlCB;
var pr = window.document.getElementById("bg_4514166046_pre");
pr.appendChild(sc);})()</script></div></div>
                                                                                                <img src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA3MjAgMTUzNjQnPjwvc3ZnPg==" data-src="https://static.mangajar.pro/pages/3/212376/jbskN01Vr653Fjtwa0Htm0LHUvCP3PRCRpKk4oV0.jpg" data-small-src="https://static.mangajar.pro/pages/3/212376/jbskN01Vr653Fjtwa0Htm0LHUvCP3PRCRpKk4oV0.jpg" class="img-fluid page-image lazy lazy-preload" data-loader="smallImageLoader" width="720" height="15364" data-page="4393618" data-number="6" id="page-6" alt="Manga Solo Leveling - Chapter 120 Page 6" title="Manga Solo Leveling - Chapter 120 Page 6">
                                                                            <div class="ad-container"><div class="ad-title">Advertisements</div><div class="ad-content  ad-size-280px" style="width:100%;min-height:280px;max-width: 720px;"><div id="bg_4514166046_pre"></div>
<div id="bg_4514166046"></div>
<script>(function (){
var urlCB = new Date().getTime();
var sc = window.document.createElement("script");
sc.async = true;sc.defer = true;
sc.src = "//platform.bidgear.com/async.php?domainid=4514&sizeid=16&zoneid=6046&k="+urlCB;
var pr = window.document.getElementById("bg_4514166046_pre");
pr.appendChild(sc);})()</script></div></div>
                                                                                                <img src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA3MjAgMTE3NjQnPjwvc3ZnPg==" data-src="https://static.mangajar.pro/pages/3/212376/5Qa49fCr0rSnejBFDAwGnRhA3m6e4EMb6JEQFZ2l.jpg" data-small-src="https://static.mangajar.pro/pages/3/212376/5Qa49fCr0rSnejBFDAwGnRhA3m6e4EMb6JEQFZ2l.jpg" class="img-fluid page-image lazy lazy-preload" data-loader="smallImageLoader" width="720" height="11764" data-page="4393619" data-number="7" id="page-7" alt="Manga Solo Leveling - Chapter 120 Page 7" title="Manga Solo Leveling - Chapter 120 Page 7">
                                                                                                                        <img src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA3MjAgMTI0NTgnPjwvc3ZnPg==" data-src="https://static.mangajar.pro/pages/3/212376/MDkIM7wsmz8ITQcCXYcurLRbQSuWqxeDVlB5CmOh.jpg" data-small-src="https://static.mangajar.pro/pages/3/212376/MDkIM7wsmz8ITQcCXYcurLRbQSuWqxeDVlB5CmOh.jpg" class="img-fluid page-image lazy lazy-preload" data-loader="smallImageLoader" width="720" height="12458" data-page="4393620" data-number="8" id="page-8" alt="Manga Solo Leveling - Chapter 120 Page 8" title="Manga Solo Leveling - Chapter 120 Page 8">
                                                                            <div class="ad-container"><div class="ad-title">Advertisements</div><div class="ad-content  ad-size-280px" style="width:100%;min-height:280px;max-width: 720px;"><div id="bg_4514166046_pre"></div>
<div id="bg_4514166046"></div>
<script>(function (){
var urlCB = new Date().getTime();
var sc = window.document.createElement("script");
sc.async = true;sc.defer = true;
sc.src = "//platform.bidgear.com/async.php?domainid=4514&sizeid=16&zoneid=6046&k="+urlCB;
var pr = window.document.getElementById("bg_4514166046_pre");
pr.appendChild(sc);})()</script></div></div>
                                                                                                <img src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA3MjAgMTAzODInPjwvc3ZnPg==" data-src="https://static.mangajar.pro/pages/3/212376/7okDflmr2VgHW4h0CttHr5vmTRfTXJCO8l5vVMco.jpg" data-small-src="https://static.mangajar.pro/pages/3/212376/7okDflmr2VgHW4h0CttHr5vmTRfTXJCO8l5vVMco.jpg" class="img-fluid page-image lazy lazy-preload" data-loader="smallImageLoader" width="720" height="10382" data-page="4393621" data-number="9" id="page-9" alt="Manga Solo Leveling - Chapter 120 Page 9" title="Manga Solo Leveling - Chapter 120 Page 9">
                                                                                                                        <img src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA3MjAgMTI2NjQnPjwvc3ZnPg==" data-src="https://static.mangajar.pro/pages/3/212376/CgYaOVz8ABsFMulf65SPSADhxALZccp4Xj0vtezK.jpg" data-small-src="https://static.mangajar.pro/pages/3/212376/CgYaOVz8ABsFMulf65SPSADhxALZccp4Xj0vtezK.jpg" class="img-fluid page-image lazy lazy-preload" data-loader="smallImageLoader" width="720" height="12664" data-page="4393622" data-number="10" id="page-10" alt="Manga Solo Leveling - Chapter 120 Page 10" title="Manga Solo Leveling - Chapter 120 Page 10">
                                                                            <div class="ad-container"><div class="ad-title">Advertisements</div><div class="ad-content  ad-size-280px" style="width:100%;min-height:280px;max-width: 720px;"><div id="bg_4514166046_pre"></div>
<div id="bg_4514166046"></div>
<script>(function (){
var urlCB = new Date().getTime();
var sc = window.document.createElement("script");
sc.async = true;sc.defer = true;
sc.src = "//platform.bidgear.com/async.php?domainid=4514&sizeid=16&zoneid=6046&k="+urlCB;
var pr = window.document.getElementById("bg_4514166046_pre");
pr.appendChild(sc);})()</script></div></div>
                                                                                                <img src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA3MjAgMTM4MzMnPjwvc3ZnPg==" data-src="https://static.mangajar.pro/pages/3/212376/fTdl47Io4V3gNpejWwoTm2teGhVyMtAybT2406BJ.jpg" data-small-src="https://static.mangajar.pro/pages/3/212376/fTdl47Io4V3gNpejWwoTm2teGhVyMtAybT2406BJ.jpg" class="img-fluid page-image lazy lazy-preload" data-loader="smallImageLoader" width="720" height="13833" data-page="4393623" data-number="11" id="page-11" alt="Manga Solo Leveling - Chapter 120 Page 11" title="Manga Solo Leveling - Chapter 120 Page 11">
                                                                                                                        <img src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA3MjAgMTI1NDAnPjwvc3ZnPg==" data-src="https://static.mangajar.pro/pages/3/212376/RpxajXXOe2nyxOxNCMLonZZlOoFI7RSLy7Jpp9Kw.jpg" data-small-src="https://static.mangajar.pro/pages/3/212376/RpxajXXOe2nyxOxNCMLonZZlOoFI7RSLy7Jpp9Kw.jpg" class="img-fluid page-image lazy lazy-preload" data-loader="smallImageLoader" width="720" height="12540" data-page="4393624" data-number="12" id="page-12" alt="Manga Solo Leveling - Chapter 120 Page 12" title="Manga Solo Leveling - Chapter 120 Page 12">
                                                                            <div class="ad-container"><div class="ad-title">Advertisements</div><div class="ad-content  ad-size-280px" style="width:100%;min-height:280px;max-width: 720px;"><div id="bg_4514166046_pre"></div>
<div id="bg_4514166046"></div>
<script>(function (){
var urlCB = new Date().getTime();
var sc = window.document.createElement("script");
sc.async = true;sc.defer = true;
sc.src = "//platform.bidgear.com/async.php?domainid=4514&sizeid=16&zoneid=6046&k="+urlCB;
var pr = window.document.getElementById("bg_4514166046_pre");
pr.appendChild(sc);})()</script></div></div>
                                                                                                <img src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA4MDAgNDAwJz48L3N2Zz4=" data-src="https://static.mangajar.pro/pages/3/212376/r7Fhtqf4rz4TLbUnDY5GIZjryfGU81jdk747llc0.jpg" data-small-src="https://static.mangajar.pro/pages/3/212376/r7Fhtqf4rz4TLbUnDY5GIZjryfGU81jdk747llc0.jpg" class="img-fluid page-image lazy lazy-preload" data-loader="smallImageLoader" width="800" height="400" data-page="4393625" data-number="13" id="page-13" alt="Manga Solo Leveling - Chapter 120 Page 13" title="Manga Solo Leveling - Chapter 120 Page 13">
                                                                                    </div>
            
                            <div class="row text-center">
                    <div class="col-12">
                                                                                    <h2>End of the chapter</h2>
                                                        <span class="current-chapter">
                                120
                                
                                                            </span>
                            <div class="clearfix"></div>
                            <a href="/manga/solo-leveling-abs3TTS/chapter/121" class="mt-2 btn btn-lg btn-primary">
                                Next Chapter -
                                121
                                
                                                            </a>
                            <div class="ad-container"><div class="ad-title">Advertisements</div><div class="ad-content  ad-size-280px" style="width:100%;min-height:280px;max-width: 800px;"><div id="bg_4514166048_pre"><script async="" defer="" src="//platform.bidgear.com/async.php?domainid=4514&amp;sizeid=16&amp;zoneid=6048&amp;k=1696352656609"></script></div>
<div id="bg_4514166048"></div>
<script>(function (){
var urlCB = new Date().getTime();
var sc = window.document.createElement("script");
sc.async = true;sc.defer = true;
sc.src = "//platform.bidgear.com/async.php?domainid=4514&sizeid=16&zoneid=6048&k="+urlCB;
var pr = window.document.getElementById("bg_4514166048_pre");
pr.appendChild(sc);})()</script></div></div>
                        
                            
                            
                            <article class="m-auto card shadow-sm bg-black rounded-0 my-2 w-100 col-xl-8 text-left">
                                <div class="card-body pb-2">
    <h2 class="h5">
        Comments (20)
    </h2>
</div>

<ul class="list-group post-comments">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Authentication required</h5>
            <p class="card-text">You must log in to post a comment.</p>
            <a href="https://mangajar.pro/login?redirectTo=http%3A%2F%2Fmangajar.pro" class="btn btn-primary">Sign in</a> or
            <a href="https://mangajar.pro/register?redirectTo=http%3A%2F%2Fmangajar.pro" class="btn btn-primary">Sign up</a>
        </div>
    </div>

<div class="scroll-area">
    <ul class="list-unstyled">
                            
                                
                                
                                
                                
                                                <li id="comment-139111" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-05/Neg83JaRxrxWfnbKo5kjGtOs7fGWZ1v8FT6FKwXe_mini.png" alt="L Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">L
                            <small class="text-muted">- 1 year ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">Beru &lt;3 and Igris &lt;3 are some of my favorite characters &lt;3</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                                                                                    <div id="comment-180607" class="media mt-2" style="margin-left:  -10px  ">
                                <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2023-02/4P8SglVnoZf2r8eIm4eBQV1jjmKGkF5Cm5TXTyii_mini.png" alt="AUGHHHHH Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">AUGHHHHH
                            <small class="text-muted">- 7 months ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">NAH fr</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </div>
        
                                                            <div id="comment-180606" class="media mt-2" style="margin-left:  -10px  ">
                                <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2023-02/4P8SglVnoZf2r8eIm4eBQV1jjmKGkF5Cm5TXTyii_mini.png" alt="AUGHHHHH Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">AUGHHHHH
                            <small class="text-muted">- 7 months ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">NAH fr</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                                                                                    <div id="comment-180610" class="media mt-2" style="margin-left:  -10px  ">
                                <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-05/Neg83JaRxrxWfnbKo5kjGtOs7fGWZ1v8FT6FKwXe_mini.png" alt="L Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">L
                            <small class="text-muted">- 7 months ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">Ong they're the best frrr</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </div>
        
                                                    
                    </div>
                        </div>
        
                                                    
                    </div>
                        </li>
    
                                    <li id="comment-97070" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-08/vmzys3JwiUfIWaCXxnsh9lpUkjbOmqOb1Xmhhb8W_mini.png" alt="I_am_that_guy Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">I_am_that_guy
                            <small class="text-muted">- 1 year ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">Beru &lt;3</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </li>
    
                                    <li id="comment-91939" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2022-01/CFbkG10VNgtxgcCWYnDpFwBYqcv40wz09iUiy7Te_mini.png" alt="E vn Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">E vn
                            <small class="text-muted">- 1 year ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">Beru is so badass in this chapter</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                                                                                    <div id="comment-145060" class="media mt-2" style="margin-left:  -10px  ">
                                <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-05/Neg83JaRxrxWfnbKo5kjGtOs7fGWZ1v8FT6FKwXe_mini.png" alt="L Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">L
                            <small class="text-muted">- 1 year ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">Ikr</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </div>
        
                                                    
                    </div>
                        </li>
    
                                    <li id="comment-84155" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-05/WTZi6i6mtSMWzV3g5AbPtJzj2okd8grPr23N3y2c_mini.png" alt="Judy bobooty Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">Judy bobooty
                            <small class="text-muted">- 1 year ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">man i love this plot</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </li>
    
                                    <li id="comment-82195" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://www.gravatar.com/avatar/a8d79c232ce5e8894ed2f8ff07667c2c?s=30" alt="Kyle Butler Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">Kyle Butler
                            <small class="text-muted">- 1 year ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">The fact that he’s known in the dungeons means our guy is kinda a god but hey there’s still 40 chapters (as of writing this) ??</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </li>
    
                                    <li id="comment-59255" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-08/sLCZsrzFnC6saJiX4fX7ux4EvZiILdPCjS1PAvi5_mini.png" alt="Miguel Kater Chacoff Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">Miguel Kater Chacoff
                            <small class="text-muted">- 1 year ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">Arch lich way more reasonable and smart than most human shitters. Should be in the army</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </li>
    
                                    <li id="comment-58967" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-11/Xyaj7htHC8iUrsAwdH8eaCBhQnxuMzpl53h13yIc_mini.png" alt="VASH The stampede Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">VASH The stampede
                            <small class="text-muted">- 1 year ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">Gigachad ant acting like jin-woo is just so cute ?</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </li>
    
                                    <li id="comment-48651" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://www.gravatar.com/avatar/520b7927d26548df70a00a7a81895fa8?s=30" alt="eusha Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">eusha
                            <small class="text-muted">- 1 year ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">is berus the actual mc his words seem tough</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </li>
    
                                    <li id="comment-48486" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-11/ONhUZIzZL6cjqUpB3iJTIuVPYkep6EI1Mct7Rp34_mini.png" alt="KoixNeko Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">KoixNeko
                            <small class="text-muted">- 1 year ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">Like father like son</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                                                                                    <div id="comment-55106" class="media mt-2" style="margin-left:  -10px  ">
                                <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-12/nduZrDsrP2k7HXFXcTaXVyXwH5bktDWteNLfrHcV_mini.png" alt="K!NGz31131 Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">K!NGz31131
                            <small class="text-muted">- 1 year ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">no cap</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </div>
        
                                                    
                    </div>
                        </li>
    
                                    <li id="comment-25945" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-08/sLCZsrzFnC6saJiX4fX7ux4EvZiILdPCjS1PAvi5_mini.png" alt="Miguel Kater Chacoff Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">Miguel Kater Chacoff
                            <small class="text-muted">- 2 years ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">Berus quite badass tough.</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </li>
    
                                    <li id="comment-16688" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://www.gravatar.com/avatar/afdea242a69d547487a07eb9033bc8d6?s=30" alt="hunterslemon Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">hunterslemon
                            <small class="text-muted">- 2 years ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">that lich could be a great summon tho</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                                                                                    <div id="comment-17542" class="media mt-2" style="margin-left:  -10px  ">
                                <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://www.gravatar.com/avatar/2562d984e518428d26a4b82a45667421?s=30" alt="Brainwaves Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">Brainwaves
                            <small class="text-muted">- 2 years ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">don't eat them bats raw though</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </div>
        
                                                    
                    </div>
                        </li>
    
                                    <li id="comment-13612" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-05/WTZi6i6mtSMWzV3g5AbPtJzj2okd8grPr23N3y2c_mini.png" alt="Judy bobooty Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">Judy bobooty
                            <small class="text-muted">- 2 years ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">Wdym don’t eat the vampires. They taste like STEAK. Aren’t I funny?</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                                                                                    <div id="comment-198668" class="media mt-2" style="margin-left:  -10px  ">
                                <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-05/iZ10phjKt6lAoKHvuK7I0mQrsDESwU324TMgROXP_mini.png" alt="Brioche Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">Brioche
                            <small class="text-muted">- 3 months ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">Yes you are</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </div>
        
                                                    
                    </div>
                        </li>
    
                                    <li id="comment-9455" class="media mb-2">
                                        <img class="mr-2 lazy" width="30" height="30" src="data:image/svg+xml;base64,PHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMCAzMCc+PC9zdmc+" data-src="https://static.mangajar.pro/avatar/2021-05/zRQ4s3EQjrTAqAkpDn0paavWrMWnfAylBLxESN8v_mini.png" alt="dark Avatar">
                    <div class="media-body">
                        <h6 class="mt-0 mb-1 comment-author">dark
                            <small class="text-muted">- 2 years ago</small>
                        </h6>
                        <div style="white-space: pre-wrap;font-size: 1rem;word-break: break-word;" class="text-lg-left comment-text">ayo bruh ant dont cap</div>

                        <div>
                                                                                                            </div>

                        



                        
                        
                        
                    </div>
                        </li>
    
                                                
                                
                        </ul>

    
</div>
</ul>

<div class="comments-infinite-pagination">
    
</div>

<div>
    </div>
                            </article>
                            
                    </div>
                </div>

                
            
            </div>

    <script type="application/ld+json">{"@context":"http:\/\/schema.org","@type":"PublicationIssue","issueNumber":"120","datePublished":"2020-09-24","name":"Solo Leveling Chapter 120","headline":"Solo Leveling Chapter 120","alternativeHeadline":" chapter 120","url":"https:\/\/mangajar.pro\/manga\/solo-leveling-abs3TTS\/chapter\/120"}</script>

<div class="clearfix mt-4"></div>

<footer>

        <nav class="navbar navbar-dark bg-primary fixed-bottom  justify-content-center" id="chapterNavbar" style="min-height: 57px;">
        <div class="chapterSelectorLoader" data-name="chapterSelector" data-src="/manga/solo-leveling-abs3TTS/chapterSelector/212376"></div><ul class="navbar-nav w-100 chapterSelector" style="">
    <li class="nav-item">
        
        
        <div class="row">
            <div class="col-6">
                <div class="input-group">
                    
                    <select id="page-select" class="form-control bg-primary text-light " aria-label="Page select" aria-describedby="page-select-input">
                                                    <option value="1" data-short="1 / 13">
                                Page 1 / 13
                            </option>
                                                    <option value="2" data-short="2 / 13">
                                Page 2 / 13
                            </option>
                                                    <option value="3" data-short="3 / 13">
                                Page 3 / 13
                            </option>
                                                    <option value="4" data-short="4 / 13">
                                Page 4 / 13
                            </option>
                                                    <option value="5" data-short="5 / 13">
                                Page 5 / 13
                            </option>
                                                    <option value="6" data-short="6 / 13">
                                Page 6 / 13
                            </option>
                                                    <option value="7" data-short="7 / 13">
                                Page 7 / 13
                            </option>
                                                    <option value="8" data-short="8 / 13">
                                Page 8 / 13
                            </option>
                                                    <option value="9" data-short="9 / 13">
                                Page 9 / 13
                            </option>
                                                    <option value="10" data-short="10 / 13">
                                Page 10 / 13
                            </option>
                                                    <option value="11" data-short="11 / 13">
                                Page 11 / 13
                            </option>
                                                    <option value="12" data-short="12 / 13">
                                Page 12 / 13
                            </option>
                                                    <option value="13" data-short="13 / 13">
                                Page 13 / 13
                            </option>
                                            </select>
                </div>
            </div>

            <div class="col-6 ml-auto">
                <div class="input-group">
                    <select id="item-select" class="form-control bg-primary text-light" aria-label="Chapter select" aria-describedby="chapter-select-input">
                                                    
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/200">
                                        Chapter 200 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/199">
                                        Chapter 199 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/198">
                                        Chapter 198 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/197">
                                        Chapter 197 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/196">
                                        Chapter 196 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/195">
                                        Chapter 195 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/194.6">
                                        Chapter 194.6 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/194_abs3Jm6">
                                        Chapter 194 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/193.8">
                                        Chapter 193.8 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/193.7">
                                        Chapter 193.7 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/193.5">
                                        Chapter 193.5 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/193.4">
                                        Chapter 193.4 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/193.3">
                                        Chapter 193.3 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/193.2">
                                        Chapter 193.2 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/193.1">
                                        Chapter 193.1 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/193">
                                        Chapter 193 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/192.8">
                                        Chapter 192.8 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/192.7">
                                        Chapter 192.7 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/192.6">
                                        Chapter 192.6 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/192.5">
                                        Chapter 192.5 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/192.4">
                                        Chapter 192.4 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/192.2">
                                        Chapter 192.2 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/192.1">
                                        Chapter 192.1 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/192">
                                        Chapter 192 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/188">
                                        Chapter 188 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/185">
                                        Chapter 185 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/184">
                                        Chapter 184 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/183">
                                        Chapter 183 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/182">
                                        Chapter 182 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/181_abs3J8b">
                                        Chapter 181 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/180.1">
                                        Chapter 180.1 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/180">
                                        Chapter 180 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/179.2">
                                        Chapter 179.2 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/179">
                                        Chapter 179 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/178">
                                        Chapter 178 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/177">
                                        Chapter 177 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/176">
                                        Chapter 176 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/175">
                                        Chapter 175 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/174">
                                        Chapter 174 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/173">
                                        Chapter 173 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/172">
                                        Chapter 172 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/171">
                                        Chapter 171 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/170">
                                        Chapter 170 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/169">
                                        Chapter 169 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/168">
                                        Chapter 168 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/167">
                                        Chapter 167 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/166">
                                        Chapter 166 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/165">
                                        Chapter 165 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/164">
                                        Chapter 164 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/163">
                                        Chapter 163 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/162">
                                        Chapter 162 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/161">
                                        Chapter 161 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/160">
                                        Chapter 160 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/159">
                                        Chapter 159 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/158">
                                        Chapter 158 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/157">
                                        Chapter 157 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/156">
                                        Chapter 156 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/155">
                                        Chapter 155 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/154">
                                        Chapter 154 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/153">
                                        Chapter 153 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/152">
                                        Chapter 152 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/151">
                                        Chapter 151 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/150">
                                        Chapter 150 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/149">
                                        Chapter 149 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/148">
                                        Chapter 148 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/147">
                                        Chapter 147 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/146">
                                        Chapter 146 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/145">
                                        Chapter 145 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/144">
                                        Chapter 144 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/143">
                                        Chapter 143 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/143">
                                        Chapter 143 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/142">
                                        Chapter 142 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/141">
                                        Chapter 141 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/140">
                                        Chapter 140 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/139">
                                        Chapter 139 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/138">
                                        Chapter 138 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/137">
                                        Chapter 137 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/136">
                                        Chapter 136 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/135">
                                        Chapter 135 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/134">
                                        Chapter 134 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/133">
                                        Chapter 133 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/132">
                                        Chapter 132 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/131">
                                        Chapter 131 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/130">
                                        Chapter 130 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/129.1">
                                        Chapter 129.1 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/129">
                                        Chapter 129 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/128">
                                        Chapter 128 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/127">
                                        Chapter 127 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/126">
                                        Chapter 126 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/125">
                                        Chapter 125 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/124">
                                        Chapter 124 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/123">
                                        Chapter 123 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/122">
                                        Chapter 122 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/121">
                                        Chapter 121 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/120" selected="selected">
                                        Chapter 120 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/119">
                                        Chapter 119 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/118">
                                        Chapter 118 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/117">
                                        Chapter 117 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/116">
                                        Chapter 116 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/115">
                                        Chapter 115 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/114">
                                        Chapter 114 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/113">
                                        Chapter 113 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/112">
                                        Chapter 112 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/111">
                                        Chapter 111 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/110.5">
                                        Chapter 110.5 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/110">
                                        Chapter 110 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/109">
                                        Chapter 109 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/108">
                                        Chapter 108 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/107">
                                        Chapter 107 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/106">
                                        Chapter 106 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/105">
                                        Chapter 105 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/104">
                                        Chapter 104 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/103">
                                        Chapter 103 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/102">
                                        Chapter 102 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/101">
                                        Chapter 101 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/100">
                                        Chapter 100 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/99">
                                        Chapter 99 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/98">
                                        Chapter 98 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/97">
                                        Chapter 97 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/96">
                                        Chapter 96 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/95">
                                        Chapter 95 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/94">
                                        Chapter 94 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/93">
                                        Chapter 93 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/92">
                                        Chapter 92 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/91">
                                        Chapter 91 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/90">
                                        Chapter 90 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/89">
                                        Chapter 89 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/88">
                                        Chapter 88 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/87">
                                        Chapter 87 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/86">
                                        Chapter 86 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/85">
                                        Chapter 85 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/84">
                                        Chapter 84 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/83">
                                        Chapter 83 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/82">
                                        Chapter 82 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/81">
                                        Chapter 81 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/80">
                                        Chapter 80 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/79">
                                        Chapter 79 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/78">
                                        Chapter 78 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/77">
                                        Chapter 77 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/76">
                                        Chapter 76 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/75">
                                        Chapter 75 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/74">
                                        Chapter 74 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/73">
                                        Chapter 73 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/72">
                                        Chapter 72 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/71">
                                        Chapter 71 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/70">
                                        Chapter 70 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/69">
                                        Chapter 69 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/68">
                                        Chapter 68 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/67">
                                        Chapter 67 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/66">
                                        Chapter 66 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/65">
                                        Chapter 65 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/64">
                                        Chapter 64 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/63">
                                        Chapter 63 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/62">
                                        Chapter 62 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/61">
                                        Chapter 61 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/60">
                                        Chapter 60 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/59">
                                        Chapter 59 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/58">
                                        Chapter 58 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/57">
                                        Chapter 57 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/56">
                                        Chapter 56 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/55">
                                        Chapter 55 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/54">
                                        Chapter 54 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/53">
                                        Chapter 53 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/52">
                                        Chapter 52 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/51">
                                        Chapter 51 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/50">
                                        Chapter 50 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/49">
                                        Chapter 49 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/48">
                                        Chapter 48 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/47">
                                        Chapter 47 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/46">
                                        Chapter 46 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/45">
                                        Chapter 45 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/44">
                                        Chapter 44 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/43">
                                        Chapter 43 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/42">
                                        Chapter 42 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/41">
                                        Chapter 41 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/40">
                                        Chapter 40 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/39">
                                        Chapter 39 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/38">
                                        Chapter 38 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/37">
                                        Chapter 37 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/36">
                                        Chapter 36 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/35">
                                        Chapter 35 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/34">
                                        Chapter 34 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/33">
                                        Chapter 33 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/32">
                                        Chapter 32 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/31">
                                        Chapter 31 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/30">
                                        Chapter 30 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/29">
                                        Chapter 29 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/28">
                                        Chapter 28 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/27">
                                        Chapter 27 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/26">
                                        Chapter 26 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/25">
                                        Chapter 25 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/24">
                                        Chapter 24 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/23">
                                        Chapter 23 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/22">
                                        Chapter 22 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/21">
                                        Chapter 21 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/20">
                                        Chapter 20 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/19">
                                        Chapter 19 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/18">
                                        Chapter 18 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/17">
                                        Chapter 17 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/16">
                                        Chapter 16 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/15">
                                        Chapter 15 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/14">
                                        Chapter 14 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/13">
                                        Chapter 13 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/12">
                                        Chapter 12 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/11">
                                        Chapter 11 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/10">
                                        Chapter 10 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/9">
                                        Chapter 9 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/8">
                                        Chapter 8 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/7">
                                        Chapter 7 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/6">
                                        Chapter 6 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/5">
                                        Chapter 5 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/4">
                                        Chapter 4 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/3">
                                        Chapter 3 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/2">
                                        Chapter 2 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/1">
                                        Chapter 1 
                                    </option>

                                                                                        
                                    <option value="/manga/solo-leveling-abs3TTS/chapter/0">
                                        Chapter 0 
                                    </option>

                                                                                </select>
                </div>
            </div>

        </div>
    </li>
</ul>
    </nav>

    <div class="container">
        <div class="row mr-auto">
            <div class="col text-center">
                                © 2023 MangaJar.pro, all rights reserved. <br>
                <ul class="list-inline">
                    <li class="list-inline-item"><a href="/legal" class="text-light">Terms of use</a></li>
                    <li class="list-inline-item"><a href="/copyright" class="text-light">Copyright</a></li>
                    <li class="list-inline-item"><a href="/dataDeletion" class="text-light">Personal data deletion</a></li>
                    <li class="list-inline-item"><a href="/privacyPolicy" class="text-light">Privacy Policy</a></li>
                </ul>
            </div>
        </div>
    </div>
</footer>

<link rel="stylesheet" href="/css/main.css?id=03f6e6add134a8096be6" type="text/css" media="all">








<script src="/js/all.js?id=8d200e929fc37bf71686"></script>






<script src="/js/main.js?id=41b123b5a9f6a6c2bb1e"></script>


            
    
    <script src="https://cdn.jsdelivr.net/npm/infinite-scroll@4.0.1/dist/infinite-scroll.pkgd.min.js"></script>

    
    <script>
        const pagesCount = parseInt('13');
        const horizontalChapter = $('#chapter-slider').length;
        let adultModal = $('#adultModal');
        if (adultModal && document.cookie.indexOf('adultConfirmed') < 0) {
            adultModal.modal();
        }

        function cancelAdult() {
            location.href = '/manga/solo-leveling-abs3TTS';
        }

        function confirmAdult() {
            let d = new Date();
            d.setTime(d.getTime() + (365 * 24 * 60 * 60 * 1000));
            document.cookie = "adultConfirmed=1;expires=" + d.toUTCString() + ";path=/";
            adultModal.modal('hide');
        }

        $('.readingMode').on('click tap', function () {
            let element = $(this);
            element.toggleClass('text-success');
            element.data('active', !parseInt(element.data('active')));

            let d = new Date();
            d.setTime(d.getTime() + (365 * 24 * 60 * 60 * 1000));
            document.cookie = "readingMode=" + element.data('mode') + ";expires=" + d.toUTCString() + ";path=/";
            location.reload();
        });

        /*$('.page-image').on('error', function (event) {
            imageFailedToLoad(this);
        });

        function imageFailedToLoad(element) {
            let src = $(element).data('src');
            let alternative = $(element).data('alternative');
            if (src !== alternative) {
                $(element).data('src', alternative);
                $(element).attr('src', alternative);
            }
        }*/

        $('.chapterSelectorLoader').on('loaded', function () {
            let chapterSelector = $('#item-select');
            chapterSelector.find('option[value="/manga/solo-leveling-abs3TTS/chapter/120"]').attr('selected', 'selected');
            chapterSelector.change(function () {
                location.href = $(this).val();
            });
            $('#page-select').change(function () {
                //location.hash = 'page-' + $(this).val();
                let page = parseInt($(this).val());
                if (page) {
                    setPageNumber(page);
                    switchToPage(page);
                }
            });
            setPageNumber(currentPage);
        });

        $(document).on('click tap', function (event) {
            if (!event.target.className || event.target.className.indexOf('carousel-control') === -1 || event.target.id.indexOf('page-select-') !== -1) {
                if (!horizontalChapter) {
                    $('#navbar').removeClass("navbar-hide");
                }
                $('#chapterNavbar').removeClass("navbar-hide");
                $('#kustomer').removeClass("d-none");
            } else {
                if (!horizontalChapter) {
                    $('#navbar').addClass("navbar-hide");
                }
                $('#chapterNavbar').addClass("navbar-hide");
                $('#kustomer').addClass("d-none");
            }
        });

        let currentPage = 1;
        let pagePositions = [];

        $(document).on('click tap', '#page-select-prev, #page-select-next', function (event) {
            let count = parseInt(horizontalChapter ? $('#chapter-slider .carousel-item').length : $('.page-image').length);
            let page = currentPage + (this.id.indexOf('prev') === -1 ? 1 : -1);

            if (page > 0 && page <= count) {
                setPageNumber(page);
                switchToPage(page);
            }
        });

        function switchToPage(page) {
            if (horizontalChapter) {
                $('#chapter-slider').carousel(page - 1);
            } else {
                $('html, body').animate({
                    scrollTop: $("#page-" + page).offset().top + 1
                }, 10);
            }
        }

        function setPageNumber(number) {
            let prevPage = currentPage;
            currentPage = parseInt(number);
            //$('#page-select option').removeAttr("selected");
            //$('#page-select option[value="' + currentPage + '"]').attr("selected", "selected");

            $('#page-select').val(currentPage);
            if (prevPage !== currentPage && currentPage <=pagesCount) {
                            }
            //location.hash = 'page-' + currentPage;
        }

        function fixPagePositions() {
            let prevPosition = Infinity;
            $($('.page-image').get().reverse()).each(function () {
                let start = $(this).offset().top;
                pagePositions[$(this).data('number')] = {'start': start, 'end': prevPosition};
                prevPosition = $(this).offset().top;
            });
        }


        if (horizontalChapter) {
            //$('body').css('padding-top', '0');
            //$('#navbar').css('margin-bottom', '1rem').removeClass('fixed-top');
            const pageImagesCount = $('.page-image').length;
            $('#chapter-slider').carousel({
                interval: false,
                keyboard: true,
                wrap: true,
                touch: true,
                ride: false,
            }).on("slide.bs.carousel", function (event) {
                const itemsToLazyLoad = 2;

                if(event.direction === 'right' && event.from === 0) {
                    event.preventDefault();
                    return;
                }

                if(event.direction === 'left' && event.from === pagesCount) {
                    let nextPageButton = $(".carousel-last-page .btn-primary");
                    if(!nextPageButton.length) {
                        nextPageButton = $(".carousel-last-page .btn-success");
                    }
                    if(!nextPageButton.length) {
                        nextPageButton = $(".carousel-last-page .btn-danger");
                    }

                    if(nextPageButton && nextPageButton.attr('href')) {
                        window.location.href = nextPageButton.attr('href');
                    }

                    event.preventDefault();
                    return;
                }

                let target = $(event.relatedTarget);
                let items = [];
                for (let i = 0; i < itemsToLazyLoad; i++) {
                    items.push(target.find("img[data-src]"));
                    target = event.direction === 'left' ? target.next('.carousel-item') : target.prev('.carousel-item');
                }
                for (let i = 0; i < items.length; i++) {
                    LazyLoadResponsiveImage(items[i]);
                }
            }).on("slid.bs.carousel", function (event) {
                let image = $(event.relatedTarget).find("img.page-image");
                if (image.length) {
                    setPageNumber(image.data('number'));
                } else {
                    setPageNumber(currentPage + 1);
                }
                if (currentPage === parseInt($('#chapter-slider .carousel-item').length)) {
                    $('.carousel-control-prev,.carousel-control-next').attr("style", "width:5%");
                } else {
                    $('.carousel-control-prev,.carousel-control-next').removeAttr("style");
                }
                //let top = 0;
                //if (image.length) {
                let top = $('#chapter-slider').offset().top;
                //}
                $('html, body').animate({
                    scrollTop: top
                }, 100);
                setTimeout(function () {
                    window.location.hash = "#page-" + currentPage;
                }, 100);

                            });
        } else {
            $(window).on('orientationchange resize load', fixPagePositions);
            fixPagePositions();

            $(document).on('loaded', '.page-image', function () {
                fixPagePositions();
            });
        }

        let lastScrollTop = 0;
        $(window).scroll(function (e) {
            let top = $(window).scrollTop();
            if (top >= 50 /*&& (top > lastScrollTop || horizontalChapter)*/) {
                $('#navbar').addClass("navbar-hide");
                $('#chapterNavbar').addClass("navbar-hide");
                $('#kustomer').addClass("d-none");
            } else {
                $('#navbar').removeClass("navbar-hide");
                $('#chapterNavbar').removeClass("navbar-hide");
                $('#kustomer').removeClass("d-none");
            }
            lastScrollTop = top;

            if(!horizontalChapter) {
                for (let number in pagePositions) {
                    if (pagePositions.hasOwnProperty(number)) {
                        if (currentPage !== parseInt(number) && top >= pagePositions[number].start && top <= pagePositions[number].end) {
                            setPageNumber(number);
                            break;
                        }
                    }
                }
            }
        });

        let match = location.href.match(/\#page\-(\d*)/);
        if (match && typeof match[1] !== 'undefined') {
            let page = parseInt(match[1]);
            setPageNumber(page);
            switchToPage(page);
            if (horizontalChapter) {
                LazyLoadResponsiveImage($('#page-' + page));
            }
        }

    </script>
    
    <script>
        if($('.comments-infinite-pagination .pagination').length>0) {
            $('.post-comments .list-unstyled').infiniteScroll({
                // options
                path: '.comments-infinite-pagination .pagination li.active + li a',
                hideNav: '.comments-infinite-pagination .pagination',
                append: '.post-comments .list-unstyled li',
                history: false,
                status: '.post-comments .page-load-status',
                elementScroll: '.post-comments .scroll-area',
                scrollThreshold: 800
            }).on('append.infiniteScroll', function (event, response, path, items) {
                $(items).find('.lazy').Lazy(LazyConfig);
            });
        } else {
            $('.post-comments .page-load-status').remove();
        }
    </script>
    



<!-- Global site tag (gtag.js) - Google Analytics -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-20138488-8"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-20138488-8');
</script>

<script async="" src="https://fundingchoicesmessages.google.com/i/pub-6537880980452724?ers=1" nonce="IO6KJTTpA_RkF9dZsgcWIw"></script><script nonce="IO6KJTTpA_RkF9dZsgcWIw">(function() {function signalGooglefcPresent() {if (!window.frames['googlefcPresent']) {if (document.body) {const iframe = document.createElement('iframe'); iframe.style = 'width: 0; height: 0; border: none; z-index: -1000; left: -1000px; top: -1000px;'; iframe.style.display = 'none'; iframe.name = 'googlefcPresent'; document.body.appendChild(iframe);} else {setTimeout(signalGooglefcPresent, 0);}}}signalGooglefcPresent();})();</script><iframe name="googlefcPresent" style="width: 0px; height: 0px; border: none; z-index: -1000; left: -1000px; top: -1000px; display: none;"></iframe>


















</body></html>