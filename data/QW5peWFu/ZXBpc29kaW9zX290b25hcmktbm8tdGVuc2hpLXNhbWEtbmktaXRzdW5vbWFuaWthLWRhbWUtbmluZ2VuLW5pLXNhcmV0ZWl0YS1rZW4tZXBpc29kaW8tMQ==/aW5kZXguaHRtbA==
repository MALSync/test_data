<html lang="pt-BR">

<head>
  <meta charset="UTF-8">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black">
  <meta name="mobile-web-app-capable" content="yes">
  <meta name="google-site-verification" content="uJfELXJEEbyh6KuXaxDNpduDMwoSzq8wAe1cNpZsA1g">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="theme-color" content="#000000">
  <link rel="shortcut icon" href="https://aniyan.net/wp-content/uploads/2022/04/favicon.png" type="image/x-icon">
  <meta property="og:image" content="https://image.tmdb.org/t/p/w780/qbZyY7imWoTvmfOEyMAmS6HrJI1.jpg
">
  <meta property="og:image" content="https://image.tmdb.org/t/p/w780/ytqquGMPAmQXxPjQyJqB6hWXGKO.jpg
">
  <meta property="og:image" content="https://image.tmdb.org/t/p/w780/qWEjs4ewV1Vnr4b3V03wCM2glPA.jpg
">
  <meta property="og:image" content="https://image.tmdb.org/t/p/w780/oZpMXsThtYhFy25XvXZP5tncvSy.jpg
">
  <meta name="robots" content="noindex, follow">

  <!-- This site is optimized with the Yoast SEO plugin v21.3 - https://yoast.com/wordpress/plugins/seo/ -->
  <title>Assistir Otonari no Tenshi-sama ni Itsunomanika Dame Ningen ni Sareteita Ken Episódio 1 » Aniyan</title>
  <meta name="description"
    content="Assistir Otonari no Tenshi-sama ni Itsunomanika Dame Ningen ni Sareteita Ken Episódio 1 no Aniyan.">
  <meta property="og:locale" content="pt_BR">
  <meta property="og:type" content="article">
  <meta property="og:title"
    content="Assistir Otonari no Tenshi-sama ni Itsunomanika Dame Ningen ni Sareteita Ken Episódio 1 » Aniyan">
  <meta property="og:description"
    content="Assistir Otonari no Tenshi-sama ni Itsunomanika Dame Ningen ni Sareteita Ken Episódio 1 no Aniyan.">
  <meta property="og:url"
    content="https://aniyan.net/w/12271/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-1/">
  <meta property="og:site_name" content="Aniyan">
  <meta property="article:modified_time" content="2023-02-17T18:34:35+00:00">
  <meta name="twitter:card" content="summary_large_image">
  <script type="application/ld+json"
    class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"WebPage","@id":"https://aniyan.net/w/12271/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-1/","url":"https://aniyan.net/w/12271/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-1/","name":"Assistir Otonari no Tenshi-sama ni Itsunomanika Dame Ningen ni Sareteita Ken Episódio 1 &#187; Aniyan","isPartOf":{"@id":"https://aniyan.net/#website"},"datePublished":"2023-01-07T17:14:55+00:00","dateModified":"2023-02-17T18:34:35+00:00","description":"Assistir Otonari no Tenshi-sama ni Itsunomanika Dame Ningen ni Sareteita Ken Episódio 1 no Aniyan.","breadcrumb":{"@id":"https://aniyan.net/w/12271/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-1/#breadcrumb"},"inLanguage":"pt-BR","potentialAction":[{"@type":"ReadAction","target":["https://aniyan.net/w/12271/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-1/"]}]},{"@type":"BreadcrumbList","@id":"https://aniyan.net/w/12271/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-1/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Início","item":"https://aniyan.net/"},{"@type":"ListItem","position":2,"name":"Episódios","item":"https://aniyan.net/episodios/"},{"@type":"ListItem","position":3,"name":"Otonari no Tenshi-sama ni Itsunomanika Dame Ningen ni Sareteita Ken Episódio 1"}]},{"@type":"WebSite","@id":"https://aniyan.net/#website","url":"https://aniyan.net/","name":"Aniyan","description":"Cultura Otaku","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https://aniyan.net/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"pt-BR"}]}</script>
  <!-- / Yoast SEO plugin. -->


  <link rel="dns-prefetch" href="//fonts.googleapis.com">
  <link href="https://sp-ao.shortpixel.ai" rel="preconnect">
  <link rel="alternate" type="application/rss+xml" title="Feed para Aniyan »" href="https://aniyan.net/feed/">
  <link rel="alternate" type="application/rss+xml" title="Feed de comentários para Aniyan »"
    href="https://aniyan.net/comments/feed/">
  <link rel="alternate" type="application/rss+xml"
    title="Feed de comentários para Aniyan » Otonari no Tenshi-sama ni Itsunomanika Dame Ningen ni Sareteita Ken Episódio 1"
    href="https://aniyan.net/w/12271/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-1/feed/">
  <script defer=""
    src="data:text/javascript;base64,CndpbmRvdy5fd3BlbW9qaVNldHRpbmdzID0geyJiYXNlVXJsIjoiaHR0cHM6XC9cL3Mudy5vcmdcL2ltYWdlc1wvY29yZVwvZW1vamlcLzE0LjAuMFwvNzJ4NzJcLyIsImV4dCI6Ii5wbmciLCJzdmdVcmwiOiJodHRwczpcL1wvcy53Lm9yZ1wvaW1hZ2VzXC9jb3JlXC9lbW9qaVwvMTQuMC4wXC9zdmdcLyIsInN2Z0V4dCI6Ii5zdmciLCJzb3VyY2UiOnsiY29uY2F0ZW1vamkiOiJodHRwczpcL1wvYW5peWFuLm5ldFwvd3AtaW5jbHVkZXNcL2pzXC93cC1lbW9qaS1yZWxlYXNlLm1pbi5qcz92ZXI9Ni4zLjEifX07Ci8qISBUaGlzIGZpbGUgaXMgYXV0by1nZW5lcmF0ZWQgKi8KIWZ1bmN0aW9uKGksbil7dmFyIG8scyxlO2Z1bmN0aW9uIGMoZSl7dHJ5e3ZhciB0PXtzdXBwb3J0VGVzdHM6ZSx0aW1lc3RhbXA6KG5ldyBEYXRlKS52YWx1ZU9mKCl9O3Nlc3Npb25TdG9yYWdlLnNldEl0ZW0obyxKU09OLnN0cmluZ2lmeSh0KSl9Y2F0Y2goZSl7fX1mdW5jdGlvbiBwKGUsdCxuKXtlLmNsZWFyUmVjdCgwLDAsZS5jYW52YXMud2lkdGgsZS5jYW52YXMuaGVpZ2h0KSxlLmZpbGxUZXh0KHQsMCwwKTt2YXIgdD1uZXcgVWludDMyQXJyYXkoZS5nZXRJbWFnZURhdGEoMCwwLGUuY2FudmFzLndpZHRoLGUuY2FudmFzLmhlaWdodCkuZGF0YSkscj0oZS5jbGVhclJlY3QoMCwwLGUuY2FudmFzLndpZHRoLGUuY2FudmFzLmhlaWdodCksZS5maWxsVGV4dChuLDAsMCksbmV3IFVpbnQzMkFycmF5KGUuZ2V0SW1hZ2VEYXRhKDAsMCxlLmNhbnZhcy53aWR0aCxlLmNhbnZhcy5oZWlnaHQpLmRhdGEpKTtyZXR1cm4gdC5ldmVyeShmdW5jdGlvbihlLHQpe3JldHVybiBlPT09clt0XX0pfWZ1bmN0aW9uIHUoZSx0LG4pe3N3aXRjaCh0KXtjYXNlImZsYWciOnJldHVybiBuKGUsIlx1ZDgzY1x1ZGZmM1x1ZmUwZlx1MjAwZFx1MjZhN1x1ZmUwZiIsIlx1ZDgzY1x1ZGZmM1x1ZmUwZlx1MjAwYlx1MjZhN1x1ZmUwZiIpPyExOiFuKGUsIlx1ZDgzY1x1ZGRmYVx1ZDgzY1x1ZGRmMyIsIlx1ZDgzY1x1ZGRmYVx1MjAwYlx1ZDgzY1x1ZGRmMyIpJiYhbihlLCJcdWQ4M2NcdWRmZjRcdWRiNDBcdWRjNjdcdWRiNDBcdWRjNjJcdWRiNDBcdWRjNjVcdWRiNDBcdWRjNmVcdWRiNDBcdWRjNjdcdWRiNDBcdWRjN2YiLCJcdWQ4M2NcdWRmZjRcdTIwMGJcdWRiNDBcdWRjNjdcdTIwMGJcdWRiNDBcdWRjNjJcdTIwMGJcdWRiNDBcdWRjNjVcdTIwMGJcdWRiNDBcdWRjNmVcdTIwMGJcdWRiNDBcdWRjNjdcdTIwMGJcdWRiNDBcdWRjN2YiKTtjYXNlImVtb2ppIjpyZXR1cm4hbihlLCJcdWQ4M2VcdWRlZjFcdWQ4M2NcdWRmZmJcdTIwMGRcdWQ4M2VcdWRlZjJcdWQ4M2NcdWRmZmYiLCJcdWQ4M2VcdWRlZjFcdWQ4M2NcdWRmZmJcdTIwMGJcdWQ4M2VcdWRlZjJcdWQ4M2NcdWRmZmYiKX1yZXR1cm4hMX1mdW5jdGlvbiBmKGUsdCxuKXt2YXIgcj0idW5kZWZpbmVkIiE9dHlwZW9mIFdvcmtlckdsb2JhbFNjb3BlJiZzZWxmIGluc3RhbmNlb2YgV29ya2VyR2xvYmFsU2NvcGU/bmV3IE9mZnNjcmVlbkNhbnZhcygzMDAsMTUwKTppLmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpLGE9ci5nZXRDb250ZXh0KCIyZCIse3dpbGxSZWFkRnJlcXVlbnRseTohMH0pLG89KGEudGV4dEJhc2VsaW5lPSJ0b3AiLGEuZm9udD0iNjAwIDMycHggQXJpYWwiLHt9KTtyZXR1cm4gZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe29bZV09dChhLGUsbil9KSxvfWZ1bmN0aW9uIHQoZSl7dmFyIHQ9aS5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTt0LnNyYz1lLHQuZGVmZXI9ITAsaS5oZWFkLmFwcGVuZENoaWxkKHQpfSJ1bmRlZmluZWQiIT10eXBlb2YgUHJvbWlzZSYmKG89IndwRW1vamlTZXR0aW5nc1N1cHBvcnRzIixzPVsiZmxhZyIsImVtb2ppIl0sbi5zdXBwb3J0cz17ZXZlcnl0aGluZzohMCxldmVyeXRoaW5nRXhjZXB0RmxhZzohMH0sZT1uZXcgUHJvbWlzZShmdW5jdGlvbihlKXtpLmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLGUse29uY2U6ITB9KX0pLG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQpe3ZhciBuPWZ1bmN0aW9uKCl7dHJ5e3ZhciBlPUpTT04ucGFyc2Uoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShvKSk7aWYoIm9iamVjdCI9PXR5cGVvZiBlJiYibnVtYmVyIj09dHlwZW9mIGUudGltZXN0YW1wJiYobmV3IERhdGUpLnZhbHVlT2YoKTxlLnRpbWVzdGFtcCs2MDQ4MDAmJiJvYmplY3QiPT10eXBlb2YgZS5zdXBwb3J0VGVzdHMpcmV0dXJuIGUuc3VwcG9ydFRlc3RzfWNhdGNoKGUpe31yZXR1cm4gbnVsbH0oKTtpZighbil7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBXb3JrZXImJiJ1bmRlZmluZWQiIT10eXBlb2YgT2Zmc2NyZWVuQ2FudmFzJiYidW5kZWZpbmVkIiE9dHlwZW9mIFVSTCYmVVJMLmNyZWF0ZU9iamVjdFVSTCYmInVuZGVmaW5lZCIhPXR5cGVvZiBCbG9iKXRyeXt2YXIgZT0icG9zdE1lc3NhZ2UoIitmLnRvU3RyaW5nKCkrIigiK1tKU09OLnN0cmluZ2lmeShzKSx1LnRvU3RyaW5nKCkscC50b1N0cmluZygpXS5qb2luKCIsIikrIikpOyIscj1uZXcgQmxvYihbZV0se3R5cGU6InRleHQvamF2YXNjcmlwdCJ9KSxhPW5ldyBXb3JrZXIoVVJMLmNyZWF0ZU9iamVjdFVSTChyKSx7bmFtZToid3BUZXN0RW1vamlTdXBwb3J0cyJ9KTtyZXR1cm4gdm9pZChhLm9ubWVzc2FnZT1mdW5jdGlvbihlKXtjKG49ZS5kYXRhKSxhLnRlcm1pbmF0ZSgpLHQobil9KX1jYXRjaChlKXt9YyhuPWYocyx1LHApKX10KG4pfSkudGhlbihmdW5jdGlvbihlKXtmb3IodmFyIHQgaW4gZSluLnN1cHBvcnRzW3RdPWVbdF0sbi5zdXBwb3J0cy5ldmVyeXRoaW5nPW4uc3VwcG9ydHMuZXZlcnl0aGluZyYmbi5zdXBwb3J0c1t0XSwiZmxhZyIhPT10JiYobi5zdXBwb3J0cy5ldmVyeXRoaW5nRXhjZXB0RmxhZz1uLnN1cHBvcnRzLmV2ZXJ5dGhpbmdFeGNlcHRGbGFnJiZuLnN1cHBvcnRzW3RdKTtuLnN1cHBvcnRzLmV2ZXJ5dGhpbmdFeGNlcHRGbGFnPW4uc3VwcG9ydHMuZXZlcnl0aGluZ0V4Y2VwdEZsYWcmJiFuLnN1cHBvcnRzLmZsYWcsbi5ET01SZWFkeT0hMSxuLnJlYWR5Q2FsbGJhY2s9ZnVuY3Rpb24oKXtuLkRPTVJlYWR5PSEwfX0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gZX0pLnRoZW4oZnVuY3Rpb24oKXt2YXIgZTtuLnN1cHBvcnRzLmV2ZXJ5dGhpbmd8fChuLnJlYWR5Q2FsbGJhY2soKSwoZT1uLnNvdXJjZXx8e30pLmNvbmNhdGVtb2ppP3QoZS5jb25jYXRlbW9qaSk6ZS53cGVtb2ppJiZlLnR3ZW1vamkmJih0KGUudHdlbW9qaSksdChlLndwZW1vamkpKSl9KSl9KCh3aW5kb3csZG9jdW1lbnQpLHdpbmRvdy5fd3BlbW9qaVNldHRpbmdzKTsK"></script>
  <style type="text/css">
    img.wp-smiley,
    img.emoji {
      display: inline !important;
      border: none !important;
      box-shadow: none !important;
      height: 1em !important;
      width: 1em !important;
      margin: 0 0.07em !important;
      vertical-align: -0.1em !important;
      background: none !important;
      padding: 0 !important;
    }
  </style>
  <link rel="stylesheet" id="wp-block-library-css"
    href="https://aniyan.net/wp-includes/css/dist/block-library/style.min.css?ver=6.3.1" type="text/css" media="all">
  <style id="classic-theme-styles-inline-css" type="text/css">
    /*! This file is auto-generated */
    .wp-block-button__link {
      color: #fff;
      background-color: #32373c;
      border-radius: 9999px;
      box-shadow: none;
      text-decoration: none;
      padding: calc(.667em + 2px) calc(1.333em + 2px);
      font-size: 1.125em
    }

    .wp-block-file__button {
      background: #32373c;
      color: #fff;
      text-decoration: none
    }
  </style>
  <style id="global-styles-inline-css" type="text/css">
    body {
      --wp--preset--color--black: #000000;
      --wp--preset--color--cyan-bluish-gray: #abb8c3;
      --wp--preset--color--white: #ffffff;
      --wp--preset--color--pale-pink: #f78da7;
      --wp--preset--color--vivid-red: #cf2e2e;
      --wp--preset--color--luminous-vivid-orange: #ff6900;
      --wp--preset--color--luminous-vivid-amber: #fcb900;
      --wp--preset--color--light-green-cyan: #7bdcb5;
      --wp--preset--color--vivid-green-cyan: #00d084;
      --wp--preset--color--pale-cyan-blue: #8ed1fc;
      --wp--preset--color--vivid-cyan-blue: #0693e3;
      --wp--preset--color--vivid-purple: #9b51e0;
      --wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg, rgba(6, 147, 227, 1) 0%, rgb(155, 81, 224) 100%);
      --wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg, rgb(122, 220, 180) 0%, rgb(0, 208, 130) 100%);
      --wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg, rgba(252, 185, 0, 1) 0%, rgba(255, 105, 0, 1) 100%);
      --wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg, rgba(255, 105, 0, 1) 0%, rgb(207, 46, 46) 100%);
      --wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg, rgb(238, 238, 238) 0%, rgb(169, 184, 195) 100%);
      --wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg, rgb(74, 234, 220) 0%, rgb(151, 120, 209) 20%, rgb(207, 42, 186) 40%, rgb(238, 44, 130) 60%, rgb(251, 105, 98) 80%, rgb(254, 248, 76) 100%);
      --wp--preset--gradient--blush-light-purple: linear-gradient(135deg, rgb(255, 206, 236) 0%, rgb(152, 150, 240) 100%);
      --wp--preset--gradient--blush-bordeaux: linear-gradient(135deg, rgb(254, 205, 165) 0%, rgb(254, 45, 45) 50%, rgb(107, 0, 62) 100%);
      --wp--preset--gradient--luminous-dusk: linear-gradient(135deg, rgb(255, 203, 112) 0%, rgb(199, 81, 192) 50%, rgb(65, 88, 208) 100%);
      --wp--preset--gradient--pale-ocean: linear-gradient(135deg, rgb(255, 245, 203) 0%, rgb(182, 227, 212) 50%, rgb(51, 167, 181) 100%);
      --wp--preset--gradient--electric-grass: linear-gradient(135deg, rgb(202, 248, 128) 0%, rgb(113, 206, 126) 100%);
      --wp--preset--gradient--midnight: linear-gradient(135deg, rgb(2, 3, 129) 0%, rgb(40, 116, 252) 100%);
      --wp--preset--font-size--small: 13px;
      --wp--preset--font-size--medium: 20px;
      --wp--preset--font-size--large: 36px;
      --wp--preset--font-size--x-large: 42px;
      --wp--preset--spacing--20: 0.44rem;
      --wp--preset--spacing--30: 0.67rem;
      --wp--preset--spacing--40: 1rem;
      --wp--preset--spacing--50: 1.5rem;
      --wp--preset--spacing--60: 2.25rem;
      --wp--preset--spacing--70: 3.38rem;
      --wp--preset--spacing--80: 5.06rem;
      --wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);
      --wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);
      --wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);
      --wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);
      --wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);
    }

    :where(.is-layout-flex) {
      gap: 0.5em;
    }

    :where(.is-layout-grid) {
      gap: 0.5em;
    }

    body .is-layout-flow>.alignleft {
      float: left;
      margin-inline-start: 0;
      margin-inline-end: 2em;
    }

    body .is-layout-flow>.alignright {
      float: right;
      margin-inline-start: 2em;
      margin-inline-end: 0;
    }

    body .is-layout-flow>.aligncenter {
      margin-left: auto !important;
      margin-right: auto !important;
    }

    body .is-layout-constrained>.alignleft {
      float: left;
      margin-inline-start: 0;
      margin-inline-end: 2em;
    }

    body .is-layout-constrained>.alignright {
      float: right;
      margin-inline-start: 2em;
      margin-inline-end: 0;
    }

    body .is-layout-constrained>.aligncenter {
      margin-left: auto !important;
      margin-right: auto !important;
    }

    body .is-layout-constrained> :where(:not(.alignleft):not(.alignright):not(.alignfull)) {
      max-width: var(--wp--style--global--content-size);
      margin-left: auto !important;
      margin-right: auto !important;
    }

    body .is-layout-constrained>.alignwide {
      max-width: var(--wp--style--global--wide-size);
    }

    body .is-layout-flex {
      display: flex;
    }

    body .is-layout-flex {
      flex-wrap: wrap;
      align-items: center;
    }

    body .is-layout-flex>* {
      margin: 0;
    }

    body .is-layout-grid {
      display: grid;
    }

    body .is-layout-grid>* {
      margin: 0;
    }

    :where(.wp-block-columns.is-layout-flex) {
      gap: 2em;
    }

    :where(.wp-block-columns.is-layout-grid) {
      gap: 2em;
    }

    :where(.wp-block-post-template.is-layout-flex) {
      gap: 1.25em;
    }

    :where(.wp-block-post-template.is-layout-grid) {
      gap: 1.25em;
    }

    .has-black-color {
      color: var(--wp--preset--color--black) !important;
    }

    .has-cyan-bluish-gray-color {
      color: var(--wp--preset--color--cyan-bluish-gray) !important;
    }

    .has-white-color {
      color: var(--wp--preset--color--white) !important;
    }

    .has-pale-pink-color {
      color: var(--wp--preset--color--pale-pink) !important;
    }

    .has-vivid-red-color {
      color: var(--wp--preset--color--vivid-red) !important;
    }

    .has-luminous-vivid-orange-color {
      color: var(--wp--preset--color--luminous-vivid-orange) !important;
    }

    .has-luminous-vivid-amber-color {
      color: var(--wp--preset--color--luminous-vivid-amber) !important;
    }

    .has-light-green-cyan-color {
      color: var(--wp--preset--color--light-green-cyan) !important;
    }

    .has-vivid-green-cyan-color {
      color: var(--wp--preset--color--vivid-green-cyan) !important;
    }

    .has-pale-cyan-blue-color {
      color: var(--wp--preset--color--pale-cyan-blue) !important;
    }

    .has-vivid-cyan-blue-color {
      color: var(--wp--preset--color--vivid-cyan-blue) !important;
    }

    .has-vivid-purple-color {
      color: var(--wp--preset--color--vivid-purple) !important;
    }

    .has-black-background-color {
      background-color: var(--wp--preset--color--black) !important;
    }

    .has-cyan-bluish-gray-background-color {
      background-color: var(--wp--preset--color--cyan-bluish-gray) !important;
    }

    .has-white-background-color {
      background-color: var(--wp--preset--color--white) !important;
    }

    .has-pale-pink-background-color {
      background-color: var(--wp--preset--color--pale-pink) !important;
    }

    .has-vivid-red-background-color {
      background-color: var(--wp--preset--color--vivid-red) !important;
    }

    .has-luminous-vivid-orange-background-color {
      background-color: var(--wp--preset--color--luminous-vivid-orange) !important;
    }

    .has-luminous-vivid-amber-background-color {
      background-color: var(--wp--preset--color--luminous-vivid-amber) !important;
    }

    .has-light-green-cyan-background-color {
      background-color: var(--wp--preset--color--light-green-cyan) !important;
    }

    .has-vivid-green-cyan-background-color {
      background-color: var(--wp--preset--color--vivid-green-cyan) !important;
    }

    .has-pale-cyan-blue-background-color {
      background-color: var(--wp--preset--color--pale-cyan-blue) !important;
    }

    .has-vivid-cyan-blue-background-color {
      background-color: var(--wp--preset--color--vivid-cyan-blue) !important;
    }

    .has-vivid-purple-background-color {
      background-color: var(--wp--preset--color--vivid-purple) !important;
    }

    .has-black-border-color {
      border-color: var(--wp--preset--color--black) !important;
    }

    .has-cyan-bluish-gray-border-color {
      border-color: var(--wp--preset--color--cyan-bluish-gray) !important;
    }

    .has-white-border-color {
      border-color: var(--wp--preset--color--white) !important;
    }

    .has-pale-pink-border-color {
      border-color: var(--wp--preset--color--pale-pink) !important;
    }

    .has-vivid-red-border-color {
      border-color: var(--wp--preset--color--vivid-red) !important;
    }

    .has-luminous-vivid-orange-border-color {
      border-color: var(--wp--preset--color--luminous-vivid-orange) !important;
    }

    .has-luminous-vivid-amber-border-color {
      border-color: var(--wp--preset--color--luminous-vivid-amber) !important;
    }

    .has-light-green-cyan-border-color {
      border-color: var(--wp--preset--color--light-green-cyan) !important;
    }

    .has-vivid-green-cyan-border-color {
      border-color: var(--wp--preset--color--vivid-green-cyan) !important;
    }

    .has-pale-cyan-blue-border-color {
      border-color: var(--wp--preset--color--pale-cyan-blue) !important;
    }

    .has-vivid-cyan-blue-border-color {
      border-color: var(--wp--preset--color--vivid-cyan-blue) !important;
    }

    .has-vivid-purple-border-color {
      border-color: var(--wp--preset--color--vivid-purple) !important;
    }

    .has-vivid-cyan-blue-to-vivid-purple-gradient-background {
      background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;
    }

    .has-light-green-cyan-to-vivid-green-cyan-gradient-background {
      background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;
    }

    .has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background {
      background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;
    }

    .has-luminous-vivid-orange-to-vivid-red-gradient-background {
      background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;
    }

    .has-very-light-gray-to-cyan-bluish-gray-gradient-background {
      background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;
    }

    .has-cool-to-warm-spectrum-gradient-background {
      background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;
    }

    .has-blush-light-purple-gradient-background {
      background: var(--wp--preset--gradient--blush-light-purple) !important;
    }

    .has-blush-bordeaux-gradient-background {
      background: var(--wp--preset--gradient--blush-bordeaux) !important;
    }

    .has-luminous-dusk-gradient-background {
      background: var(--wp--preset--gradient--luminous-dusk) !important;
    }

    .has-pale-ocean-gradient-background {
      background: var(--wp--preset--gradient--pale-ocean) !important;
    }

    .has-electric-grass-gradient-background {
      background: var(--wp--preset--gradient--electric-grass) !important;
    }

    .has-midnight-gradient-background {
      background: var(--wp--preset--gradient--midnight) !important;
    }

    .has-small-font-size {
      font-size: var(--wp--preset--font-size--small) !important;
    }

    .has-medium-font-size {
      font-size: var(--wp--preset--font-size--medium) !important;
    }

    .has-large-font-size {
      font-size: var(--wp--preset--font-size--large) !important;
    }

    .has-x-large-font-size {
      font-size: var(--wp--preset--font-size--x-large) !important;
    }

    .wp-block-navigation a:where(:not(.wp-element-button)) {
      color: inherit;
    }

    :where(.wp-block-post-template.is-layout-flex) {
      gap: 1.25em;
    }

    :where(.wp-block-post-template.is-layout-grid) {
      gap: 1.25em;
    }

    :where(.wp-block-columns.is-layout-flex) {
      gap: 2em;
    }

    :where(.wp-block-columns.is-layout-grid) {
      gap: 2em;
    }

    .wp-block-pullquote {
      font-size: 1.5em;
      line-height: 1.6;
    }
  </style>
  <link rel="stylesheet" id="fontawesome-pro-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/fontawesome/css/all.min.css?ver=5.15.1" type="text/css"
    media="all">
  <link rel="stylesheet" id="owl-carousel-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.owl.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="google-fonts-css"
    href="https://fonts.googleapis.com/css?family=Roboto%3A300%2C400%2C500%2C700&amp;ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="scrollbar-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.crollbar.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="dooplay-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.style.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="dooplay-color-scheme-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/colors.dark.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="dooplay-responsive-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.mobile.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="aniyan-snowflakes-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.snowflakes.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="aniyan-header-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.header.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="aniyan-footer-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.footer.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="aniyan-slider-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.slider.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="aniyan-anipage-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.anipage.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="aniyan-equipe-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.equipe.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="aniyan-profile-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.profile.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="aniyan-comentario-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.comments.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="aniyan-login-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/all.login-forms.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="aniyan-articles-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/all.animes-article.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="aniyan-anime-filter-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.anifilter.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="aniyan-profile-mobile-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.profile-mobile.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="bootstrap-modals-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.modal.min.css?ver=2.5.5" type="text/css"
    media="all">
  <link rel="stylesheet" id="blueimp-gallery-css"
    href="https://aniyan.net/wp-content/themes/aniyan/assets/css/front.gallery.min.css?ver=2.5.5" type="text/css"
    media="all">
  <script type="text/javascript" src="https://aniyan.net/wp-includes/js/jquery/jquery.min.js?ver=3.7.0"
    id="jquery-core-js"></script>
  <script defer="" type="text/javascript" src="https://aniyan.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1"
    id="jquery-migrate-js"></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/cache/autoptimize/js/autoptimize_single_c3acbd4a87d123bc6b7e4ef753e63570.js?ver=2.5.5"
    id="lazyload-js"></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/cache/autoptimize/js/autoptimize_single_971c9dba00bafafbbefeec7e58dfc432.js?ver=2.5.5"
    id="scrollbar-js"></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/cache/autoptimize/js/autoptimize_single_4deec68453dc15d0014a2451a1cd5791.js?ver=2.5.5"
    id="owl-carousel-js"></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/cache/autoptimize/js/autoptimize_single_3665ff6f8d2bf5a2af3de5d6e333a7c0.js?ver=2.5.5"
    id="idTabs-js"></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/cache/autoptimize/js/autoptimize_single_6ceeb6d8b500945a6aaea27f52f6f5e6.js?ver=2.5.5"
    id="dtRepeat-js"></script>
  <script defer="" id="dt_main_ajax-js-extra"
    src="data:text/javascript;base64,Ci8qIDwhW0NEQVRBWyAqLwp2YXIgZHRBamF4ID0geyJ1cmwiOiJcL3dwLWFkbWluXC9hZG1pbi1hamF4LnBocCIsInBsYXllcl9hcGkiOiJodHRwczpcL1wvYW5peWFuLm5ldFwvd3AtanNvblwvZG9vcGxheWVyXC92MlwvIiwicGxheV9hamF4bWQiOiIxIiwicGxheV9tZXRob2QiOiJhZG1pbl9hamF4IiwiZ29vZ2xlcmNwdGMiOm51bGwsImNsYXNzaXRlbSI6IjYiLCJsb2FkaW5nIjoiQ2FycmVnYW5kby4uLiIsImFmYXZvcml0ZXMiOiJGYXZvcml0YXIiLCJyZmF2b3JpdGVzIjoiUmVtb3ZlciBkb3MgRmF2b3JpdG9zIiwidmlld3MiOiJWaXN1YWxpemFcdTAwZTdcdTAwZjVlcyIsInJlbW92ZSI6IlJlbW92ZXIiLCJpc2F3aXQiOiJFdSBhc3Npc3RpIiwic2VuZCI6IkVudmlvIGRlIGRhZG9zLi4iLCJ1cGRhdGluZyI6IkF0dWFsaXphbmRvIGRhZG9zLi4iLCJlcnJvciI6IkVycm8iLCJwZW5kaW5nIjoiUmV2aXNcdTAwZTNvIHBlbmRlbnRlIiwibHRpcGUiOiJEb3dubG9hZCIsInNlbmRpbmciOiJFbnZpYW5kbyBkYWRvcyIsImVuYWJsZWQiOiJIYWJpbGl0YXIiLCJkaXNhYmxlZCI6IkRlc2F0aXZhciIsInRyYXNoIjoiRGVsZXRhciIsImxzaGFyZWQiOiJMaW5rcyBDb21wYXJ0aWxoYWRvcyIsImxhZG1pbiI6IkdlcmVuY2lhciBsaW5rcyBwZW5kZW50ZXMiLCJzZW5kaW5ncmVwIjoiQWd1YXJkZSwgZW52aWFuZG8gZGFkb3MuLiIsInJlYWR5IjoiUHJvbnRvIiwiZGVsZXRlbGluIjoiRGVzZWphIG1lc21vIGV4Y2x1aXIgZXN0ZSBsaW5rPyJ9OwovKiBdXT4gKi8K"></script>
  <script type="text/javascript" src="https://aniyan.net/wp-content/themes/aniyan/assets/js/front.ajax.min.js?ver=2.5.5"
    id="dt_main_ajax-js"></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/cache/autoptimize/js/autoptimize_single_0c33d55a46db8350f57388504aec281f.js?ver=2.5.5"
    id="blueimp-gallery-js"></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/cache/autoptimize/js/autoptimize_single_d967735d0c4a36d039142d01d02ee257.js?ver=2.5.5"
    id="jquery-raty-js"></script>
  <script defer="" id="starstruck-js-js-extra"
    src="data:text/javascript;base64,Ci8qIDwhW0NEQVRBWyAqLwp2YXIgc3NfbDE4biA9IHsiZW5hYmxlX21vdmllcyI6IjEiLCJlbmFibGVfdHZzaG93cyI6IjEiLCJlbmFibGVfaGVudGFpcyI6IjEiLCJlbmFibGVfc2Vhc29ucyI6IjEiLCJlbmFibGVfZXBpc29kZXMiOiIxIiwicmVxdWlyZV9sb2dpbiI6IiIsIm5vbmNlIjoiZjQ4ZGIwMDAyYiIsInVybCI6Ilwvd3AtYWRtaW5cL2FkbWluLWFqYXgucGhwIn07Ci8qIF1dPiAqLwo="></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/cache/autoptimize/js/autoptimize_single_df6cdd6f292601cbdcd989c6517c81b7.js?ver=2.5.5"
    id="starstruck-js-js"></script>
  <link rel="https://api.w.org/" href="https://aniyan.net/wp-json/">
  <link rel="alternate" type="application/json" href="https://aniyan.net/wp-json/wp/v2/episodes/12271">
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://aniyan.net/xmlrpc.php?rsd">
  <meta name="generator" content="WordPress 6.3.1">
  <link rel="shortlink" href="https://aniyan.net/?p=12271">
  <link rel="alternate" type="application/json+oembed"
    href="https://aniyan.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Faniyan.net%2Fw%2F12271%2Fotonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-1%2F">
  <link rel="alternate" type="text/xml+oembed"
    href="https://aniyan.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Faniyan.net%2Fw%2F12271%2Fotonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-1%2F&amp;format=xml">
  <script defer=""
    src="data:text/javascript;base64,alF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbihhKXsiZmFsc2UiPT1kdEdvbnphLm1vYmlsZSYmYSh3aW5kb3cpLmxvYWQoZnVuY3Rpb24oKXthKCIuc2Nyb2xsaW5nIikubUN1c3RvbVNjcm9sbGJhcih7dGhlbWU6Im1pbmltYWwtZGFyayIsc2Nyb2xsSW5lcnRpYToyMDAsc2Nyb2xsQnV0dG9uczp7ZW5hYmxlOiEwfSxjYWxsYmFja3M6e29uVG90YWxTY3JvbGxPZmZzZXQ6MTAwLGFsd2F5c1RyaWdnZXJPZmZzZXRzOiExfX0pfSl9KTs="></script>
  <style type="text/css">
    body {
      font-family: "Roboto", sans-serif;
    }

    body {
      background-color: #0e151b;
    }

    header.main .hbox,
    #contenedor,
    footer.main .fbox {
      max-width: 1500px;
    }

    a,
    .home-blog-post .entry-date .date,
    .top-imdb-item:hover>.title a,
    .module .content .items .item .data h3 a:hover,
    .head-main-nav ul.main-header li:hover>a,
    .login_box .box a.register {
      color: #8224e3;
    }

    .nav_items_module a.btn:hover,
    .pagination span.current,
    .w_item_b a:hover>.data .wextra b:before,
    .comment-respond h3:before,
    footer.main .fbox .fmenu ul li a:hover {
      color: #8224e3;
    }

    header.main .hbox .search form button[type=submit]:hover,
    .loading,
    #seasons .se-c .se-a ul.episodios li .episodiotitle a:hover,
    .sgeneros a:hover,
    .page_user nav.user ul li a:hover {
      color: #8224e3;
    }

    footer.main .fbox .fmenu ul li.current-menu-item a,
    .posts .meta .autor i,
    .pag_episodes .item a:hover,
    a.link_a:hover,
    ul.smenu li a:hover {
      color: #8224e3;
    }

    footer.main .fbox .fmenu ul li.current-menu-item a,

    .posts .meta .autor i,
    .pag_hepisodes .item a:hover,
    a.link_a:hover,
    ul.smenu li a:hover {
      color: #8224e3;
    }

    header.responsive .nav a.active:before,
    header.responsive .search a.active:before,
    .dtuser a.clicklogin:hover,
    .menuresp .menu ul.resp li a:hover,
    .menuresp .menu ul.resp li ul.sub-menu li a:hover {
      color: #8224e3;
    }

    .sl-wrapper a:before,
    table.account_links tbody td a:hover,
    .dt_mainmeta nav.genres ul li a:hover {
      color: #8224e3;
    }

    .dt_mainmeta nav.genres ul li.current-cat a:before,
    .dooplay_player .options ul li:hover span.title {
      color: #8224e3;
    }

    .head-main-nav ul.main-header li ul.sub-menu li a:hover,
    form.form-resp-ab button[type=submit]:hover>span,
    .sidebar aside.widget ul li a:hover {
      color: #8224e3;
    }

    header.top_imdb h1.top-imdb-h1 span,
    article.post .information .meta span.autor,
    .w_item_c a:hover>.rating i,
    span.comment-author-link,
    .pagination a:hover {
      color: #8224e3;
    }

    .letter_home ul.glossary li a:hover,
    .letter_home ul.glossary li a.active,
    .user_control a.in-list {
      color: #8224e3;
    }

    .headitems a#dooplay_signout:hover,
    .login_box .box a#c_loginbox:hover {
      color: #8224e3;
    }

    .report_modal .box .form form fieldset label:hover>span.title {
      color: #8224e3;
    }

    .linktabs ul li a.selected,
    ul.smenu li a.selected,
    a.liked,
    .module .content header span a.see-all,
    .page_user nav.user ul li a.selected,
    .dt_mainmeta nav.releases ul li a:hover {
      background: #8224e3;
    }

    a.see_all,
    p.form-submit input[type=submit]:hover,
    .report-video-form fieldset input[type=submit],
    a.mtoc,
    .contact .wrapper fieldset input[type=submit],
    span.item_type,
    a.main {
      background: #8224e3;
    }

    .post-comments .comment-reply-link:hover,
    #seasons .se-c .se-q span.se-o,
    #edit_link .box .form_edit .cerrar a:hover {
      background: #8224e3;
    }

    .user_edit_control ul li a.selected,
    form.update_profile fieldset input[type=submit],
    .page_user .content .paged a.load_more:hover,
    #edit_link .box .form_edit fieldset input[type="submit"] {
      background: #8224e3;
    }

    .login_box .box input[type="submit"],
    .form_post_lik .control .left a.add_row:hover,
    .form_post_lik .table table tbody tr td a.remove_row:hover,
    .form_post_lik .control .right input[type="submit"] {
      background: #8224e3;
    }

    #dt_contenedor {
      background-color: #0e151b;
    }

    .plyr input[type=range]::-ms-fill-lower {
      background: #8224e3;
    }

    .menuresp .menu .user a.ctgs,
    .menuresp .menu .user .logout a:hover {
      background: #8224e3;
    }

    .plyr input[type=range]:active::-webkit-slider-thumb {
      background: #8224e3;
    }

    .plyr input[type=range]:active::-moz-range-thumb {
      background: #8224e3;
    }

    .plyr input[type=range]:active::-ms-thumb {
      background: #8224e3;
    }

    .tagcloud a:hover,
    ul.abc li a:hover,
    ul.abc li a.select,
    {
    background: #8224e3;
    }

    .featu {
      background: #8224e3;
    }

    .report_modal .box .form form fieldset input[type=submit] {
      background-color: #8224e3;
    }

    .contact .wrapper fieldset input[type=text]:focus,
    .contact .wrapper fieldset textarea:focus,
    header.main .hbox .dt_user ul li ul li:hover>a,
    .login_box .box a.register {
      border-color: #8224e3;
    }

    .module .content header h1 {
      border-color: #8224e3;
    }

    .module .content header h2 {
      border-color: #8224e3;
    }

    a.see_all {
      border-color: #8224e3;
    }

    .top-imdb-list h3 {
      border-color: #8224e3;
    }

    .user_edit_control ul li a.selected:before {
      border-top-color: #8224e3;
    }

    header.main .loading {
      color: #fff !important;
    }

    .starstruck .star-on-png:before {
      color: #8224e3;
    }

    #malSync {
      background-color: #0e151b;
      padding: 8px;
    }

    .mal-sync-active {
      background-color: purple !important;
    }

    #malp select option {
      background-color: #131c25 !important;
    }

    .malp-group {
      background-color: rgba(255, 255, 255, 0.1) !important;
      padding: 5px !important;
      border-radius: 6px !important;
      text-align: center !important;
      align-items: center !important;
      display: inline-flex !important;
    }

    .module_single_ads {
      background-color: #0e151b;
    }

    #message {
      margin-top: 10px;
    }

    .prev3 {
      display: none;
    }

    .prev4 {
      display: none;
    }

    .next3 {
      display: none;
    }

    .next4 {
      display: none;
    }
  </style>
  <!-- Global site tag (gtag.js) - Google Analytics -->
  <script async="" src="https://www.googletagmanager.com/gtag/js?id=G-LQLZ0LVE5C"></script>
  <script defer=""
    src="data:text/javascript;base64,DQogIHdpbmRvdy5kYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IFtdOw0KICBmdW5jdGlvbiBndGFnKCl7ZGF0YUxheWVyLnB1c2goYXJndW1lbnRzKTt9DQogIGd0YWcoJ2pzJywgbmV3IERhdGUoKSk7DQoNCiAgZ3RhZygnY29uZmlnJywgJ0ctTFFMWjBMVkU1QycpOw0K"></script>
  <meta name="author" content="Deku2k">
  <script src="https://aniyan.net/wp-includes/js/wp-emoji-release.min.js?ver=6.3.1" defer=""></script>
</head>

<body class="episodes-template-default single single-episodes postid-12271 logged-in" style="visibility: visible;">
  <div class="dtloadpage">
    <div class="dtloadbox">
      <span><i class="icons-spinner9 loading"></i> Gerando dados...</span>
      <p>Aguarde, não feche esta página para concluir o upload</p>
    </div>
  </div>
  <div id="dt_contenedor">
    <header id="new_header">
      <div class="container">
        <div id="site_menu">
          <div class="site_menu-icon">
            <i class="fas fa-bars"></i>
          </div>
          <div id="new_header_menu" class="menu-menu-principal-container">
            <ul class="nav header_menu-list">
              <li id="menu-item-38"
                class="menu-item menu-item-type-custom menu-item-object-custom menu-item-38 nav-item"><a href="/"><i
                    class="fas fa-home"></i> Home</a></li>
              <li id="menu-item-39"
                class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-39 nav-item">
                <a href="/animes"><i class="fas fa-video"></i> Animes</a>
                <div class="header_menu-sub size-1">
                  <ul class="sub-menu">
                    <li id="menu-item-12897"
                      class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12897 nav-item"><a
                        href="/episodios"><i class="fas fa-video"></i> Episódios</a></li>
                    <li id="menu-item-5669"
                      class="menu-item menu-item-type-custom menu-item-object-custom menu-item-5669 nav-item"><a
                        href="https://aniyan.net/calendario"><i class="fas fa-calendar"></i> Calendário</a></li>
                    <li id="menu-item-12898"
                      class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12898 nav-item"><a
                        href="/?random=1"><i class="fas fa-random"></i> Aleatório</a></li>
                  </ul>
                </div>
              </li>
              <li id="menu-item-40"
                class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-40 nav-item">
                <a href="/filmes"><i class="fad fa-film"></i> Filmes</a>
                <div class="header_menu-sub size-1">
                  <ul class="sub-menu">
                    <li id="menu-item-12902"
                      class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12902 nav-item"><a
                        href="/?random=2"><i class="fas fa-random"></i> Aleatório</a></li>
                  </ul>
                </div>
              </li>
              <li id="menu-item-5841"
                class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-5841 nav-item">
                <a href="https://aniyan.net/home-hentais"><i class="fas fa-fire"></i> Hentais</a>
                <div class="header_menu-sub size-1">
                  <ul class="sub-menu">
                    <li id="menu-item-12899"
                      class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12899 nav-item"><a
                        href="/episodios-hentais"><i class="fas fa-fire"></i> Episódios</a></li>
                    <li id="menu-item-12900"
                      class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12900 nav-item"><a
                        href="/hentais"><i class="fas fa-filter"></i> Filtros</a></li>
                    <li id="menu-item-12901"
                      class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12901 nav-item"><a
                        href="/?random=3"><i class="fas fa-random"></i> Aleatório</a></li>
                  </ul>
                </div>
              </li>
              <li id="menu-item-5671"
                class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-5671 nav-item">
                <a href="#"><i class="fal fa-plus"></i> Mais</a>
                <div class="header_menu-sub size-1">
                  <ul class="sub-menu">
                    <li id="menu-item-13060"
                      class="menu-item menu-item-type-custom menu-item-object-custom menu-item-13060 nav-item"><a
                        target="_blank" rel="noopener" href="https://stats.uptimerobot.com/r56ZJcrNEn"><i
                          class="fas fa-signal-alt"></i> Uptime</a></li>
                    <li id="menu-item-41"
                      class="menu-item menu-item-type-custom menu-item-object-custom menu-item-41 nav-item"><a
                        target="_blank" rel="noopener" href="/doacao"><i class="fas fa-money-bill-wave"></i> Doação</a>
                    </li>
                    <li id="menu-item-42"
                      class="menu-item menu-item-type-custom menu-item-object-custom menu-item-42 nav-item"><a
                        target="_blank" rel="noopener" href="https://discord.gg/fYeHEywhWW"><i
                          class="fab fa-discord"></i> Discord</a></li>
                  </ul>
                </div>
              </li>
            </ul>
          </div>
          <div class="clearfix"></div>
        </div>
        <a href="https://aniyan.net" id="logo"><img decoding="async"
            src="https://sp-ao.shortpixel.ai/client/to_webp,q_glossy,ret_img/https://aniyan.net/wp-content/uploads/2023/01/logo-aniyan-roxa.png"
            alt="Aniyan"></a>
        <div class="clearfix"></div>

        <div class="headitems register_active">
          <button class="searchbox-button"
            onclick="javascript:window.location.href = 'https://aniyan.net/?s=';"><span><i
                class="fas fa-search"></i></span></button>
          <!-- end search -->
          <div class="dtuser">
            <div class="gravatar">
              <div class="image">
                <a href="https://aniyan.net/conta/"><img decoding="async" src="" width="35" height="35" alt="Avatar"
                    class="avatar avatar-35 wp-user-avatar wp-user-avatar-35 photo avatar-default"></a>
              </div>
              <a href="#" id="dooplay_signout">Sair</a>
            </div>
          </div>
          <!-- end dt_user -->
          <!-- <div style="z-index: 100;" class="live-search ltr"></div> -->
        </div>
        <!-- <div id="search"></div> -->
      </div>
      <!-- antigo -->

      <!-- Modal -->
      <div class="modal fade" id="searchModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <!-- <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div> -->
            <div class="modal-body">
              <div id="advc-menu" class="search">
                <form method="get" id="searchform" action="https://aniyan.net">
                  <input type="text" placeholder="Pesquisar..." name="s" id="s" value="" autocomplete="off">
                  <button class="search-button" type="submit"><span class="fas fa-search"></span></button>
                </form>
                <div style="z-index: 100; display: none;" class="live-search ltr"></div>
              </div>
            </div>
            <!-- <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary">Save changes</button>
                        </div> -->
          </div>
        </div>
      </div>

      <div class="fixheadresp">
        <header class="responsive">
          <div class="nav"><a class="aresp nav-resp"></a></div>
          <div class="search"><a class="aresp search-resp"></a></div>
          <div class="logo">
            <a href="https://aniyan.net/"><img decoding="async"
                src="https://sp-ao.shortpixel.ai/client/to_webp,q_glossy,ret_img/https://aniyan.net/wp-content/uploads/2023/01/logo-aniyan-roxa.png"
                alt="Aniyan"></a>
          </div>
        </header>
        <div class="search_responsive">
          <form method="get" id="form-search-resp" class="form-resp-ab" action="https://aniyan.net">
            <input type="text" placeholder="Pesquisar..." name="s" id="ms" value="" autocomplete="off">
            <button type="submit" class="search-button"><span class="fas fa-search"></span></button>
          </form>
          <div class="live-search" style="display: none;"></div>
        </div>
        <div id="arch-menu" class="menuresp">
          <div class="menu">
            <div class="user">
              <div class="gravatar">
                <a href="https://aniyan.net/conta/">
                  <img decoding="async" src="" width="35" height="35" alt="Avatar"
                    class="avatar avatar-35 wp-user-avatar wp-user-avatar-35 photo avatar-default"> <span>Minha
                    Conta</span>
                </a>
              </div>
              <div class="logout">
                <a href="#" id="dooplay_signout">Sair</a>
              </div>
            </div>
            <div class="menu-menu-principal-container">
              <ul id="main_header" class="resp">
                <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-38"><a href="/"><i
                      class="fas fa-home"></i> Home</a></li>
                <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-39">
                  <a href="/animes"><i class="fas fa-video"></i> Animes</a>
                  <ul class="sub-menu">
                    <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12897"><a
                        href="/episodios"><i class="fas fa-video"></i> Episódios</a></li>
                    <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-5669"><a
                        href="https://aniyan.net/calendario"><i class="fas fa-calendar"></i> Calendário</a></li>
                    <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12898"><a
                        href="/?random=1"><i class="fas fa-random"></i> Aleatório</a></li>
                  </ul>
                </li>
                <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-40">
                  <a href="/filmes"><i class="fad fa-film"></i> Filmes</a>
                  <ul class="sub-menu">
                    <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12902"><a
                        href="/?random=2"><i class="fas fa-random"></i> Aleatório</a></li>
                  </ul>
                </li>
                <li
                  class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-5841">
                  <a href="https://aniyan.net/home-hentais"><i class="fas fa-fire"></i> Hentais</a>
                  <ul class="sub-menu">
                    <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12899"><a
                        href="/episodios-hentais"><i class="fas fa-fire"></i> Episódios</a></li>
                    <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12900"><a
                        href="/hentais"><i class="fas fa-filter"></i> Filtros</a></li>
                    <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12901"><a
                        href="/?random=3"><i class="fas fa-random"></i> Aleatório</a></li>
                  </ul>
                </li>
                <li
                  class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-5671">
                  <a href="#"><i class="fal fa-plus"></i> Mais</a>
                  <ul class="sub-menu">
                    <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-13060"><a
                        target="_blank" rel="noopener" href="https://stats.uptimerobot.com/r56ZJcrNEn"><i
                          class="fas fa-signal-alt"></i> Uptime</a></li>
                    <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-41"><a target="_blank"
                        rel="noopener" href="/doacao"><i class="fas fa-money-bill-wave"></i> Doação</a></li>
                    <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-42"><a target="_blank"
                        rel="noopener" href="https://discord.gg/fYeHEywhWW"><i class="fab fa-discord"></i> Discord</a>
                    </li>
                  </ul>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
      <script defer=""
        src="data:text/javascript;base64,DQogICAgICAgICAgICB2YXIgaGVhZGVyQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInNpdGVfbWVudSIpOw0KICAgICAgICAgICAgdmFyIGhlYWRlclN1YkJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm5hdi1pdGVtIik7DQoNCiAgICAgICAgICAgIGhlYWRlckJ1dHRvbi5vbmNsaWNrID0gZnVuY3Rpb24oKSB7DQogICAgICAgICAgICAgICAgaWYgKGhlYWRlckJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoImFjdGl2ZSIpKSB7DQogICAgICAgICAgICAgICAgICAgIGhlYWRlckJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCJhY3RpdmUiKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBoZWFkZXJCdXR0b24uY2xhc3NMaXN0LmFkZCgiYWN0aXZlIik7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBoZWFkZXJTdWJCdXR0b24ub25jbGljayA9IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgICAgIGlmIChoZWFkZXJTdWJCdXR0b24uY2xhc3NMaXN0LmNvbnRhaW5zKCJhY3RpdmUiKSkgew0KICAgICAgICAgICAgICAgICAgICBoZWFkZXJTdWJCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgiYWN0aXZlIik7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgaGVhZGVyU3ViQnV0dG9uLmNsYXNzTGlzdC5hZGQoImFjdGl2ZSIpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8gQ3JpYW5kbyBhdGFsaG8gcGFyYSBhYnJpciBvIG1vZGFsIGRlIFBlc3F1aXNhLg0KICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uKGV2ZW50KSB7DQogICAgICAgICAgICAgICAgLy8gRGV0ZWN0YXIgcXVhbmRvIG8gdXN1w6FyaW8gY2xpY2FyIENUUkwgKyBTLg0KICAgICAgICAgICAgICAgIGlmIChldmVudC5jdHJsS2V5ICYmIGV2ZW50LmtleSA9PT0gJ3MnKSB7DQogICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IC8vIFByZXZpbmlyIG8gZXZlbnRvIHBhZHLDo28gZGEgdGVjbGEsIHF1ZSDDqSBzYWx2YXIgYSBww6FnaW5hLg0KICAgICAgICAgICAgICAgICAgICBPcGVuTW9kYWxTZWFyY2hCb3goKTsgLy8gQWJyaXIgbyBtb2RhbCBkZSBwZXNxdWlzYS4NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8gQ3JpYW5kbyBhIGZ1bsOjbyBwYXJhIGFicmlyIG8gbW9kYWwgZGUgUGVzcXVpc2ENCiAgICAgICAgICAgIGZ1bmN0aW9uIE9wZW5Nb2RhbFNlYXJjaEJveCgpIHsNCiAgICAgICAgICAgICAgICAvLyBBYnJpbmRvIG8gbW9kYWwNCiAgICAgICAgICAgICAgICAkKCIjc2VhcmNoTW9kYWwiKS5tb2RhbCgnc2hvdycpOw0KDQogICAgICAgICAgICAgICAgLy8gUGVnYW5kbyBvIGJvdMOjbyBkZSBwZXNxdWlzYQ0KICAgICAgICAgICAgICAgIHZhciB0ZXh0X2lucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3MnKTsNCg0KICAgICAgICAgICAgICAgIC8vIEZhemVuZG8gY29tIHF1ZSBvIG5hdmVnYWRvciBzZWxlY2lvbmUgYSBiYXJyYSBkZSBwZXNxdWlzYS4NCiAgICAgICAgICAgICAgICAvLyBDb20gdW0gYXdhaXQgcG9pcyBzZSBmb3IgbXVpdG8gcnBpZG8gbyBuYXZlZ2Fkb3IgbsOjbyBjb250YS4NCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgICAgICAgICB0ZXh0X2lucHV0LnNlbGVjdCgpOw0KICAgICAgICAgICAgICAgIH0sIDEwMDApOyAvLyAxIHNlZ3VuZG8uDQoNCiAgICAgICAgICAgICAgICAvLyBBIGNhZGEgMTAwMCA9IDFzLg0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAg"></script>
      <div id="contenedor">

        <div id="single" class="dtsingle" itemscope="" itemtype="http://schema.org/TVSeries">


          <!-- Views Counter -->
          <meta id="dooplay-ajax-counter" data-postid="12271">
          <div class="animeContainer mwidth_3 fbox fbox_space_between fbox_start mtop mbottom">
            <div class="right" style="width: 100%;">
              <form action="jwp8.php" method="post">
                <input type="hidden" name="playerInstanceId" id="playerInstanceId" value="12271">
              </form>
              <div class="anipage_tituloep">
                <h1>Otonari no Tenshi-sama ni Itsunomanika Dame Ningen ni Sareteita Ken -
                  T1:E1</h1>
                <span>07/01/2023 às 14:14 - 415 Visualizações</span>
              </div>

              <!-- Regular Player and Player Options -->
              <div class="dooplay_player">
                <div id="playeroptions" class="options">
                  <ul id="playeroptionsul" class="ajax_mode">
                    <li id="player-option-1" class="dooplay_player_option on" data-type="tv" data-post="12271"
                      data-nume="1"><span class="title">HD</span><span class="loader" style="display: none;"></span>
                    </li>
                    <li id="player-option-2" class="dooplay_player_option" data-type="tv" data-post="12271"
                      data-nume="2"><span class="title">SD</span><span class="loader"></span></li>
                  </ul>
                </div>
                <div id="playcontainer" class="play isnd">
                  <div id="dooplay_player_response">
                    <div class="pframe"><iframe class="metaframe rptss"
                        src="https://aniyan.net/jwplayer/?source=https%3A%2F%2Fvds.aniyan.net%2Ffiles-storaged%2Faniyan-videos-embed%2F17%2Fotonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken%2FS01%2FOtonari-no-Tenshi-sama-ni-Itsunomanika-Dame-Ningen-ni-Sareteita-Ken-01-HD.mp4&amp;id=12271&amp;type=mp4"
                        frameborder="0" scrolling="no" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>
                    </div>
                  </div>
                </div>
              </div>
              <!-- Episodes paginator -->

              <div class="pag_episodes">
                <div class="item"><a href="#" class="nonex"><i class="fas fa-angle-left"></i></a></div>
                <div class="item" style="background-color: #121c24;"><a
                    href="https://aniyan.net/a/11943/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken/"
                    title="Otonari no Tenshi-sama ni Itsunomanika Dame Ningen ni Sareteita Ken"><i
                      class="fas fa-clone"></i></a></div>
                <div class="item"><a
                    href="https://aniyan.net/w/12582/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-2/"
                    title="Otonari no Tenshi-sama ni Itsunomanika Dame Ningen ni Sareteita Ken Episódio 2"><i
                      class="fas fa-angle-right"></i></a></div>
              </div>
              <!-- Descrição -->
              <div
                style="background: #131c25;border-radius: 20px;padding:15px;float: left;width: 100%;min-height: 140px;padding: 20px;background-color: #0d1217;margin-top: 10px;margin-bottom: 10px;">
                <div class="tags_do_ep" style="position: relative;float: right;">
                </div>
                <div class="img-uploader">
                  <a href="https://aniyan.net/user/shiba/" title="Shiba">
                    <img decoding="async" src="https://i.imgur.com/qgYoptQ.gif" alt="Avatar" height="62" width="62"
                      class="epipage-uploader-img"></a>
                  <p>Shiba</p>

                </div>
                <p class="desc-content">
                  Tenha um timo episdio :) </p>
              </div>

              <!-- Info ANIME -->
              <div>
                <img decoding="async" src="">
                <!-- Array
(
    [dt_featured_post] =>
    [bluray] =>
    [clgnrt] =>
    [ids] =>
    [dt_poster] =>
    [dt_backdrop] =>
    [imagenes] =>
    [youtube_id] =>
    [original_name] =>
    [first_air_date] =>
    [last_air_date] =>
    [imdbRating] =>
    [imdbVotes] =>
    [number_of_seasons] =>
    [number_of_episodes] =>
    [dt_creator] =>
    [urating_avg] =>
    [urating_total] =>
    [episode_run_time] =>
    [dt_views_count] =>
)
 -->
              </div>

              <!-- Lista de EPISDIOS -->
              <div class="sbox" style="text-align: center;">
                <div id="serie_contenido" style="padding-top:0">
                  <div id="seasons">
                    <div class="se-c">
                      <div class="se-a se-episodios" style="display:block">
                        <div class="listaep">Episódios <i class="fas fa-arrow-down"></i></div>
                        <ul class="episodios">
                          <li class="mark-1">
                            <div class="episodiotitle"><a
                                href="https://aniyan.net/w/12271/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-1/">Episódio
                                1</a></div>
                          </li>
                          <li class="mark-2">
                            <div class="episodiotitle"><a
                                href="https://aniyan.net/w/12582/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-2/">Episódio
                                2</a></div>
                          </li>
                          <li class="mark-3">
                            <div class="episodiotitle"><a
                                href="https://aniyan.net/w/12733/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-3/">Episódio
                                3</a></div>
                          </li>
                          <li class="mark-4">
                            <div class="episodiotitle"><a
                                href="https://aniyan.net/w/12974/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-4/">Episódio
                                4</a></div>
                          </li>
                          <li class="mark-5">
                            <div class="episodiotitle"><a
                                href="https://aniyan.net/w/13125/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-5/">Episódio
                                5</a></div>
                          </li>
                          <li class="mark-6">
                            <div class="episodiotitle"><a
                                href="https://aniyan.net/w/13336/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-6/">Episódio
                                6</a></div>
                          </li>
                          <li class="mark-7">
                            <div class="episodiotitle"><a
                                href="https://aniyan.net/w/13600/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-7/">Episódio
                                7</a></div>
                          </li>
                          <li class="mark-8">
                            <div class="episodiotitle"><a
                                href="https://aniyan.net/w/13840/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-8/">Episódio
                                8</a></div>
                          </li>
                          <li class="mark-9">
                            <div class="episodiotitle"><a
                                href="https://aniyan.net/w/14019/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-9/">Episódio
                                9</a></div>
                          </li>
                          <li class="mark-10">
                            <div class="episodiotitle"><a
                                href="https://aniyan.net/w/14290/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-10/">Episódio
                                10</a></div>
                          </li>
                          <li class="mark-11">
                            <div class="episodiotitle"><a
                                href="https://aniyan.net/w/14483/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-11/">Episódio
                                11</a></div>
                          </li>
                          <li class="mark-12">
                            <div class="episodiotitle"><a
                                href="https://aniyan.net/w/14584/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-12/">Episódio
                                12</a></div>
                          </li>
                        </ul>
                      </div>
                    </div>
                  </div>
                </div>
                <script defer=""
                  src="data:text/javascript;base64,DQpsZXQgYW5zd2VycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5zZS1lcGlzb2Rpb3MiKQ0KYW5zd2Vycy5mb3JFYWNoKChldmVudCkgPT4gew0KICAgIGV2ZW50LmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgKCkgPT4gew0KICAgICAgICBpZiAoZXZlbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCJhY3RpdmUiKSkgew0KICAgICAgICAgICAgZXZlbnQuY2xhc3NMaXN0LnJlbW92ZSgiYWN0aXZlIik7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBldmVudC5jbGFzc0xpc3QuYWRkKCJhY3RpdmUiKTsNCiAgICAgICAgfQ0KICAgIH0pOw0KfSk7DQo="></script>
              </div>
              <!-- Show comments -->
              <div id="comments" class="comments-area">
                <div class="disclaimer_comments"
                  style="background: #121c24; padding: 10px; text-align: center; margin-bottom: 15px; border-radius: 8px;">
                  <div><strong>AVISO: O sistema de comentários está em BETA atualmente não é possível editar/deletar
                      comentários.</strong><br><br>Você pode utilizar algumas tags html como <strong>&lt;i&gt;
                      &lt;strong&gt; &lt;spoiler&gt; </strong> nos seus comentários.<br>Caso vá comentar algum spoiler
                    sobre a obra, utilize a tag de spoiler.</div>
                </div>
                <div id="respond" class="comment-respond">
                  <h3 id="reply-title" class="comment-reply-title">Deixar um comentário <small><a rel="nofollow"
                        id="cancel-comment-reply-link"
                        href="/w/12271/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-1/#respond"
                        style="display:none;">Cancelar resposta</a></small></h3>
                  <form action="https://aniyan.net/wp-comments-post.php" method="post" id="commentform"
                    class="comment-form">
                    <div class="comment-form-comment">
                      <textarea id="comment" name="comment" required="true" class="normal"
                        placeholder="Seu comentário.."></textarea>
                    </div>
                    <p class="form-submit"><input name="submit" type="submit" id="submit" class="submit"
                        value="Publicar comentário"> <input type="hidden" name="comment_post_ID" value="12271"
                        id="comment_post_ID">
                      <input type="hidden" name="comment_parent" id="comment_parent" value="0">
                    </p>
                  </form>
                </div><!-- #respond -->
              </div><!-- #comments -->
            </div>
          </div>

          <!-- End Post-->
        </div>

        <script id="syncData"
          type="application/json">{"page":"episode","name":"Otonari no Tenshi-sama ni Itsunomanika Dame Ningen ni Sareteita Ken","anilist_id":"143338","myanimelist_id":"50739","anime_id":"11943","episode":"1","series_url":"https:\/\/aniyan.net\/a\/11943\/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken\/","next_episode_url":"https:\/\/aniyan.net\/w\/12582\/otonari-no-tenshi-sama-ni-itsunomanika-dame-ningen-ni-sareteita-ken-episodio-2\/","selector_position":"#malSync"}</script>
        <style>
          .dooplay_player .options {
            background: #0d1217;
          }

          .dooplay_player .options ul {
            margin-bottom: 10px;
          }

          .dooplay_player .play.isnd {
            padding: 20px;
            background: #131c25;
            z-index: 1;
          }

          .comments-area {
            background: #0d1217;
          }
        </style>
      </div>
      <div stlye="z-index: 3;">
        <footer class="mainFooter">
          <!-- <img decoding="async" class="footerBg" src="https://i.imgur.com/1HhEgXN.jpg" alt=""> -->
          <div class="footerContainer">
            <div class="footerRow">
              <div class="footerCol">
                <div class="logos">
                  <div class="footerLogo"></div>
                  <div class="socials">
                    <span>Redes sociais</span>
                    <a rel="nofollow" class="facebook" href="https://facebook.com/aniyan.net" target="_blank">
                      <i class="fab fa-facebook"></i>
                    </a>
                    <a rel="nofollow" class="discord" href="https://discord.gg/fYeHEywhWW" target="_blank">
                      <i class="fab fa-discord"></i>
                    </a>
                    <!-- <a rel="nofollow" class="twitter" href="#" target="_blank"></a> -->
                  </div>
                </div>
                <div class="inline-links">
                  <label>Parceiros</label>
                  <ul>
                    <li>
                      <div class="menu-menu-rodape-parceiros-container">
                        <ul id="menu-menu-rodape-parceiros" class="menu">
                          <li id="menu-item-12922"
                            class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12922"><a
                              target="_blank" rel="noopener" href="https://nyanmusic.net/">Nyan Music</a></li>
                          <li id="menu-item-12006"
                            class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12006"><a
                              href="https://sites.google.com/view/worldfansub/">World Fansub</a></li>
                          <li id="menu-item-7295"
                            class="menu-item menu-item-type-custom menu-item-object-custom menu-item-7295"><a
                              href="https://go.hotmart.com/F74656440V">Método Instagram Gigante</a></li>
                          <li id="menu-item-53"
                            class="menu-item menu-item-type-custom menu-item-object-custom menu-item-53"><a
                              href="https://shopee.com.br/dkzerah">Mangás Usados</a></li>
                          <li id="menu-item-52"
                            class="menu-item menu-item-type-custom menu-item-object-custom menu-item-52"><a
                              href="https://r.honeygain.me/CAUAS26284">Honeygain</a></li>
                          <li id="menu-item-6846"
                            class="menu-item menu-item-type-custom menu-item-object-custom menu-item-6846"><a
                              href="https://vm.tiktok.com/ZMNnjELvW/">TikTok</a></li>
                        </ul>
                      </div>
                    </li>
                  </ul>
                </div>
                <div class="inline-links footerMt-1">
                  <label>Redes Sociais</label>
                  <ul>
                    <li>
                      <div class="menu-menu-rodape-redes-sociais-container">
                        <ul id="menu-menu-rodape-redes-sociais" class="menu">
                          <li id="menu-item-55"
                            class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55"><a
                              href="https://discord.gg/fYeHEywhWW">Discord</a></li>
                          <li id="menu-item-56"
                            class="menu-item menu-item-type-custom menu-item-object-custom menu-item-56"><a
                              href="https://www.facebook.com/aniyan.net">Facebook</a></li>
                          <li id="menu-item-54"
                            class="menu-item menu-item-type-custom menu-item-object-custom menu-item-54"><a
                              href="https://disqus.com/home/forums/aniyan/">Disqus</a></li>
                        </ul>
                      </div>
                    </li>
                  </ul>
                </div>
                <div class="inline-links footerMt-1">
                  <label>Outros Links</label>
                  <ul>
                    <li>
                      <div class="menu-menu-rodape-outros-links-container">
                        <ul id="menu-menu-rodape-outros-links" class="menu">
                          <li id="menu-item-3462"
                            class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3462"><a
                              href="https://aniyan.net/contato/">Contato</a></li>
                          <li id="menu-item-5893"
                            class="menu-item menu-item-type-post_type menu-item-object-page menu-item-privacy-policy menu-item-5893">
                            <a rel="privacy-policy" href="https://aniyan.net/politica-de-privacidade/">Política de
                              Privacidade</a></li>
                          <li id="menu-item-5892"
                            class="menu-item menu-item-type-post_type menu-item-object-page menu-item-5892"><a
                              href="https://aniyan.net/termos-de-uso/">Termos de Uso</a></li>
                        </ul>
                      </div>
                    </li>
                  </ul>
                </div>
                <div class="footerAzList">
                  <div class="footerAZHead">
                    <div class="footerAZTitle">Lista de A-Z</div>
                    <div class="footerAZDesc">Procure animes no catálogo por ordem alfabética de A-Z</div>
                  </div>
                  <ul class="footerAbc">
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-09">#</a></li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-a">A</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-b">B</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-c">C</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-d">D</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-e">E</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-f">F</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-g">G</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-h">H</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-i">I</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-j">J</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-k">K</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-l">L</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-m">M</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-n">N</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-o">O</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-p">P</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-q">Q</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-r">R</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-s">S</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-t">T</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-u">U</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-v">V</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-w">W</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-x">X</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-y">Y</a>
                    </li>
                    <li><a href="https://aniyan.net/?letter=true&amp;s=title-z">Z</a>
                    </li>
                  </ul>
                </div>
                <div class="footerCopyright">Aniyan © 2016 ~ 2022</div>
                <div class="disclaimer">Feito com muito <img draggable="false" role="img" class="emoji" alt="❤️"
                    src="https://s.w.org/images/core/emoji/14.0.0/svg/2764.svg"> por <a rel="nofollow"
                    href="https://aniyan.net/user/deku2k" target="_blank">Deku2k</a> &amp; <a rel="nofollow"
                    href="https://aniyan.net/user/doug" target="_blank">Dougg</a>.</div>
              </div>
            </div>
          </div>
        </footer>
      </div>
    </header>
  </div>
  <script defer=""
    src="data:text/javascript;base64,CmpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oJCkgewokKCIjZHRfZ2FsZXJ5Iikub3dsQ2Fyb3VzZWwoeyBpdGVtczozLGF1dG9QbGF5OmZhbHNlLGl0ZW1zRGVza3RvcDpbMTE5OSwzXSxpdGVtc0Rlc2t0b3BTbWFsbDpbOTgwLDNdLGl0ZW1zVGFibGV0Ols3NjgsM10saXRlbXNUYWJsZXRTbWFsbDpmYWxzZSxpdGVtc01vYmlsZTpbNDc5LDFdfSk7CiQoIiNkdF9nYWxlcnlfZXAiKS5vd2xDYXJvdXNlbCh7IGl0ZW1zOjIsYXV0b1BsYXk6ZmFsc2UgfSk7CiQoIiNzaW5nbGVfcmVsYWNpb25hZG9zIikub3dsQ2Fyb3VzZWwoeyBpdGVtczo4LGF1dG9QbGF5OjMwMDAsc3RvcE9uSG92ZXI6dHJ1ZSxwYWdpbmF0aW9uOmZhbHNlLGl0ZW1zRGVza3RvcDpbMTE5OSw4XSxpdGVtc0Rlc2t0b3BTbWFsbDpbOTgwLDVdLGl0ZW1zVGFibGV0Ols3NjgsNV0saXRlbXNUYWJsZXRTbWFsbDpbNTIwLDRdLGl0ZW1zTW9iaWxlOls0NzksM10gfSk7CiQoIi5yZXNldCIpLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KXsgaWYgKCFjb25maXJtKCBkdEdvbnphLnJlc2V0X2FsbCApKSB7IGV2ZW50LnByZXZlbnREZWZhdWx0KCkgfSB9KTsKJCgiLmFkZGNvbnRlbnQiKS5jbGljayhmdW5jdGlvbihldmVudCl7IGlmKCFjb25maXJtKGR0R29uemEubWFudWFsbHlfY29udGVudCkpeyBldmVudC5wcmV2ZW50RGVmYXVsdCgpIH0gfSk7fSk7CmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJkdF9nYWxlcnkiKS5vbmNsaWNrPWZ1bmN0aW9uKGEpe2E9YXx8d2luZG93LmV2ZW50O3ZhciBiPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnQsYz1iLnNyYz9iLnBhcmVudE5vZGU6YixkPXtpbmRleDpjLGV2ZW50OmF9LGU9dGhpcy5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpO2JsdWVpbXAuR2FsbGVyeShlLGQpfTsK"></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/themes/aniyan/assets/js/front.scripts.min.js?ver=2.5.5" id="scripts-js"></script>
  <script defer="" id="live_search-js-extra"
    src="data:text/javascript;base64,Ci8qIDwhW0NEQVRBWyAqLwp2YXIgZHRHb256YSA9IHsiYXBpIjoiaHR0cHM6XC9cL2FuaXlhbi5uZXRcL3dwLWpzb25cL2Rvb3BsYXlcL3NlYXJjaFwvIiwiZ2xvc3NhcnkiOiJodHRwczpcL1wvYW5peWFuLm5ldFwvd3AtanNvblwvZG9vcGxheVwvZ2xvc3NhcnlcLyIsIm5vbmNlIjoiMTAxYTE2YzE2ZCIsImFyZWEiOiIubGl2ZS1zZWFyY2giLCJidXR0b24iOiIuc2VhcmNoLWJ1dHRvbiIsIm1vcmUiOiJWZXIgdG9kb3Mgb3MgcmVzdWx0YWRvcyIsIm1vYmlsZSI6ImZhbHNlIiwicmVzZXRfYWxsIjoiVm9jXHUwMGVhIHJlYWxtZW50ZSBkZXNlamEgcmVpbmljaWFyIHRvZG9zIG9zIGRhZG9zPyIsIm1hbnVhbGx5X2NvbnRlbnQiOiJFbGVzIGNvbSBjZXJ0ZXphIGFkaWNpb25hcmFtIGNvbnRlXHUwMGZhZG8gbWFudWFsbWVudGU/IiwibG9hZGluZyI6IkNhcnJlZ2FuZG8uLiIsImxvYWRpbmdwbGF5ZXIiOiJDYXJyZWdhbmRvIHBsYXllci4uLiIsInNlbGVjdGFwbGF5ZXIiOiJTZWxlY2lvbmUgbyBwbGF5ZXIgZGUgdlx1MDBlZGRlbyIsInBsYXllcmFkc3RpbWUiOm51bGwsImF1dG9wbGF5ZXIiOiIxIiwibGl2ZXNlYXJjaGFjdGl2ZSI6IjEifTsKLyogXV0+ICovCg=="></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/themes/aniyan/assets/js/front.livesearch.min.js?ver=2.5.5"
    id="live_search-js"></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/cache/autoptimize/js/autoptimize_single_cb6b2bc2be98c21b1287ba0853143d89.js?ver=2.5.5"
    id="a2hs-js"></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/cache/autoptimize/js/autoptimize_single_b8261f69d62a297e6139103171c25ae7.js?ver=2.5.5"
    id="aniyan-shortcuts-js"></script>
  <script defer="" type="text/javascript"
    src="https://aniyan.net/wp-content/cache/autoptimize/js/autoptimize_single_7b9281cca55e625f6a438a91666f8b90.js?ver=2.5.5"
    id="aniyan-headerjs-js"></script>
  <script type="text/javascript"
    src="https://aniyan.net/wp-content/themes/aniyan/assets/js/front.dropdown.min.js?ver=2.5.5"
    id="dropdown_menu-js"></script>
  <script defer="" type="text/javascript" src="https://aniyan.net/wp-includes/js/comment-reply.min.js?ver=6.3.1"
    id="comment-reply-js"></script>
  <script defer=""
    src="data:text/javascript;base64,DQovLyBQbGFjZSB0aGlzIGNvZGUgc25pcHBldCBuZWFyIHRoZSBmb290ZXIgb2YgeW91ciBwYWdlIGJlZm9yZSB0aGUgY2xvc2Ugb2YgdGhlIC9ib2R5IHRhZw0KLy8gTEVHQUwgTk9USUNFOiBUaGUgY29udGVudCBvZiB0aGlzIHdlYnNpdGUgYW5kIGFsbCBhc3NvY2lhdGVkIHByb2dyYW0gY29kZSBhcmUgcHJvdGVjdGVkIHVuZGVyIHRoZSBEaWdpdGFsIE1pbGxlbm5pdW0gQ29weXJpZ2h0IEFjdC4gSW50ZW50aW9uYWxseSBjaXJjdW12ZW50aW5nIHRoaXMgY29kZSBtYXkgY29uc3RpdHV0ZSBhIHZpb2xhdGlvbiBvZiB0aGUgRE1DQS4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCmV2YWwoZnVuY3Rpb24ocCxhLGMsayxlLGQpe2U9ZnVuY3Rpb24oYyl7cmV0dXJuKGM8YT8nJzplKHBhcnNlSW50KGMvYSkpKSsoKGM9YyVhKT4zNT9TdHJpbmcuZnJvbUNoYXJDb2RlKGMrMjkpOmMudG9TdHJpbmcoMzYpKX07aWYoIScnLnJlcGxhY2UoL14vLFN0cmluZykpe3doaWxlKGMtLSl7ZFtlKGMpXT1rW2NdfHxlKGMpfWs9W2Z1bmN0aW9uKGUpe3JldHVybiBkW2VdfV07ZT1mdW5jdGlvbigpe3JldHVybidcXHcrJ307Yz0xfTt3aGlsZShjLS0pe2lmKGtbY10pe3A9cC5yZXBsYWNlKG5ldyBSZWdFeHAoJ1xcYicrZShjKSsnXFxiJywnZycpLGtbY10pfX1yZXR1cm4gcH0oJztrIFA9XCdcJywyOT1cJzFYXCc7MUUoayBpPTA7aTwxMjtpKyspUCs9MjkuVihELk4oRC5LKCkqMjkuSCkpO2sgMkY9OCwydD0zNCwzMj0xNiwycT00QSwyQz1GKHQpe2sgaT0hMSxvPUYoKXtCKHEuMWkpe3EuMzYoXCcyT1wnLGUpO0cuMzYoXCcxVVwnLGUpfVJ7cS4zMyhcJzJVXCcsZSk7Ry4zMyhcJzIzXCcsZSl9fSxlPUYoKXtCKCFpJiYocS4xaXx8NEIuMmw9PT1cJzFVXCd8fHEuMlo9PT1cJzJXXCcpKXtpPSEwO28oKTt0KCl9fTtCKHEuMlo9PT1cJzJXXCcpe3QoKX1SIEIocS4xaSl7cS4xaShcJzJPXCcsZSk7Ry4xaShcJzFVXCcsZSl9UntxLjNhKFwnMlVcJyxlKTtHLjNhKFwnMjNcJyxlKTtrIG49ITE7MlJ7bj1HLjREPT00RSYmcS4yN30yWChyKXt9O0IobiYmbi4yUCl7KEYgYSgpe0IoaSlJOzJSe24uMlAoXCcxNFwnKX0yWChlKXtJIDRGKGEsNTApfTtpPSEwO28oKTt0KCl9KSgpfX19O0dbXCdcJytQK1wnXCddPShGKCl7ayB0PXt0JDpcJzFYKy89XCcsNEc6RihlKXtrIGE9XCdcJyxkLG4saSxjLHMsbCxvLHI9MDtlPXQuZSQoZSk7MWYocjxlLkgpe2Q9ZS4xYShyKyspO249ZS4xYShyKyspO2k9ZS4xYShyKyspO2M9ZD4+MjtzPShkJjMpPDw0fG4+PjQ7bD0obiYxNSk8PDJ8aT4+NjtvPWkmNjM7QigzYyhuKSl7bD1vPTY0fVIgQigzYyhpKSl7bz02NH07YT1hKzEwLnQkLlYoYykrMTAudCQuVihzKSsxMC50JC5WKGwpKzEwLnQkLlYobyl9O0kgYX0sMTE6RihlKXtrIG49XCdcJyxkLGwsYyxzLHIsbyxhLGk9MDtlPWUuMXcoL1teQS00SC00ei05XFwrXFwvXFw9XS9nLFwnXCcpOzFmKGk8ZS5IKXtzPTEwLnQkLjFQKGUuVihpKyspKTtyPTEwLnQkLjFQKGUuVihpKyspKTtvPTEwLnQkLjFQKGUuVihpKyspKTthPTEwLnQkLjFQKGUuVihpKyspKTtkPXM8PDJ8cj4+NDtsPShyJjE1KTw8NHxvPj4yO2M9KG8mMyk8PDZ8YTtuPW4rUy5UKGQpO0IobyE9NjQpe249bitTLlQobCl9O0IoYSE9NjQpe249bitTLlQoYyl9fTtuPXQubiQobik7SSBufSxlJDpGKHQpe3Q9dC4xdygvOy9nLFwnO1wnKTtrIG49XCdcJzsxRShrIGk9MDtpPHQuSDtpKyspe2sgZT10LjFhKGkpO0IoZTwxRCl7bis9Uy5UKGUpfVIgQihlPjRJJiZlPDRLKXtuKz1TLlQoZT4+Nnw0TCk7bis9Uy5UKGUmNjN8MUQpfVJ7bis9Uy5UKGU+PjEyfDJUKTtuKz1TLlQoZT4+NiY2M3wxRCk7bis9Uy5UKGUmNjN8MUQpfX07SSBufSxuJDpGKHQpe2sgaT1cJ1wnLGU9MCxuPTRNPTFBPTA7MWYoZTx0Lkgpe249dC4xYShlKTtCKG48MUQpe2krPVMuVChuKTtlKyt9UiBCKG4+NE4mJm48MlQpezFBPXQuMWEoZSsxKTtpKz1TLlQoKG4mMzEpPDw2fDFBJjYzKTtlKz0yfVJ7MUE9dC4xYShlKzEpOzJyPXQuMWEoZSsyKTtpKz1TLlQoKG4mMTUpPDwxMnwoMUEmNjMpPDw2fDJyJjYzKTtlKz0zfX07SSBpfX07ayBhPVtcJzRPPT1cJyxcJzRQXCcsXCc0UT1cJyxcJzRSXCcsXCc0SlwnLFwnNHg9XCcsXCc0bj1cJyxcJzR3PVwnLFwnNGZcJyxcJzRnXCcsXCc0aD1cJyxcJzRpPVwnLFwnNGpcJyxcJzRrXCcsXCc0bD1cJyxcJzRlXCcsXCc0bT1cJyxcJzRvPVwnLFwnNHA9XCcsXCc0cT1cJyxcJzRyPVwnLFwnNHM9XCcsXCc0dD09XCcsXCc0dT09XCcsXCc0dj09XCcsXCc0Uz09XCcsXCc0eT1cJyxcJzRUXCcsXCc1Z1wnLFwnNWlcJyxcJzVqXCcsXCc1a1wnLFwnNWxcJyxcJzVtPT1cJyxcJzVuPVwnLFwnNW89XCcsXCc1cD1cJyxcJzVoPT1cJyxcJzVxPVwnLFwnNXNcJyxcJzV0PVwnLFwnNXU9XCcsXCc1dj09XCcsXCc1dz1cJyxcJzV4PT1cJyxcJzV5PT1cJyxcJzV6PVwnLFwnNXI9XCcsXCc1ZlwnLFwnNTU9PVwnLFwnNWU9PVwnLFwnNUFcJyxcJzRYPT1cJyxcJzRZPVwnXSxmPUQuTihELksoKSphLkgpLHc9dC4xMShhW2ZdKSxZPXcsQT0xLFc9XCcjNFpcJyxyPVwnIzUxXCcsZz1cJyM1MlwnLGI9XCcjNTNcJyxMPVwnXCcscD1cJzRWIVwnLHY9XCc1NCA1NiA1NyY1ODsgNTkmNWE7IDViIDVjIDJ4IDFXIDJ6JjJBOzJCLiA1ZCA0VS4gNGQgbiYydztvP1wnLHk9XCc0YSA0YiAzRiAxVyAzRSwgbiYydztvIDNDIDNCIDNBIDN6IDN5IDN4JjN3OzN2LlwnLHM9XCczdSwgM3IgM3MgMnggMVcgMnomMkE7MkIuIDNuIDNtIDNsIVwnLGk9MCx1PTAsbj1cJzNrLjNqXCcsbD0wLE09ZSgpK1wnLjNlXCc7RiBoKHQpe0IodCl0PXQuMUcodC5ILTE1KTtrIGk9cS4yTChcJzNHXCcpOzFFKGsgbj1pLkg7bi0tOyl7ayBlPVMoaVtuXS4xTCk7QihlKWU9ZS4xRyhlLkgtMTUpO0IoZT09PXQpSSEwfTtJITF9O0YgbSh0KXtCKHQpdD10LjFHKHQuSC0xNSk7ayBlPXEuM0k7eD0wOzFmKHg8ZS5IKXsxaz1lW3hdLjF0O0IoMWspMWs9MWsuMUcoMWsuSC0xNSk7Qigxaz09PXQpSSEwO3grK307SSExfTtGIGUodCl7ayBuPVwnXCcsaT1cJzFYXCc7dD10fHwzMDsxRShrIGU9MDtlPHQ7ZSsrKW4rPWkuVihELk4oRC5LKCkqaS5IKSk7SSBufTtGIG8oaSl7ayBvPVtcJzQ3XCcsXCc0Nj09XCcsXCc0NVwnLFwnNDRcJyxcJzJmXCcsXCc0Mz09XCcsXCc0Mj1cJyxcJzNZPT1cJyxcJzNKPVwnLFwnM1U9PVwnLFwnM1Q9PVwnLFwnM1M9PVwnLFwnM1FcJyxcJzNQXCcsXCczT1wnLFwnMmZcJ10scj1bXCcybz1cJyxcJzNLPT1cJyxcJzNOPT1cJyxcJzNWPT1cJyxcJzNaPVwnLFwnNDFcJyxcJzQ5PVwnLFwnM0g9XCcsXCcybz1cJyxcJzNwXCcsXCczcT09XCcsXCczRFwnLFwnM289PVwnLFwnM2k9PVwnLFwnM3Q9PVwnLFwnM1g9XCddO3g9MDsxST1bXTsxZih4PGkpe2M9b1tELk4oRC5LKCkqby5IKV07ZD1yW0QuTihELksoKSpyLkgpXTtjPXQuMTEoYyk7ZD10LjExKGQpO2sgYT1ELk4oRC5LKCkqMikrMTtCKGE9PTEpe249XCcvL1wnK2MrXCcvXCcrZH1Se249XCcvL1wnK2MrXCcvXCcrZShELk4oRC5LKCkqMjApKzQpK1wnLjNlXCd9OzFJW3hdPTFZIDFaKCk7MUlbeF0uMjE9Rigpe2sgdD0xOzFmKHQ8Nyl7dCsrfX07MUlbeF0uMUw9bjt4Kyt9fTtGIFoodCl7fTtJezNkOkYodCxyKXtCKDNSIHEuTz09XCczTFwnKXtJfTtrIGk9XCcwLjFcJyxyPVksZT1xLjFiKFwnMXFcJyk7ZS4xNz1yO2Uuai4xaD1cJzFSXCc7ZS5qLjE0PVwnLTFsXCc7ZS5qLlg9XCctMWxcJztlLmouMWU9XCcyZFwnO2Uuai5VPVwnM01cJztrIGQ9cS5PLjJTLGE9RC5OKGQuSC8yKTtCKGE+MTUpe2sgbj1xLjFiKFwnMmJcJyk7bi5qLjFoPVwnMVJcJztuLmouMWU9XCcxblwnO24uai5VPVwnMW5cJztuLmouWD1cJy0xbFwnO24uai4xND1cJy0xbFwnO3EuTy4zVyhuLHEuTy4yU1thXSk7bi4xZChlKTtrIG89cS4xYihcJzFxXCcpO28uMTc9XCcyVlwnO28uai4xaD1cJzFSXCc7by5qLjE0PVwnLTFsXCc7by5qLlg9XCctMWxcJztxLk8uMWQobyl9UntlLjE3PVwnMlZcJztxLk8uMWQoZSl9O2w9M2goRigpe0IoZSl7dCgoZS4xVj09MCksaSk7dCgoZS4yNj09MCksaSk7dCgoZS4xTT09XCcyeVwnKSxpKTt0KChlLjFGPT1cJzJ1XCcpLGkpO3QoKGUuMVM9PTApLGkpfVJ7dCghMCxpKX19LDI4KX0sMVE6RihlLGMpe0IoKGUpJiYoaT09MCkpe2k9MTtHW1wnXCcrUCtcJ1wnXS4xQygpO0dbXCdcJytQK1wnXCddLjFRPUYoKXtJfX1Se2sgeT10LjExKFwnNFdcJyksdT1xLjVDKHkpO0IoKHUpJiYoaT09MCkpe0IoKDJ0JTMpPT0wKXtrIGw9XCc2ZD1cJztsPXQuMTEobCk7QihoKGwpKXtCKHUuMU8uMXcoL1xccy9nLFwnXCcpLkg9PTApe2k9MTtHW1wnXCcrUCtcJ1wnXS4xQygpfX19fTtrIGY9ITE7QihpPT0wKXtCKCgzMiUzKT09MCl7QighR1tcJ1wnK1ArXCdcJ10uMnApe2sgZD1bXCc2Wj09XCcsXCc3bT09XCcsXCc3NT1cJyxcJzdiPVwnLFwnN2Q9XCddLG09ZC5ILHI9ZFtELk4oRC5LKCkqbSldLGE9cjsxZihyPT1hKXthPWRbRC5OKEQuSygpKm0pXX07cj10LjExKHIpO2E9dC4xMShhKTtvKEQuTihELksoKSoyKSsxKTtrIG49MVkgMVooKSxzPTFZIDFaKCk7bi4yMT1GKCl7byhELk4oRC5LKCkqMikrMSk7cy4xTD1hO28oRC5OKEQuSygpKjIpKzEpfTtzLjIxPUYoKXtpPTE7byhELk4oRC5LKCkqMykrMSk7R1tcJ1wnK1ArXCdcJ10uMUMoKX07bi4xTD1yO0IoKDJxJTMpPT0wKXtuLjIzPUYoKXtCKChuLlU8OCkmJihuLlU+MCkpe0dbXCdcJytQK1wnXCddLjFDKCl9fX07byhELk4oRC5LKCkqMykrMSk7R1tcJ1wnK1ArXCdcJ10uMnA9ITB9O0dbXCdcJytQK1wnXCddLjFRPUYoKXtJfX19fX0sMUM6Rigpe0IodT09MSl7ayB6PTJrLjdpKFwnMmVcJyk7Qih6PjApe0khMH1SezJrLjdnKFwnMmVcJywoRC5LKCkrMSkqMjgpfX07ayBoPVwnN2U9PVwnO2g9dC4xMShoKTtCKCFtKGgpKXtrIGM9cS4xYihcJzdhXCcpO2MuMjQoXCc3OFwnLFwnNlhcJyk7Yy4yNChcJzJsXCcsXCcxai83N1wnKTtjLjI0KFwnMXRcJyxoKTtxLjJMKFwnNzZcJylbMF0uMWQoYyl9Ozc0KGwpO3EuTy4xTz1cJ1wnO3EuTy5qLjE5Kz1cJ1E6MW4gITEzXCc7cS5PLmouMTkrPVwnMUI6MW4gITEzXCc7ayBNPXEuMjcuMjZ8fEcuM2d8fHEuTy4yNixmPUcuNzN8fHEuTy4xVnx8cS4yNy4xVixhPXEuMWIoXCcxcVwnKSxBPWUoKTthLjE3PUE7YS5qLjFoPVwnMmhcJzthLmouMTQ9XCcwXCc7YS5qLlg9XCcwXCc7YS5qLlU9TStcJzF1XCc7YS5qLjFlPWYrXCcxdVwnO2Euai4ybT1XO2Euai4xVD1cJzcxXCc7cS5PLjFkKGEpO2sgZD1cJzxhIDF0PSI3MDovLzZZLjVCIj48MkkgMTc9IjJKIiBVPSIyRSIgMWU9IjQwIj48MnYgMTc9IjJLIiBVPSIyRSIgMWU9IjQwIiA3bDoxdD0iNzk6MnYvN247N0YsN0crN0grN0orQytDK0MrQytDK0MrQytDK0MrQytDK0MrQytDK0MrQytDK0MrQytDK0MrQytDK0MrQytDK0MrQytDK0MrQytDKzdFKzdLKzdMLzdJLzdvLzdCLzdBLzd6Ky83Qy83eSs3eC83dys3di83dS83dC83cy83ci83cS83cCs3Yy82Vys2ais2VSs1WCs1WSs1Wi82MSs2Mi82Nis2Ny81Vys2OCs2YSs2Yis2Yy82Vis2ZS82Zi82Zy82OSs1VSs1TC81VCs1RSs1Ris1RytFKzVILzVJLzVKLzVELzVLLzVNLys1Ti81TysrNVAvNVEvNVIrNVMvNmgrNVYrNmk9PSI+OzwvMkk+PC9hPlwnO2Q9ZC4xdyhcJzJKXCcsZSgpKTtkPWQuMXcoXCcyS1wnLGUoKSk7ayBvPXEuMWIoXCcxcVwnKTtvLjFPPWQ7by5qLjFoPVwnMVJcJztvLmouMXo9XCcxS1wnO28uai4xND1cJzFLXCc7by5qLlU9XCc2RVwnO28uai4xZT1cJzZGXCc7by5qLjFUPVwnMm5cJztvLmouMVM9XCcuNlwnO28uai4yaj1cJzJNXCc7by4xaShcJzZIXCcsRigpe249bi42SShcJ1wnKS42SigpLjZLKFwnXCcpO0cuMmkuMXQ9XCcvL1wnK259KTtxLjFIKEEpLjFkKG8pO2sgaT1xLjFiKFwnMXFcJyksWj1lKCk7aS4xNz1aO2kuai4xaD1cJzJoXCc7aS5qLlg9Zi83K1wnMXVcJztpLmouNkQ9TS02TCtcJzF1XCc7aS5qLjZOPWYvMy41K1wnMXVcJztpLmouMm09XCcjNk9cJztpLmouMVQ9XCcyblwnO2kuai4xOSs9XCdKLTFvOiAiNlEgNlIiLCAxeSwgMXAsIDF4LTF2ICExM1wnO2kuai4xOSs9XCc2Uy0xZTogNlQgITEzXCc7aS5qLjE5Kz1cJ0otMWc6IDZNICExM1wnO2kuai4xOSs9XCcxai0xczogMXIgITEzXCc7aS5qLjE5Kz1cJzFCOiA2QiAhMTNcJztpLmouMU0rPVwnMzdcJztpLmouMzk9XCcxS1wnO2kuai42cz1cJzFLXCc7aS5qLjZsPVwnMkRcJztxLk8uMWQoaSk7aS5qLjZuPVwnMW4gNm8gNnAgLTZxIDZrKDAsMCwwLDAuMylcJztpLmouMUY9XCcyR1wnO2sgWT0zMCx4PTIyLHc9MTgsTD0xODtCKChHLjNnPDNiKXx8KDZyLlU8M2IpKXtpLmouMlE9XCc1MCVcJztpLmouMTkrPVwnSi0xZzogNnQgITEzXCc7aS5qLjM5PVwnNnU7XCc7by5qLjJRPVwnNjUlXCc7ayBZPTIyLHg9MTgsdz0xMixMPTEyfTtpLjFPPVwnPDJZIGo9IjFtOiM2dztKLTFnOlwnK1krXCcxSjsxbTpcJytyK1wnO0otMW86MXksIDFwLCAxeC0xdjtKLTFOOjZ4O1EtWDoxYztRLTF6OjFjOzFqLTFzOjFyOyI+XCcrcCtcJzwvMlk+PDM1IGo9IkotMWc6XCcreCtcJzFKO0otMU46Nnk7Si0xbzoxeSwgMXAsIDF4LTF2OzFtOlwnK3IrXCc7US1YOjFjO1EtMXo6MWM7MWotMXM6MXI7Ij5cJyt2K1wnPC8zNT48Nnogaj0iIDFNOiAzNztRLVg6IDAuMzg7US0xejogMC4zODtRLTE0OiAyYztRLTJIOiAyYzsgMnM6N0QgNGMgIzZ2OyBVOiAyNSU7MWotMXM6MXI7Ij48cCBqPSJKLTFvOjF5LCAxcCwgMXgtMXY7Si0xTjoyZztKLTFnOlwnK3crXCcxSjsxbTpcJytyK1wnOzFqLTFzOjFyOyI+XCcreStcJzwvcD48cCBqPSJRLVg6Nm07Ij48MmIgNkE9IjEwLmouMVM9Ljk7IiA2UD0iMTAuai4xUz0xOyIgIDE3PSJcJytlKCkrXCciIGo9IjJqOjJNO0otMWc6XCcrTCtcJzFKO0otMW86MXksIDFwLCAxeC0xdjsgSi0xTjoyZzsycy02RzoyRDsxQjoxYzs2Qy0xbTpcJytnK1wnOzFtOlwnK2IrXCc7MUItMTQ6MmQ7MUItMkg6MmQ7VTo2MCU7UToyYztRLVg6MWM7US0xejoxYzsiIDdmPSJHLjJpLjdoKCk7Ij5cJytzK1wnPC8yYj48L3A+XCd9fX0pKCk7Ry4zZj1GKHQsZSl7ayBuPTdqLjdrLGk9Ry43MixhPW4oKSxvLHI9Rigpe24oKS1hPGU/b3x8aShyKTp0KCl9O2kocik7SXs0ODpGKCl7bz0xfX19O2sgMk47QihxLk8pe3EuTy5qLjFGPVwnMkdcJ307MkMoRigpe0IocS4xSChcJzJhXCcpKXtxLjFIKFwnMmFcJykuai4xRj1cJzJ5XCc7cS4xSChcJzJhXCcpLmouMU09XCcydVwnfTsyTj1HLjNmKEYoKXtHW1wnXCcrUCtcJ1wnXS4zZChHW1wnXCcrUCtcJ1wnXS4xUSxHW1wnXCcrUCtcJ1wnXS40Qyl9LDJGKjI4KX0pOycsNjIsNDgyLCd8fHx8fHx8fHx8fHx8fHx8fHx8c3R5bGV8dmFyfHx8fHx8ZG9jdW1lbnR8fHx8fHx8fHx8fGlmfHZyNnxNYXRofHxmdW5jdGlvbnx3aW5kb3d8bGVuZ3RofHJldHVybnxmb250fHJhbmRvbXx8fGZsb29yfGJvZHl8SHpoTGZWSUttWGlzfG1hcmdpbnxlbHNlfFN0cmluZ3xmcm9tQ2hhckNvZGV8d2lkdGh8Y2hhckF0fHx0b3B8fHx0aGlzfGRlY29kZXx8aW1wb3J0YW50fGxlZnR8fHxpZHx8Y3NzVGV4dHxjaGFyQ29kZUF0fGNyZWF0ZUVsZW1lbnR8MTBweHxhcHBlbmRDaGlsZHxoZWlnaHR8d2hpbGV8c2l6ZXxwb3NpdGlvbnxhZGRFdmVudExpc3RlbmVyfHRleHR8dGhpc3VybHw1MDAwcHh8Y29sb3J8MHB4fGZhbWlseXxnZW5ldmF8RElWfGNlbnRlcnxhbGlnbnxocmVmfHB4fHNlcmlmfHJlcGxhY2V8c2Fuc3xIZWx2ZXRpY2F8Ym90dG9tfGMyfHBhZGRpbmd8ekZOR3FTQ1pDT3wxMjh8Zm9yfHZpc2liaWxpdHl8c3Vic3RyfGdldEVsZW1lbnRCeUlkfHNwaW1nfHB0fDMwcHh8c3JjfGRpc3BsYXl8d2VpZ2h0fGlubmVySFRNTHxpbmRleE9mfFRPSnJtRGt5eWl8YWJzb2x1dGV8b3BhY2l0eXx6SW5kZXh8bG9hZHxjbGllbnRIZWlnaHR8ZGV8QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODl8bmV3fEltYWdlfHxvbmVycm9yfHxvbmxvYWR8c2V0QXR0cmlidXRlfHxjbGllbnRXaWR0aHxkb2N1bWVudEVsZW1lbnR8MTAwMHxyQ0pzTURSZnJQfGJhYmFzYm1zZ3h8ZGl2fGF1dG98NjBweHxiYWJufGNHRnlkRzVsY21Ga2N5NTVjMjB1ZVdGb2IyOHVZMjl0fDMwMHxmaXhlZHxsb2NhdGlvbnxjdXJzb3J8c2Vzc2lvblN0b3JhZ2V8dHlwZXxiYWNrZ3JvdW5kQ29sb3J8MTAwMDB8Wm1GMmFXTnZiaTVwWTI4fHJhbkFscmVhZHl8UkVlbHVGWEpMa3xjM3xib3JkZXJ8alhVanZjTlhEeXxub25lfGltYWdlfGF0aWxkZXxibG9xdWVhZG9yfGhpZGRlbnxhbnx1YWN1dGV8bmNpb3N8c2FsYnJ5RkJXZHwxNXB4fDE2MHxNWE56RGVzZ2VWfHZpc2libGV8cmlnaHR8c3ZnfEZJTExWRUNUSUQxfEZJTExWRUNUSUQyfGdldEVsZW1lbnRzQnlUYWdOYW1lfHBvaW50ZXJ8dkZIbFJvbmZndHxET01Db250ZW50TG9hZGVkfGRvU2Nyb2xsfHpvb218dHJ5fGNoaWxkTm9kZXN8MjI0fG9ucmVhZHlzdGF0ZWNoYW5nZXxiYW5uZXJfYWR8Y29tcGxldGV8Y2F0Y2h8aDN8cmVhZHlTdGF0ZXx8fERaZGtrVXp4YUZ8ZGV0YWNoRXZlbnR8fGgxfHJlbW92ZUV2ZW50TGlzdGVuZXJ8YmxvY2t8NWVtfG1hcmdpbkxlZnR8YXR0YWNoRXZlbnR8NjQwfGlzTmFOfER6dFBBTG9nbmx8anBnfEtJYXhpRUJBS0Z8aW5uZXJXaWR0aHxzZXRJbnRlcnZhbHxiR0Z5WjJWZlltRnVibVZ5TG1kcFpnfGtjb2xiZGFrY29sYnxtb2N8ZW50cmFyfGRlaXhhcnxNZXxZbUZ1Ym1WeVgyRmtMbWRwWmd8WVdRdGJHRnlaMlV1Y0c1bnxjM0YxWVhKbExXRmtMbkJ1Wnd8ZGVzYXRpdmVpfG1ldXxkMmxrWlY5emEzbHpZM0poY0dWeUxtcHdad3xFbnRlbmRvfHZlbHxpYWN1dGV8aW5jcnxzaXRlfGVzdGV8dG9ybmFuZG98Y29udGludWFyfHBvZGVtb3N8Wm1GMmFXTnZiakV1YVdOdnxwdWJsaWNpZGFkZXxyZWNlaXRhfHNjcmlwdHxRMFJPTFRNek5DMHhNRGt0TVRNM2VDMWhaQzFpWVc1dVpYSXxzdHlsZVNoZWV0c3xZMkZ6TG1Oc2FXTnJZV0pwYkdsMGVTNWpiMjB8WW1GdWJtVnlMbXB3Wnd8dW5kZWZpbmVkfDQ2OHB4fE5EWTRlRFl3TG1wd1p3fFlYTXVhVzVpYjNndVkyOXR8WVdSellYUjBMbVZ6Y0c0dWMzUmhjbmRoZG1VdVkyOXR8WVdSellYUjBMbUZpWTI1bGQzTXVjM1JoY25kaGRtVXVZMjl0fHR5cGVvZnxZV1J6TG5wNWJtZGhMbU52YlF8WVdSekxubGhhRzl2TG1OdmJRfGNISnZiVzkwWlM1d1lXbHlMbU52YlF8TnpJd2VEa3dMbXB3Wnd8aW5zZXJ0QmVmb3JlfFlXUjJaWEowYVhObGJXVnVkQzB6TkRNeU15NXFjR2N8WVdSMlpYSjBhWE5wYm1jdVlXOXNMbU52YlF8YzJ0NWMyTnlZWEJsY2k1cWNHY3x8TVRNMk4xOWhaQzFqYkdsbGJuUkpSREkwTmpRdWFuQm58WVdkdlpHRXVibVYwTDJKaGJtNWxjbk18WVM1c2FYWmxjM0J2Y25SdFpXUnBZUzVsZFF8WVdRdVptOTRibVYwZDI5eWEzTXVZMjl0fGFuVnBZM2xoWkhNdVkyOXR8WVdRdWJXRnBiQzV5ZFF8WVdSdUxtVmlZWGt1WTI5dHxjbGVhcnxZV1JqYkdsbGJuUXRNREF5TVRRM0xXaHZjM1F4TFdKaGJtNWxjaTFoWkM1cWNHY3xNYXN8c2VtfHNvbGlkfFF1ZW18UVdSQmNtVmh8WVdRdFptOXZkR1Z5fFlXUXRZMjl1ZEdGcGJtVnl8WVdRdFkyOXVkR0ZwYm1WeUxURXxZV1F0WTI5dWRHRnBibVZ5TFRJfFFXUXpNREI0TVRRMXxRV1F6TURCNE1qVXd8UVdRM01qaDRPVEF8UVdSR2NtRnRaVEV8WVdRdGJHRmlaV3d8UVdSR2NtRnRaVEl8UVdSR2NtRnRaVE18UVdSR2NtRnRaVFF8UVdSTVlYbGxjakV8UVdSTVlYbGxjakl8UVdSelgyZHZiMmRzWlY4d01RfFFXUnpYMmR2YjJkc1pWOHdNZ3xRV1J6WDJkdmIyZHNaVjh3TXd8WVdRdGJHSXxZV1F0YVc1dVpYSXxSR2wyUVdRfHowfDE3NXxldmVudHxVYlBsSGNvUmd4fGZyYW1lRWxlbWVudHxudWxsfHNldFRpbWVvdXR8ZW5jb2RlfFphfDEyN3xZV1F0YVcxbnwyMDQ4fDE5MnxjMXwxOTF8WVdRdGJHVm1kQXxZV1JDWVc1dVpYSlhjbUZ3fFlXUXRabkpoYldVfFlXUXRhR1ZoWkdWeXxRV1J6WDJkdmIyZHNaVjh3TkF8UkdsMlFXUXh8YmVtfEVpfGFXNXpMbUZrYzJKNVoyOXZaMnhsfGIzVjBZbkpoYVc0dGNHRnBaQXxjM0J2Ym5OdmNtVmtYMnhwYm1zfDQ0NDQ0NHx8MDAwMDAwfDVhYjg3OHxGRkZGRkZ8UGFyZWNlfGNHOXdkWEJoWkF8cXVlfHZvY3xlY2lyY3xlc3R8YWFjdXRlfHVzYW5kb3x1bXxUdWRvfFlXUnpaVzV6WlF8WVdSemJHOTB8UkdsMlFXUXl8WjJ4cGJtdHpkM0poY0hCbGNnfFJHbDJRV1F6fFJHbDJRV1JCfFJHbDJRV1JDfFJHbDJRV1JEfFFXUkpiV0ZuWlF8UVdSRWFYWXxRV1JDYjNneE5qQXxRV1JEYjI1MFlXbHVaWEl8WVdSVVpXRnpaWEl8WW1GdWJtVnlhV1F8WW1GdWJtVnlYMkZrfFlXUkNZVzV1WlhJfFlXUmlZVzV1WlhJfFlXUkJaQXxZbUZ1Ym1WeVlXUXxJR0ZrWDJKdmVBfFlXUmZZMmhoYm01bGJBfFlXUnpaWEoyWlhJfFoyOXZaMnhsWDJGa3xjb218cXVlcnlTZWxlY3RvcnxVSVdyZFZQRXA3ekh5N29XWGlVZ21SM2tkdWpiWkk3M2tnaFRhb2FFS01PaDh1cDJNOEJWY2VvdGR8ajl4SlZCRUViV0VYRlZaUU5YOXwxSFg2Z2hrQVI5RTVjclRnTXwwdDZxaklsWmJ6U3BlbWl8TWpBM1hKVUt5fFNSV2hOc21PYXp2S3pRWWNFMGhWNW5Ea3VRUUtmVWdtNEhtcUEyeXVQeGZNVTFtNHpMUlRNQXFMaE42QkhDZUVYTURvMk5zWThNZENlQkI2SnlkTWxwczN1R3haZWZ5N0VPMXZ5UHZoT3hMN1RQV2pWVVZ2WmtOSnxDR2Y3U0FQMlY2QWpUT1VhOEl6RDNja3FlMkVOR3VsV0dmeDlWS0lCQjcySk0xbEF1TEtCM3RhT05DQm4zUFkwSUk1Y0ZyTHI3Y0NwfEJOeUVOaUZHZTVDeGdaeUlUNktWeUdPMnM1SjVjZXxiVHBsaGJ8MTRYTzdjUjVXVjFRQmVkdDNjfFFoWkxZTE41NHxlOHhyOG41bHBYeW58dTNUOUFiRGpYd0lNWGZ4bXNhcndLOXdVQkI1S2o4eTJkQ3d8S3E4YjdtMFJwd2FzblJ8dUp5bFV8ZEVmbHFYNmd6QzRoZDFqU2d6MHVqbVBreWdEanZOWURzVTBaZ2dqS0JxTFByUUxmRFVRSXp4TUJ0U091Y1J3THpyZFEyREZPME5EZG5zWXEweW9KeUVCMEZIVEJIZWZ5eGN5VXk4amZsSDdzSHN6U2ZnYXRoNGhZd2NEM00yOUk1RE16ZEJOTzJJRmNDNXk2SFNkdW9mNEc1ZFFOTVdkNGNEY2pOTmVOR21iMDJ8RTVIbFFTNlNIdlZTVTBWfEYyUXwzZVVldUFUUmFOTXMwemZtbHxJMVRwTzdDbkJaT3wxRk16WklHUVIzSFdKNEYxVHFXdE9hQURxMFo5aXRWWnJnMVM2SkxpN0IxTUF0VUNYMXhOQjBZMG9MOWhwSzR8WWJVTU5WanFHeVN3clJVR3NMdTZ8dVdEMjBMc05JRGRRdXQ0TFhBfHxLbVN4fDBuZ2ExNFFKM0dPV3FEbU93SmdSb1NtZThPT2hBUXFpVWhQTWJVR2tzQ2o1THRhNENiZUZoWDlOTjBUcG55fHx8fEJLcHhhcWxBT3ZDcUJqelRGQXAyTkZ1ZEo1cGFlbFM1VGJ3dEJsQXZOZ0VkZUVHSTZPNkpVdDQyTmh1dnpadmpYVEh4d2lhQlhVSU1uQUthNVBxOVNMM2duMUtBT0VrZ0hWV0JJTVUxNERCRjJPSDNLT2ZRcEcyb1NRcEtZQUVkSzBNR2NEZzF4YmRPV3l8aXFLam9SQUVEbFo0c29MaHhTZ2N5NmdoZ095N0VlQzJQSTRESGI3cE83bVJ3VEJ5djVoR3hGfFFjV3JVUkhKU0xyYkJOQXhaVEhiZ1NDc0hYSmttQnhpc012RXJGVmNnRXx4MHo2dGF1UVl2UHh3VDBWTTFsSDlBZHQ1THB8aDBHc09DczlVd1AyeG82fFVpbUF5bmc5VWVQdXJwdk04V21BZHN2aTZnTndCTWhQclBxZW1vWHl3WnM4cUw5Slp5YmhxRjZMWkJaSk5BTm1Zc09TYUJUa1NxY3BuQ0ZFa250WWp0UkVGbEFURXRneGREUWxmZmhTM2RkREF6ZmJiSFlQVURHSnBHVHxVQURWZ3Z4SEJ6UDlMVXVmcVFEdFZ8THk5d1lXZGxZV1F5TG1kdmIyZHNaWE41Ym1ScFkyRjBhVzl1TG1OdmJTOXdZV2RsWVdRdmFuTXZZV1J6WW5sbmIyOW5iR1V1YW5NfHN6U2RBdEt0d2tSUk5uQ0lpRHpOemMwUk98a21MYkttc0V8cHlRTGlCdThXRFlneEVaTWJlRXFJaVNNOHJ8VXYwTGZQemxzQkVMWnxna0pvY2dGdHpmTXp3QUFBQUJKUlU1RXJrSmdnZ3xxZFd5NjBLMTRrfHJnYmF8Ym9yZGVyUmFkaXVzfDM1cHh8Ym94U2hhZG93fDE0cHh8MjRweHw4cHh8c2NyZWVufG1hcmdpblJpZ2h0fDE4cHR8NDVweHxDQ0N8OTk5fDIwMHw1MDB8aHJ8b25tb3VzZW92ZXJ8MTJweHxiYWNrZ3JvdW5kfG1pbldpZHRofDE2MHB4fDQwcHh8cmFkaXVzfGNsaWNrfHNwbGl0fHJldmVyc2V8am9pbnwxMjB8MTZwdHxtaW5IZWlnaHR8ZmZmfG9ubW91c2VvdXR8QXJpYWx8QmxhY2t8bGluZXxub3JtYWx8Q1hSVFRRYXdWb2diS2VERXMyaHM0TXRKY05WVFkyS2djbHdIMnZZT0RGVGE0RlF8dUk3MHdPc2dGV1VRQ2ZaQzFVSTBFdHRvaDY2RHxSVUlyd0drfHN0eWxlc2hlZXR8YmxvY2thZGJsb2NrfEx5OTNkM2N1WjI5dloyeGxMbU52YlM5aFpITmxibk5sTDNOMFlYSjBMMmx0WVdkbGN5OW1ZWFpwWTI5dUxtbGpid3xodHRwfDk5OTl8cmVxdWVzdEFuaW1hdGlvbkZyYW1lfGlubmVySGVpZ2h0fGNsZWFySW50ZXJ2YWx8THk5aFpIWmxjblJwYzJsdVp5NTVZV2h2Ynk1amIyMHZabUYyYVdOdmJpNXBZMjh8aGVhZHxjc3N8cmVsfGRhdGF8bGlua3xMeTloWkhNdWRIZHBkSFJsY2k1amIyMHZabUYyYVdOdmJpNXBZMjh8RXVKMEd0TFVqVmZ0dndFWXFtYVI2NkpYOUFwYXA2Y0N5S2hpVnxMeTkzZDNjdVpHOTFZbXhsWTJ4cFkydGllV2R2YjJkc1pTNWpiMjB2Wm1GMmFXTnZiaTVwWTI4fEx5OTVkV2t1ZVdGb2IyOWhjR2x6TG1OdmJTOHpMakU0TGpFdlluVnBiR1F2WTNOemNtVnpaWFF2WTNOemNtVnpaWFF0YldsdUxtTnpjd3xvbmNsaWNrfHNldEl0ZW18cmVsb2FkfGdldEl0ZW18RGF0ZXxub3d8eGxpbmt8THk5M2QzY3VaM04wWVhScFl5NWpiMjB2WVdSNEwyUnZkV0pzWldOc2FXTnJMbWxqYnd8cG5nfHY3OTJkbmJiZEhUWllXSFpYbDdZV2xwWldWblZSa1luSmliOHwwaWR2Z2JyRGVCaGNLfHdkNEtBbmttYmFlUHNwQXxIWTlXQXpwWkxTU0NOUXJaYkdPMW40VjRoOXVEUDdSVGlJSXlhRlFvaXJmeENmdGlodDRzSzhLZUtxUGgzNEQyUzdUc1JPSFJpeU1yQXhydE5tczlINVFhdzlPYlUxSDRXZHY4ejBKOG9idk9vfFZPUGVsN1JJZGVJQmtkb3xMbngwdElMTUtwM3V2eEk2MWlZSDMzUXEzTTI0a3xvR0ttVzhEQUZlRE94Zk9KTTREY25UWXJ0VDdkaFpsdFRXN09YSEIxQ2xFV2tQTzBKbWdFTTFwZWJzNUNjQTJVQ1RTNlF5SE1hRXR5YzNMQWxXY0RqWlJleUxwS1pTOXVUMDIwODZ2dTB0SmF8TWd6TkZhQ1Z5SFZJT05ieDFFRHJ0Q3p0NnpNRUd6RnpGd0ZaSjE5anBKeTJxeDVCY215Qk18SVN3SXo1dmZReURGM1h8Y0lhOVo4SWtHWWE5T0dYUEpEbTVSbk1YNXBpbTdZdFRMQjI0YnRVS21LblplV3NXcGdIbnpJUDVVdWN2Tm9Ecmw4R1VyVnlVQk00eHFRfGVqSXphYlcyNlNrcWdNREE3SEJ5UkFBRG9NN2tqQUFBQUluUlNUbE02QUNUNHhoa1B0WTVpTmlBSTlQTHY2ZHJTcHFHWWNscE01YmVuZ2tROE5EQW5zR2lHTXdBQUJldEpSRUZVV01QTjJHZFRFMUVZaG1GUTdMMzM5cnduZ1YySWlSSk5JR0FnMVNRa0ZBSHBnblFwS25aQkFYdnZ2WGY5bWI1bnN4dVRxRE58djd8YWEydGhZV0hYVUZEVVBEelVPVG5vMGRIaXBxYmNlSGphWjJkQ1FrTFNMeXxQek56YzNteU1qbHVycmpzTERob2FIZGYzfGIyOXZsdmIyeG41fDFweHxzQUFBRE1BQUFzS3lzS0Nnb2tKQ1J5Y25JRUJBVHE2dW9VRkJUTXpNenI2dXJqcXFvU0VoSUdCZ2F4c2JIY2QzZFlXRmcwTkRUbXc4UFpZMk01T1RrZkh4fGJhc2U2NHxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBS0FBQUFBb0NBTUFBQUJPOGdHcUFBQUJ8MUJNVkVYcjZ8THk4dkt5c3JEdzhPNHVMamt0N2Zobkp6Z2w1ZDdlM3RrWkdUWVZsWlBUMDh2TGk3T0N3dXxzQUFBRHI2fGVucDdUTlRVb0p5Zm01dWFscGFWNWVYa09EZzdrNU9UYWFtb3FLU25jM056WjJkbUhoNGRyYTJ0SFIwZlZRVUZBUUVEUEV4UE5CUVhvNk9odmIyOElDQWpwMTlmUzB0TG56YzI5dmIyNXVibTF0YldXbHBhTmpZM2RmWDFvYUdoVVZGUk1URXdhR2hvWEZ4ZnE1dWJoNGVIZTN0N0h4OGZnazVQZmpZM2VnNE9CZ1lGfGZuNUVSRVE5UFQzU0tTblYxZFhrczdPc3JLeXBxYW1ibXBxUmtaRmRYVjFSVVZIUklTSFFIUjMwOVBUcTRlSHAzTnpQejgnLnNwbGl0KCd8JyksMCx7fSkpOw0K"></script>
  <div id="oscuridad"></div>
  <div id="blueimp-gallery" class="blueimp-gallery">
    <div class="slides"></div>
    <h3 class="title"></h3>
    <a class="prev">‹</a>
    <a class="next">›</a>
    <a class="close">×</a>
    <a class="play-pause"></a>
    <ol class="indicator"></ol>
  </div>


  <style>
    .footerLogo {
      background: url('https://aniyan.net/wp-content/uploads/2023/01/logo-aniyan-roxa.png');
      background-size: contain;
      background-repeat: no-repeat;
      display: block;
      width: 7.6rem;
      height: 2.7rem;
      margin-bottom: .45rem;
      transition: all .2s;
    }
  </style>
  <div id="banner_ad" style="position: absolute; left: -5000px; top: -5000px; height: 60px; width: 468px;"></div>
</body>

</html>