<!DOCTYPE html><html style="--readerBg: #272b30; --sidebarCol: #3a3f44; --accentCol: #b2dffb; --textCol: #eeeeee; --icoCol: #eeeeee; --sidebarColDark: #2b3035; --sidebarColDarkA: #2b303500; --prevCol: #33383d; --accentSelected: #111111; --accentSelectedInvert: #444444; --borderColor: rgba(0,0,0,0.7); --blackLight: rgba(0,0,0,0.2); --sidebarColFocus: #1f2429; --rescueShade: unset; --rdrBorderL: 1px; --rdr-wb: 2px; --blackFlag: rgba(0,0,0,0.7); --rdrAncBottomWhite: rgba(255,255,255,0.35);"><head>
  <meta charset="UTF-8">
  <meta name="theme-color" content="#2b2f33">
  <title>Heterogenia Linguistico: An Introduction to Interspecies Linguistics - Chapter 10 - Page 1 | Danke.moe</title>
  <meta name="twitter:title" content="Heterogenia Linguistico: An Introduction to Interspecies Linguistics | Chapter 10 | Danke fürs Lesen">
  <meta property="og:title" content="Heterogenia Linguistico: An Introduction to Interspecies Linguistics | Chapter 10 | Danke fürs Lesen">
  <meta name="description" content="Read chapter 10 of the Heterogenia Linguistico: An Introduction to Interspecies Linguistics manga | Danke fürs Lesen">
  
  <meta name="twitter:card" content="summary_large_image">
  <meta property="og:description" content="Read chapter 10 of Heterogenia Linguistico: An Introduction to Interspecies Linguistics | Danke fürs Lesen">
  <meta name="twitter:description" content="Read chapter 10 of Heterogenia Linguistico: An Introduction to Interspecies Linguistics | Danke fürs Lesen">
  <meta property="og:image" content="http://danke.moe/media/manga/heterogenia-linguistico/chapters/0010_tble5xm2/68/01.png">
  <meta name="twitter:image" content="http://danke.moe/media/manga/heterogenia-linguistico/chapters/0010_tble5xm2/68/01.png">
  <meta name="author" content="Seno Salt">
  
  <meta property="og:site_name" content="Danke fürs Lesen">
  <meta property="og:url" content="http://danke.moe/read/manga/heterogenia-linguistico/10/1/">
  <meta name="viewport" content="width=device-width">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@simonwep/pickr/dist/themes/nano.min.css">
  <link rel="canonical" href="http://danke.moe/read/manga/heterogenia-linguistico/10/1/">
  <link rel="stylesheet" type="text/css" href="/static/css/main.css?v=39a531f
">
  <link rel="shortcut icon" type="image/png" href="/static/favicon_16x16.png" sizes="16x16">
  <link rel="shortcut icon" type="image/png" href="/static/favicon_32x32.png" sizes="32x32">
  <link rel="shortcut icon" type="image/png" href="/static/favicon_96x96.png" sizes="96x96">
  <link rel="apple-touch-icon" sizes="128x128" href="/static/safari-touch-128x128.png?v=39a531f
">
  <link rel="apple-touch-icon" sizes="256x256" href="/static/safari-touch-256x256.png?v=39a531f
">
  <link rel="apple-touch-icon" sizes="512x512" href="/static/safari-touch-512x512.png?v=39a531f
">
  <link rel="preload" href="/static/fonts/guya.woff" as="font" crossorigin="anonymous">
  
<meta name="referrer" content="same-origin">
<script src="/static/js/remotestorage.min.js"></script>
<script src="/static/js/widget.min.js"></script>
<script>
  // remoteStorage backend that'll be our plugged in module
  // This should be abstracted from what actually handles updates,
  // since this'll give us the ability to pull this out in the future
  const RS_PATH = "guya";

  const remoteStorage = (() => {
    // Define the schema for our history
    const Model = {name: RS_PATH, builder: (private) => {
      const SERIES_META = "series";
      const REPLACEMENT_STR = "{SOURCE_SLUG_REPLACEMENT}";
      const SERIES_META_PATH_BASE = "series/";
      const SERIES_META_PATH = `${SERIES_META_PATH_BASE}${REPLACEMENT_STR}`;

      private.declareType(SERIES_META, {
        type: "object",
        properties: {
          slug: {
            type: "string"
          },
          coverUrl: {
            type: "string"
          },
          source: {
            type: "string"
          },
          url: {
            type: "string"
          },
          title: {
            type: "string"
          },
          timestamp: {
            type: "number"
          },
          chapters: {
            type: "array",
            default: [] // Note that these aren't validated by our schema handler
          },
          pinned: {
            type: "boolean",
            default: false // Thus it's documenting only; handle it
          }
        },
        required: ["slug", "source", "url", "title", "timestamp", "chapters", "pinned"]
      });

      let firstPartyValidator = (source) => {
        return (source === "manga" || source === "series" || source === "default");
      };

      let pathBuilder = (path, slug, source) => {
        if (!source) source = "default";
        if (firstPartyValidator(source)) source = "default";
        source = source.replace(" ", "_");
        return path.replace(REPLACEMENT_STR, `${source}-${slug}`);
      };

      let seriesBuilder = (slug, coverUrl, source, url, title, pinned, chapters) => {
        source = source.replace(" ", "_");
        if (firstPartyValidator(source)) {
          source = "default";
          pinned = true; // First party chapters always pinned
        }
        return {
          slug: slug,
          coverUrl: coverUrl || "",
          source: source,
          url: url,
          title: title,
          timestamp: Date.now(),
          chapters: chapters || [],
          pinned: (pinned === undefined) ? false : pinned
        };
      };

      return {
        exports: {
          firstPartyHandler: (source) => {
            return firstPartyValidator(source) ? "default" : source;
          },
          slugBuilder: (slug, source) => {
            return `${source}-${slug}`;
          },
          addSeries: (slug, coverUrl, source, url, title, pinned, chapters) => {
            let toStore = seriesBuilder(slug, coverUrl, source, url, title, pinned, chapters);
            return private.storeObject(
              SERIES_META,
              pathBuilder(SERIES_META_PATH, slug, source),
              toStore);
          },
          editSeries: async (slug, coverUrl, source, url, title, pinned, chapters) => {
            let obj = await private.getObject(pathBuilder(SERIES_META_PATH, slug, source));
            if (obj) {
              let toStore = seriesBuilder(
                slug || obj.slug,
                coverUrl || obj.coverUrl,
                source || obj.source,
                url || obj.url,
                title || obj.title,
                (pinned !== undefined) ? pinned : obj.pinned,
                chapters || obj.chapters // Empty array is truthy
              );
              return private.storeObject(
                SERIES_META,
                pathBuilder(SERIES_META_PATH, slug, source),
                toStore
              )
            } else {
              // Fail-fast instead of adding the series
              throw new Error("Cannot edit a non-existent series.");
            }
          },
          getSeries: (slug, source) => {
            return private.getObject(pathBuilder(SERIES_META_PATH, slug, source));
          },
          removeSeries: (slug, source) => {
            return private.remove(pathBuilder(SERIES_META_PATH, slug, source));
          },
          getAllSeries: () => {
            // Note for the future: getAll gives you the objects within, while
            // getListing gives you just a list of files; thus, this gives you the
            // metadata within
            if (private.storage.connected) {
              // maxAge cache in millis
              return private.getAll(SERIES_META_PATH_BASE, 30000);
            } else {
              // Promise resolves immediately if no storage is connected
              // https://remotestoragejs.readthedocs.io/en/v1.2.3/js-api/base-client.html#caching-logic-for-read-operations
              return private.getAll(SERIES_META_PATH_BASE);
            }
          }
        }
      }
    }};

    let remoteStorage = new RemoteStorage({cache: true, modules: [Model]});

    remoteStorage.access.claim(RS_PATH, "rw");
    remoteStorage.caching.enable(`/${RS_PATH}/`);

    return remoteStorage;
  })();

  // This will be the main handler that deals with both
  // chapter and series history. All logic should be here
  // and abstracted from the rest of the code
  const globalHistoryHandler = (() => {
    const STORAGE_KEY = "proxyHistory";
    const SORT_KEY = "timestamp";
    const MAX_VALUES = 20;

    // Helper to return an array of objects from a nested object, sorted by key
    let sortObjectByKey = (obj, key) => {
      let sortable = [];
      for (let k in obj) {
        sortable.push(obj[k]);
      }
      sortable.sort((f, s) => s[key] - f[key]);
      return sortable;
    };

    const sync = async () => {
      // Sync operation ensures the local cache doesn't have any dangling objects.
      // We'll sort for the timestamp key since that's what we use everywhere else
      let allSeries = await remoteStorage[RS_PATH].getAllSeries();
      for (const [key, value] of Object.entries(allSeries)) {
        try {
          if (!value[SORT_KEY]) {
            // We don't use split here since the slug can potentially include "-"
            let separatorIndex = key.indexOf("-");
            let slug = key.slice(separatorIndex + 1);
            let source = key.slice(0, separatorIndex);
            await remoteStorage[RS_PATH].removeSeries(slug, source);
          }
        } catch (e) {
          console.error("[Global History] Sync error, continuing.");
        }
      }
    };

    const enabled = () => {
      return localStorage.getItem(STORAGE_KEY) ? true : false;
    };

    const enable = () => {
      let settings = localStorage.getItem("settings");
      localStorage.clear();
      if (settings) {
        localStorage.setItem("settings", settings);
      }
      localStorage.setItem(STORAGE_KEY, true);
    };

    const disable = () => {
      let settings = localStorage.getItem("settings");
      localStorage.clear();
      if (settings) {
        localStorage.setItem("settings", settings);
      }
    };

    const pushSeries = async (slug, coverUrl, source, url, title) => {
      await sync();
      source = remoteStorage[RS_PATH].firstPartyHandler(source);
      let allCurrentSeries = sortObjectByKey(await remoteStorage[RS_PATH].getAllSeries() || {}, SORT_KEY);
      let existingSeries = allCurrentSeries.find((e) => e.slug === slug && e.source === source.replace(" ", "_"));

      allCurrentSeries = allCurrentSeries.filter(e => !e.pinned);

      // Be mindful of the cap regardless of the state of the tree
      while ((allCurrentSeries.length + ((existingSeries) ? 0 : 1)) > MAX_VALUES) {
        let last = allCurrentSeries.pop();
        await remoteStorage[RS_PATH].removeSeries(last.slug, last.source);
      }

      if (existingSeries) {
        // Effectively this updates the timestamp of the series, pushing it to the top
        return remoteStorage[RS_PATH].editSeries(slug, coverUrl, source, url, title, existingSeries.pinned, existingSeries.chapters);
      } else {
        return remoteStorage[RS_PATH].addSeries(slug, coverUrl, source, url, title, undefined, undefined);
      }
    };

    const removeSeries = async (slug, source) => {
      await sync();
      return remoteStorage[RS_PATH].removeSeries(slug, source);
    };

    const addChapters = async (slug, source, chapters) => {
      let existingSeries = await remoteStorage[RS_PATH].getSeries(slug, source);

      if (existingSeries) {
        chapters = [...new Set([...chapters, ...existingSeries.chapters])];
        return remoteStorage[RS_PATH].editSeries(slug, undefined, source, undefined, undefined, undefined, chapters);
      } else {
        console.error("[Global History] addChapters - Series didn't exist.");
      }
    };

    const addChapter = async (slug, source, chapter) => {
      return addChapters(slug, source, [chapter]);
    };

    const removeChapter = async (slug, source, chapter) => {
      let existingSeries = await remoteStorage[RS_PATH].getSeries(slug, source);

      if (existingSeries) {
        chapters = existingSeries.chapters.filter(e => e !== chapter);
        return remoteStorage[RS_PATH].editSeries(slug, undefined, source, undefined, undefined, undefined, chapters);
      } else {
        console.error("[Global History] removeChapter - Series didn't exist.");
      }
    };

    const removeAllChapters = async (slug, source) => {
      let existingSeries = await remoteStorage[RS_PATH].getSeries(slug, source);

      if (existingSeries) {
        return remoteStorage[RS_PATH].editSeries(slug, undefined, source, undefined, undefined, undefined, []);
      } else {
        console.error("[Global History] removeAllChapters - series didn't exist.");
      }
    };

    const getReadChapters = async (slug, source) => {
      let existingSeries = await remoteStorage[RS_PATH].getSeries(slug, source);

      if (existingSeries) {
        return existingSeries.chapters;
      } else {
        console.error("[Global History] getReadChapters - series didn't exist.");
      }
    };

    const pinSeries = async (slug, source) => {
      let existingSeries = await remoteStorage[RS_PATH].getSeries(slug, source);

      if (existingSeries) {
        return remoteStorage[RS_PATH].editSeries(slug, undefined, source, undefined, undefined, true, undefined);
      } else {
        console.error("[Global History] pinSeries - series didn't exist.");
      }
    };

    const unpinSeries = async (slug, source) => {
      let existingSeries = await remoteStorage[RS_PATH].getSeries(slug, source);

      if (existingSeries) {
        return remoteStorage[RS_PATH].editSeries(slug, undefined, source, undefined, undefined, false, undefined);
      } else {
        console.error("[Global History] unpinSeries - series didn't exist.");
      }
    };

    const getAllPinnedSeries = async () => {
      await sync();
      return sortObjectByKey(await remoteStorage[RS_PATH].getAllSeries() || {}, SORT_KEY).filter(e => e.pinned);
    };

    const getAllUnpinnedSeries = async () => {
      await sync();
      return sortObjectByKey(await remoteStorage[RS_PATH].getAllSeries() || {}, SORT_KEY).filter(e => !e.pinned);
    };

    return {
      max: MAX_VALUES,
      enabled,
      pushSeries,
      removeSeries,
      addChapters,
      addChapter,
      removeChapter,
      removeAllChapters,
      getReadChapters,
      pinSeries,
      unpinSeries,
      getAllPinnedSeries,
      getAllUnpinnedSeries,
      toggle: {
        enable,
        disable
      }
    };
  })();

  const tag = () => {
    try {
      
      let coverUrl = "";
      

      
      let source = window.location.pathname
        .split("/")
        .filter(e => e)[1]
        .replace("_", " ");
      

      
      let slug = "heterogenia-linguistico";
      

      
      let url = "/read/manga/heterogenia-linguistico/10/1".split(slug)[0] + slug;
      

      
      let title = "";
      

      if (source && slug && url && title) {
        remoteStorage.on("ready", async () => {
          await globalHistoryHandler.pushSeries(slug, coverUrl, source, url, title);
          window.dispatchEvent(new CustomEvent("history-ready"));
        });
      }
    } catch (e) {
      // Do nothing, silently fail.
    }
  };

  // Widget management should be on the templates but eh it's easier to put it in one place
  window.addEventListener("load", () => {
    if (globalHistoryHandler.enabled()) {
      if (document.getElementById("rs-widget")) {
        let widget = new Widget(remoteStorage, {autoCloseAfter: 10});
        widget.attach("rs-widget");
      }
    }
  });
</script>

<script>
  // Seed the values from the template for the reader API calls
  const BASE_API_PATH = "/api/series/";
  const IS_FIRST_PARTY = true;
  const IS_INDEXED = false;
  const IMAGE_PROXY_URL = "https://proxy.f-ck.me";
  const ENABLE_DOWNLOAD = true;
  const SHOW_PRIVATE_CHAPTERS = /[?&]showprivate=/.test(location.search);


  const IS_NSFW = false;

</script><style>.\[\&_\.gdprAdTransparencyCogWheelButton\]\:\!pjra-z-\[5\],
AD-SLOT,
DFP-AD,
[class^="adDisplay-module"],
[class^="amp-ad-"],
[data-ad-cls],
[data-adbridg-ad-class],
[data-adshim],
[data-asg-ins],
[data-block-type="ad"],
[data-cl-spot-id],
[data-css-class="dfp-inarticle"],
[data-d-ad-id],
[data-desktop-ad-id],
[data-dynamic-ads],
[data-ez-name],
[data-freestar-ad][id],
[data-id^="div-gpt-ad"],
[data-identity="adhesive-ad"],
[data-m-ad-id],
[data-mobile-ad-id],
[data-rc-widget],
[data-role="tile-ads-module"],
[data-template-type="nativead"],
[data-testid="adBanner-wrapper"],
[data-testid="ad_testID"],
[data-testid="prism-ad-wrapper"],
[data-testid^="section-AdRowBillboard"],
[data-type="ad-vertical"],
[data-wpas-zoneid],
[href$="/sexdating.php"],
[id^="ad-wrap-"],
[id^="ad_sky"],
[id^="ad_slider"],
[id^="section-ad-banner"],
[onclick^="location.href='https://1337x.vpnonly.site/"],
a-ad,
a[data-href^="http://ads.trafficjunky.net/"],
a[data-url^="https://vulpix.bet/?ref="],
a[onclick^="window.location.replace('https://random-affiliate.atimaze.com/"],
a[style="width:100%;height:100%;z-index:10000000000000000;position:absolute;top:0;left:0;"],
ad-shield-ads,
ad-slot,
app-ad,
app-advertisement,
app-large-ad,
aside[id^="adrotate_widgets-"],
atf-ad-slot,
bottomadblock,
display-ad-component,
display-ads,
div[class$="-adlabel"],
div[class^="Adstyled__AdWrapper-"],
div[data-ad-placeholder],
div[data-ad-region],
div[data-ad-wrapper],
div[data-adname],
div[data-adunit-path],
div[data-adunit],
div[data-adzone],
div[data-alias="300x250 Ad 1"],
div[data-alias="300x250 Ad 2"],
div[data-contentexchange-widget],
div[data-dfp-id],
div[data-id-advertdfpconf],
div[id^="ad-div-"],
div[id^="ad-position-"],
div[id^="adngin-"],
div[id^="adrotate_widgets-"],
div[id^="adspot-"],
div[id^="crt-"][style],
div[id^="div-ads-"],
div[id^="google_dfp_"],
div[id^="gpt_ad_"],
div[id^="lazyad-"],
div[id^="optidigital-adslot"],
div[id^="rc-widget-"],
div[id^="st"][style^="z-index: 999999999;"],
div[id^="sticky_ad_"],
div[id^="vuukle-ad-"],
div[ow-ad-unit-wrapper],
gpt-ad,
guj-ad,
hl-adsense,
img[src^="https://images.purevpnaffiliates.com"],
img[src^="https://s-img.adskeeper.com/"],
ps-connatix-module,
span[data-ez-ph-id],
span[id^="ezoic-pub-ad-placeholder-"],
topadblock,
zeus-ad,
broadstreet-zone-container,
iframe[scrolling="no"][sandbox*="allow-popups allow-modals"][style^="width: 100%; height: 100%; border: none;"],
[class^="tile-picker__CitrusBannerContainer-sc-"],
citrus-ad-wrapper,
div[id*="MarketGid"],
[onclick*="content.ad/"],
AMP-AD,
amp-ad,
amp-ad-custom,
amp-connatix-player,
amp-fx-flying-carpet,
a[data-oburl^="https://paid.outbrain.com/network/redir?"],
a[data-redirect^="https://paid.outbrain.com/network/redir?"],
a[onmousedown^="this.href='https://paid.outbrain.com/network/redir?"] + .ob_source,
[data-taboola-options],
[data-testid="commercial-label-taboola"],
[data-testid^="taboola-"],
amp-embed[type="taboola"],
div[id^="taboola-stream-"],
div[id^="zergnet-widget"],
html[lang] > body.ishome > div.adult + main.main,
html[lang] > body:not([class]):not([id]):not([style]) > div.background-container > div.container > div.captcha-box,
html[lang] > body.startnew > div#sections > section#section_uname,
html[lang] > body:not([style]) > div.captchaBody,
html[lang] > body#body > * > div.cv-xwrapper > div.cvc > div.cv-inner,
html[lang] > body#body > * > div.cvh.BlockClicksActivityBusy,
html#html[sti][vic][lang] > body#allbody,
html > body > div.container.m-p > #checkbox-window.checkbox-window,
html[lang] > body:not([class]):not([id]):not([style]) > div.container > div.recaptcha-box,
body > .security-container[style="opacity: 1; transform: translateY(0px);"],
html > body.hold-transition.theme-primary.bg-img[style^="background-image"][style*="wallpaperaccess.com"][style*="background-repeat"][style*="background-size"],
html > body > div.container > form#unsubscribe-form[onsubmit="submitUnsubscribeForm(event)"],
html > body > div.content > dl > dd.dd1 > div.min_sider > form#form1[action="unsubscribe.php"],
html > body.body > div.container > div.content > form > table.optoutForm,
div[id][style^="position: fixed; inset: 0px; z-index: 2147483647; background: black"][style*="opacity: 0.01"],
div[class$="player-promo-col"],
div#spot-holder.spot-holder[style="display: block;"],
a[dontfo=""][style$="position: absolute; z-index: 2147483647;"],
[data-ad-module]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-ad-width]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-adblockkey]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(html):not(.adsbygoogle),
[data-advadstrackid]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
[data-ad-manager-id]:not([style$="left: -10000px !important; top: -1000px !important;"]):not(.adsbygoogle),
div[style^="z-index: 999999; background-image: url(\"data:image/gif;base64,"][style$="position: absolute;"],
a[onclick="openAuc();"],
div[style="position: fixed; display: block; width: 100%; height: 100%; inset: 0px; background-color: rgba(0, 0, 0, 0); z-index: 300000;"],
div[style^="position:fixed;inset:0px;z-index:2147483647;background:black;opacity:0.01"],
div[style^="position: fixed; inset: 0px; z-index: 2147483647; background: black; opacity: 0.01"],
iframe.lazyloaded[data-src^="https://rcm-fe.amazon-adsystem.com/"],
#player div[style$="cursor: pointer; position: absolute; width: 100%; height: 100%; padding: 1rem; z-index: 2147483647;"],
html[lang][style^="--main-bg-color"] > body:not([class]):not([id]) > div#container[style="visibility: visible;"] > div#banner[style="opacity:0"] ~ main:not([class]):not([id]) > div#message,
[onclick*="postlnk.com"],
[data-lnguri*="vipbox"],
[class^="div-gpt-ad"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]) { display: none !important; }

[data-ad-name],
[data-revive-zoneid],
[name^="google_ads_iframe"],
div[aria-label="Ads"],
div[data-ad-targeting],
div[id^="ad_position_"],
div[id^="dfp-ad-"],
div[id^="ezoic-pub-ad-"],
ins.adsbygoogle[data-ad-client],
ins.adsbygoogle[data-ad-slot],
[class^="s2nPlayer"],
div[id*="ScriptRoot"],
a[onmousedown^="this.href='https://paid.outbrain.com/network/redir?"],
div[id^="div-gpt-"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]):not([style="pointer-events: none; height: 1px; width: 0px; opacity: 0; visibility: hidden; position: fixed; bottom: 0px;"]),
[id^="div-gpt-ad"]:not([style^="width: 1px; height: 1px; position: absolute; left: -10000px; top: -"]):not([style="pointer-events: none; height: 1px; width: 0px; opacity: 0; visibility: hidden; position: fixed; bottom: 0px;"]),
div[style^="height:    250px; width:    300px;"],
div[style^="width:    160px; height:    600px; margin: 0px auto; min-width: 160px; min-height: 600px;"],
div[style^="width:    300px; height:    250px;"],
html[class^="img_"][amp4ads=""][i-amphtml-layout=""][i-amphtml-no-boilerplate=""][amp-version="2502032353000"],
html[class^="img_"][amp4ads=""][i-amphtml-layout=""][i-amphtml-no-boilerplate=""][amp-version="2507172035000"],
html[class^="img_"][amp4ads=""][i-amphtml-layout=""][i-amphtml-no-boilerplate=""][amp-version="2509031727000"],
img[height="   250"][width="   300"],
img[height="   90"][width="   728"],
ins[style$="height:    90px; width:    728px;"],
*:not(body) > a[href^="https://content-loader.com/"],
*:not(body) > a[href^="https://html-load.com/"],
*:not(body) > a[href^="https://07c225f3.online/"] { display: none !important; }</style><style>[href*="postlnk.com"],
[href*="passtechusa.com"] { display: none !important; }</style></head>


<body class="fit-width_limit direction-ltr gap-false theme-Dark reset-false spread-1 spreadCount-1 spreadOffset-0 selectorAnchor-left selPinned-false selNum-true hoverinos-true sidebar-true previews-false clickTurnPage-true swipeGestures-true parallelDownloads-5 zoom-100">
  
  <main id="rdr-main" class="UI Reader" tabindex="-1" data-preload="3">
    <aside class="">
      <div class="hide-side UI Button MultiStateButton" data-bind="sidebar_button" data-tip="Show/hide sidebar [S]" data-tip-align="right" data-apr.sidebar="true">
        <div class="hide-side-actual ico-btn"></div>
      </div>
      <header>
        <a href="/" class="ico-btn guya"></a>
        <h1 data-bind="title"><a href="/read/manga/heterogenia-linguistico/">Heterogenia Linguistico: An Introduction to Interspecies Linguistics</a></h1>
        <button class="ico-btn"></button>
      </header>
      <div class="rdr-aside-buffer" data-bind="rdr_aside_buffer"></div>
      <div class="rdr-aside-content" data-bind="rdr_aside_content">
        <section class="rdr-selector" data-bind="rdr_selector">
          <div class="rdr-selector-top">
            <button data-bind="vol_next" class="rdr-selector-vol ico-btn prev" data-tip="Next volume [.]"></button>
            <div class="flex-spacer UI MessageBox" data-bind="message"></div>
            
              <button data-bind="download_chapter" class="ico-btn download" data-tip="Download chapter in the background"></button>
              <div class="download-anchor">
                <div class="download-wrapper hidden" data-bind="download_wrapper">
                  <button data-bind="downloading_chapter" class="ico-btn downloading" disabled=""></button>
                  <button data-bind="download_cancel" class="ico-btn download-cancel"></button>
                </div>
              </div>
            
            <a data-bind="share_button" data-tip="Copy short link [R]" class="rdr-share ico-btn "></a>
            <!-- <a data-bind='comment_button' data-tip="Comments" class="rdr-comment ico-btn"></a> -->
            <button data-bind="jump" class="ico-btn jump" data-tip="Jump to chapter... [J]"></button>
            <button data-bind="search" class="ico-btn search" data-tip="Search the manga... [Ctrl]+[F]"></button>
          </div>
          <div class="rdr-selector-mid">
            <button data-bind="chap_prev" class="rdr-selector-chap ico-btn prev" data-tip="Previous chapter [[]"></button>
            <div class="rdr-vol-wrap UI FauxDrop" data-bind="selector_vol">
              <label>1</label>
              <select id="rdr-vol" class="UI List SimpleList"><option class="UI SimpleListItem" value="6">6</option><option class="UI SimpleListItem" value="5">5</option><option class="UI SimpleListItem" value="4">4</option><option class="UI SimpleListItem" value="3">3</option><option class="UI SimpleListItem" value="2">2</option><option class="UI SimpleListItem" value="1" selected="selected">1</option></select>
            </div>
            <div class="rdr-chap-wrap UI FauxDrop" data-bind="selector_chap">
              <label>10 -</label>
              <select id="rdr-chap" class="UI List SimpleList"><option class="UI SimpleListItem" value="49">49 - ¿Dónde está el doctor?</option><option class="UI SimpleListItem" value="48">48 - Sin paz</option><option class="UI SimpleListItem" value="47">47 - A reunirse con la "gente que sabe mejorar a la gente"</option><option class="UI SimpleListItem" value="46">46 - La tormenta se fue, ¿pero hay otro desafio?</option><option class="UI SimpleListItem" value="45">45 - El cambio de estaciones</option><option class="UI SimpleListItem" value="44">44 - Aprende o muere</option><option class="UI SimpleListItem" value="43">43 - Abandonado en la cueva submarina</option><option class="UI SimpleListItem" value="42">42 - Nueva tierra, nueva mañana</option><option class="UI SimpleListItem" value="41">41 - Nueva tierra, nueva mañana</option><option class="UI SimpleListItem" value="40">40 - Agotamiento total</option><option class="UI SimpleListItem" value="39">39 - ¡¿Pero se cayó?!</option><option class="UI SimpleListItem" value="38">38 - Nuestras dietas difieren</option><option class="UI SimpleListItem" value="37">37 - La nieve se derritió y llegó el bienvenido cambio de estación</option><option class="UI SimpleListItem" value="36">36 - ¡No te rindas! ¡Esfuerzate!</option><option class="UI SimpleListItem" value="35">35 - A todos les gusta el globo</option><option class="UI SimpleListItem" value="34">34 - Mudandose</option><option class="UI SimpleListItem" value="33">33 - ¡Cazando en la oscuridad!</option><option class="UI SimpleListItem" value="32">32 - Ahora la caza nocturna</option><option class="UI SimpleListItem" value="31">31 - Los problemas de un investigador</option><option class="UI SimpleListItem" value="30">30 - Ambos estamos en el mismo bote</option><option class="UI SimpleListItem" value="29">29 - Quiero hablar un poco</option><option class="UI SimpleListItem" value="28">28 - Intenté clasificar todo tipo de monstruos</option><option class="UI SimpleListItem" value="27">27 - Este anciano es... ¿un humano?</option><option class="UI SimpleListItem" value="26">26 - Por el camino sin sendero</option><option class="UI SimpleListItem" value="25">25 - Mundo Congelado</option><option class="UI SimpleListItem" value="24">24 - Vivienda flexible</option><option class="UI SimpleListItem" value="23">23 - La naturaleza muestra sus colmillos</option><option class="UI SimpleListItem" value="22">22 - Devorado</option><option class="UI SimpleListItem" value="21">21 - El invierno es duro en el mundo de los monstruos</option><option class="UI SimpleListItem" value="20">20 - ¡El invierno ha llegado!</option><option class="UI SimpleListItem" value="19.5">19.5 - El cuaderno del profesor</option><option class="UI SimpleListItem" value="19">19 - Cruzar se hace más y más dificil</option><option class="UI SimpleListItem" value="18">18 - Ahora los rápidos. ¿Podrán cruzar?</option><option class="UI SimpleListItem" value="17">17 - ¿Qué es exactamente "hablar"?</option><option class="UI SimpleListItem" value="16">16 - </option><option class="UI SimpleListItem" value="15">15 - </option><option class="UI SimpleListItem" value="14">14 - </option><option class="UI SimpleListItem" value="13">13 - </option><option class="UI SimpleListItem" value="12">12 - </option><option class="UI SimpleListItem" value="11">11 - </option><option class="UI SimpleListItem" value="10.5">10.5 - Notas del profesor</option><option class="UI SimpleListItem" value="10" selected="selected">10 - </option><option class="UI SimpleListItem" value="9">9 - </option><option class="UI SimpleListItem" value="8">8 - </option><option class="UI SimpleListItem" value="7">7 - </option><option class="UI SimpleListItem" value="6">6 - </option><option class="UI SimpleListItem" value="5">5 - </option><option class="UI SimpleListItem" value="4">4 - </option><option class="UI SimpleListItem" value="3">3 - </option><option class="UI SimpleListItem" value="2">2 - </option><option class="UI SimpleListItem" value="1">1 - </option></select>
            </div>
            <button data-bind="chap_next" class="rdr-selector-chap ico-btn next" data-tip="Next chapter []]"></button>
          </div>
          <div class="rdr-selector-bot">
            <button data-bind="vol_prev" class="rdr-selector-vol ico-btn next disabled" data-tip="Previous volume [,]"></button>
            <div class="flex-spacer"></div>
            <button data-bind="preload_button" class="ico-btn hidden UI Button MultiStateButton" data-tip="Change preload [L]" data-bhv.preload="3"></button>
            <button data-bind="fit_button" class="ico-btn UI Button MultiStateButton" data-tip="Change fit mode [F]" data-lyt.fit="width_limit"></button>
            <button data-bind="layout_button" class="ico-btn UI Button MultiStateButton" data-tip="Change layout direction [D]" data-lyt.direction="ltr"></button>
            <button data-bind="spread_button" class="ico-btn UI Button MultiStateButton" data-tip="Change two-page mode [Q]" data-lyt.spread="1"></button>
            <button data-bind="sel_pin_button" class="ico-btn UI Button MultiStateButton" data-tip="Pin page selector [N]" data-apr.selpinned="false"></button>
            <button data-bind="settings_button" class="ico-btn" data-tip="Advanced settings... [O]"></button>
          </div>
        </section>
        <section class="rdr-groups UI List Selector Tabs" data-bind="groups">
        <div class="is-active UI SimpleListItem" data-list-id="68">Lyrica team.</div></section>
        <section class="rdr-previews">
          <div class="header UI Button MultiStateButton" data-bind="previews_button" data-apr.previews="false">
            <span>Previews</span>
            <div class="ico-btn expander" data-tip="Show previews [P]"></div>
          </div>
          <div data-bind="previews" class="rdr-previews-gallery UI List Selector Tabs">
          </div>
        </section>
        <section class="rdr-description">
          <div data-bind="image_description"></div>
        </section>
      </div>
    </aside>
    <div class="rdr-page-selector UI PageSelector" data-bind="page_selector">
      <div class="rdr-page-selector-counter" data-bind="page_keys_count">1/17</div>
      <div class="rdr-page-selector-keys UI List Selector Tabs" data-bind="page_keys">
      <div class="UI Dummy is-active shown preloaded">1</div><div class="UI Dummy preloaded">2</div><div class="UI Dummy preloaded">3</div><div class="UI Dummy">4</div><div class="UI Dummy">5</div><div class="UI Dummy">6</div><div class="UI Dummy">7</div><div class="UI Dummy">8</div><div class="UI Dummy">9</div><div class="UI Dummy">10</div><div class="UI Dummy">11</div><div class="UI Dummy">12</div><div class="UI Dummy">13</div><div class="UI Dummy">14</div><div class="UI Dummy">15</div><div class="UI Dummy">16</div><div class="UI Dummy">17</div></div>
    </div>
    <content data-bind="image_viewer" class="rdr-area UI ReaderImageView">
      <div class="preload-entity" data-bind="preload_entity">
        <img src="/media/manga/heterogenia-linguistico/chapters/0010_tble5xm2/68/02.png"><img><img><img>
      </div>
      <div class="rdr-image-wrap UI List Selector Tabs" data-bind="image_container" tabindex="-1" style="margin-left: 0%;">
      <div tabindex="-1" class="UI List ReaderImageWrapper"><img src="/media/manga/heterogenia-linguistico/chapters/0010_tble5xm2/68/01.png" class="UI ReaderImage" loading="eager"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="/media/manga/heterogenia-linguistico/chapters/0010_tble5xm2/68/02.png" class="UI ReaderImage" loading="eager"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="/media/manga/heterogenia-linguistico/chapters/0010_tble5xm2/68/03.png" class="UI ReaderImage" loading="eager"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div><div tabindex="-1" class="UI List ReaderImageWrapper"><img src="" class="UI ReaderImage"></div></div>
      <div class="zoom-level refresh-chapter is-hidden" data-bind="random_chapter">
        <div class="refresh-chapter-note">This is the Blu-ray extras "random chapter".<br>Click this button to
          reshuffle the chapter.</div>
        <div class="ico-btn" data-bind="random_chapter_button">↻</div>
      </div>
      <div class="hover-prev" data-bind="hover_prev">
        <div class="hover-wrap">
          <div class="hover-arrow"></div>
          <div class="hover-sub"></div>
        </div>
      </div>
      <div class="hover-next" data-bind="hover_next">
        <div class="hover-wrap">
          <div class="hover-arrow"></div>
          <div class="hover-sub"></div>
        </div>
      </div>
    <div dir="ltr" class="resize-sensor" style="pointer-events: none; position: absolute; inset: 0px; overflow: hidden; z-index: -1; visibility: hidden; max-width: 100%;"><div class="resize-sensor-expand" style="pointer-events: none; position: absolute; inset: 0px; overflow: hidden; z-index: -1; visibility: hidden; max-width: 100%;"><div style="position: absolute; left: 0px; top: 0px; transition: all; width: 1623px; height: 1090px;"></div></div><div class="resize-sensor-shrink" style="pointer-events: none; position: absolute; inset: 0px; overflow: hidden; z-index: -1; visibility: hidden; max-width: 100%;"><div style="position: absolute; left: 0px; top: 0px; transition: all; width: 200%; height: 200%;"></div></div></div></content>
    <div class="zoom-level" data-bind="zoom_level">
      <div class="ico-btn" data-bind="zoom_level_plus"></div>
      <div class="ico-btn" data-bind="zoom_level_minus"></div>
    </div>
  </main>
  <div class="Tooltippy UI" style="display: none;"></div>
  <div class="Tooltippy Error UI"></div>
  <div class="LodaManager hidden UI" tabindex="-1">

  </div>

<script src="https://cdn.jsdelivr.net/npm/@simonwep/pickr/dist/pickr.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jszip@3.1.5/dist/jszip.min.js"></script>
<script type="text/javascript" src="/static/js/ResizeSensor.js?v=39a531f
"></script>
<script type="text/javascript" src="/static/js/alg_lib.js?v=39a531f
"></script>
<script type="text/javascript" src="/static/js/UI2.js?v=39a531f
"></script>
<script type="text/javascript" src="/static/js/init.js?v=39a531f
"></script><div style="display: none;"></div><div class="pcr-app " data-theme="nano" aria-label="color picker dialog" role="window" tabindex="-1" style="left: 0px; top: 8px;">
          <div class="pcr-selection">
            <div class="pcr-color-preview" style="display:none" hidden="">
              <button type="button" class="pcr-last-color" aria-label="use previous color" style="--pcr-color: rgba(255, 255, 255, 1);"></button>
              <div class="pcr-current-color" style="--pcr-color: rgba(58, 63, 68, 1);"></div>
            </div>

            <div class="pcr-color-palette">
              <div class="pcr-picker" style="left: calc(14.7059% - 9px); top: calc(73.3333% - 9px); background: rgb(58, 63, 68);"></div>
              <div class="pcr-palette" tabindex="0" aria-label="color selection area" role="listbox" style="background: linear-gradient(to top, rgb(0, 0, 0), transparent), linear-gradient(to left, rgb(0, 128, 255), rgb(255, 255, 255));"></div>
            </div>

            <div class="pcr-color-chooser">
              <div class="pcr-picker" style="left: calc(58.3333% - 9px); background-color: rgb(0, 128, 255);"></div>
              <div class="pcr-hue pcr-slider" tabindex="0" aria-label="hue selection slider" role="slider"></div>
            </div>

            <div class="pcr-color-opacity" style="display:none" hidden="">
              <div class="pcr-picker"></div>
              <div class="pcr-opacity pcr-slider" tabindex="0" aria-label="selection slider" role="slider"></div>
            </div>
          </div>

          <div class="pcr-swatches "></div>

          <div class="pcr-interaction">
            <input class="pcr-result" type="text" spellcheck="false" aria-label="color input field">

            <input class="pcr-type active" data-type="HEXA" value="HEXA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="RGBA" value="RGBA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="HSLA" value="HSLA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="HSVA" value="HSVA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="CMYK" value="CMYK" type="button" style="display:none" hidden="">

            <input class="pcr-save" value="Save" type="button" aria-label="save and close">
            <input class="pcr-cancel" value="Cancel" type="button" style="display:none" hidden="" aria-label="cancel and close">
            <input class="pcr-clear" value="Clear" type="button" style="display:none" hidden="" aria-label="clear and close">
          </div>
        </div><div class="pcr-app " data-theme="nano" aria-label="color picker dialog" role="window" tabindex="-1" style="left: 0px; top: 8px;">
          <div class="pcr-selection">
            <div class="pcr-color-preview" style="display:none" hidden="">
              <button type="button" class="pcr-last-color" aria-label="use previous color" style="--pcr-color: rgba(255, 255, 255, 1);"></button>
              <div class="pcr-current-color" style="--pcr-color: rgba(238, 238, 238, 1);"></div>
            </div>

            <div class="pcr-color-palette">
              <div class="pcr-picker" style="left: calc(0% - 9px); top: calc(6.66667% - 9px); background: rgb(238, 238, 238);"></div>
              <div class="pcr-palette" tabindex="0" aria-label="color selection area" role="listbox" style="background: linear-gradient(to top, rgb(0, 0, 0), transparent), linear-gradient(to left, rgb(255, 0, 0), rgb(255, 255, 255));"></div>
            </div>

            <div class="pcr-color-chooser">
              <div class="pcr-picker" style="left: calc(0% - 9px); background-color: rgb(255, 0, 0);"></div>
              <div class="pcr-hue pcr-slider" tabindex="0" aria-label="hue selection slider" role="slider"></div>
            </div>

            <div class="pcr-color-opacity" style="display:none" hidden="">
              <div class="pcr-picker"></div>
              <div class="pcr-opacity pcr-slider" tabindex="0" aria-label="selection slider" role="slider"></div>
            </div>
          </div>

          <div class="pcr-swatches "></div>

          <div class="pcr-interaction">
            <input class="pcr-result" type="text" spellcheck="false" aria-label="color input field">

            <input class="pcr-type active" data-type="HEXA" value="HEXA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="RGBA" value="RGBA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="HSLA" value="HSLA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="HSVA" value="HSVA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="CMYK" value="CMYK" type="button" style="display:none" hidden="">

            <input class="pcr-save" value="Save" type="button" aria-label="save and close">
            <input class="pcr-cancel" value="Cancel" type="button" style="display:none" hidden="" aria-label="cancel and close">
            <input class="pcr-clear" value="Clear" type="button" style="display:none" hidden="" aria-label="clear and close">
          </div>
        </div><div class="pcr-app " data-theme="nano" aria-label="color picker dialog" role="window" tabindex="-1" style="left: 0px; top: 8px;">
          <div class="pcr-selection">
            <div class="pcr-color-preview" style="display:none" hidden="">
              <button type="button" class="pcr-last-color" aria-label="use previous color" style="--pcr-color: rgba(255, 255, 255, 1);"></button>
              <div class="pcr-current-color" style="--pcr-color: rgba(178, 223, 251, 1);"></div>
            </div>

            <div class="pcr-color-palette">
              <div class="pcr-picker" style="left: calc(29.0837% - 9px); top: calc(1.56863% - 9px); background: rgb(178, 223, 251);"></div>
              <div class="pcr-palette" tabindex="0" aria-label="color selection area" role="listbox" style="background: linear-gradient(to top, rgb(0, 0, 0), transparent), linear-gradient(to left, rgb(0, 157, 255), rgb(255, 255, 255));"></div>
            </div>

            <div class="pcr-color-chooser">
              <div class="pcr-picker" style="left: calc(56.3927% - 9px); background-color: rgb(0, 157, 255);"></div>
              <div class="pcr-hue pcr-slider" tabindex="0" aria-label="hue selection slider" role="slider"></div>
            </div>

            <div class="pcr-color-opacity" style="display:none" hidden="">
              <div class="pcr-picker"></div>
              <div class="pcr-opacity pcr-slider" tabindex="0" aria-label="selection slider" role="slider"></div>
            </div>
          </div>

          <div class="pcr-swatches "></div>

          <div class="pcr-interaction">
            <input class="pcr-result" type="text" spellcheck="false" aria-label="color input field">

            <input class="pcr-type active" data-type="HEXA" value="HEXA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="RGBA" value="RGBA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="HSLA" value="HSLA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="HSVA" value="HSVA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="CMYK" value="CMYK" type="button" style="display:none" hidden="">

            <input class="pcr-save" value="Save" type="button" aria-label="save and close">
            <input class="pcr-cancel" value="Cancel" type="button" style="display:none" hidden="" aria-label="cancel and close">
            <input class="pcr-clear" value="Clear" type="button" style="display:none" hidden="" aria-label="clear and close">
          </div>
        </div><div class="pcr-app " data-theme="nano" aria-label="color picker dialog" role="window" tabindex="-1" style="left: 0px; top: 8px;">
          <div class="pcr-selection">
            <div class="pcr-color-preview" style="display:none" hidden="">
              <button type="button" class="pcr-last-color" aria-label="use previous color" style="--pcr-color: rgba(255, 255, 255, 1);"></button>
              <div class="pcr-current-color" style="--pcr-color: rgba(39, 43, 48, 1);"></div>
            </div>

            <div class="pcr-color-palette">
              <div class="pcr-picker" style="left: calc(18.75% - 9px); top: calc(81.1765% - 9px); background: rgb(39, 43, 48);"></div>
              <div class="pcr-palette" tabindex="0" aria-label="color selection area" role="listbox" style="background: linear-gradient(to top, rgb(0, 0, 0), transparent), linear-gradient(to left, rgb(0, 113, 255), rgb(255, 255, 255));"></div>
            </div>

            <div class="pcr-color-chooser">
              <div class="pcr-picker" style="left: calc(59.2593% - 9px); background-color: rgb(0, 113, 255);"></div>
              <div class="pcr-hue pcr-slider" tabindex="0" aria-label="hue selection slider" role="slider"></div>
            </div>

            <div class="pcr-color-opacity" style="display:none" hidden="">
              <div class="pcr-picker"></div>
              <div class="pcr-opacity pcr-slider" tabindex="0" aria-label="selection slider" role="slider"></div>
            </div>
          </div>

          <div class="pcr-swatches "></div>

          <div class="pcr-interaction">
            <input class="pcr-result" type="text" spellcheck="false" aria-label="color input field">

            <input class="pcr-type active" data-type="HEXA" value="HEXA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="RGBA" value="RGBA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="HSLA" value="HSLA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="HSVA" value="HSVA" type="button" style="display:none" hidden="">
            <input class="pcr-type" data-type="CMYK" value="CMYK" type="button" style="display:none" hidden="">

            <input class="pcr-save" value="Save" type="button" aria-label="save and close">
            <input class="pcr-cancel" value="Cancel" type="button" style="display:none" hidden="" aria-label="cancel and close">
            <input class="pcr-clear" value="Clear" type="button" style="display:none" hidden="" aria-label="clear and close">
          </div>
        </div>
<script type="text/javascript">
  // History tagging
  tag();
</script>

</body></html>